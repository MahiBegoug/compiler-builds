{"version":3,"file":"r3_view_compiler.js","sourceRoot":"","sources":["../../../../../../packages/compiler/src/render3/r3_view_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, CompilePipeSummary, CompileQueryMetadata, CompileTokenMetadata, CompileTypeMetadata, CompileTypeSummary, flatten, identifierName, rendererTypeName, sanitizeIdentifier, tokenReference, viewClassName} from '../compile_metadata';\nimport {CompileReflector} from '../compile_reflector';\nimport {BindingForm, BuiltinConverter, BuiltinFunctionCall, ConvertPropertyBindingResult, EventHandlerVars, LocalResolver, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins} from '../compiler_util/expression_converter';\nimport {ConstantPool, DefinitionKind} from '../constant_pool';\nimport {AST, AstMemoryEfficientTransformer, AstTransformer, BindingPipe, FunctionCall, ImplicitReceiver, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, ParseSpan, PropertyRead} from '../expression_parser/ast';\nimport {Identifiers} from '../identifiers';\nimport {LifecycleHooks} from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport {ParseSourceSpan, typeSourceSpan} from '../parse_util';\nimport {CssSelector} from '../selector';\nimport {BindingParser} from '../template_parser/binding_parser';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ProviderAst, QueryMatch, RecursiveTemplateAstVisitor, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '../template_parser/template_ast';\nimport {OutputContext, error} from '../util';\nimport {Identifiers as R3} from './r3_identifiers';\nimport {BUILD_OPTIMIZER_COLOCATE, OutputMode} from './r3_types';\n\n\n/** Name of the context parameter passed into a template function */\nconst CONTEXT_NAME = 'ctx';\n\n/** Name of the creation mode flag passed into a template function */\nconst CREATION_MODE_FLAG = 'cm';\n\n/** Name of the temporary to use during data binding */\nconst TEMPORARY_NAME = '_t';\n\n/** The prefix reference variables */\nconst REFERENCE_PREFIX = '_r';\n\n/** The name of the implicit context reference */\nconst IMPLICIT_REFERENCE = '$implicit';\n\n/** Name of the i18n attributes **/\nconst I18N_ATTR = 'i18n';\nconst I18N_ATTR_PREFIX = 'i18n-';\n\n/** I18n separators for metadata **/\nconst MEANING_SEPARATOR = '|';\nconst ID_SEPARATOR = '@@';\n\nexport function compileDirective(\n    outputCtx: OutputContext, directive: CompileDirectiveMetadata, reflector: CompileReflector,\n    bindingParser: BindingParser, mode: OutputMode) {\n  const definitionMapValues: {key: string, quoted: boolean, value: o.Expression}[] = [];\n\n  const field = (key: string, value: o.Expression | null) => {\n    if (value) {\n      definitionMapValues.push({key, value, quoted: false});\n    }\n  };\n\n  // e.g. 'type: MyDirective`\n  field('type', outputCtx.importExpr(directive.type.reference));\n\n  // e.g. `selectors: [['', 'someDir', '']]`\n  field('selectors', createDirectiveSelector(directive.selector !));\n\n  // e.g. `factory: () => new MyApp(injectElementRef())`\n  field('factory', createFactory(directive.type, outputCtx, reflector, directive.queries));\n\n  // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n  field('hostBindings', createHostBindingsFunction(directive, outputCtx, bindingParser));\n\n  // e.g. `attributes: ['role', 'listbox']`\n  field('attributes', createHostAttributesArray(directive, outputCtx));\n\n  // e.g 'inputs: {a: 'a'}`\n  field('inputs', conditionallyCreateMapObjectLiteral(directive.inputs, outputCtx));\n\n  // e.g 'outputs: {a: 'a'}`\n  field('outputs', conditionallyCreateMapObjectLiteral(directive.outputs, outputCtx));\n\n  const className = identifierName(directive.type) !;\n  className || error(`Cannot resolver the name of ${directive.type}`);\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Directive);\n  const definitionFunction =\n      o.importExpr(R3.defineDirective).callFn([o.literalMap(definitionMapValues)]);\n\n  if (mode === OutputMode.PartialClass) {\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(\n        /* name */ className,\n        /* parent */ null,\n        /* fields */[new o.ClassField(\n            /* name */ definitionField,\n            /* type */ o.INFERRED_TYPE,\n            /* modifiers */[o.StmtModifier.Static],\n            /* initializer */ definitionFunction)],\n        /* getters */[],\n        /* constructorMethod */ new o.ClassMethod(null, [], []),\n        /* methods */[]));\n  } else {\n    // Create back-patch definition.\n    const classReference = outputCtx.importExpr(directive.type.reference);\n\n    // Create the back-patch statement\n    outputCtx.statements.push(new o.CommentStmt(BUILD_OPTIMIZER_COLOCATE));\n    outputCtx.statements.push(\n        classReference.prop(definitionField).set(definitionFunction).toStmt());\n  }\n}\n\nexport function compileComponent(\n    outputCtx: OutputContext, component: CompileDirectiveMetadata, pipes: CompilePipeSummary[],\n    template: TemplateAst[], reflector: CompileReflector, bindingParser: BindingParser,\n    mode: OutputMode) {\n  const definitionMapValues: {key: string, quoted: boolean, value: o.Expression}[] = [];\n  // Set of pipe names for pipe exps that have already been stored in pipes[] (to avoid dupes)\n  const pipeSet = new Set<string>();\n  // Pipe expressions for pipes[] field in component def\n  const pipeExps: o.Expression[] = [];\n\n  function addPipeDependency(summary: CompilePipeSummary): void {\n    addDependencyToComponent(outputCtx, summary, pipeSet, pipeExps);\n  }\n\n  const directiveExps: o.Expression[] = [];\n  const directiveMap = new Set<string>();\n  /**\n   * This function gets called every time a directive dependency needs to be added to the template.\n   * Its job is to remove duplicates from the list. (Only have single dependency no matter how many\n   * times the dependency is used.)\n   */\n  function addDirectiveDependency(ast: DirectiveAst) {\n    const importExpr = outputCtx.importExpr(ast.directive.type.reference) as o.ExternalExpr;\n    const uniqueKey = importExpr.value.moduleName + ':' + importExpr.value.name;\n\n    if (!directiveMap.has(uniqueKey)) {\n      directiveMap.add(uniqueKey);\n      directiveExps.push(importExpr);\n    }\n  }\n\n  const field = (key: string, value: o.Expression | null) => {\n    if (value) {\n      definitionMapValues.push({key, value, quoted: false});\n    }\n  };\n\n  // e.g. `type: MyApp`\n  field('type', outputCtx.importExpr(component.type.reference));\n\n  // e.g. `selectors: [['my-app']]`\n  field('selectors', createDirectiveSelector(component.selector !));\n\n  const selector = component.selector && CssSelector.parse(component.selector);\n  const firstSelector = selector && selector[0];\n\n  // e.g. `attr: [\"class\", \".my.app\"]\n  // This is optional an only included if the first selector of a component specifies attributes.\n  if (firstSelector) {\n    const selectorAttributes = firstSelector.getAttrs();\n    if (selectorAttributes.length) {\n      field(\n          'attrs', outputCtx.constantPool.getConstLiteral(\n                       o.literalArr(selectorAttributes.map(\n                           value => value != null ? o.literal(value) : o.literal(undefined))),\n                       /* forceShared */ true));\n    }\n  }\n\n  // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n  field('factory', createFactory(component.type, outputCtx, reflector, component.queries));\n\n  // e.g `hostBindings: function MyApp_HostBindings { ... }\n  field('hostBindings', createHostBindingsFunction(component, outputCtx, bindingParser));\n\n  // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n  const templateTypeName = component.type.reference.name;\n  const templateName = templateTypeName ? `${templateTypeName}_Template` : null;\n  const pipeMap = new Map(pipes.map<[string, CompilePipeSummary]>(pipe => [pipe.name, pipe]));\n  const templateFunctionExpression =\n      new TemplateDefinitionBuilder(\n          outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, BindingScope.ROOT_SCOPE, 0,\n          component.template !.ngContentSelectors, templateTypeName, templateName, pipeMap,\n          component.viewQueries, addDirectiveDependency, addPipeDependency)\n          .buildTemplateFunction(template, []);\n\n  field('template', templateFunctionExpression);\n  if (directiveExps.length) {\n    field('directives', o.literalArr(directiveExps));\n  }\n\n  // e.g. `pipes: [MyPipe]`\n  if (pipeExps.length) {\n    field('pipes', o.literalArr(pipeExps));\n  }\n\n  // e.g `inputs: {a: 'a'}`\n  field('inputs', conditionallyCreateMapObjectLiteral(component.inputs, outputCtx));\n\n  // e.g 'outputs: {a: 'a'}`\n  field('outputs', conditionallyCreateMapObjectLiteral(component.outputs, outputCtx));\n\n  // e.g. `features: [NgOnChangesFeature(MyComponent)]`\n  const features: o.Expression[] = [];\n  if (component.type.lifecycleHooks.some(lifecycle => lifecycle == LifecycleHooks.OnChanges)) {\n    features.push(o.importExpr(R3.NgOnChangesFeature, null, null).callFn([outputCtx.importExpr(\n        component.type.reference)]));\n  }\n  if (features.length) {\n    field('features', o.literalArr(features));\n  }\n\n  const definitionField = outputCtx.constantPool.propertyNameOf(DefinitionKind.Component);\n  const definitionFunction =\n      o.importExpr(R3.defineComponent).callFn([o.literalMap(definitionMapValues)]);\n  if (mode === OutputMode.PartialClass) {\n    const className = identifierName(component.type) !;\n    className || error(`Cannot resolver the name of ${component.type}`);\n\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new o.ClassStmt(\n        /* name */ className,\n        /* parent */ null,\n        /* fields */[new o.ClassField(\n            /* name */ definitionField,\n            /* type */ o.INFERRED_TYPE,\n            /* modifiers */[o.StmtModifier.Static],\n            /* initializer */ definitionFunction)],\n        /* getters */[],\n        /* constructorMethod */ new o.ClassMethod(null, [], []),\n        /* methods */[]));\n  } else {\n    const classReference = outputCtx.importExpr(component.type.reference);\n\n    // Create the back-patch statement\n    outputCtx.statements.push(\n        new o.CommentStmt(BUILD_OPTIMIZER_COLOCATE),\n        classReference.prop(definitionField).set(definitionFunction).toStmt());\n  }\n}\n\n// TODO: this should be used for addDirectiveDependency as well when Misko's PR goes in\nfunction addDependencyToComponent(\n    outputCtx: OutputContext, summary: CompileTypeSummary, set: Set<string>,\n    exps: o.Expression[]): void {\n  const importExpr = outputCtx.importExpr(summary.type.reference) as o.ExternalExpr;\n  const uniqueKey = importExpr.value.moduleName + ':' + importExpr.value.name;\n\n  if (!set.has(uniqueKey)) {\n    set.add(uniqueKey);\n    exps.push(importExpr);\n  }\n}\n\n// TODO: Remove these when the things are fully supported\nfunction unknown<T>(arg: o.Expression | o.Statement | TemplateAst): never {\n  throw new Error(\n      `Builder ${this.constructor.name} is unable to handle ${arg.constructor.name} yet`);\n}\n\nfunction unsupported(feature: string): never {\n  if (this) {\n    throw new Error(`Builder ${this.constructor.name} doesn't support ${feature} yet`);\n  }\n  throw new Error(`Feature ${feature} is not supported yet`);\n}\n\nconst BINDING_INSTRUCTION_MAP: {[index: number]: o.ExternalReference | undefined} = {\n  [PropertyBindingType.Property]: R3.elementProperty,\n  [PropertyBindingType.Attribute]: R3.elementAttribute,\n  [PropertyBindingType.Class]: R3.elementClassNamed,\n  [PropertyBindingType.Style]: R3.elementStyleNamed\n};\n\nfunction interpolate(args: o.Expression[]): o.Expression {\n  args = args.slice(1);  // Ignore the length prefix added for render2\n  switch (args.length) {\n    case 3:\n      return o.importExpr(R3.interpolation1).callFn(args);\n    case 5:\n      return o.importExpr(R3.interpolation2).callFn(args);\n    case 7:\n      return o.importExpr(R3.interpolation3).callFn(args);\n    case 9:\n      return o.importExpr(R3.interpolation4).callFn(args);\n    case 11:\n      return o.importExpr(R3.interpolation5).callFn(args);\n    case 13:\n      return o.importExpr(R3.interpolation6).callFn(args);\n    case 15:\n      return o.importExpr(R3.interpolation7).callFn(args);\n    case 17:\n      return o.importExpr(R3.interpolation8).callFn(args);\n  }\n  (args.length >= 19 && args.length % 2 == 1) ||\n      error(`Invalid interpolation argument length ${args.length}`);\n  return o.importExpr(R3.interpolationV).callFn([o.literalArr(args)]);\n}\n\nfunction pipeBinding(args: o.Expression[]): o.ExternalReference {\n  switch (args.length) {\n    case 0:\n      // The first parameter to pipeBind is always the value to be transformed followed\n      // by arg.length arguments so the total number of arguments to pipeBind are\n      // arg.length + 1.\n      return R3.pipeBind1;\n    case 1:\n      return R3.pipeBind2;\n    case 2:\n      return R3.pipeBind3;\n    default:\n      return R3.pipeBindV;\n  }\n}\n\nconst pureFunctionIdentifiers = [\n  R3.pureFunction0, R3.pureFunction1, R3.pureFunction2, R3.pureFunction3, R3.pureFunction4,\n  R3.pureFunction5, R3.pureFunction6, R3.pureFunction7, R3.pureFunction8\n];\nfunction getLiteralFactory(\n    outputContext: OutputContext, literal: o.LiteralArrayExpr | o.LiteralMapExpr): o.Expression {\n  const {literalFactory, literalFactoryArguments} =\n      outputContext.constantPool.getLiteralFactory(literal);\n  literalFactoryArguments.length > 0 || error(`Expected arguments to a literal factory function`);\n  let pureFunctionIdent =\n      pureFunctionIdentifiers[literalFactoryArguments.length] || R3.pureFunctionV;\n\n  // Literal factories are pure functions that only need to be re-invoked when the parameters\n  // change.\n  return o.importExpr(pureFunctionIdent).callFn([literalFactory, ...literalFactoryArguments]);\n}\n\nfunction noop() {}\n\n/**\n * Function which is executed whenever a variable is referenced for the first time in a given\n * scope.\n *\n * It is expected that the function creates the `const localName = expression`; statement.\n */\ntype DeclareLocalVarCallback = (lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => void;\n\nclass BindingScope implements LocalResolver {\n  /**\n   * Keeps a map from local variables to their expressions.\n   *\n   * This is used when one refers to variable such as: 'let abc = a.b.c`.\n   * - key to the map is the string literal `\"abc\"`.\n   * - value `lhs` is the left hand side which is an AST representing `abc`.\n   * - value `rhs` is the right hand side which is an AST representing `a.b.c`.\n   * - value `declared` is true if the `declareLocalVarCallback` has been called for this scope\n   * already.\n   */\n  private map = new Map < string, {\n    lhs: o.ReadVarExpr;\n    rhs: o.Expression|undefined;\n    declared: boolean;\n  }\n  > ();\n  private referenceNameIndex = 0;\n\n  static ROOT_SCOPE = new BindingScope().set('$event', o.variable('$event'));\n\n  private constructor(\n      private parent: BindingScope|null = null,\n      private declareLocalVarCallback: DeclareLocalVarCallback = noop) {}\n\n  get(name: string): o.Expression|null {\n    let current: BindingScope|null = this;\n    while (current) {\n      let value = current.map.get(name);\n      if (value != null) {\n        if (current !== this) {\n          // make a local copy and reset the `declared` state.\n          value = {lhs: value.lhs, rhs: value.rhs, declared: false};\n          // Cache the value locally.\n          this.map.set(name, value);\n        }\n        if (value.rhs && !value.declared) {\n          // if it is first time we are referencing the variable in the scope\n          // than invoke the callback to insert variable declaration.\n          this.declareLocalVarCallback(value.lhs, value.rhs);\n          value.declared = true;\n        }\n        return value.lhs;\n      }\n      current = current.parent;\n    }\n    return null;\n  }\n\n  /**\n   * Create a local variable for later reference.\n   *\n   * @param name Name of the variable.\n   * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n   * @param rhs AST representing the right hand side of the `let lhs = rhs;`. The `rhs` can be\n   * `undefined` for variable that are ambient such as `$event` and which don't have `rhs`\n   * declaration.\n   */\n  set(name: string, lhs: o.ReadVarExpr, rhs?: o.Expression): BindingScope {\n    !this.map.has(name) ||\n        error(`The name ${name} is already defined in scope to be ${this.map.get(name)}`);\n    this.map.set(name, {lhs: lhs, rhs: rhs, declared: false});\n    return this;\n  }\n\n  getLocal(name: string): (o.Expression|null) { return this.get(name); }\n\n  nestedScope(declareCallback: DeclareLocalVarCallback): BindingScope {\n    return new BindingScope(this, declareCallback);\n  }\n\n  freshReferenceName(): string {\n    let current: BindingScope = this;\n    // Find the top scope as it maintains the global reference count\n    while (current.parent) current = current.parent;\n    const ref = `${REFERENCE_PREFIX}${current.referenceNameIndex++}`;\n    return ref;\n  }\n}\n\nclass TemplateDefinitionBuilder implements TemplateAstVisitor, LocalResolver {\n  private _dataIndex = 0;\n  private _bindingContext = 0;\n  private _referenceIndex = 0;\n  private _temporaryAllocated = false;\n  private _prefix: o.Statement[] = [];\n  private _creationMode: o.Statement[] = [];\n  private _bindingMode: o.Statement[] = [];\n  private _refreshMode: o.Statement[] = [];\n  private _postfix: o.Statement[] = [];\n  private _contentProjections: Map<NgContentAst, NgContentInfo>;\n  private _projectionDefinitionIndex = 0;\n  private _valueConverter: ValueConverter;\n  private unsupported = unsupported;\n  private invalid = invalid;\n  private bindingScope: BindingScope;\n\n  // Whether we are inside a translatable element (`<p i18n>... somewhere here ... </p>)\n  private _inI18nSection: boolean = false;\n  private _i18nSectionIndex = -1;\n  // Maps of placeholder to node indexes for each of the i18n section\n  private _phToNodeIdxes: {[phName: string]: number[]}[] = [{}];\n\n  constructor(\n      private outputCtx: OutputContext, private constantPool: ConstantPool,\n      private reflector: CompileReflector, private contextParameter: string,\n      parentBindingScope: BindingScope, private level = 0, private ngContentSelectors: string[],\n      private contextName: string|null, private templateName: string|null,\n      private pipes: Map<string, CompilePipeSummary>, private viewQueries: CompileQueryMetadata[],\n      private addDirectiveDependency: (ast: DirectiveAst) => void,\n      private addPipeDependency: (summary: CompilePipeSummary) => void) {\n    this.bindingScope =\n        parentBindingScope.nestedScope((lhsVar: o.ReadVarExpr, expression: o.Expression) => {\n          this._bindingMode.push(\n              lhsVar.set(expression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n        });\n    this._valueConverter = new ValueConverter(\n        outputCtx, () => this.allocateDataSlot(), (name, localName, slot, value: o.ReadVarExpr) => {\n          this.bindingScope.set(localName, value);\n          const pipe = pipes.get(name) !;\n          pipe || error(`Could not find pipe ${name}`);\n          this.addPipeDependency(pipe);\n          this._creationMode.push(\n              o.importExpr(R3.pipe).callFn([o.literal(slot), o.literal(name)]).toStmt());\n        });\n  }\n\n  buildTemplateFunction(asts: TemplateAst[], variables: VariableAst[]): o.FunctionExpr {\n    // Create variable bindings\n    for (const variable of variables) {\n      const variableName = variable.name;\n      const expression =\n          o.variable(this.contextParameter).prop(variable.value || IMPLICIT_REFERENCE);\n      const scopedName = this.bindingScope.freshReferenceName();\n      // Add the reference to the local scope.\n      this.bindingScope.set(variableName, o.variable(variableName + scopedName), expression);\n    }\n\n    // Collect content projections\n    if (this.ngContentSelectors && this.ngContentSelectors.length > 0) {\n      const contentProjections = getContentProjection(asts, this.ngContentSelectors);\n      this._contentProjections = contentProjections;\n      if (contentProjections.size > 0) {\n        const infos: R3CssSelectorList[] = [];\n        Array.from(contentProjections.values()).forEach(info => {\n          if (info.selector) {\n            infos[info.index - 1] = info.selector;\n          }\n        });\n        const projectionIndex = this._projectionDefinitionIndex = this.allocateDataSlot();\n        const parameters: o.Expression[] = [o.literal(projectionIndex)];\n        !infos.some(value => !value) || error(`content project information skipped an index`);\n        if (infos.length > 1) {\n          parameters.push(this.outputCtx.constantPool.getConstLiteral(\n              asLiteral(infos), /* forceShared */ true));\n        }\n        this.instruction(this._creationMode, null, R3.projectionDef, ...parameters);\n      }\n    }\n\n    // Define and update any view queries\n    for (let query of this.viewQueries) {\n      // e.g. r3.Q(0, SomeDirective, true);\n      const querySlot = this.allocateDataSlot();\n      const predicate = getQueryPredicate(query, this.outputCtx);\n      const args = [\n        /* memoryIndex */ o.literal(querySlot, o.INFERRED_TYPE),\n        /* predicate */ predicate,\n        /* descend */ o.literal(query.descendants, o.INFERRED_TYPE)\n      ];\n\n      if (query.read) {\n        args.push(this.outputCtx.importExpr(query.read.identifier !.reference));\n      }\n      this.instruction(this._creationMode, null, R3.query, ...args);\n\n      // (r3.qR(tmp = r3.ɵld(0)) && (ctx.someDir = tmp));\n      const temporary = this.temp();\n      const getQueryList = o.importExpr(R3.load).callFn([o.literal(querySlot)]);\n      const refresh = o.importExpr(R3.queryRefresh).callFn([temporary.set(getQueryList)]);\n      const updateDirective = o.variable(CONTEXT_NAME)\n                                  .prop(query.propertyName)\n                                  .set(query.first ? temporary.prop('first') : temporary);\n      this._bindingMode.push(refresh.and(updateDirective).toStmt());\n    }\n\n    templateVisitAll(this, asts);\n\n    const creationMode = this._creationMode.length > 0 ?\n        [o.ifStmt(o.variable(CREATION_MODE_FLAG), this._creationMode)] :\n        [];\n\n    // Generate maps of placeholder name to node indexes\n    // TODO(vicb): This is a WIP, not fully supported yet\n    for (const phToNodeIdx of this._phToNodeIdxes) {\n      if (Object.keys(phToNodeIdx).length > 0) {\n        const scopedName = this.bindingScope.freshReferenceName();\n        const phMap = o.variable(scopedName)\n                          .set(mapToExpression(phToNodeIdx, true))\n                          .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]);\n\n        this._prefix.push(phMap);\n      }\n    }\n\n    return o.fn(\n        [\n          new o.FnParam(this.contextParameter, null), new o.FnParam(CREATION_MODE_FLAG, o.BOOL_TYPE)\n        ],\n        [\n          // Temporary variable declarations (i.e. let _t: any;)\n          ...this._prefix,\n          // Creating mode (i.e. if (cm) { ... })\n          ...creationMode,\n          // Binding mode (i.e. ɵp(...))\n          ...this._bindingMode,\n          // Refresh mode (i.e. Comp.r(...))\n          ...this._refreshMode,\n          // Nested templates (i.e. function CompTemplate() {})\n          ...this._postfix\n        ],\n        o.INFERRED_TYPE, null, this.templateName);\n  }\n\n  // LocalResolver\n  getLocal(name: string): o.Expression|null { return this.bindingScope.get(name); }\n\n  // TemplateAstVisitor\n  visitNgContent(ast: NgContentAst) {\n    const info = this._contentProjections.get(ast) !;\n    info || error(`Expected ${ast.sourceSpan} to be included in content projection collection`);\n    const slot = this.allocateDataSlot();\n    const parameters = [o.literal(slot), o.literal(this._projectionDefinitionIndex)];\n    if (info.index !== 0) {\n      parameters.push(o.literal(info.index));\n    }\n    this.instruction(this._creationMode, ast.sourceSpan, R3.projection, ...parameters);\n  }\n\n  // TemplateAstVisitor\n  visitElement(element: ElementAst) {\n    const elementIndex = this.allocateDataSlot();\n    const referenceDataSlots = new Map<string, number>();\n    const wasInI18nSection = this._inI18nSection;\n\n    const outputAttrs: {[name: string]: string} = {};\n    const attrI18nMetas: {[name: string]: string} = {};\n    let i18nMeta: string = '';\n\n    // Elements inside i18n sections are replaced with placeholders\n    // TODO(vicb): nested elements are a WIP in this phase\n    if (this._inI18nSection) {\n      const phName = element.name.toLowerCase();\n      if (!this._phToNodeIdxes[this._i18nSectionIndex][phName]) {\n        this._phToNodeIdxes[this._i18nSectionIndex][phName] = [];\n      }\n      this._phToNodeIdxes[this._i18nSectionIndex][phName].push(elementIndex);\n    }\n\n    // Handle i18n attributes\n    for (const attr of element.attrs) {\n      const name = attr.name;\n      const value = attr.value;\n      if (name === I18N_ATTR) {\n        if (this._inI18nSection) {\n          throw new Error(\n              `Could not mark an element as translatable inside of a translatable section`);\n        }\n        this._inI18nSection = true;\n        this._i18nSectionIndex++;\n        this._phToNodeIdxes[this._i18nSectionIndex] = {};\n        i18nMeta = value;\n      } else if (name.startsWith(I18N_ATTR_PREFIX)) {\n        attrI18nMetas[name.slice(I18N_ATTR_PREFIX.length)] = value;\n      } else {\n        outputAttrs[name] = value;\n      }\n    }\n\n    // Element creation mode\n    const component = findComponent(element.directives);\n    const nullNode = o.literal(null, o.INFERRED_TYPE);\n    const parameters: o.Expression[] = [o.literal(elementIndex)];\n\n    if (component) {\n      this.addDirectiveDependency(component);\n    }\n    element.directives.forEach(this.addDirectiveDependency);\n    parameters.push(o.literal(element.name));\n\n    // Add the attributes\n    const i18nMessages: o.Statement[] = [];\n    const attributes: o.Expression[] = [];\n    let hasI18nAttr = false;\n\n    Object.getOwnPropertyNames(outputAttrs).forEach(name => {\n      const value = outputAttrs[name];\n      attributes.push(o.literal(name));\n      if (attrI18nMetas.hasOwnProperty(name)) {\n        hasI18nAttr = true;\n        const meta = parseI18nMeta(attrI18nMetas[name]);\n        const variable = this.constantPool.getTranslation(value, meta);\n        attributes.push(variable);\n      } else {\n        attributes.push(o.literal(value));\n      }\n    });\n\n    let attrArg: o.Expression = nullNode;\n\n    if (attributes.length > 0) {\n      attrArg = hasI18nAttr ? getLiteralFactory(this.outputCtx, o.literalArr(attributes)) :\n                              this.constantPool.getConstLiteral(o.literalArr(attributes), true);\n    }\n\n    parameters.push(attrArg);\n\n    if (element.references && element.references.length > 0) {\n      const references =\n          flatten(element.references.map(reference => {\n            const slot = this.allocateDataSlot();\n            referenceDataSlots.set(reference.name, slot);\n            // Generate the update temporary.\n            const variableName = this.bindingScope.freshReferenceName();\n            this._bindingMode.push(o.variable(variableName, o.INFERRED_TYPE)\n                                       .set(o.importExpr(R3.load).callFn([o.literal(slot)]))\n                                       .toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n            this.bindingScope.set(reference.name, o.variable(variableName));\n            return [reference.name, reference.originalValue];\n          })).map(value => o.literal(value));\n      parameters.push(\n          this.constantPool.getConstLiteral(o.literalArr(references), /* forceShared */ true));\n    } else {\n      parameters.push(nullNode);\n    }\n\n    // Generate the instruction create element instruction\n    if (i18nMessages.length > 0) {\n      this._creationMode.push(...i18nMessages);\n    }\n    this.instruction(\n        this._creationMode, element.sourceSpan, R3.createElement, ...trimTrailingNulls(parameters));\n\n    const implicit = o.variable(CONTEXT_NAME);\n\n    // Generate Listeners (outputs)\n    element.outputs.forEach((outputAst: BoundEventAst) => {\n      const functionName = `${this.templateName}_${element.name}_${outputAst.name}_listener`;\n      const localVars: o.Statement[] = [];\n      const bindingScope =\n          this.bindingScope.nestedScope((lhsVar: o.ReadVarExpr, rhsExpression: o.Expression) => {\n            localVars.push(\n                lhsVar.set(rhsExpression).toDeclStmt(o.INFERRED_TYPE, [o.StmtModifier.Final]));\n          });\n      const bindingExpr = convertActionBinding(\n          bindingScope, o.variable(CONTEXT_NAME), outputAst.handler, 'b',\n          () => error('Unexpected interpolation'));\n      const handler = o.fn(\n          [new o.FnParam('$event', o.DYNAMIC_TYPE)], [...localVars, ...bindingExpr.render3Stmts],\n          o.INFERRED_TYPE, null, functionName);\n      this.instruction(\n          this._creationMode, outputAst.sourceSpan, R3.listener, o.literal(outputAst.name),\n          handler);\n    });\n\n\n    // Generate element input bindings\n    for (let input of element.inputs) {\n      if (input.isAnimation) {\n        this.unsupported('animations');\n      }\n      const convertedBinding = this.convertPropertyBinding(implicit, input.value);\n      const instruction = BINDING_INSTRUCTION_MAP[input.type];\n      if (instruction) {\n        // TODO(chuckj): runtime: security context?\n        this.instruction(\n            this._bindingMode, input.sourceSpan, instruction, o.literal(elementIndex),\n            o.literal(input.name), convertedBinding);\n      } else {\n        this.unsupported(`binding ${PropertyBindingType[input.type]}`);\n      }\n    }\n\n    // Generate directives input bindings\n    this._visitDirectives(element.directives, implicit, elementIndex);\n\n    // Traverse element child nodes\n    if (this._inI18nSection && element.children.length == 1 &&\n        element.children[0] instanceof TextAst) {\n      const text = element.children[0] as TextAst;\n      this.visitSingleI18nTextChild(text, i18nMeta);\n    } else {\n      templateVisitAll(this, element.children);\n    }\n\n    // Finish element construction mode.\n    this.instruction(\n        this._creationMode, element.endSourceSpan || element.sourceSpan, R3.elementEnd);\n\n    // Restore the state before exiting this node\n    this._inI18nSection = wasInI18nSection;\n  }\n\n  private _visitDirectives(directives: DirectiveAst[], implicit: o.Expression, nodeIndex: number) {\n    for (let directive of directives) {\n      // Creation mode\n      // e.g. D(0, TodoComponentDef.n(), TodoComponentDef);\n      const directiveType = directive.directive.type.reference;\n      const kind =\n          directive.directive.isComponent ? DefinitionKind.Component : DefinitionKind.Directive;\n\n      // Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the\n      // node is referenced multiple times to know that it must generate the reference into a\n      // temporary.\n\n      // Bindings\n      for (const input of directive.inputs) {\n        const convertedBinding = this.convertPropertyBinding(implicit, input.value);\n        this.instruction(\n            this._bindingMode, directive.sourceSpan, R3.elementProperty, o.literal(nodeIndex),\n            o.literal(input.templateName), o.importExpr(R3.bind).callFn([convertedBinding]));\n      }\n    }\n  }\n\n  // TemplateAstVisitor\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst) {\n    const templateIndex = this.allocateDataSlot();\n\n    const templateRef = this.reflector.resolveExternalReference(Identifiers.TemplateRef);\n    const templateDirective = ast.directives.find(\n        directive => directive.directive.type.diDeps.some(\n            dependency =>\n                dependency.token != null && (tokenReference(dependency.token) == templateRef)));\n    const contextName =\n        this.contextName && templateDirective && templateDirective.directive.type.reference.name ?\n        `${this.contextName}_${templateDirective.directive.type.reference.name}` :\n        null;\n    const templateName =\n        contextName ? `${contextName}_Template_${templateIndex}` : `Template_${templateIndex}`;\n    const templateContext = `ctx${this.level}`;\n\n    const parameters: o.Expression[] = [o.variable(templateName), o.literal(null, o.INFERRED_TYPE)];\n    const attributeNames: o.Expression[] = [];\n    ast.directives.forEach((directiveAst: DirectiveAst) => {\n      this.addDirectiveDependency(directiveAst);\n      CssSelector.parse(directiveAst.directive.selector !).forEach(selector => {\n        selector.attrs.forEach((value) => {\n          // Convert '' (falsy) strings into `null`. This is needed because we want\n          // to communicate to runtime that these attributes are present for\n          // selector matching, but should not actually be added to the DOM.\n          // attributeNames.push(o.literal(value ? value : null));\n\n          // TODO(misko): make the above comment true, for now just write to DOM because\n          // the runtime selectors have not been updated.\n          attributeNames.push(o.literal(value));\n        });\n      });\n    });\n    if (attributeNames.length) {\n      parameters.push(\n          this.constantPool.getConstLiteral(o.literalArr(attributeNames), /* forcedShared */ true));\n    }\n\n    // e.g. C(1, C1Template)\n    this.instruction(\n        this._creationMode, ast.sourceSpan, R3.containerCreate, o.literal(templateIndex),\n        ...trimTrailingNulls(parameters));\n\n    // Generate directives\n    this._visitDirectives(ast.directives, o.variable(CONTEXT_NAME), templateIndex);\n\n    // Create the template function\n    const templateVisitor = new TemplateDefinitionBuilder(\n        this.outputCtx, this.constantPool, this.reflector, templateContext, this.bindingScope,\n        this.level + 1, this.ngContentSelectors, contextName, templateName, this.pipes, [],\n        this.addDirectiveDependency, this.addPipeDependency);\n    const templateFunctionExpr = templateVisitor.buildTemplateFunction(ast.children, ast.variables);\n    this._postfix.push(templateFunctionExpr.toDeclStmt(templateName, null));\n  }\n\n  // These should be handled in the template or element directly.\n  readonly visitReference = invalid;\n  readonly visitVariable = invalid;\n  readonly visitEvent = invalid;\n  readonly visitElementProperty = invalid;\n  readonly visitAttr = invalid;\n\n  // TemplateAstVisitor\n  visitBoundText(ast: BoundTextAst) {\n    const nodeIndex = this.allocateDataSlot();\n\n    // Creation mode\n    this.instruction(this._creationMode, ast.sourceSpan, R3.text, o.literal(nodeIndex));\n\n    // Refresh mode\n    this.instruction(\n        this._refreshMode, ast.sourceSpan, R3.textCreateBound, o.literal(nodeIndex),\n        this.convertPropertyBinding(o.variable(CONTEXT_NAME), ast.value));\n  }\n\n  // TemplateAstVisitor\n  visitText(ast: TextAst) {\n    // Text is defined in creation mode only.\n    this.instruction(\n        this._creationMode, ast.sourceSpan, R3.text, o.literal(this.allocateDataSlot()),\n        o.literal(ast.value));\n  }\n\n  // When the content of the element is a single text node the translation can be inlined:\n  //\n  // `<p i18n=\"desc|mean\">some content</p>`\n  // compiles to\n  // ```\n  // /**\n  // * @desc desc\n  // * @meaning mean\n  // */\n  // const MSG_XYZ = goog.getMsg('some content');\n  // i0.ɵT(1, MSG_XYZ);\n  // ```\n  visitSingleI18nTextChild(text: TextAst, i18nMeta: string) {\n    const meta = parseI18nMeta(i18nMeta);\n    const variable = this.constantPool.getTranslation(text.value, meta);\n    this.instruction(\n        this._creationMode, text.sourceSpan, R3.text, o.literal(this.allocateDataSlot()), variable);\n  }\n\n  // These should be handled in the template or element directly\n  readonly visitDirective = invalid;\n  readonly visitDirectiveProperty = invalid;\n\n  private allocateDataSlot() { return this._dataIndex++; }\n  private bindingContext() { return `${this._bindingContext++}`; }\n\n  private instruction(\n      statements: o.Statement[], span: ParseSourceSpan|null, reference: o.ExternalReference,\n      ...params: o.Expression[]) {\n    statements.push(o.importExpr(reference, null, span).callFn(params, span).toStmt());\n  }\n\n  private definitionOf(type: any, kind: DefinitionKind): o.Expression {\n    return this.constantPool.getDefinition(type, kind, this.outputCtx);\n  }\n\n  private temp(): o.ReadVarExpr {\n    if (!this._temporaryAllocated) {\n      this._prefix.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n      this._temporaryAllocated = true;\n    }\n    return o.variable(TEMPORARY_NAME);\n  }\n\n  private convertPropertyBinding(implicit: o.Expression, value: AST): o.Expression {\n    const pipesConvertedValue = value.visit(this._valueConverter);\n    const convertedPropertyBinding = convertPropertyBinding(\n        this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple,\n        interpolate);\n    this._refreshMode.push(...convertedPropertyBinding.stmts);\n    return convertedPropertyBinding.currValExpr;\n  }\n}\n\nfunction getQueryPredicate(query: CompileQueryMetadata, outputCtx: OutputContext): o.Expression {\n  let predicate: o.Expression;\n  if (query.selectors.length > 1 || (query.selectors.length == 1 && query.selectors[0].value)) {\n    const selectors = query.selectors.map(value => value.value as string);\n    selectors.some(value => !value) && error('Found a type among the string selectors expected');\n    predicate = outputCtx.constantPool.getConstLiteral(\n        o.literalArr(selectors.map(value => o.literal(value))));\n  } else if (query.selectors.length == 1) {\n    const first = query.selectors[0];\n    if (first.identifier) {\n      predicate = outputCtx.importExpr(first.identifier.reference);\n    } else {\n      error('Unexpected query form');\n      predicate = o.literal(null);\n    }\n  } else {\n    error('Unexpected query form');\n    predicate = o.literal(null);\n  }\n  return predicate;\n}\n\nexport function createFactory(\n    type: CompileTypeMetadata, outputCtx: OutputContext, reflector: CompileReflector,\n    queries: CompileQueryMetadata[]): o.Expression {\n  let args: o.Expression[] = [];\n\n  const elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n  const templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n  const viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n\n  for (let dependency of type.diDeps) {\n    if (dependency.isValue) {\n      unsupported('value dependencies');\n    }\n    if (dependency.isHost) {\n      unsupported('host dependencies');\n    }\n    const token = dependency.token;\n    if (token) {\n      const tokenRef = tokenReference(token);\n      if (tokenRef === elementRef) {\n        args.push(o.importExpr(R3.injectElementRef).callFn([]));\n      } else if (tokenRef === templateRef) {\n        args.push(o.importExpr(R3.injectTemplateRef).callFn([]));\n      } else if (tokenRef === viewContainerRef) {\n        args.push(o.importExpr(R3.injectViewContainerRef).callFn([]));\n      } else {\n        const value =\n            token.identifier != null ? outputCtx.importExpr(tokenRef) : o.literal(tokenRef);\n        args.push(o.importExpr(R3.inject).callFn([value]));\n      }\n    } else {\n      unsupported('dependency without a token');\n    }\n  }\n\n  const queryDefinitions: o.Expression[] = [];\n  for (let query of queries) {\n    const predicate = getQueryPredicate(query, outputCtx);\n\n    // e.g. r3.Q(null, SomeDirective, false) or r3.Q(null, ['div'], false)\n    const parameters = [\n      /* memoryIndex */ o.literal(null, o.INFERRED_TYPE),\n      /* predicate */ predicate,\n      /* descend */ o.literal(query.descendants)\n    ];\n\n    if (query.read) {\n      parameters.push(outputCtx.importExpr(query.read.identifier !.reference));\n    }\n\n    queryDefinitions.push(o.importExpr(R3.query).callFn(parameters));\n  }\n\n  const createInstance = new o.InstantiateExpr(outputCtx.importExpr(type.reference), args);\n  const result = queryDefinitions.length > 0 ? o.literalArr([createInstance, ...queryDefinitions]) :\n                                               createInstance;\n\n  return o.fn(\n      [], [new o.ReturnStatement(result)], o.INFERRED_TYPE, null,\n      type.reference.name ? `${type.reference.name}_Factory` : null);\n}\n\n/**\n *  Remove trailing null nodes as they are implied.\n */\nfunction trimTrailingNulls(parameters: o.Expression[]): o.Expression[] {\n  while (o.isNull(parameters[parameters.length - 1])) {\n    parameters.pop();\n  }\n  return parameters;\n}\n\ntype HostBindings = {\n  [key: string]: string\n};\n\n// Turn a directive selector into an R3-compatible selector for directive def\nfunction createDirectiveSelector(selector: string): o.Expression {\n  return asLiteral(parseSelectorsToR3Selector(CssSelector.parse(selector)));\n}\n\nfunction createHostAttributesArray(\n    directiveMetadata: CompileDirectiveMetadata, outputCtx: OutputContext): o.Expression|null {\n  const values: o.Expression[] = [];\n  const attributes = directiveMetadata.hostAttributes;\n  for (let key of Object.getOwnPropertyNames(attributes)) {\n    const value = attributes[key];\n    values.push(o.literal(key), o.literal(value));\n  }\n  if (values.length > 0) {\n    return outputCtx.constantPool.getConstLiteral(o.literalArr(values));\n  }\n  return null;\n}\n\n// Return a host binding function or null if one is not necessary.\nfunction createHostBindingsFunction(\n    directiveMetadata: CompileDirectiveMetadata, outputCtx: OutputContext,\n    bindingParser: BindingParser): o.Expression|null {\n  const statements: o.Statement[] = [];\n\n  const temporary = function() {\n    let declared = false;\n    return () => {\n      if (!declared) {\n        statements.push(new o.DeclareVarStmt(TEMPORARY_NAME, undefined, o.DYNAMIC_TYPE));\n        declared = true;\n      }\n      return o.variable(TEMPORARY_NAME);\n    };\n  }();\n\n  const hostBindingSourceSpan = typeSourceSpan(\n      directiveMetadata.isComponent ? 'Component' : 'Directive', directiveMetadata.type);\n\n  // Calculate the queries\n  for (let index = 0; index < directiveMetadata.queries.length; index++) {\n    const query = directiveMetadata.queries[index];\n\n    // e.g. r3.qR(tmp = r3.ld(dirIndex)[1]) && (r3.ld(dirIndex)[0].someDir = tmp);\n    const getDirectiveMemory = o.importExpr(R3.load).callFn([o.variable('dirIndex')]);\n    // The query list is at the query index + 1 because the directive itself is in slot 0.\n    const getQueryList = getDirectiveMemory.key(o.literal(index + 1));\n    const assignToTemporary = temporary().set(getQueryList);\n    const callQueryRefresh = o.importExpr(R3.queryRefresh).callFn([assignToTemporary]);\n    const updateDirective = getDirectiveMemory.key(o.literal(0, o.INFERRED_TYPE))\n                                .prop(query.propertyName)\n                                .set(query.first ? temporary().prop('first') : temporary());\n    const andExpression = callQueryRefresh.and(updateDirective);\n    statements.push(andExpression.toStmt());\n  }\n\n  const directiveSummary = directiveMetadata.toSummary();\n\n  // Calculate the host property bindings\n  const bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n  const bindingContext = o.importExpr(R3.load).callFn([o.variable('dirIndex')]);\n  if (bindings) {\n    for (const binding of bindings) {\n      const bindingExpr = convertPropertyBinding(\n          null, bindingContext, binding.expression, 'b', BindingForm.TrySimple,\n          () => error('Unexpected interpolation'));\n      statements.push(...bindingExpr.stmts);\n      statements.push(o.importExpr(R3.elementProperty)\n                          .callFn([\n                            o.variable('elIndex'), o.literal(binding.name),\n                            o.importExpr(R3.bind).callFn([bindingExpr.currValExpr])\n                          ])\n                          .toStmt());\n    }\n  }\n\n  // Calculate host event bindings\n  const eventBindings =\n      bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n  if (eventBindings) {\n    for (const binding of eventBindings) {\n      const bindingExpr = convertActionBinding(\n          null, bindingContext, binding.handler, 'b', () => error('Unexpected interpolation'));\n      const bindingName = binding.name && sanitizeIdentifier(binding.name);\n      const typeName = identifierName(directiveMetadata.type);\n      const functionName =\n          typeName && bindingName ? `${typeName}_${bindingName}_HostBindingHandler` : null;\n      const handler = o.fn(\n          [new o.FnParam('$event', o.DYNAMIC_TYPE)],\n          [...bindingExpr.stmts, new o.ReturnStatement(bindingExpr.allowDefault)], o.INFERRED_TYPE,\n          null, functionName);\n      statements.push(\n          o.importExpr(R3.listener).callFn([o.literal(binding.name), handler]).toStmt());\n    }\n  }\n\n\n  if (statements.length > 0) {\n    const typeName = directiveMetadata.type.reference.name;\n    return o.fn(\n        [new o.FnParam('dirIndex', o.NUMBER_TYPE), new o.FnParam('elIndex', o.NUMBER_TYPE)],\n        statements, o.INFERRED_TYPE, null, typeName ? `${typeName}_HostBindings` : null);\n  }\n\n  return null;\n}\n\nfunction conditionallyCreateMapObjectLiteral(\n    keys: {[key: string]: string}, outputCtx: OutputContext): o.Expression|null {\n  if (Object.getOwnPropertyNames(keys).length > 0) {\n    return mapToExpression(keys);\n  }\n  return null;\n}\n\nclass ValueConverter extends AstMemoryEfficientTransformer {\n  private pipeSlots = new Map<string, number>();\n  constructor(\n      private outputCtx: OutputContext, private allocateSlot: () => number,\n      private definePipe:\n          (name: string, localName: string, slot: number, value: o.Expression) => void) {\n    super();\n  }\n\n  // AstMemoryEfficientTransformer\n  visitPipe(ast: BindingPipe, context: any): AST {\n    // Allocate a slot to create the pipe\n    const slot = this.allocateSlot();\n    const slotPseudoLocal = `PIPE:${slot}`;\n    const target = new PropertyRead(ast.span, new ImplicitReceiver(ast.span), slotPseudoLocal);\n    const bindingId = pipeBinding(ast.args);\n    this.definePipe(ast.name, slotPseudoLocal, slot, o.importExpr(bindingId));\n    const value = ast.exp.visit(this);\n    const args = this.visitAll(ast.args);\n\n    return new FunctionCall(\n        ast.span, target, [new LiteralPrimitive(ast.span, slot), value, ...args]);\n  }\n\n  visitLiteralArray(ast: LiteralArray, context: any): AST {\n    return new BuiltinFunctionCall(ast.span, this.visitAll(ast.expressions), values => {\n      // If the literal has calculated (non-literal) elements transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalArr(values);\n      return values.every(a => a.isConstant()) ?\n          this.outputCtx.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.outputCtx, literal);\n    });\n  }\n\n  visitLiteralMap(ast: LiteralMap, context: any): AST {\n    return new BuiltinFunctionCall(ast.span, this.visitAll(ast.values), values => {\n      // If the literal has calculated (non-literal) elements  transform it into\n      // calls to literal factories that compose the literal and will cache intermediate\n      // values. Otherwise, just return an literal array that contains the values.\n      const literal = o.literalMap(values.map(\n          (value, index) => ({key: ast.keys[index].key, value, quoted: ast.keys[index].quoted})));\n      return values.every(a => a.isConstant()) ?\n          this.outputCtx.constantPool.getConstLiteral(literal, true) :\n          getLiteralFactory(this.outputCtx, literal);\n    });\n  }\n}\n\nfunction invalid<T>(arg: o.Expression | o.Statement | TemplateAst): never {\n  throw new Error(\n      `Invalid state: Visitor ${this.constructor.name} doesn't handle ${o.constructor.name}`);\n}\n\nfunction findComponent(directives: DirectiveAst[]): DirectiveAst|undefined {\n  return directives.filter(directive => directive.directive.isComponent)[0];\n}\n\ninterface NgContentInfo {\n  index: number;\n  selector?: R3CssSelectorList;\n}\n\nclass ContentProjectionVisitor extends RecursiveTemplateAstVisitor {\n  private index = 1;\n  constructor(\n      private projectionMap: Map<NgContentAst, NgContentInfo>,\n      private ngContentSelectors: string[]) {\n    super();\n  }\n\n  visitNgContent(ast: NgContentAst) {\n    const selectorText = this.ngContentSelectors[ast.index];\n    selectorText != null || error(`could not find selector for index ${ast.index} in ${ast}`);\n    if (!selectorText || selectorText === '*') {\n      this.projectionMap.set(ast, {index: 0});\n    } else {\n      const cssSelectors = CssSelector.parse(selectorText);\n      this.projectionMap.set(\n          ast, {index: this.index++, selector: parseSelectorsToR3Selector(cssSelectors)});\n    }\n  }\n}\n\nfunction getContentProjection(asts: TemplateAst[], ngContentSelectors: string[]) {\n  const projectIndexMap = new Map<NgContentAst, NgContentInfo>();\n  const visitor = new ContentProjectionVisitor(projectIndexMap, ngContentSelectors);\n  templateVisitAll(visitor, asts);\n  return projectIndexMap;\n}\n\n\n/**\n * Flags used to generate R3-style CSS Selectors. They are pasted from\n * core/src/render3/projection.ts because they cannot be referenced directly.\n */\nconst enum SelectorFlags {\n  /** Indicates this is the beginning of a new negative selector */\n  NOT = 0b0001,\n\n  /** Mode for matching attributes */\n  ATTRIBUTE = 0b0010,\n\n  /** Mode for matching tag names */\n  ELEMENT = 0b0100,\n\n  /** Mode for matching class names */\n  CLASS = 0b1000,\n}\n\n// These are a copy the CSS types from core/src/render3/interfaces/projection.ts\n// They are duplicated here as they cannot be directly referenced from core.\ntype R3CssSelector = (string | SelectorFlags)[];\ntype R3CssSelectorList = R3CssSelector[];\n\nfunction parserSelectorToSimpleSelector(selector: CssSelector): R3CssSelector {\n  const classes = selector.classNames && selector.classNames.length ?\n      [SelectorFlags.CLASS, ...selector.classNames] :\n      [];\n  const elementName = selector.element && selector.element !== '*' ? selector.element : '';\n  return [elementName, ...selector.attrs, ...classes];\n}\n\nfunction parserSelectorToNegativeSelector(selector: CssSelector): R3CssSelector {\n  const classes = selector.classNames && selector.classNames.length ?\n      [SelectorFlags.CLASS, ...selector.classNames] :\n      [];\n\n  if (selector.element) {\n    return [\n      SelectorFlags.NOT | SelectorFlags.ELEMENT, selector.element, ...selector.attrs, ...classes\n    ];\n  } else if (selector.attrs.length) {\n    return [SelectorFlags.NOT | SelectorFlags.ATTRIBUTE, ...selector.attrs, ...classes];\n  } else {\n    return selector.classNames && selector.classNames.length ?\n        [SelectorFlags.NOT | SelectorFlags.CLASS, ...selector.classNames] :\n        [];\n  }\n}\n\nfunction parserSelectorToR3Selector(selector: CssSelector): R3CssSelector {\n  const positive = parserSelectorToSimpleSelector(selector);\n\n  const negative: R3CssSelectorList = selector.notSelectors && selector.notSelectors.length ?\n      selector.notSelectors.map(notSelector => parserSelectorToNegativeSelector(notSelector)) :\n      [];\n\n  return positive.concat(...negative);\n}\n\nfunction parseSelectorsToR3Selector(selectors: CssSelector[]): R3CssSelectorList {\n  return selectors.map(parserSelectorToR3Selector);\n}\n\nfunction asLiteral(value: any): o.Expression {\n  if (Array.isArray(value)) {\n    return o.literalArr(value.map(asLiteral));\n  }\n  return o.literal(value, o.INFERRED_TYPE);\n}\n\nfunction mapToExpression(map: {[key: string]: any}, quoted = false): o.Expression {\n  return o.literalMap(\n      Object.getOwnPropertyNames(map).map(key => ({key, quoted, value: asLiteral(map[key])})));\n}\n\n// Parse i18n metas like:\n// - \"@@id\",\n// - \"description[@@id]\",\n// - \"meaning|description[@@id]\"\nfunction parseI18nMeta(i18n?: string): {description?: string, id?: string, meaning?: string} {\n  let meaning: string|undefined;\n  let description: string|undefined;\n  let id: string|undefined;\n\n  if (i18n) {\n    // TODO(vicb): figure out how to force a message ID with closure ?\n    const idIndex = i18n.indexOf(ID_SEPARATOR);\n\n    const descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    let meaningAndDesc: string;\n    [meaningAndDesc, id] =\n        (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n    [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n  }\n\n  return {description, id, meaning};\n}\n"]}