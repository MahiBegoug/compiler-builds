/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/compiler/src/render3/r3_identifiers", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CORE = '@angular/core';
    var Identifiers = /** @class */ (function () {
        function Identifiers() {
        }
        /* Methods */
        Identifiers.NEW_METHOD = 'factory';
        Identifiers.TRANSFORM_METHOD = 'transform';
        Identifiers.PATCH_DEPS = 'patchedDeps';
        /* Instructions */
        Identifiers.namespaceHTML = { name: 'ΔnamespaceHTML', moduleName: CORE };
        Identifiers.namespaceMathML = { name: 'ΔnamespaceMathML', moduleName: CORE };
        Identifiers.namespaceSVG = { name: 'ΔnamespaceSVG', moduleName: CORE };
        Identifiers.element = { name: 'Δelement', moduleName: CORE };
        Identifiers.elementStart = { name: 'ΔelementStart', moduleName: CORE };
        Identifiers.elementEnd = { name: 'ΔelementEnd', moduleName: CORE };
        Identifiers.elementProperty = { name: 'ΔelementProperty', moduleName: CORE };
        Identifiers.select = { name: 'Δselect', moduleName: CORE };
        Identifiers.componentHostSyntheticProperty = { name: 'ΔcomponentHostSyntheticProperty', moduleName: CORE };
        Identifiers.componentHostSyntheticListener = { name: 'ΔcomponentHostSyntheticListener', moduleName: CORE };
        Identifiers.elementAttribute = { name: 'ΔelementAttribute', moduleName: CORE };
        Identifiers.classProp = { name: 'ΔclassProp', moduleName: CORE };
        Identifiers.elementContainerStart = { name: 'ΔelementContainerStart', moduleName: CORE };
        Identifiers.elementContainerEnd = { name: 'ΔelementContainerEnd', moduleName: CORE };
        Identifiers.styling = { name: 'Δstyling', moduleName: CORE };
        Identifiers.styleMap = { name: 'ΔstyleMap', moduleName: CORE };
        Identifiers.classMap = { name: 'ΔclassMap', moduleName: CORE };
        Identifiers.styleProp = { name: 'ΔstyleProp', moduleName: CORE };
        Identifiers.stylingApply = { name: 'ΔstylingApply', moduleName: CORE };
        Identifiers.elementHostAttrs = { name: 'ΔelementHostAttrs', moduleName: CORE };
        Identifiers.containerCreate = { name: 'Δcontainer', moduleName: CORE };
        Identifiers.nextContext = { name: 'ΔnextContext', moduleName: CORE };
        Identifiers.templateCreate = { name: 'Δtemplate', moduleName: CORE };
        Identifiers.text = { name: 'Δtext', moduleName: CORE };
        Identifiers.textBinding = { name: 'ΔtextBinding', moduleName: CORE };
        Identifiers.bind = { name: 'Δbind', moduleName: CORE };
        Identifiers.enableBindings = { name: 'ΔenableBindings', moduleName: CORE };
        Identifiers.disableBindings = { name: 'ΔdisableBindings', moduleName: CORE };
        Identifiers.allocHostVars = { name: 'ΔallocHostVars', moduleName: CORE };
        Identifiers.getCurrentView = { name: 'ΔgetCurrentView', moduleName: CORE };
        Identifiers.restoreView = { name: 'ΔrestoreView', moduleName: CORE };
        Identifiers.interpolation1 = { name: 'Δinterpolation1', moduleName: CORE };
        Identifiers.interpolation2 = { name: 'Δinterpolation2', moduleName: CORE };
        Identifiers.interpolation3 = { name: 'Δinterpolation3', moduleName: CORE };
        Identifiers.interpolation4 = { name: 'Δinterpolation4', moduleName: CORE };
        Identifiers.interpolation5 = { name: 'Δinterpolation5', moduleName: CORE };
        Identifiers.interpolation6 = { name: 'Δinterpolation6', moduleName: CORE };
        Identifiers.interpolation7 = { name: 'Δinterpolation7', moduleName: CORE };
        Identifiers.interpolation8 = { name: 'Δinterpolation8', moduleName: CORE };
        Identifiers.interpolationV = { name: 'ΔinterpolationV', moduleName: CORE };
        Identifiers.pureFunction0 = { name: 'ΔpureFunction0', moduleName: CORE };
        Identifiers.pureFunction1 = { name: 'ΔpureFunction1', moduleName: CORE };
        Identifiers.pureFunction2 = { name: 'ΔpureFunction2', moduleName: CORE };
        Identifiers.pureFunction3 = { name: 'ΔpureFunction3', moduleName: CORE };
        Identifiers.pureFunction4 = { name: 'ΔpureFunction4', moduleName: CORE };
        Identifiers.pureFunction5 = { name: 'ΔpureFunction5', moduleName: CORE };
        Identifiers.pureFunction6 = { name: 'ΔpureFunction6', moduleName: CORE };
        Identifiers.pureFunction7 = { name: 'ΔpureFunction7', moduleName: CORE };
        Identifiers.pureFunction8 = { name: 'ΔpureFunction8', moduleName: CORE };
        Identifiers.pureFunctionV = { name: 'ΔpureFunctionV', moduleName: CORE };
        Identifiers.pipeBind1 = { name: 'ΔpipeBind1', moduleName: CORE };
        Identifiers.pipeBind2 = { name: 'ΔpipeBind2', moduleName: CORE };
        Identifiers.pipeBind3 = { name: 'ΔpipeBind3', moduleName: CORE };
        Identifiers.pipeBind4 = { name: 'ΔpipeBind4', moduleName: CORE };
        Identifiers.pipeBindV = { name: 'ΔpipeBindV', moduleName: CORE };
        Identifiers.property = { name: 'Δproperty', moduleName: CORE };
        Identifiers.propertyInterpolate = { name: 'ΔpropertyInterpolate', moduleName: CORE };
        Identifiers.propertyInterpolate1 = { name: 'ΔpropertyInterpolate1', moduleName: CORE };
        Identifiers.propertyInterpolate2 = { name: 'ΔpropertyInterpolate2', moduleName: CORE };
        Identifiers.propertyInterpolate3 = { name: 'ΔpropertyInterpolate3', moduleName: CORE };
        Identifiers.propertyInterpolate4 = { name: 'ΔpropertyInterpolate4', moduleName: CORE };
        Identifiers.propertyInterpolate5 = { name: 'ΔpropertyInterpolate5', moduleName: CORE };
        Identifiers.propertyInterpolate6 = { name: 'ΔpropertyInterpolate6', moduleName: CORE };
        Identifiers.propertyInterpolate7 = { name: 'ΔpropertyInterpolate7', moduleName: CORE };
        Identifiers.propertyInterpolate8 = { name: 'ΔpropertyInterpolate8', moduleName: CORE };
        Identifiers.propertyInterpolateV = { name: 'ΔpropertyInterpolateV', moduleName: CORE };
        Identifiers.i18n = { name: 'Δi18n', moduleName: CORE };
        Identifiers.i18nAttributes = { name: 'Δi18nAttributes', moduleName: CORE };
        Identifiers.i18nExp = { name: 'Δi18nExp', moduleName: CORE };
        Identifiers.i18nStart = { name: 'Δi18nStart', moduleName: CORE };
        Identifiers.i18nEnd = { name: 'Δi18nEnd', moduleName: CORE };
        Identifiers.i18nApply = { name: 'Δi18nApply', moduleName: CORE };
        Identifiers.i18nPostprocess = { name: 'Δi18nPostprocess', moduleName: CORE };
        Identifiers.i18nLocalize = { name: 'Δi18nLocalize', moduleName: CORE };
        Identifiers.load = { name: 'Δload', moduleName: CORE };
        Identifiers.pipe = { name: 'Δpipe', moduleName: CORE };
        Identifiers.projection = { name: 'Δprojection', moduleName: CORE };
        Identifiers.projectionDef = { name: 'ΔprojectionDef', moduleName: CORE };
        Identifiers.reference = { name: 'Δreference', moduleName: CORE };
        Identifiers.inject = { name: 'Δinject', moduleName: CORE };
        Identifiers.injectAttribute = { name: 'ΔinjectAttribute', moduleName: CORE };
        Identifiers.directiveInject = { name: 'ΔdirectiveInject', moduleName: CORE };
        Identifiers.templateRefExtractor = { name: 'ΔtemplateRefExtractor', moduleName: CORE };
        Identifiers.resolveWindow = { name: 'ΔresolveWindow', moduleName: CORE };
        Identifiers.resolveDocument = { name: 'ΔresolveDocument', moduleName: CORE };
        Identifiers.resolveBody = { name: 'ΔresolveBody', moduleName: CORE };
        Identifiers.defineBase = { name: 'ΔdefineBase', moduleName: CORE };
        Identifiers.BaseDef = {
            name: 'ΔBaseDef',
            moduleName: CORE,
        };
        Identifiers.defineComponent = { name: 'ΔdefineComponent', moduleName: CORE };
        Identifiers.setComponentScope = { name: 'ΔsetComponentScope', moduleName: CORE };
        Identifiers.ComponentDefWithMeta = {
            name: 'ΔComponentDefWithMeta',
            moduleName: CORE,
        };
        Identifiers.defineDirective = {
            name: 'ΔdefineDirective',
            moduleName: CORE,
        };
        Identifiers.DirectiveDefWithMeta = {
            name: 'ΔDirectiveDefWithMeta',
            moduleName: CORE,
        };
        Identifiers.InjectorDef = {
            name: 'ΔInjectorDef',
            moduleName: CORE,
        };
        Identifiers.defineInjector = {
            name: 'ΔdefineInjector',
            moduleName: CORE,
        };
        Identifiers.NgModuleDefWithMeta = {
            name: 'ΔNgModuleDefWithMeta',
            moduleName: CORE,
        };
        Identifiers.defineNgModule = { name: 'ΔdefineNgModule', moduleName: CORE };
        Identifiers.setNgModuleScope = { name: 'ΔsetNgModuleScope', moduleName: CORE };
        Identifiers.PipeDefWithMeta = { name: 'ΔPipeDefWithMeta', moduleName: CORE };
        Identifiers.definePipe = { name: 'ΔdefinePipe', moduleName: CORE };
        Identifiers.queryRefresh = { name: 'ΔqueryRefresh', moduleName: CORE };
        Identifiers.viewQuery = { name: 'ΔviewQuery', moduleName: CORE };
        Identifiers.staticViewQuery = { name: 'ΔstaticViewQuery', moduleName: CORE };
        Identifiers.staticContentQuery = { name: 'ΔstaticContentQuery', moduleName: CORE };
        Identifiers.loadViewQuery = { name: 'ΔloadViewQuery', moduleName: CORE };
        Identifiers.contentQuery = { name: 'ΔcontentQuery', moduleName: CORE };
        Identifiers.loadContentQuery = { name: 'ΔloadContentQuery', moduleName: CORE };
        Identifiers.NgOnChangesFeature = { name: 'ΔNgOnChangesFeature', moduleName: CORE };
        Identifiers.InheritDefinitionFeature = { name: 'ΔInheritDefinitionFeature', moduleName: CORE };
        Identifiers.ProvidersFeature = { name: 'ΔProvidersFeature', moduleName: CORE };
        Identifiers.listener = { name: 'Δlistener', moduleName: CORE };
        Identifiers.getFactoryOf = {
            name: 'ΔgetFactoryOf',
            moduleName: CORE,
        };
        Identifiers.getInheritedFactory = {
            name: 'ΔgetInheritedFactory',
            moduleName: CORE,
        };
        // sanitization-related functions
        Identifiers.sanitizeHtml = { name: 'ΔsanitizeHtml', moduleName: CORE };
        Identifiers.sanitizeStyle = { name: 'ΔsanitizeStyle', moduleName: CORE };
        Identifiers.defaultStyleSanitizer = { name: 'ΔdefaultStyleSanitizer', moduleName: CORE };
        Identifiers.sanitizeResourceUrl = { name: 'ΔsanitizeResourceUrl', moduleName: CORE };
        Identifiers.sanitizeScript = { name: 'ΔsanitizeScript', moduleName: CORE };
        Identifiers.sanitizeUrl = { name: 'ΔsanitizeUrl', moduleName: CORE };
        Identifiers.sanitizeUrlOrResourceUrl = { name: 'ΔsanitizeUrlOrResourceUrl', moduleName: CORE };
        return Identifiers;
    }());
    exports.Identifiers = Identifiers;
});
//# sourceMappingURL=data:application/json;base64,