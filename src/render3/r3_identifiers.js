/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/compiler/src/render3/r3_identifiers", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CORE = '@angular/core';
    var Identifiers = /** @class */ (function () {
        function Identifiers() {
        }
        /* Methods */
        Identifiers.NEW_METHOD = 'factory';
        Identifiers.TRANSFORM_METHOD = 'transform';
        Identifiers.PATCH_DEPS = 'patchedDeps';
        /* Instructions */
        Identifiers.namespaceHTML = { name: 'ɵɵnamespaceHTML', moduleName: CORE };
        Identifiers.namespaceMathML = { name: 'ɵɵnamespaceMathML', moduleName: CORE };
        Identifiers.namespaceSVG = { name: 'ɵɵnamespaceSVG', moduleName: CORE };
        Identifiers.element = { name: 'ɵɵelement', moduleName: CORE };
        Identifiers.elementStart = { name: 'ɵɵelementStart', moduleName: CORE };
        Identifiers.elementEnd = { name: 'ɵɵelementEnd', moduleName: CORE };
        Identifiers.elementProperty = { name: 'ɵɵelementProperty', moduleName: CORE };
        Identifiers.select = { name: 'ɵɵselect', moduleName: CORE };
        Identifiers.updateSyntheticHostBinding = { name: 'ɵɵupdateSyntheticHostBinding', moduleName: CORE };
        Identifiers.componentHostSyntheticListener = { name: 'ɵɵcomponentHostSyntheticListener', moduleName: CORE };
        Identifiers.elementAttribute = { name: 'ɵɵelementAttribute', moduleName: CORE };
        Identifiers.attribute = { name: 'ɵɵattribute', moduleName: CORE };
        Identifiers.attributeInterpolate1 = { name: 'ɵɵattributeInterpolate1', moduleName: CORE };
        Identifiers.attributeInterpolate2 = { name: 'ɵɵattributeInterpolate2', moduleName: CORE };
        Identifiers.attributeInterpolate3 = { name: 'ɵɵattributeInterpolate3', moduleName: CORE };
        Identifiers.attributeInterpolate4 = { name: 'ɵɵattributeInterpolate4', moduleName: CORE };
        Identifiers.attributeInterpolate5 = { name: 'ɵɵattributeInterpolate5', moduleName: CORE };
        Identifiers.attributeInterpolate6 = { name: 'ɵɵattributeInterpolate6', moduleName: CORE };
        Identifiers.attributeInterpolate7 = { name: 'ɵɵattributeInterpolate7', moduleName: CORE };
        Identifiers.attributeInterpolate8 = { name: 'ɵɵattributeInterpolate8', moduleName: CORE };
        Identifiers.attributeInterpolateV = { name: 'ɵɵattributeInterpolateV', moduleName: CORE };
        Identifiers.classProp = { name: 'ɵɵclassProp', moduleName: CORE };
        Identifiers.elementContainerStart = { name: 'ɵɵelementContainerStart', moduleName: CORE };
        Identifiers.elementContainerEnd = { name: 'ɵɵelementContainerEnd', moduleName: CORE };
        Identifiers.styling = { name: 'ɵɵstyling', moduleName: CORE };
        Identifiers.styleMap = { name: 'ɵɵstyleMap', moduleName: CORE };
        Identifiers.classMap = { name: 'ɵɵclassMap', moduleName: CORE };
        Identifiers.styleProp = { name: 'ɵɵstyleProp', moduleName: CORE };
        Identifiers.stylingApply = { name: 'ɵɵstylingApply', moduleName: CORE };
        Identifiers.styleSanitizer = { name: 'ɵɵstyleSanitizer', moduleName: CORE };
        Identifiers.elementHostAttrs = { name: 'ɵɵelementHostAttrs', moduleName: CORE };
        Identifiers.containerCreate = { name: 'ɵɵcontainer', moduleName: CORE };
        Identifiers.nextContext = { name: 'ɵɵnextContext', moduleName: CORE };
        Identifiers.templateCreate = { name: 'ɵɵtemplate', moduleName: CORE };
        Identifiers.text = { name: 'ɵɵtext', moduleName: CORE };
        Identifiers.textBinding = { name: 'ɵɵtextBinding', moduleName: CORE };
        Identifiers.bind = { name: 'ɵɵbind', moduleName: CORE };
        Identifiers.enableBindings = { name: 'ɵɵenableBindings', moduleName: CORE };
        Identifiers.disableBindings = { name: 'ɵɵdisableBindings', moduleName: CORE };
        Identifiers.allocHostVars = { name: 'ɵɵallocHostVars', moduleName: CORE };
        Identifiers.getCurrentView = { name: 'ɵɵgetCurrentView', moduleName: CORE };
        Identifiers.textInterpolate = { name: 'ɵɵtextInterpolate', moduleName: CORE };
        Identifiers.textInterpolate1 = { name: 'ɵɵtextInterpolate1', moduleName: CORE };
        Identifiers.textInterpolate2 = { name: 'ɵɵtextInterpolate2', moduleName: CORE };
        Identifiers.textInterpolate3 = { name: 'ɵɵtextInterpolate3', moduleName: CORE };
        Identifiers.textInterpolate4 = { name: 'ɵɵtextInterpolate4', moduleName: CORE };
        Identifiers.textInterpolate5 = { name: 'ɵɵtextInterpolate5', moduleName: CORE };
        Identifiers.textInterpolate6 = { name: 'ɵɵtextInterpolate6', moduleName: CORE };
        Identifiers.textInterpolate7 = { name: 'ɵɵtextInterpolate7', moduleName: CORE };
        Identifiers.textInterpolate8 = { name: 'ɵɵtextInterpolate8', moduleName: CORE };
        Identifiers.textInterpolateV = { name: 'ɵɵtextInterpolateV', moduleName: CORE };
        Identifiers.restoreView = { name: 'ɵɵrestoreView', moduleName: CORE };
        Identifiers.interpolation1 = { name: 'ɵɵinterpolation1', moduleName: CORE };
        Identifiers.interpolation2 = { name: 'ɵɵinterpolation2', moduleName: CORE };
        Identifiers.interpolation3 = { name: 'ɵɵinterpolation3', moduleName: CORE };
        Identifiers.interpolation4 = { name: 'ɵɵinterpolation4', moduleName: CORE };
        Identifiers.interpolation5 = { name: 'ɵɵinterpolation5', moduleName: CORE };
        Identifiers.interpolation6 = { name: 'ɵɵinterpolation6', moduleName: CORE };
        Identifiers.interpolation7 = { name: 'ɵɵinterpolation7', moduleName: CORE };
        Identifiers.interpolation8 = { name: 'ɵɵinterpolation8', moduleName: CORE };
        Identifiers.interpolationV = { name: 'ɵɵinterpolationV', moduleName: CORE };
        Identifiers.pureFunction0 = { name: 'ɵɵpureFunction0', moduleName: CORE };
        Identifiers.pureFunction1 = { name: 'ɵɵpureFunction1', moduleName: CORE };
        Identifiers.pureFunction2 = { name: 'ɵɵpureFunction2', moduleName: CORE };
        Identifiers.pureFunction3 = { name: 'ɵɵpureFunction3', moduleName: CORE };
        Identifiers.pureFunction4 = { name: 'ɵɵpureFunction4', moduleName: CORE };
        Identifiers.pureFunction5 = { name: 'ɵɵpureFunction5', moduleName: CORE };
        Identifiers.pureFunction6 = { name: 'ɵɵpureFunction6', moduleName: CORE };
        Identifiers.pureFunction7 = { name: 'ɵɵpureFunction7', moduleName: CORE };
        Identifiers.pureFunction8 = { name: 'ɵɵpureFunction8', moduleName: CORE };
        Identifiers.pureFunctionV = { name: 'ɵɵpureFunctionV', moduleName: CORE };
        Identifiers.pipeBind1 = { name: 'ɵɵpipeBind1', moduleName: CORE };
        Identifiers.pipeBind2 = { name: 'ɵɵpipeBind2', moduleName: CORE };
        Identifiers.pipeBind3 = { name: 'ɵɵpipeBind3', moduleName: CORE };
        Identifiers.pipeBind4 = { name: 'ɵɵpipeBind4', moduleName: CORE };
        Identifiers.pipeBindV = { name: 'ɵɵpipeBindV', moduleName: CORE };
        Identifiers.property = { name: 'ɵɵproperty', moduleName: CORE };
        Identifiers.propertyInterpolate = { name: 'ɵɵpropertyInterpolate', moduleName: CORE };
        Identifiers.propertyInterpolate1 = { name: 'ɵɵpropertyInterpolate1', moduleName: CORE };
        Identifiers.propertyInterpolate2 = { name: 'ɵɵpropertyInterpolate2', moduleName: CORE };
        Identifiers.propertyInterpolate3 = { name: 'ɵɵpropertyInterpolate3', moduleName: CORE };
        Identifiers.propertyInterpolate4 = { name: 'ɵɵpropertyInterpolate4', moduleName: CORE };
        Identifiers.propertyInterpolate5 = { name: 'ɵɵpropertyInterpolate5', moduleName: CORE };
        Identifiers.propertyInterpolate6 = { name: 'ɵɵpropertyInterpolate6', moduleName: CORE };
        Identifiers.propertyInterpolate7 = { name: 'ɵɵpropertyInterpolate7', moduleName: CORE };
        Identifiers.propertyInterpolate8 = { name: 'ɵɵpropertyInterpolate8', moduleName: CORE };
        Identifiers.propertyInterpolateV = { name: 'ɵɵpropertyInterpolateV', moduleName: CORE };
        Identifiers.i18n = { name: 'ɵɵi18n', moduleName: CORE };
        Identifiers.i18nAttributes = { name: 'ɵɵi18nAttributes', moduleName: CORE };
        Identifiers.i18nExp = { name: 'ɵɵi18nExp', moduleName: CORE };
        Identifiers.i18nStart = { name: 'ɵɵi18nStart', moduleName: CORE };
        Identifiers.i18nEnd = { name: 'ɵɵi18nEnd', moduleName: CORE };
        Identifiers.i18nApply = { name: 'ɵɵi18nApply', moduleName: CORE };
        Identifiers.i18nPostprocess = { name: 'ɵɵi18nPostprocess', moduleName: CORE };
        Identifiers.i18nLocalize = { name: 'ɵɵi18nLocalize', moduleName: CORE };
        Identifiers.load = { name: 'ɵɵload', moduleName: CORE };
        Identifiers.pipe = { name: 'ɵɵpipe', moduleName: CORE };
        Identifiers.projection = { name: 'ɵɵprojection', moduleName: CORE };
        Identifiers.projectionDef = { name: 'ɵɵprojectionDef', moduleName: CORE };
        Identifiers.reference = { name: 'ɵɵreference', moduleName: CORE };
        Identifiers.inject = { name: 'ɵɵinject', moduleName: CORE };
        Identifiers.injectAttribute = { name: 'ɵɵinjectAttribute', moduleName: CORE };
        Identifiers.directiveInject = { name: 'ɵɵdirectiveInject', moduleName: CORE };
        Identifiers.templateRefExtractor = { name: 'ɵɵtemplateRefExtractor', moduleName: CORE };
        Identifiers.resolveWindow = { name: 'ɵɵresolveWindow', moduleName: CORE };
        Identifiers.resolveDocument = { name: 'ɵɵresolveDocument', moduleName: CORE };
        Identifiers.resolveBody = { name: 'ɵɵresolveBody', moduleName: CORE };
        Identifiers.defineBase = { name: 'ɵɵdefineBase', moduleName: CORE };
        Identifiers.BaseDef = {
            name: 'ɵɵBaseDef',
            moduleName: CORE,
        };
        Identifiers.defineComponent = { name: 'ɵɵdefineComponent', moduleName: CORE };
        Identifiers.setComponentScope = { name: 'ɵɵsetComponentScope', moduleName: CORE };
        Identifiers.ComponentDefWithMeta = {
            name: 'ɵɵComponentDefWithMeta',
            moduleName: CORE,
        };
        Identifiers.defineDirective = {
            name: 'ɵɵdefineDirective',
            moduleName: CORE,
        };
        Identifiers.DirectiveDefWithMeta = {
            name: 'ɵɵDirectiveDefWithMeta',
            moduleName: CORE,
        };
        Identifiers.InjectorDef = {
            name: 'ɵɵInjectorDef',
            moduleName: CORE,
        };
        Identifiers.defineInjector = {
            name: 'ɵɵdefineInjector',
            moduleName: CORE,
        };
        Identifiers.NgModuleDefWithMeta = {
            name: 'ɵɵNgModuleDefWithMeta',
            moduleName: CORE,
        };
        Identifiers.defineNgModule = { name: 'ɵɵdefineNgModule', moduleName: CORE };
        Identifiers.setNgModuleScope = { name: 'ɵɵsetNgModuleScope', moduleName: CORE };
        Identifiers.PipeDefWithMeta = { name: 'ɵɵPipeDefWithMeta', moduleName: CORE };
        Identifiers.definePipe = { name: 'ɵɵdefinePipe', moduleName: CORE };
        Identifiers.queryRefresh = { name: 'ɵɵqueryRefresh', moduleName: CORE };
        Identifiers.viewQuery = { name: 'ɵɵviewQuery', moduleName: CORE };
        Identifiers.staticViewQuery = { name: 'ɵɵstaticViewQuery', moduleName: CORE };
        Identifiers.staticContentQuery = { name: 'ɵɵstaticContentQuery', moduleName: CORE };
        Identifiers.loadViewQuery = { name: 'ɵɵloadViewQuery', moduleName: CORE };
        Identifiers.contentQuery = { name: 'ɵɵcontentQuery', moduleName: CORE };
        Identifiers.loadContentQuery = { name: 'ɵɵloadContentQuery', moduleName: CORE };
        Identifiers.NgOnChangesFeature = { name: 'ɵɵNgOnChangesFeature', moduleName: CORE };
        Identifiers.InheritDefinitionFeature = { name: 'ɵɵInheritDefinitionFeature', moduleName: CORE };
        Identifiers.ProvidersFeature = { name: 'ɵɵProvidersFeature', moduleName: CORE };
        Identifiers.listener = { name: 'ɵɵlistener', moduleName: CORE };
        Identifiers.getFactoryOf = {
            name: 'ɵɵgetFactoryOf',
            moduleName: CORE,
        };
        Identifiers.getInheritedFactory = {
            name: 'ɵɵgetInheritedFactory',
            moduleName: CORE,
        };
        // sanitization-related functions
        Identifiers.sanitizeHtml = { name: 'ɵɵsanitizeHtml', moduleName: CORE };
        Identifiers.sanitizeStyle = { name: 'ɵɵsanitizeStyle', moduleName: CORE };
        Identifiers.defaultStyleSanitizer = { name: 'ɵɵdefaultStyleSanitizer', moduleName: CORE };
        Identifiers.sanitizeResourceUrl = { name: 'ɵɵsanitizeResourceUrl', moduleName: CORE };
        Identifiers.sanitizeScript = { name: 'ɵɵsanitizeScript', moduleName: CORE };
        Identifiers.sanitizeUrl = { name: 'ɵɵsanitizeUrl', moduleName: CORE };
        Identifiers.sanitizeUrlOrResourceUrl = { name: 'ɵɵsanitizeUrlOrResourceUrl', moduleName: CORE };
        return Identifiers;
    }());
    exports.Identifiers = Identifiers;
});
//# sourceMappingURL=data:application/json;base64,