{"version":3,"sources":["packages/compiler/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","self","ng","compiler","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","TagContentType","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","splitNsName","elementName","colonIndex","indexOf","Error","slice","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","not","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","prop","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sum","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","NGSP_UNICODE","_DEFAULT_TAG_DEFINITION","TAG_DEFINITIONS","HtmlTagDefinition","_a","_b","closedByChildren","requiredParents","implicitNamespacePrefix","_c","contentType","PARSABLE_DATA","_d","closedByParent","_e","isVoid","_f","ignoreFirstLf","_this","canSelfClose","forEach","parentToAdd","requireExtraParent","currentParent","lcParent","toLowerCase","isClosedByChild","name","getHtmlTagDefinition","base","meta","area","embed","link","img","input","param","hr","br","source","track","wbr","thead","tbody","tfoot","tr","td","th","col","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","style","RAW_TEXT","script","title","ESCAPABLE_RAW_TEXT","textarea","ViewEncapsulation","ChangeDetectionStrategy","_SELECTOR_REGEXP","RegExp","CssSelector","element","classNames","attrs","notSelectors","parse","selector","match","results","_addResult","res","cssSel","cssSelector","current","inNot","lastIndex","exec","setElement","addClassName","addAttribute","isElementSelector","hasElementSelector","getMatchingElementTemplate","classAttr","join","getAttrs","result","toString","klass","notSelector","SelectorMatcher","_elementMap","Map","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","selectable","SelectorContext","_addTerminal","_addPartial","className","name_2","terminalMap","terminalValuesMap","get","set","partialMap","partialValuesMap","map","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","selectors","cbContext","callback","createInject","makeMetadataFactory","token","createInjectionToken","desc","_desc","ngInjectableDef","undefined","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","createDirective","dir","SecurityContext","MissingTranslationStrategy","createComponent","c","changeDetection","Default","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","args","createNgModule","ngModule","createInjectable","injectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createSelf","createSkipSelf","createHost","Type","Function","props","_i","values","ngMetadataName","isTypeOf","obj","parserSelectorToR3Selector","positive","parserSelectorToSimpleSelector","classes","negative","parserSelectorToNegativeSelector","parseSelectorToR3Selector","TypeModifier","core","freeze","BuiltinTypeName","Type$1","modifiers","hasModifier","modifier","BinaryOperator","BuiltinType","_super","visitType","visitor","context","visitBuiltinType","ExpressionType","typeParams","visitExpressionType","ArrayType","of","visitArrayType","MapType","valueType","visitMapType","DYNAMIC_TYPE","Dynamic","INFERRED_TYPE","Inferred","BOOL_TYPE","Bool","NUMBER_TYPE","Int","Number","NONE_TYPE","String","None","nullSafeIsEquivalent","other","isEquivalent","areAllEquivalent","len","BuiltinVar","Expression","type","sourceSpan","ReadPropExpr","key","index","ReadKeyExpr","callMethod","params","InvokeMethodExpr","callFn","InvokeFunctionExpr","instantiate","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","Equals","notEquals","NotEquals","identical","Identical","notIdentical","NotIdentical","Minus","plus","Plus","Divide","multiply","Multiply","modulo","Modulo","And","bitwiseAnd","parens","BitwiseAnd","Or","lower","Lower","lowerEquals","LowerEquals","bigger","Bigger","biggerEquals","BiggerEquals","isBlank","TYPED_NULL_EXPR","cast","CastExpr","toStmt","ExpressionStatement","BuiltinMethod","ReadVarExpr","builtin","isConstant","visitExpression","visitReadVarExpr","WriteVarExpr","TypeofExpr","expr","visitTypeofExpr","WrappedNodeExpr","node","visitWrappedNodeExpr","visitWriteVarExpr","toDeclStmt","DeclareVarStmt","toConstDecl","StmtModifier","Final","WriteKeyExpr","receiver","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","method","visitInvokeMethodExpr","fn","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","LiteralExpr","visitLiteralExpr","ExternalExpr","moduleName","runtime","visitExternalExpr","ExternalReference","condition","visitConditionalExpr","NotExpr","visitNotExpr","AssertNotNull","visitAssertNotNullExpr","visitCastExpr","FnParam","FunctionExpr","statements","visitFunctionExpr","DeclareFunctionStmt","operator","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","LiteralArrayExpr","entries","every","visitLiteralArrayExpr","LiteralMapEntry","quoted","LiteralMapExpr","visitLiteralMapExpr","CommaExpr","parts","visitCommaExpr","NULL_EXPR","This","Super","CatchError","CatchStack","Statement","stmt","visitStatement","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","ReturnStatement","visitReturnStmt","AbstractClassPart","ClassField","initializer","f","ClassMethod","body","ClassGetter","ClassStmt","parent","fields","getters","constructorMethod","methods","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","comment","multiline","visitCommentStmt","JSDocCommentStmt","tags","visitJSDocCommentStmt","serializeTags","e_1","out","tags_1","tags_1_1","tagToString","replace","e_1_1","return","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer","transformExpr","transformStmt","ast","visitAllExpressions","visitAllStatements","entry","mapType","exprs","getter","ctorMethod","stmts","RecursiveAstVisitor","findReadVarNames","_ReadVarVisitor","varNames","Set","add","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","transformer","_ApplySourceSpanTransformer","applySourceSpanToExpressionIfNeeded","_clone","clone","variable","importExpr","id","importType","typeModifiers","expressionType","literalArr","literalMap","ifStmt","thenClause","elseClause","literal","tag","text","DASH_CASE_REGEXP","splitAtColon","defaultValues","_splitAt","character","characterIndex","trim","visitValue","isArray","visitArray","isStrictStringMap","getPrototypeOf","STRING_MAP_PROTO","visitStringMap","visitPrimitive","visitOther","isDefined","val","noUndefined","ValueTransformer","arr","keys","SyncAsync","isPromise","cb","then","syncAsyncValues","some","Promise","all","msg","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","escapeRegExp","utf8Encode","str","encoded","codePoint","charCodeAt","low","fromCharCode","stringify","overriddenName","newLineIndex","substring","resolveForwardRef","Version","full","splits","split","major","minor","patch","__window","window","__self","WorkerGlobalScope","_global","KEY_CONTEXT","FixupExpression","resolved","original","fixup","expression","shared","ConstantPool","literals","literalFactories","injectorDefinitions","directiveDefinitions","componentDefinitions","pipeDefinitions","nextNameIndex","getConstLiteral","literal$$1","forceShared","keyOf","newValue","name_1","freshName","getDefinition","kind","ctx","definitions","definitionsOf","property","propertyNameOf","getLiteralFactory","argumentsForKey","_getLiteralFactory","expressionForKey","resultMap","literalFactory","literalFactoryArguments","filter","resultExpressions","pureFunctionDeclaration","isVariable","uniqueName","KeyVisitor","invalid","quote","mapKey","arg","CORE","Identifiers","ANALYZE_FOR_ENTRY_COMPONENTS","ElementRef","NgModuleRef","ViewContainerRef","ChangeDetectorRef","QueryList","TemplateRef","Renderer2","CodegenComponentFactoryResolver","ComponentFactoryResolver","ComponentFactory","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","inject","INJECTOR","Injector","defineInjectable","InjectableDef","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","providerDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","unwrapValue","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","setClassMetadata","createTokenForReference","reference","identifier","createTokenForExternalReference","reflector","resolveExternalReference","StaticSymbol","filePath","members","assertNoMembers","JSON","StaticSymbolCache","cache","declarationFile","HOST_REG_EXP","sanitizeIdentifier","CompileSummaryKind","_anonymousTypeIndex","identifierName","compileIdentifier","ref","identifierModuleUrl","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","CompileStylesheetMetadata","styles","styleUrls","moduleUrl","_normalizeArray","CompileTemplateMetadata","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","isInline","preserveWhitespaces","encapsulation","flatten","toSummary","CompileDirectiveMetadata","isComponent","exportAs","inputs","outputs","hostListeners","hostProperties","hostAttributes","providers","viewProviders","queries","guards","viewQueries","entryComponents","componentViewType","rendererType","componentFactory","isHost","host","matches","inputsMap","bindConfig","outputsMap","summaryKind","Directive","CompilePipeMetadata","Pipe","CompileShallowModuleMetadata","CompileNgModuleMetadata","declaredDirectives","exportedDirectives","declaredPipes","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","transitiveModule","NgModule","modules","TransitiveCompileNgModuleMetadata","directivesSet","directives","exportedDirectivesSet","pipesSet","pipes","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","provider","addDirective","has","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","useClass","useValue","useExisting","useFactory","deps","multi","dependencies","list","reduce","flat","item","flatItem","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","sharedStylesheetJitUrl","pathParts","ngModuleJitUrl","moduleMeta","templateJitUrl","CORE$1","Identifiers$1","NEW_METHOD","TRANSFORM_METHOD","PATCH_DEPS","namespaceHTML","namespaceMathML","namespaceSVG","elementStart","elementEnd","elementProperty","componentHostSyntheticProperty","componentHostSyntheticListener","elementAttribute","elementClassProp","elementContainerStart","elementContainerEnd","elementStyling","elementHostAttrs","elementStylingMap","elementStyleProp","elementStylingApply","containerCreate","nextContext","templateCreate","textBinding","bind","enableBindings","disableBindings","allocHostVars","getCurrentView","restoreView","interpolation1","interpolation2","interpolation3","interpolation4","interpolation5","interpolation6","interpolation7","interpolation8","interpolationV","pureFunction0","pureFunction1","pureFunction2","pureFunction3","pureFunction4","pureFunction5","pureFunction6","pureFunction7","pureFunction8","pureFunctionV","pipeBind1","pipeBind2","pipeBind3","pipeBind4","pipeBindV","i18n","i18nAttributes","i18nExp","i18nStart","i18nEnd","i18nApply","i18nPostprocess","load","loadQueryList","pipe","projection","projectionDef","injectAttribute","directiveInject","templateRefExtractor","resolveWindow","resolveDocument","resolveBody","defineBase","BaseDef","defineComponent","ComponentDefWithMeta","defineDirective","DirectiveDefWithMeta","InjectorDef","defineInjector","NgModuleDefWithMeta","defineNgModule","PipeDefWithMeta","definePipe","query","queryRefresh","registerContentQuery","NgOnChangesFeature","InheritDefinitionFeature","ProvidersFeature","listener","getFactoryOf","getInheritedFactory","sanitizeHtml","sanitizeStyle","defaultStyleSanitizer","sanitizeResourceUrl","sanitizeScript","sanitizeUrl","sanitizeUrlOrResourceUrl","Message","nodes","placeholders","placeholderToMessage","meaning","description","sources","start","file","startLine","line","startCol","endLine","end","endCol","Text","visit","visitText","Container","children","visitContainer","Icu","cases","visitIcu","TagPlaceholder","startName","closeName","visitTagPlaceholder","Placeholder","visitPlaceholder","IcuPlaceholder","visitIcuPlaceholder","CloneVisitor","container","icu","expressionPlaceholder","ph","RecurseVisitor","child","k","digest","message","sha1","utf8","words32","stringToWords32","endian","wordAt","Endian","Big","w","a","h0","h1","h2","h3","h4","j","rol32","fk","temp","add32","byteStringToHexString","hex","byteAt","words32ToByteString","serializeNodes","serializerVisitor","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","fingerprint","hi","lo","him","lom","add64","ah","al","bh","add32to64","carry","l","rol64","count","byteStringToDecString","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","_SerializerVisitor","strCases","hash32","mix","Little","sub32","high","word","word32ToByteString","x","y","Math","max","tmpSum","num","product","bToThePower","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toPublicName","internalName","toInternalName","publicName","visitPlaceholderName","nextId","_visitor","_Visitor","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","serialize","Declaration","unescapedAttrs","escapeXml","Doctype","Tag","Text$1","unescapedValue","CR","ws","_ESCAPED_CHARS","Xmb","write","messages","locale","exampleVisitor","ExampleVisitor","_Visitor$1","rootNode","sourceTags","version","encoding","addDefaultExamples","content","digest$1","startTagAsText","startEx","startTagPh","closeTagAsText","closeEx","closeTagPh","interpolationAsText","exTag","icuExpression","icuType","icuCases","icuAsText","exText","toUpperCase","mapLiteral","CLOSURE_TRANSLATION_PREFIX","CLOSURE_TRANSLATION_MATCHER_REGEXP","GOOG_GET_MSG","I18N_ATTR","I18N_ATTR_PREFIX","I18N_PLACEHOLDER_SYMBOL","i18nTranslationToDeclStmt","variable$$1","fnCall","isI18nAttribute","startsWith","isI18nRootNode","isSingleI18nIcu","metaFromI18nMessage","icuFromI18nMessage","wrapI18nPlaceholder","contextId","placeholdersToParams","updatePlaceholderMap","assembleBoundTextPlaceholders","bindingStartIndex","startIdx","find","idx","formatI18nPlaceholderName","postfix","chunks","test","pop","raw","shift","charAt","getTranslationConstPrefix","extra","TEMPORARY_NAME","CONTEXT_NAME","RENDER_FLAGS","temporaryAllocator","unsupported","feature","invalid$1","asLiteral","conditionallyCreateMapObjectLiteral","keepDeclared","getOwnPropertyNames","mapToExpression","declaredName","trimTrailingNulls","parameters","exp","R3FactoryDelegateType","R3ResolvedDependencyType","DefinitionMap","toLiteralMap","getAttrsForDirectiveMatching","elOrTpl","attributesMap","attributes","compileFactoryFunction","typeForCtor","isDelegatedMetadata","ctorExpr","injectDependencies","injectFn","baseFactory","baseFactoryStmt","Exported","ctorExprFinal","retExpr","makeConditionalFactory","nonCtorExpr","delegateType","Factory","delegateFactory","delegate","delegateFactoryStmt","delegateArgs","delegateDeps","Class","isExpressionFactoryMetadata","dep","compileInjectDependency","Token","flags","skipSelf","optional","injectArgs","Attribute","dependenciesFromGlobalMetadata","outputCtx","diDeps","dependency","tokenRef","isAttribute","isOptional","isSelf","isSkipSelf","mapToMapExpression","convertMetaToOutput","typeWithParameters","numParams","ANIMATE_SYMBOL_PREFIX","prepareSyntheticPropertyName","prepareSyntheticListenerFunctionName","phase","compileInjectable","factoryMeta","ctorDeps","useClassOnSelf","userDeps","providedIn","typeArgumentCount","assertArrayOfStrings","INTERPOLATION_BLACKLIST_REGEXPS","assertInterpolationSymbols","start_1","end_1","regexp","InterpolationConfig","fromArray","markers","DEFAULT_INTERPOLATION_CONFIG","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceUrl","sourceLine0","sourceCol0","currentLine","defineProperty","enumerable","configurable","toJSON","sourcesIndex","from","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segments","segment","segAsStr","toBase64VLQ","sourceRoot","toJsComment","toBase64String","b64","i1","i2","i3","toBase64Digit","isNaN","digit","B64_DIGITS","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_INDENT_WITH","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","EmitterVisitorContext","_indent","_classes","_preambleLineCount","_lines","createRoot","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","part","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","toSource","sourceLines","_createIndent","toSourceMapGenerator","genFilePath","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","span","sourceLine","sourceCol","setPreambleLineCount","spanOf","column","emittedLine","columnsLeft","partIndex","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","varName","escapeIdentifier","opStr","visitAllObjects","expressions","separator","handler","incrementedIndent","escapeDollar","alwaysQuote","jitStatements","createSourceMaps","converter","JitEmitterVisitor","createReturnStmt","evalExpression","vars","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","headerLines","getArgs","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","_emitReferenceToExternal","AbstractJsEmitterVisitor","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","fnExpr","currentClass","ConcatArray","SubscribeObservable","Bind","R3JitReflector","typeOrFunc","annotations","shallowAnnotations","tryAnnotations","propMetadata","hasLifecycleHook","lcProperty","componentModuleUrl","cmpMetadata","jitExpression","def","preStatements","compileNgModule","moduleType","bootstrap","declarations","imports","tupleTypeOf","additionalStatements","compileInjector","types","typeofExpr","compilePipeFromMetadata","metadata","definitionMapValues","pipeName","templateFactory","ParsedPropertyType","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","visitQuote","EmptyExpr","ImplicitReceiver","visitImplicitReceiver","Chain","visitChain","Conditional","trueExp","falseExp","visitConditional","PropertyRead","visitPropertyRead","PropertyWrite","visitPropertyWrite","SafePropertyRead","visitSafePropertyRead","KeyedRead","visitKeyedRead","KeyedWrite","visitKeyedWrite","BindingPipe","visitPipe","LiteralPrimitive","visitLiteralPrimitive","LiteralArray","visitLiteralArray","LiteralMap","visitLiteralMap","Interpolation","strings","visitInterpolation","Binary","operation","left","right","visitBinary","PrefixNot","visitPrefixNot","NonNullAssert","visitNonNullAssert","MethodCall","visitMethodCall","SafeMethodCall","visitSafeMethodCall","FunctionCall","target","visitFunctionCall","ASTWithSource","errors","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor$1","visitAll","asts","AstTransformer$1","AstMemoryEfficientTransformer","modified","ParsedProperty","isLiteral","LITERAL_ATTR","isAnimation","ANIMATION","ParsedEvent","targetOrPhase","ParsedVariable","BoundElementProperty","securityContext","unit","EventHandlerVars","event","ConvertActionBindingResult","allowDefault","render3Stmts","statement","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","output","_Mode","prependTemporaryDecls","temporaryCount","unshift","temporaryDeclaration","preventDefaultVar","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","converterFactory","convertBuiltins","_BuiltinAstConverter","BindingForm","ConvertPropertyBindingResult","currValExpr","convertPropertyBinding","expressionWithoutBuiltins","form","createCurrValueExpr","outputExpr","TrySimple","temporaryName","temporaryNumber","ensureExpressionMode","mode","convertToStatementIfNeeded","LifecycleHooks","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","op","_visit","ensureStatementMode","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","assertNotNull","localExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","delete","releaseTemporary","visitSome","tempNumber","LIFECYCLE_HOOKS_VALUES","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","$EOF","$TAB","$LF","$VTAB","$FF","$CR","$SPACE","$DQ","$$","$SQ","$PLUS","$MINUS","$SLASH","$SEMICOLON","$EQ","$GT","$0","$9","$A","$F","$Z","$_","$a","$f","$n","$r","$t","$v","$z","$LBRACE","$NBSP","$BT","isWhitespace","code","isDigit","isAsciiLetter","ParseErrorLevel","ParseLocation","offset","moveBy","ch","priorLine","substr","lastIndexOf","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","ParseSourceFile","ParseSourceSpan","details","ParseError","level","ERROR","contextualMessage","typeSourceSpan","sourceFileName","sourceFile","ShadowCss","strictStyling","shimCssText","cssText","hostSelector","commentsWithHash","extractCommentsWithHash","_commentWithHashRe","stripComments","_commentRe","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","rule","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","suffix","_polyfillHost","_shadowDOMSelectorsRe","pattern","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","CLOSE_CURLY","BLOCK_PLACEHOLDER","OPEN_CURLY","StringWithEscapedBlocks","nextBlockIndex","escapedString","_ruleRe","contentPrefix","blocks","CssRule","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","applyScope","_makeScopeMatcher","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","_","colon","attrName","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","startIndex","sep","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","HOST_ATTR","CONTENT_ATTR","StylesCompileDependency","setValue","CompiledStylesheet","stylesVar","isShimmed","StyleCompiler","_urlResolver","_shadowCss","compileComponent","comp","_compileStyles","needsStyleShim","compileStyles","stylesheet","shim","Emulated","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","styleUrl","exprIndex","getStylesVarName","Const","component","Text$2","BoundText","visitBoundText","TextAttribute","valueSpan","visitTextAttribute","BoundAttribute","fromBoundElementProperty","visitBoundAttribute","BoundEvent","fromParsedEvent","visitBoundEvent","Element","references","startSourceSpan","endSourceSpan","visitElement","Template","variables","visitTemplate","Content","visitContent","Variable","visitVariable","Reference","visitReference","Icu$1","e_2","nodes_1","nodes_1_1","newNode","nodes_2","nodes_2_1","e_2_1","stripUnnecessaryQuotes","qS","tempValue","hyphenate","v","StylingBuilder","_elementIndexExpr","_directiveExpr","_hasInitialValues","hasBindings","_classMapInput","_styleMapInput","_singleStyleInputs","_singleClassInputs","_lastStylingInput","_stylesIndex","_classesIndex","_initialStyleValues","_initialClassValues","_useDefaultSanitizer","registerBoundInput","binding","registerStyleInput","isClassBinding","registerClassInput","propertyName","isStyleSanitizable","registerIntoMap","registerStyleAttr","parenDepth","valueStart","propStart","currentProp","valueHasQuotes","styleVal","registerClassAttr","populateInitialStylingAttrs","buildHostAttrsInstruction","constantPool","allocateBindingSlots","buildParams","getConstantLiteralFromArray","buildElementStylingInstruction","styleBindingProps","classBindingNames","expectedNumberOfArgs","addParam","buildElementStylingMapInstruction","valueConverter","stylingInput","totalBindingSlotsRequired","mapBasedClassValue_1","mapBasedStyleValue_1","convertFn","_buildSingleInputs","mapIndex","allowUnits","bindingIndex","_buildClassInputs","_buildStyleInputs","_buildApplyFn","buildUpdateLevelInstructions","instructions","mapInstruction","size","predicate","argNumber","totalExpectedArgs","TokenType","KEYWORDS","Lexer","tokenize","scanner","_Scanner","tokens","scanToken","newCharacterToken","Character","newOperatorToken","Operator","EOF","numValue","strValue","isCharacter","isNumber","isString","isOperator","isIdentifier","Identifier","isKeyword","Keyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","peek","advance","isIdentifierStart","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","isIdentifierPart","newKeywordToken","newIdentifierToken","simple","isExponentSign","newNumberToken","parseIntAutoRadix","parseInt","parseFloat","buffer","marker","unescapedCode","unescape","last","newStringToken","position","newErrorToken","isQuote","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","warnings","_createInterpolateRegExp","config","Parser","_lexer","parseAction","interpolationConfig","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","tplKey","tplValue","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","expectOperator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","firstBinding","bindings","rawKey","isVar","letStart","letName","locationText","skip","AstPath","path","parentOf","childOf","ctor","Text$3","Expansion","switchValue","switchValueSourceSpan","visitExpansion","ExpansionCase","valueSourceSpan","expSourceSpan","visitExpansionCase","visitAttribute","Element$1","Comment","visitComment","visitAll$1","astResult","RecursiveVisitor$1","RecursiveVisitor","visitChildren","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","_ControlFlowError","_Tokenizer","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TEXT","isExpansionFormStart","_consumeExpansionFormStart","isExpansionCaseStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isNamedEntityEnd","isHex","numberStart","isDigitEntityEnd","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","COMMENT_START","textToken","COMMENT_END","CDATA_START","CDATA_END","DOC_TYPE","_consumePrefixAndName","nameStart","nameOrPrefixStart","isNameEnd","lowercaseTagName","savedPos","_consumeTagOpenStart","isNotWhitespace","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","TAG_CLOSE","TAG_OPEN_START","ATTR_NAME","prefixAndName","ATTR_VALUE","quoteChar","TAG_OPEN_END_VOID","TAG_OPEN_END","EXPANSION_FORM_START","_readUntil","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","_isTextEnd","nbTokens","isAsciiHexDigit","isInterpolationStart","TreeError","ParseTreeResult","rootNodes","Parser$1","getTagDefinition","parseExpansionForms","tokensAndErrors","tokenizeExpansionForms","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","lastOnStack","parent_1","_getParentElement","el","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","_pushElement","_popElement","parentEl","_getParentElementSkippingContainers","newParent","_insertBeforeContainer","endTagToken","stackIndex","splice","valueToken","parentElement","stack","HtmlParser","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","replaceNgsp","_SECURITY_SCHEMA","WhitespaceVisitor","hasPreserveWhitespacesAttr","attr","attribute","expansion","expansionCase","removeWhitespaces","htmlAstWithErrors","SECURITY_SCHEMA","registerContext","HTML","STYLE","URL","RESOURCE_URL","specs","specs_1","specs_1_1","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","DomElementSchemaRegistry","_schema","encodedType","strType","properties","superName","superType","hasProperty","propName","schemaMetas","schema","hasElement","getMappedPropName","NONE","getDefaultComponentElementName","validateProperty","validateAttribute","allKnownElementNames","normalizeAnimationStyleProperty","dashCaseToCamelCase","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","_isPixelDimensionStyle","valAndSuffixMatch","BindingParser","_exprParser","_schemaRegistry","pipesByName","_usedPipes","pipesByName_1","getUsedPipes","createBoundHostProperties","dirMeta","boundProps_1","parsePropertyBinding","createDirectiveHostPropertyAsts","elementSelector","boundProps","createBoundElementProperty","createDirectiveHostEventAsts","targetEvents_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","WARNING","isAnimationLabel","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","DEFAULT","isHostBinding","boundProp","skipValidation","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","calcPossibleSecurityContexts","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseRegularEvent","splitAtPeriod","_parseAction","errors_1","errors_1_1","collector","PipeCollector","pipeMeta","isAttr","report","registry","ctxs","elementNames","notElementNames","possibleElementNames","sort","StyleWithImports","isStyleUrlResolvable","schemeMatch","URL_WITH_SCHEMA_REGEXP","PreparsedElementType","CSS_IMPORT_REGEXP","CSS_STRIPPABLE_COMMENT_REGEXP","NG_CONTENT_SELECT_ATTR","LINK_ELEMENT","LINK_STYLE_REL_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_VALUE","STYLE_ELEMENT","SCRIPT_ELEMENT","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","lcAttrName","normalizeNgContentSelect","nodeName","OTHER","NG_CONTENT","SCRIPT","STYLESHEET","PreparsedElement","BIND_NAME_REGEXP","htmlAstToRender3Ast","htmlNodes","bindingParser","HtmlAstToIvyAst","ivyNodes","allErrors","TagType","preparsedElement","isTemplateElement","parsedProperties","boundEvents","i18nAttrsMeta","templateParsedProperties","templateVariables","elementHasInlineTemplate","hasBinding","normalizedName","normalizeAttributeName","isTemplateBinding","reportError","templateValue","templateKey","parsedVariables","parseAttribute","parsedElement","NON_BINDABLE_VISITOR","isEmptyTextNode","extractAttributes","bound","_visitTextWithInterpolation","i18nPropsMeta","bep","matchableAttributes","srcSpan","bindParts","parseVariable","parseReference","events","addEvents","parseAssignmentEvent","valueNoNgsp","NonBindableVisitor","I18nContext","templateIndex","_unresolvedCtxCount","_registry","setupRegistry","getUniqueId","getSeqNumberGenerator","startsAt","icus","appendTag","closed","getSerializedPlaceholders","serializePlaceholderValue","appendBinding","appendIcu","appendBoundText","appendTemplate","TEMPLATE","appendElement","ELEMENT","forkChildContext","reconcileChildContext","findTemplateFn","phs","tmplIdx","findIndex","items","isCloseTag","endsWith","tmpl","wrap","symbol","wrapTag","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","getUniquePlaceholder","_expParser","createI18nMessageFactory","_I18nVisitor","visitNodeFn","toI18nMessage","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","_visitNodeFn","i18nodes","_visitNode","html","startPhName","closePhName","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","_CUSTOM_PH_EXP","lastStringIdx","setI18nRefs","I18nMetaVisitor","keepI18nAttrs","_createI18nMessage","_generateI18nMessage","parsed","parseI18nMeta","idIndex","descIndex","meaningAndDesc","hasI18nAttrs","attrsMeta","attrs_1","attrs_1_1","formatPh","serializerVisitor$1","SerializerVisitor","GLOBAL_TARGET_RESOLVERS","renderFlagCheckIfStmt","prepareEventListenerParameters","eventAst","bindingContext","handlerName","scope","bindingExpr","restoreViewStatement","variableDeclarations","prepareSyntheticListenerName","fnName","handlerFn","TemplateDefinitionBuilder","parentBindingScope","contextName","i18nContext","templateName","directiveMatcher","pipeTypeByName","_namespace","relativeContextFilePath","i18nUseExternalIds","_dataIndex","_bindingContext","_prefixCode","_creationCodeFns","_updateCodeFns","_tempVariables","_nestedTemplateFns","_unsupported","_pureFunctionSlots","_bindingSlots","_hasNgContent","_ngContentSelectors","_ngContentSelectorsOffset","_bindingScope","nestedScope","fileBasedI18nSuffix","_valueConverter","ValueConverter","allocateDataSlot","numSlots","allocatePureFunctionSlots","slot","pipeType","creationInstruction","registerContextVariables","scopedName","freshReferenceName","retrievalLevel","relativeLevel","bindingLevel","getSharedContextName","generateNextContextExpr","buildTemplateFunction","ngContentSelectorsOffset","initI18nContext","isSingleElementTemplate","selfClosingI18nInstruction","hasTextChildrenOnly","updatePipeSlotOffsets","buildTemplateFn","r3Selectors","unParsed","creationStatements","fn$$1","updateStatements","creationVariables","viewSnapshotStatements","updateVariables","creationBlock","updateBlock","i18nTranslate","transformFn","_ref","i18nAllocateRef","_params","getTranslationDeclStmts","docStatements","i18nMetaToDocStmt","getSerializedI18nContent","i18nAppendBindings","implicit","convertExpressionBinding","i18nBindProps","label","assembleI18nBoundString","acc","lastIdx","messageId","i18nUpdateRef","isRoot","isResolved","icuMapping_1","params_1","refs","placeholder","instruction","ref_1","updateInstruction","ngContent","selectorIndex","attributeAsList","getNamespaceInstruction","namespaceKey","addNamespaceInstruction","nsInstruction","elementIndex","stylingBuilder","isNonBindableMode","isI18nRootElement","i18nAttrs","outputAttrs","isNgContainer$$1","matchDirectives","allOtherInputs","getAttributeNameLiterals","prepareSelectOnlyAttrs","toAttrsParam","prepareRefsParameter","wasInNamespace","currentNamespace","createSelfClosingInstruction","createSelfClosingI18nInstruction","hasBindings_1","i18nAttrArgs_1","converted","processStylingInstruction","outputAst","prepareListenerParameter","emptyValueBindInstruction","mapBindingToInstruction","value_1","hasValue_1","bindingName_1","value_2","params_2","attrNamespace","attrName_1","sanitizationRef","resolveSanitizationFn","namespaceLiteral","attrsExprs","templateVisitor","templateFunctionExpr","getConstCount","getVarCount","value_3","nodeIndex","initWasInvoked","getNgContentSelectors","instructionFn","fns","paramsOrFn","prepend","createMode","paramsFn","originalSlots","valExpr","skipBindFn","interpolationFn","convertedPropertyBinding","createCssSelector","staticType","alreadySeen","attrExprs","addAttrExpr","attrsStartIndex","refsParam","variableName","nextContextStmt","refExpr","bindingFnName","allocateSlot","_pipeBindExprs","slotPseudoLocal","pureFunctionSlot","pipeBindingCallInfo","pipeBindingIdentifiers","isVarLength","pipeBindExpr","bindingSlots","array","pureFunctionIdentifiers","relativeLevelDiff","allocateSlots","startSlot","pureFunctionCallInfo","attributeNamespace","nameLiteral","BindingScope","referenceNameIndex","restoreViewVariable","_ROOT_SCOPE","declareLocalCallback","declare","priority","localRef","maybeGenerateSharedContextVar","maybeRestoreView","getComponentProperty","newScope","generateSharedContextVar","sharedCtxObj","componentValue","SHARED_CONTEXT_KEY","localRefLookup","isListenerScope","getCurrentViewInstruction","currentContextLevel","levelDiff","currStmts","parseTemplate","options","makeBindingParser","parseResult","isTextNode","ATTR_REGEX","getStylingPrefix","baseDirectiveFields","definitionMap","createDirectiveSelector","createContentQueriesFunction","queryDefinition","createQueryDefinition","typeName","createContentQueriesRefreshFunction","statements_1","directiveInstanceVar_1","temporary_1","loadQLArg","getQueryList","assignToTemporary","callQueryRefresh","updateDirective","refreshQueryAndUpdateDirective","hostVarsCount","elVarExp","contextVarExp","styleBuilder","allOtherAttributes","attrNames","createHostBindingsFunction","staticAttributesAndValues","e_3","createStatements","totalHostVarsCount","hostBindingSourceSpan","directiveSummary","metadataAsSummary","listeners","eventBindings","createHostListeners","bindingName","bindingFn","originalVarsCount","bindings_1","bindings_1_1","stylePrefix","parseNamedProperty","getBindingNameAndInstruction","sanitizerFn","instructionParams","e_3_1","hostAttrs","convertAttributesToExpressions","hostInstruction","createStylingStmt","elementStylingInstruction","hostBindingsFnName","addFeatures","features","usesInheritance","lifecycle","usesOnChanges","compileDirectiveFromMetadata","createTypeForDef","compileComponentFromMetadata","firstSelector","selectorAttributes","expression_1","createViewQueriesFunction","tempAllocator","refresh","viewQueryFnName","templateTypeName","directivesUsed","pipesUsed","templateBuilder","ROOT_SCOPE","templateFunctionExpression","directivesExpr","wrapDirectivesAndPipesInClosure","pipesExpr","shadowCss","directiveMetadataFromGlobalMetadata","directive","summary","queriesFromGlobalMetadata","lifecycleHooks","read","selectorsFromGlobalMetadata","selectorStrings","getQueryPredicate","predicate_1","stringMapAsType","stringArrayAsType","typeBase","selectorForType","stringAsType","q","attrMatches","HOST_REG_EXP$1","parseHostBindings","unitIndex","CompilerFacadeImpl","elementSchemaRegistry","compilePipe","angularCoreEnv","sourceMapUrl","facade","convertR3DependencyMetadataArray","computeProvidedIn","wrapExpression","USE_CLASS","USE_FACTORY","USE_VALUE","USE_EXISTING","wrapReference","emitInline","compileDirective","convertDirectiveFacadeToMetadata","err","convertToR3QueryMetadata","wrapped","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","_loop_1","field","ann","isInput","isOutput","extractHostBindings","_loop_2","isHostListener","convertR3DependencyMetadata","facades","piece","publishFacade","ɵcompilerFacade","ProviderAstType","VERSION$1","TextAst","ngContentIndex","BoundTextAst","AttrAst","visitAttr","BoundPropertyMapping","BoundElementPropertyAst","fromBoundProperty","visitElementProperty","BoundEventAst","calcFullName","visitEvent","ReferenceAst","originalValue","VariableAst","fromParsedVariable","ElementAst","hasViewContainer","queryMatches","EmbeddedTemplateAst","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostEvents","contentQueryStartId","visitDirective","ProviderAst","multiProvider","eager","providerType","isModule","NgContentAst","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","templateVisitAll","CompilerConfig","defaultEncapsulation","useJit","jitDevMode","missingTranslation","strictInjectionParameters","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","DirectiveNormalizer","_resourceLoader","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","resolve","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","extractStyleUrls","resolver","baseUrl","foundUrls","modifiedCssText","ngNonBindableStackCount","textContent_1","QUERY_METADATA_IDENTIFIERS","DirectiveResolver","_reflector","isDirective","typeMetadata","isDirectiveMetadata","throwIfNotFound","findLast","propertyMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","publicNames","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","moduleId","_VisitorMode","I18nError","_I18N_COMMENT_PREFIX_REGEXP","MEANING_SEPARATOR","ID_SEPARATOR","i18nCommentsWarned","ExtractionResult","_Visitor$2","_implicitTags","_implicitAttrs","extract","_init","Extract","_inI18nBlock","_messages","merge","translations","Merge","_translations","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","_isOpeningComment","isClosing","_isClosingComment","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","console","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","_getI18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","explicitAttrNameToValue","implicitAttrNames","msgMeta","_parseMessageMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","_TAG_DEFINITION","XmlTagDefinition","getXmlTagDefinition","XmlParser","Xliff","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","source-language","xliff","xmlns","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","getCtypeForTag","equiv-text","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerText","localeAttr","xmlIcu","nameAttr","caseMap","Xliff2","_WriteVisitor$1","units","notes","category","srcLang","Xliff2Parser","XmlToI18n$1","getTypeForTag","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","endId","Xtb","XtbParser","XmlToI18n$2","createLazyProperty","valueFn","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","Warning","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","I18NHtmlParser","translationsFormat","createSerializer","format","_translationBundle","mergeTranslations","implicitTags","implicitAttrs","convertValueToOutputAst","_ValueOutputAstTransformer","quotedSet","mapEntry$1","InjectableCompiler","alwaysGenerateDef","tokenInjector","depsArray","tokenExpr","factoryFor","retValue","depArgs","injectableDef","compile","Static","STRIP_SRC_FILE_SUFFIXES","GENERATED_FILE","JIT_SUMMARY_FILE","JIT_SUMMARY_NAME","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","lastDot","srcFileSuffix","summaryFileName","fileName","summaryForJitFileName","summaryForJitName","symbolName","LOWERED_SYMBOL","isLoweredSymbol","CompileMetadataResolver","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","_shallowModuleCache","getReflector","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","annotation","componentStillLoadingError","error$$1","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","stringifyType","flattenAndDedupeArray","_getEntryComponentMetadata","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isPipe","isNgModule","getNgModuleSummary","alreadyCollecting","moduleSummary","getNgModuleMetadata","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","getShallowModuleMetadata","compileMeta","ngModuleMeta","rawExports","rawImports","rawProviders","exportedNonModuleIdentifiers","importedType","importedModuleType","isValidType","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","prevModules","moduleRef","isInjectable","getInjectableSummary","Injectable","getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","getAllLifecycleHooks","hook","getHookName","_getFactoryMetadata","getPipeMetadata","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","providerMeta","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","extractIdentifiers","targetIdentifiers","_CompileValueConverter","_getInjectableTypeMetadata","compileDeps","compileTypeMetadata","compileFactoryMetadata","_getQueryMetadata","_queryVarBindings","otherType","tree","dedupeArray","flattenArray","ProviderError","ProviderViewContext","_getViewQueries","viewQueryId","_addQueryToTokenMap","queryId","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","isTemplate","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","attrAst","directivesMeta","directiveAst","_allProviders","_resolveProvidersFromDirectives","targetErrors","providersByToken","_resolveProviders","Component","PublicService","PrivateService","_contentQueries","_getContentQueries","contentQueryId","contentQueries","directiveIndex","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","resolvedProvider","Builtin","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_transformProvider","_transformProviderAst","_getLocalDependency","attrValue","isValue","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","targetProvidersByToken","providerAst","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","allDepDefs","allParams","providerIndex","depExprs","convertDeps","providerExpr","depsExpr","depIndex","paramName","depDef","singleProviderDef","tokenMeta","nodeFlag","componentFactoryResolverProviderDef","entryComponentFactories","entryComponent","classMeta","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","NgModuleCompiler","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","NgModuleResolver","debugOutputAstAsTypeScript","_TsEmitterVisitor","TypeScriptEmitter","emitStatementsAndContext","preamble","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","emitStatements","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","Private","typeStr","PipeResolver","metas","PLURAL_CASES","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_TEXT_CSS_SELECTOR","expanded","ExpansionError","_expandPluralForm","expansionResult","switchAttr","_expandDefaultForm","BIND_NAME_REGEXP$1","CLASS_ATTR","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","TemplateParser","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","removeSummaryDuplicates","uniqPipes","providerViewContext","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","transform","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","_targetErrors","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","queryStartIndex","elName","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","_parseAttr","_normalizeAttributeName","hasTemplateBinding","parsedVariables_1","elementCssSelector","createElementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","providerContext","NON_BINDABLE_VISITOR$1","ElementContext","projectionSelector","_isEmptyTextNode","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","parsedEvents","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","targetBoundDirectiveProps","boundPropsByName_1","prevValue","dirProp","isEmptyExpression","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","allDirectiveEvents","NonBindableVisitor$1","attrNameAndValues","splitExportAs","splitClasses","classAttrValue","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","elNameNoNs","attrNameNoNs","TypeCheckCompiler","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","defaultResolver","TypeCheckLocalResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","useIf","astNodes","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","General","guardExpression","guardClause","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","inputAst","dirAst","hostEventAst","currBuilder","outputVarType","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","ViewCompiler","staticQueryIds","findStaticQueryIds","dynamicQueryIds","childData","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","viewName","LOG_VAR$1","VIEW_VAR","CHECK_VAR","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","staticViewQueryIds","nodeStaticQueryIds","queryIndex","calcStaticDynamicQueryFlags","nodeFlags","nodeDef","needsAdditionalRootNode","lastAstNode","_createNodeExpressions","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateRendererStmts","updateDirectivesFn","viewFlags","OnPush","updateStmts","updateFn","preStmts","inter","updateRendererExpressions","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","elementBindingDef","inputType","compAst","compRendererType","compView","fixedAttrsDef","elementAst","mapResult","mergeAttributeValue","attrValue1","attrValue2","elementEventNameAndTarget","elementEventFullName","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","queryIds","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","callCheckStmt","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","callUnwrapValue","nodeValueExpr_1","diDep","updateBindingCount","createUpdateStatements","allowEmptyExprs","handlers","handleEventFn","handleEventStmts","handleEventBindingCount","trueStmts","fullEventName","bindingIdx","isFirst","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","extractMessages","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","genFileUrl","sourceOrStmts","listLazyRoutes","allLazyRoutes","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","loadChildren_1_1","parseLazyRoute","routes","routes_1","routes_1_1","route","referencedModule","TS","ResolvedStaticSymbol","StaticSymbolResolver","staticSymbolCache","summaryResolver","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","resolveSymbol","staticSymbol","_resolveSymbolMembers","_resolveSymbolFromSummary","_createSymbolsOf","getImportAs","useSummaries","baseSymbol","getStaticSymbol","baseImportAs","summarizedFileName","stripSummaryForJitFileSuffix","summarizedName","stripSummaryForJitNameSuffix","getResourcePath","getTypeArity","isGeneratedFile","resolvedSymbol","unwrapResolvedMetadata","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols","symbols_1","symbols_1_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","__symbolic","statics","hasDecorators","getModuleMetadata","metadataKey","decorators","getSymbolsOf","summarySymbols","metadataSymbols","moduleExport","export","exportSymbol","symName","unescapeIdentifier","resolvedModule","resolveModule","createExport","this_1","topLevelSymbolNames_1","origins_1","symbolMeta","origin","originFilePath","getOutputName","createResolvedSymbol","topLevelPath","topLevelSymbolNames","_originalFileMemo","isTsFile","isLibraryFile","getOriginalName","transformedMeta","ReferenceTransformer","functionParams","symbolic","oldLen","getMetadataFor","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","createSummaryForJitFunction","ToJsonSerializer","symbolResolver","srcFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSymbolSummariesBySymbol","addSummary","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","isCall","isFunctionCall","isMethodCallOnVariable","declarationSymbol","ngModuleSummary","summary_1","json","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","ForJitSerializer","addSourceType","isLibrary","addLibType","exportAsArr","exportAsBySymbol","exportAsArr_1","exportAsArr_1_1","ngModuleSymbols","_g","_h","_j","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","FromJsonDeserializer","symbolCache","deserialize","libraryFileName","allImportAs","serializedSymbol","fromSummaryFileName","AotCompiler","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_injectableCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","_analyzedFilesForInjectables","analyzeModulesSync","rootFiles","analyzeResult","analyzeAndValidateNgModules","ngModules","analyzeModulesAsync","_analyzeFile","analyzedFile","analyzeFile","_analyzeFileForInjectables","analyzeFileForInjectables","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","injectables","exportsNonSourceFiles","enableSummariesForJit","fileSuffix","dirSymbol","normalizedUrl","resourceNameToFileName","needsShim","_stylesModuleUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_createEmptyStub","createForJitStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","fileNames","tsFiles","files","loadingPromises","analyzedInjectables","tsFile","analyzedModules","mergeAndValidateNgFiles","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","references_1_1","_parseTemplate","emitMessageBundle","htmlParser","messageBundle","compMetas","emitAllPartialModules","r3Files","ngModuleByPipeOrDirective","contextMap","_compilePartialModule","_compileShallowModules","shallowModules","compileNgModuleFromRender2","injectableCompiler","injectorDefArg","injectorDef","schemaRegistry","hostBindingParser","expressionParser","directiveMetadata","render3Ast","directiveTypeBySel_1","pipeTypeByName_1","compileComponentFromRender2","directiveTypeBySel","definitionField","typeMapToExpressionMap","compileDirectiveFromRender2","pipeMetadata","compilePipeFromRender2","emitAllPartialModules2","_emitPartialModule2","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","serializeSummaries","forJitCtx","toJsonSerializer","forJitSerializer_1","normalizedLocale","i18nFormat","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","parsedTemplate","stylesExpr","viewResult","_resolveStyleStatements","importModule","_fileNameToModuleName","suppliedTypeParams","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","e_4","lazyRoutes","lazyRoutes_2","lazyRoutes_2_1","lazyRoute","e_4_1","lazyRoutes_1","lazyRoutes_1_1","compileResult","stylesheetUrl","analyzeNgModules","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","seenFiles","visitFile","isSourceFile","modMeta","validateAnalyzedModules","symbolsMissingModule","isNgSymbol","isValueExportingNonSourceFile","Visitor","analyzedFiles","allNgModules","allPipesAndDirectives","af","FORMATTED_MESSAGE","formattedError","chain","formatChain","indentStr","half","floor","ANGULAR_CORE","HIDDEN_KEY","IGNORE","REFERENCE_SET","shouldIgnore","StaticReflector","knownMetadataClasses","knownMetadataFunctions","annotationCache","shallowAnnotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","declarationSymbol_1","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","originalRecorder","_annotations","simplify","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","requiredAnnotationTypes","requiredType","formatMetadataError","metadataError","parentPropMetadata_1","parentProp","members_1","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMembers_1","staticMembers_1_1","injectionToken","opaqueToken","lazy","BindingScope$1","calling","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyNested","nestedContext","isMetadataError","summaryMsg","errorSummary","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","advise","isPrimitive","result_2","spreadArray","spreadArray_1","spreadArray_1_1","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","simplifyCall","functionSymbol","targetFunction","targetExpression","defaults","functionScope","result_1","oldScope","mapStringMap","simplifyLazily","reportingContext","METADATA_ERROR","LAMBDA_NOT_SUPPORTED","PopulatedScope","formatMetadataMessageChain","expandedMessage","messageAdvise","AotSummaryResolver","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","deserializeSummaries","createAotUrlResolver","basePath","SummaryResolver","JitSummaryResolver","_summaries","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","_ExecutionContext","instance","ReturnValue","StatementInterpreter","debugAst","initialValue","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","createDynamicClass","_classStmt","_ctx","propertyDescriptors","instanceCtx","paramNames","writable","ctorParamNames","superClass","_declareFn","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","createOutputContext","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","assertComponent","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","interpretStatements","exportName","_viewClass","viewClass","_ComponentIndex","CompileReflector","UrlResolver","UrlResolverImpl","_packagePrefix","resolvedUrl","_resolveUrl","_split","encodeURI","baseParts","Scheme","_joinAndCanonicalizePath","Port","Path","resolvedParts","_splitRe","uri","_removeDotSegments","leadingSlash","trailingSlash","up","pos","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","UserInfo","Domain","QueryData","Fragment","ResourceLoader","Extractor","urlResolver","staticReflector","normalizer","loadResource","extractor","R3TargetBinder","Scope","DirectiveBinder","TemplateBinder","R3BoundTarget","nestingLevel","parentScope","namedEntities","childScopes","ingest","maybeDeclare","thing","lookup","getChildScope","dirTarget","visitBoundAttributeOrEvent","visitNode","childScope","maybeMap","exprTargets","getDirectivesOfNode","getReferenceTarget","getConsumerOfBinding","getExpressionTarget","getTemplateOfSymbol","getNestingLevel","getUsedDirectives","dirs","createLoweredSymbol","collectExternalReferences","getParseErrors","isSyntaxError","TmplAstBoundAttribute","TmplAstBoundEvent","TmplAstBoundText","TmplAstContent","TmplAstElement","TmplAstReference","TmplAstTemplate","TmplAstText","TmplAstTextAttribute","TmplAstVariable","compileBaseDefFromMetadata","inputs_1","vx","outputs_1","VERSION","createAotCompiler","compilerHost","errorCollector","enableIvy","tmplParser","viewCompiler","typeCheckCompiler","toTypeScript","isFormattedError","createUrlResolverWithoutPackagePrefix","createOfflineCompileUrlResolver","getUrlScheme","visitAstChildren","ERROR_COMPONENT_TYPE","findNode","class_1"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,SACrD,mBAAXE,QAAyBA,OAAOC,IAAMD,OAAO,qBAAsB,WAAYH,GAC5DA,IAAzBD,EAASA,GAAUM,MAAsBC,GAAKP,EAAOO,OAAUP,EAAOO,GAAGC,cAH9E,CAIEC,KAAM,SAAUP,GAAW,aAkBzB,IAAIQ,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAoDWI,EApDPC,EAAW,WAQX,OAPAA,EAAWZ,OAAOa,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOS,UAAUJ,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMzB,KAAMsB,YAGhC,SAASI,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWV,EAAI,EAChE,OAAIQ,EAAUA,EAAEJ,KAAKG,IAEjBI,KAAM,WAEF,OADIJ,GAAKP,GAAKO,EAAEJ,SAAQI,OAAI,IACnBK,MAAOL,GAAKA,EAAEP,KAAMa,MAAON,KAKhD,SAASO,EAAOP,EAAGN,GACf,IAAIO,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBQ,EAAYC,EAA3BhB,EAAIQ,EAAEJ,KAAKG,GAAOU,KACtB,IACI,WAAc,IAANhB,GAAgBA,KAAM,MAAQc,EAAIf,EAAEW,QAAQE,MAAMI,EAAGC,KAAKH,EAAEH,OAExE,MAAOO,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQJ,IAAMA,EAAEF,OAASL,EAAIR,EAAU,SAAIQ,EAAEJ,KAAKJ,GAElD,QAAU,GAAIgB,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASjB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiB,EAAKA,EAAGI,OAAOP,EAAOZ,UAAUF,KACpC,OAAOiB;;;;;;;OAeX,SAASK,EAAYC,GACjB,GAAsB,KAAlBA,EAAY,GACZ,OAAQ,KAAMA,GAElB,IAAIC,EAAaD,EAAYE,QAAQ,IAAK,GAC1C,IAAmB,GAAfD,EACA,MAAM,IAAIE,MAAM,uBAA0BH,EAAc,iCAE5D,OAAQA,EAAYI,MAAM,EAAGH,GAAaD,EAAYI,MAAMH,EAAa,IAG7E,SAASI,EAAcC,GACnB,MAAmC,iBAA5BP,EAAYO,GAAS,GAGhC,SAASC,EAAYD,GACjB,MAAmC,eAA5BP,EAAYO,GAAS,GAGhC,SAASE,EAAaF,GAClB,MAAmC,gBAA5BP,EAAYO,GAAS,GAEhC,SAASG,EAAYC,GACjB,OAAoB,OAAbA,EAAoB,KAAOX,EAAYW,GAAU,GAE5D,SAASC,EAAeC,EAAQC,GAC5B,OAAOD,EAAS,IAAMA,EAAS,IAAMC,EAAYA;;;;;;;;AA/B1CzC,EAIRtB,EAAQsB,iBAAmBtB,EAAQsB,oBAHnBA,EAAyB,SAAI,GAAK,WACjDA,EAAeA,EAAmC,mBAAI,GAAK,qBAC3DA,EAAeA,EAA8B,cAAI,GAAK,gBAmC1D,IAAI0C,GACAC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,QAAW,IACXC,MAAS,IACTC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,IAAO,IACPC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,KAAQ,IACRC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,IAAO,IACPC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,QAAW,IACXC,QAAW,IACXC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,GAAM,IACNC,GAAM,IACNC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,GAAM,IACNC,OAAU,IACVC,OAAU,IACVC,IAAO,IACPC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,GAAM,IACNC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,MAAS,IACTC,GAAM,IACNC,GAAM,IACNC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,GAAM,IACNC,GAAM,IACNC,IAAO,IACPC,MAAS,IACTC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,GAAM,IACNC,GAAM,IACNC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,QAAW,IACXC,QAAW,IACXC,MAAS,IACTC,GAAM,IACNC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,KAAQ,IACRC,IAAO,IACPC,IAAO,IACPC,GAAM,IACNC,GAAM,IACNC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,MAAS,IACTC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,KAAQ,IACRC,IAAO,IACPC,OAAU,IACVC,IAAO,IACPC,IAAO,IACPC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,IAAO,IACPC,OAAU,IACVC,IAAO,IACPC,KAAQ,IACRC,IAAO,IACPC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,IAAO,IACPC,IAAO,IACPC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,SAAY,IACZC,OAAU,IACVC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,KAAQ,IACRC,KAAQ,IACRC,MAAS,IACTC,MAAS,IACTC,OAAU,IACVC,OAAU,IACVC,IAAO,IACPC,MAAS,IACTC,QAAW,IACXC,QAAW,IACXC,KAAQ,IACRC,KAAQ,IACRC,OAAU,IACVC,GAAM,IACNC,GAAM,IACNC,OAAU,IACVC,OAAU,IACVC,IAAO,IACPC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,KAAQ,IACRC,IAAO,IACPC,KAAQ,KAIRC,EAAe,IACnB7P,EAAqB,KAAI6P;;;;;;;;AASzB,IAsCIC,EAGAC,EAzCAC,EAAmC,WACnC,SAASA,EAAkBC,GACvB,IAAIC,OAAY,IAAPD,KAAqBA,EAAIE,EAAmBD,EAAGC,iBAAkBC,EAAkBF,EAAGE,gBAAiBC,EAA0BH,EAAGG,wBAAyBC,EAAKJ,EAAGK,YAAaA,OAAqB,IAAPD,EAAgBtU,EAAQsB,eAAekT,cAAgBF,EAAIG,EAAKP,EAAGQ,eAAgBA,OAAwB,IAAPD,GAAwBA,EAAIE,EAAKT,EAAGU,OAAQA,OAAgB,IAAPD,GAAwBA,EAAIE,EAAKX,EAAGY,cAAeA,OAAuB,IAAPD,GAAwBA,EACzbE,EAAQxU,KACZA,KAAK4T,oBACL5T,KAAKmU,gBAAiB,EACtBnU,KAAKyU,cAAe,EAChBb,GAAoBA,EAAiBrS,OAAS,GAC9CqS,EAAiBc,QAAQ,SAAUzR,GAAW,OAAOuR,EAAMZ,iBAAiB3Q,IAAW,IAE3FjD,KAAKqU,OAASA,EACdrU,KAAKmU,eAAiBA,GAAkBE,EACpCR,GAAmBA,EAAgBtS,OAAS,IAC5CvB,KAAK6T,mBAEL7T,KAAK2U,YAAcd,EAAgB,GACnCA,EAAgBa,QAAQ,SAAUzR,GAAW,OAAOuR,EAAMX,gBAAgB5Q,IAAW,KAEzFjD,KAAK8T,wBAA0BA,GAA2B,KAC1D9T,KAAKgU,YAAcA,EACnBhU,KAAKuU,cAAgBA,EAgBzB,OAdAd,EAAkB5S,UAAU+T,mBAAqB,SAAUC,GACvD,IAAK7U,KAAK6T,gBACN,OAAO,EAEX,IAAKgB,EACD,OAAO,EAEX,IAAIC,EAAWD,EAAcE,cAE7B,QADoC,aAAbD,GAA6C,gBAAlBD,IACY,GAAlC7U,KAAK6T,gBAAgBiB,IAErDrB,EAAkB5S,UAAUmU,gBAAkB,SAAUC,GACpD,OAAOjV,KAAKqU,QAAUY,EAAKF,gBAAiB/U,KAAK4T,kBAE9CH,EApC2B,GA0CtC,SAASyB,EAAqBjS,GAwD1B,OAvDKuQ,IACDD,EAA0B,IAAIE,EAC9BD,GACI2B,KAAQ,IAAI1B,GAAoBY,QAAQ,IACxCe,KAAQ,IAAI3B,GAAoBY,QAAQ,IACxCgB,KAAQ,IAAI5B,GAAoBY,QAAQ,IACxCiB,MAAS,IAAI7B,GAAoBY,QAAQ,IACzCkB,KAAQ,IAAI9B,GAAoBY,QAAQ,IACxCmB,IAAO,IAAI/B,GAAoBY,QAAQ,IACvCoB,MAAS,IAAIhC,GAAoBY,QAAQ,IACzCqB,MAAS,IAAIjC,GAAoBY,QAAQ,IACzCsB,GAAM,IAAIlC,GAAoBY,QAAQ,IACtCuB,GAAM,IAAInC,GAAoBY,QAAQ,IACtCwB,OAAU,IAAIpC,GAAoBY,QAAQ,IAC1CyB,MAAS,IAAIrC,GAAoBY,QAAQ,IACzC0B,IAAO,IAAItC,GAAoBY,QAAQ,IACvC7T,EAAK,IAAIiT,GACLG,kBACI,UAAW,UAAW,QAAS,aAAc,MAAO,KAAM,WAC1D,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,KAC1C,KAAM,SAAU,SAAU,KAAM,OAAQ,MAAO,KAC/C,IAAK,MAAO,UAAW,QAAS,MAEpCO,gBAAgB,IAEpB6B,MAAS,IAAIvC,GAAoBG,kBAAmB,QAAS,WAC7DqC,MAAS,IAAIxC,GAAoBG,kBAAmB,QAAS,SAAUO,gBAAgB,IACvF+B,MAAS,IAAIzC,GAAoBG,kBAAmB,SAAUO,gBAAgB,IAC9EgC,GAAM,IAAI1C,GACNG,kBAAmB,MACnBC,iBAAkB,QAAS,QAAS,SACpCM,gBAAgB,IAEpBiC,GAAM,IAAI3C,GAAoBG,kBAAmB,KAAM,MAAOO,gBAAgB,IAC9EkC,GAAM,IAAI5C,GAAoBG,kBAAmB,KAAM,MAAOO,gBAAgB,IAC9EmC,IAAO,IAAI7C,GAAoBI,iBAAkB,YAAaQ,QAAQ,IACtEkC,IAAO,IAAI9C,GAAoBK,wBAAyB,QACxD0C,KAAQ,IAAI/C,GAAoBK,wBAAyB,SACzD2C,GAAM,IAAIhD,GAAoBG,kBAAmB,MAAOO,gBAAgB,IACxEuC,GAAM,IAAIjD,GAAoBG,kBAAmB,KAAM,QACvD+C,GAAM,IAAIlD,GAAoBG,kBAAmB,KAAM,MAAOO,gBAAgB,IAC9EyC,GAAM,IAAInD,GAAoBG,kBAAmB,KAAM,KAAM,MAAO,MAAOO,gBAAgB,IAC3F0C,GAAM,IAAIpD,GAAoBG,kBAAmB,KAAM,KAAM,MAAO,MAAOO,gBAAgB,IAC3F2C,IAAO,IAAIrD,GAAoBG,kBAAmB,KAAM,MAAO,MAAOO,gBAAgB,IACtF4C,GAAM,IAAItD,GAAoBG,kBAAmB,KAAM,KAAM,MAAO,MAAOO,gBAAgB,IAC3F6C,SAAY,IAAIvD,GAAoBG,kBAAmB,YAAaO,gBAAgB,IACpF8C,OAAU,IAAIxD,GAAoBG,kBAAmB,SAAU,YAAaO,gBAAgB,IAC5F+C,IAAO,IAAIzD,GAAoBc,eAAe,IAC9C4C,QAAW,IAAI1D,GAAoBc,eAAe,IAClD6C,MAAS,IAAI3D,GAAoBO,YAAavU,EAAQsB,eAAesW,WACrEC,OAAU,IAAI7D,GAAoBO,YAAavU,EAAQsB,eAAesW,WACtEE,MAAS,IAAI9D,GAAoBO,YAAavU,EAAQsB,eAAeyW,qBACrEC,SAAY,IAAIhE,GAAoBO,YAAavU,EAAQsB,eAAeyW,mBAAoBjD,eAAe,MAG5Gf,EAAgBvQ,EAAQ8R,gBAAkBxB;;;;;;;OAUrD,IA6XImE,EAOAC,EApYAC,EAAmB,IAAIC,OAAO,8GASlC,KAMIC,EAA6B,WAC7B,SAASA,IACL9X,KAAK+X,QAAU,KACf/X,KAAKgY,cAYLhY,KAAKiY,SACLjY,KAAKkY,gBAkGT,OAhGAJ,EAAYK,MAAQ,SAAUC,GAC1B,IASIC,EATAC,KACAC,EAAa,SAAUC,EAAKC,GACxBA,EAAOP,aAAa3W,OAAS,IAAMkX,EAAOV,SAAuC,GAA5BU,EAAOT,WAAWzW,QAChD,GAAvBkX,EAAOR,MAAM1W,SACbkX,EAAOV,QAAU,KAErBS,EAAIlW,KAAKmW,IAETC,EAAc,IAAIZ,EAElBa,EAAUD,EACVE,GAAQ,EAEZ,IADAhB,EAAiBiB,UAAY,EACtBR,EAAQT,EAAiBkB,KAAKV,IAAW,CAC5C,GAAIC,EAAM,GAAI,CACV,GAAIO,EACA,MAAM,IAAI9V,MAAM,6CAEpB8V,GAAQ,EACRD,EAAU,IAAIb,EACdY,EAAYR,aAAa5V,KAAKqW,GAelC,GAbIN,EAAM,IACNM,EAAQI,WAAWV,EAAM,IAEzBA,EAAM,IACNM,EAAQK,aAAaX,EAAM,IAE3BA,EAAM,IACNM,EAAQM,aAAaZ,EAAM,GAAIA,EAAM,IAErCA,EAAM,KACNO,GAAQ,EACRD,EAAUD,GAEVL,EAAM,GAAI,CACV,GAAIO,EACA,MAAM,IAAI9V,MAAM,gDAEpByV,EAAWD,EAASI,GACpBA,EAAcC,EAAU,IAAIb,GAIpC,OADAS,EAAWD,EAASI,GACbJ,GAEXR,EAAYjX,UAAUqY,kBAAoB,WACtC,OAAOlZ,KAAKmZ,sBAAkD,GAA1BnZ,KAAKgY,WAAWzW,QAAoC,GAArBvB,KAAKiY,MAAM1W,QAC7C,IAA7BvB,KAAKkY,aAAa3W,QAE1BuW,EAAYjX,UAAUsY,mBAAqB,WAAc,QAASnZ,KAAK+X,SACvED,EAAYjX,UAAUkY,WAAa,SAAUhB,QACzB,IAAZA,IAAsBA,EAAU,MACpC/X,KAAK+X,QAAUA,GAGnBD,EAAYjX,UAAUuY,2BAA6B,WAI/C,IAHA,IAAInW,EAAUjD,KAAK+X,SAAW,MAC1BsB,EAAYrZ,KAAKgY,WAAWzW,OAAS,EAAI,WAAcvB,KAAKgY,WAAWsB,KAAK,KAAO,IAAO,GAC1FrB,EAAQ,GACH7W,EAAI,EAAGA,EAAIpB,KAAKiY,MAAM1W,OAAQH,GAAK,EAGxC6W,GAAS,IAFMjY,KAAKiY,MAAM7W,IACY,KAAtBpB,KAAKiY,MAAM7W,EAAI,GAAY,KAAQpB,KAAKiY,MAAM7W,EAAI,GAAK,IAAO,IAGlF,OAAO8T,EAAqBjS,GAASoR,OAAS,IAAMpR,EAAUoW,EAAYpB,EAAQ,KAC9E,IAAMhV,EAAUoW,EAAYpB,EAAQ,MAAQhV,EAAU,KAE9D6U,EAAYjX,UAAU0Y,SAAW,WAC7B,IAAIC,KAIJ,OAHIxZ,KAAKgY,WAAWzW,OAAS,GACzBiY,EAAOlX,KAAK,QAAStC,KAAKgY,WAAWsB,KAAK,MAEvCE,EAAO/W,OAAOzC,KAAKiY,QAE9BH,EAAYjX,UAAUoY,aAAe,SAAUhE,EAAMjT,QACnC,IAAVA,IAAoBA,EAAQ,IAChChC,KAAKiY,MAAM3V,KAAK2S,EAAMjT,GAASA,EAAM+S,eAAiB,KAE1D+C,EAAYjX,UAAUmY,aAAe,SAAU/D,GAAQjV,KAAKgY,WAAW1V,KAAK2S,EAAKF,gBACjF+C,EAAYjX,UAAU4Y,SAAW,WAC7B,IAAIjB,EAAMxY,KAAK+X,SAAW,GAI1B,GAHI/X,KAAKgY,YACLhY,KAAKgY,WAAWtD,QAAQ,SAAUgF,GAAS,OAAOlB,GAAO,IAAMkB,IAE/D1Z,KAAKiY,MACL,IAAK,IAAI7W,EAAI,EAAGA,EAAIpB,KAAKiY,MAAM1W,OAAQH,GAAK,EAAG,CAC3C,IACIY,EAAQhC,KAAKiY,MAAM7W,EAAI,GAC3BoX,GAAO,IAFMxY,KAAKiY,MAAM7W,IAEDY,EAAQ,IAAMA,EAAQ,IAAM,IAI3D,OADAhC,KAAKkY,aAAaxD,QAAQ,SAAUiF,GAAe,OAAOnB,GAAO,QAAUmB,EAAc,MAClFnB,GAEJV,EAlHqB,GAwH5B8B,EAAiC,WACjC,SAASA,IACL5Z,KAAK6Z,YAAc,IAAIC,IACvB9Z,KAAK+Z,mBAAqB,IAAID,IAC9B9Z,KAAKga,UAAY,IAAIF,IACrB9Z,KAAKia,iBAAmB,IAAIH,IAC5B9Z,KAAKka,cAAgB,IAAIJ,IACzB9Z,KAAKma,qBAAuB,IAAIL,IAChC9Z,KAAKoa,iBA+KT,OA7KAR,EAAgBS,iBAAmB,SAAUnC,GACzC,IAAIoC,EAAa,IAAIV,EAErB,OADAU,EAAWC,eAAerC,EAAc,MACjCoC,GAEXV,EAAgB/Y,UAAU0Z,eAAiB,SAAUC,EAAcC,GAC/D,IAAIC,EAAc,KACdF,EAAajZ,OAAS,IACtBmZ,EAAc,IAAIC,EAAoBH,GACtCxa,KAAKoa,cAAc9X,KAAKoY,IAE5B,IAAK,IAAItZ,EAAI,EAAGA,EAAIoZ,EAAajZ,OAAQH,IACrCpB,KAAK4a,eAAeJ,EAAapZ,GAAIqZ,EAAcC,IAQ3Dd,EAAgB/Y,UAAU+Z,eAAiB,SAAUlC,EAAa+B,EAAcC,GAC5E,IAAIG,EAAU7a,KACV+X,EAAUW,EAAYX,QACtBC,EAAaU,EAAYV,WACzBC,EAAQS,EAAYT,MACpB6C,EAAa,IAAIC,EAAgBrC,EAAa+B,EAAcC,GAUhE,GATI3C,IACkC,IAAjBE,EAAM1W,QAAsC,IAAtByW,EAAWzW,OAE9CvB,KAAKgb,aAAaH,EAAQhB,YAAa9B,EAAS+C,GAGhDD,EAAU7a,KAAKib,YAAYJ,EAAQd,mBAAoBhC,IAG3DC,EACA,IAAK,IAAI5W,EAAI,EAAGA,EAAI4W,EAAWzW,OAAQH,IAAK,CACxC,IACI8Z,EAAYlD,EAAW5W,GADO,IAAjB6W,EAAM1W,QAAgBH,IAAM4W,EAAWzW,OAAS,EAG7DvB,KAAKgb,aAAaH,EAAQb,UAAWkB,EAAWJ,GAGhDD,EAAU7a,KAAKib,YAAYJ,EAAQZ,iBAAkBiB,GAIjE,GAAIjD,EACA,IAAS7W,EAAI,EAAGA,EAAI6W,EAAM1W,OAAQH,GAAK,EAAG,CACtC,IACI+Z,EAASlD,EAAM7W,GACfY,EAAQiW,EAAM7W,EAAI,GACtB,GAHiBA,IAAM6W,EAAM1W,OAAS,EAGtB,CACZ,IAAI6Z,EAAcP,EAAQX,cACtBmB,EAAoBD,EAAYE,IAAIH,GACnCE,IACDA,EAAoB,IAAIvB,IACxBsB,EAAYG,IAAIJ,EAAQE,IAE5Brb,KAAKgb,aAAaK,EAAmBrZ,EAAO8Y,OAE3C,CACD,IAAIU,EAAaX,EAAQV,qBACrBsB,EAAmBD,EAAWF,IAAIH,GACjCM,IACDA,EAAmB,IAAI3B,IACvB0B,EAAWD,IAAIJ,EAAQM,IAE3BZ,EAAU7a,KAAKib,YAAYQ,EAAkBzZ,MAK7D4X,EAAgB/Y,UAAUma,aAAe,SAAUU,EAAKzG,EAAM6F,GAC1D,IAAIa,EAAeD,EAAIJ,IAAIrG,GACtB0G,GAEDD,EAAIH,IAAItG,EADR0G,MAGJA,EAAarZ,KAAKwY,IAEtBlB,EAAgB/Y,UAAUoa,YAAc,SAAUS,EAAKzG,GACnD,IAAI4F,EAAUa,EAAIJ,IAAIrG,GAKtB,OAJK4F,IACDA,EAAU,IAAIjB,EACd8B,EAAIH,IAAItG,EAAM4F,IAEXA,GASXjB,EAAgB/Y,UAAUwX,MAAQ,SAAUK,EAAakD,GAKrD,IAJA,IAAIpC,GAAS,EACTzB,EAAUW,EAAYX,QACtBC,EAAaU,EAAYV,WACzBC,EAAQS,EAAYT,MACf7W,EAAI,EAAGA,EAAIpB,KAAKoa,cAAc7Y,OAAQH,IAC3CpB,KAAKoa,cAAchZ,GAAGya,gBAAiB,EAK3C,GAHArC,EAASxZ,KAAK8b,eAAe9b,KAAK6Z,YAAa9B,EAASW,EAAakD,IAAoBpC,EACzFA,EAASxZ,KAAK+b,cAAc/b,KAAK+Z,mBAAoBhC,EAASW,EAAakD,IACvEpC,EACAxB,EACA,IAAS5W,EAAI,EAAGA,EAAI4W,EAAWzW,OAAQH,IAAK,CACxC,IAAI8Z,EAAYlD,EAAW5W,GAC3BoY,EACIxZ,KAAK8b,eAAe9b,KAAKga,UAAWkB,EAAWxC,EAAakD,IAAoBpC,EACpFA,EACIxZ,KAAK+b,cAAc/b,KAAKia,iBAAkBiB,EAAWxC,EAAakD,IAC9DpC,EAGhB,GAAIvB,EACA,IAAS7W,EAAI,EAAGA,EAAI6W,EAAM1W,OAAQH,GAAK,EAAG,CACtC,IAAI4a,EAAS/D,EAAM7W,GACfY,EAAQiW,EAAM7W,EAAI,GAClBia,EAAoBrb,KAAKka,cAAcoB,IAAIU,GAC3Cha,IACAwX,EACIxZ,KAAK8b,eAAeT,EAAmB,GAAI3C,EAAakD,IAAoBpC,GAEpFA,EACIxZ,KAAK8b,eAAeT,EAAmBrZ,EAAO0W,EAAakD,IAAoBpC,EACnF,IAAIiC,EAAmBzb,KAAKma,qBAAqBmB,IAAIU,GACjDha,IACAwX,EAASxZ,KAAK+b,cAAcN,EAAkB,GAAI/C,EAAakD,IAAoBpC,GAEvFA,EACIxZ,KAAK+b,cAAcN,EAAkBzZ,EAAO0W,EAAakD,IAAoBpC,EAGzF,OAAOA,GAGXI,EAAgB/Y,UAAUib,eAAiB,SAAUJ,EAAKzG,EAAMyD,EAAakD,GACzE,IAAKF,GAAuB,iBAATzG,EACf,OAAO,EAEX,IAAIgH,EAAcP,EAAIJ,IAAIrG,OACtBiH,EAAkBR,EAAIJ,IAAI,KAI9B,GAHIY,IACAD,EAAcA,EAAYxZ,OAAOyZ,IAEV,IAAvBD,EAAY1a,OACZ,OAAO,EAIX,IADA,IAAIiY,GAAS,EACJpY,EAAI,EAAGA,EAAI6a,EAAY1a,OAAQH,IAEpCoY,EADayC,EAAY7a,GACL+a,SAASzD,EAAakD,IAAoBpC,EAElE,OAAOA,GAGXI,EAAgB/Y,UAAUkb,cAAgB,SAAUL,EAAKzG,EAAMyD,EAAakD,GACxE,IAAKF,GAAuB,iBAATzG,EACf,OAAO,EAEX,IAAImH,EAAiBV,EAAIJ,IAAIrG,GAC7B,QAAKmH,GAMEA,EAAe/D,MAAMK,EAAakD,IAEtChC,EAvLyB,GAyLhCe,EACA,SAASA,EAAoB0B,GACzBrc,KAAKqc,UAAYA,EACjBrc,KAAK6b,gBAAiB,GAK1Bd,EAAiC,WACjC,SAASA,EAAgB3C,EAAUkE,EAAW5B,GAC1C1a,KAAKoY,SAAWA,EAChBpY,KAAKsc,UAAYA,EACjBtc,KAAK0a,YAAcA,EACnB1a,KAAKkY,aAAeE,EAASF,aAgBjC,OAdA6C,EAAgBla,UAAUsb,SAAW,SAAUzD,EAAa6D,GACxD,IAAI/C,GAAS,EAWb,QAVIxZ,KAAKkY,aAAa3W,OAAS,IAAOvB,KAAK0a,aAAgB1a,KAAK0a,YAAYmB,iBAExErC,GADiBI,EAAgBS,iBAAiBra,KAAKkY,cAClCG,MAAMK,EAAa,QAExCc,IAAU+C,GAAcvc,KAAK0a,aAAgB1a,KAAK0a,YAAYmB,iBAC1D7b,KAAK0a,cACL1a,KAAK0a,YAAYmB,gBAAiB,GAEtCU,EAASvc,KAAKoY,SAAUpY,KAAKsc,YAE1B9C,GAEJuB,EArByB,GA+BhCyB,EAAeC,EAAoB,SAAU,SAAUC,GAAS,OAAUA,MAAOA,KACjFC,EAAuBF,EAAoB,iBAAkB,SAAUG,GAAQ,OAAUC,MAAOD,EAAME,qBAAiBC,KACvHC,EAAkBP,EAAoB,YAAa,SAAUQ,GAAiB,OAAUA,cAAeA,KACvGC,EAAwBT,EAAoB,kBAAmB,SAAUrE,EAAU+E,GAEnF,YADa,IAATA,IAAmBA,MACfnc,GAAWoX,SAAUA,EAAUgF,OAAO,EAAOC,aAAa,EAAOC,aAAa,GAASH,KAE/FI,EAAqBd,EAAoB,eAAgB,SAAUrE,EAAU+E,GAE7E,YADa,IAATA,IAAmBA,MACfnc,GAAWoX,SAAUA,EAAUgF,OAAO,EAAMC,aAAa,EAAOC,aAAa,GAAQH,KAE7FK,EAAqBf,EAAoB,eAAgB,SAAUrE,EAAU+E,GAE7E,YADa,IAATA,IAAmBA,MACfnc,GAAWoX,SAAUA,EAAUgF,OAAO,EAAOC,aAAa,EAAMC,aAAa,GAAQH,KAE7FM,EAAkBhB,EAAoB,YAAa,SAAUrE,EAAU+E,GACvE,OAAQnc,GAAWoX,SAAUA,EAAUgF,OAAO,EAAMC,aAAa,EAAMC,aAAa,GAAQH,KAE5FO,EAAkBjB,EAAoB,YAAa,SAAUkB,GAE7D,YADY,IAARA,IAAkBA,MACfA,KAGX,SAAWjG,GACPA,EAAkBA,EAA4B,SAAI,GAAK,WACvDA,EAAkBA,EAA0B,OAAI,GAAK,SACrDA,EAAkBA,EAAwB,KAAI,GAAK,OACnDA,EAAkBA,EAA6B,UAAI,GAAK,YAJ5D,CAKGA,IAAsBA,OAEzB,SAAWC,GACPA,EAAwBA,EAAgC,OAAI,GAAK,SACjEA,EAAwBA,EAAiC,QAAI,GAAK,UAFtE,CAGGA,IAA4BA,OAC/B,IAyBIiG,EASAC,EAlCAC,EAAkBrB,EAAoB,YAAa,SAAUsB,GAE7D,YADU,IAANA,IAAgBA,MACZ/c,GAAWgd,gBAAiBrG,EAAwBsG,SAAWF,KAEvEG,EAAazB,EAAoB,OAAQ,SAAUjc,GAAK,OAAQQ,GAAWmd,MAAM,GAAQ3d,KACzF4d,EAAc3B,EAAoB,QAAS,SAAU4B,GAAuB,OAAUA,oBAAqBA,KAC3GC,EAAe7B,EAAoB,SAAU,SAAU4B,GAAuB,OAAUA,oBAAqBA,KAC7GE,EAAoB9B,EAAoB,cAAe,SAAU+B,GAAoB,OAAUA,iBAAkBA,KACjHC,EAAqBhC,EAAoB,eAAgB,SAAUiC,EAAWC,GAAQ,OAAUD,UAAWA,EAAWC,KAAMA,KAC5HC,EAAiBnC,EAAoB,WAAY,SAAUoC,GAAY,OAAOA,IAC9EC,EAAmBrC,EAAoB,aAAc,SAAUsC,GAE/D,YADmB,IAAfA,IAAyBA,MACtBA,IAEPC,GACA/J,KAAM,mBAENgK,GACAhK,KAAM,oBAENiK,EAAiBzC,EAAoB,YACrC0C,EAAa1C,EAAoB,QACjC2C,EAAiB3C,EAAoB,YACrC4C,EAAa5C,EAAoB,QACjC6C,EAAOC,SAgBX,SAAS9C,EAAoBxH,EAAMuK,GAC/B,IAAIhgB,EAAU,WAEV,IADA,IAAImf,KACKc,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpCd,EAAKc,GAAMne,UAAUme,GAEzB,IAAIC,EAASF,EAAQA,EAAM/d,WAAM,EAAQe,EAASmc,OAClD,OAAO3d,GAAW2e,eAAgB1K,GAAQyK,IAI9C,OAFAlgB,EAAQogB,SAAW,SAAUC,GAAO,OAAOA,GAAOA,EAAIF,iBAAmB1K,GACzEzV,EAAQmgB,eAAiB1K,EAClBzV,EAwBX,SAASsgB,EAA2B1H,GAChC,IAAI2H,EAvBR,SAASC,EAA+B5H,GACpC,IAAI6H,EAAU7H,EAASJ,YAAcI,EAASJ,WAAWzW,OAASiB,GAAU,GAAgB4V,EAASJ,eAGrG,OAAOxV,GADW4V,EAASL,SAAgC,MAArBK,EAASL,QAAkBK,EAASL,QAAU,IACrDK,EAASH,MAAOgI,GAmBhCD,CAA+B5H,GAC1C8H,EAAW9H,EAASF,cAAgBE,EAASF,aAAa3W,OAC1D6W,EAASF,aAAawD,IAAI,SAAU/B,GAAe,OAnB3D,SAASwG,EAAiC/H,GACtC,IAAI6H,EAAU7H,EAASJ,YAAcI,EAASJ,WAAWzW,OAASiB,GAAU,GAAgB4V,EAASJ,eAErG,OAAII,EAASL,QACFvV,GACH,EAA+B4V,EAASL,SACzCK,EAASH,MAAOgI,GAEd7H,EAASH,MAAM1W,OACbiB,GAAU,GAAkC4V,EAASH,MAAOgI,GAG5D7H,EAASJ,YAAcI,EAASJ,WAAWzW,OAASiB,GAAU,GAA8B4V,EAASJ,eAOlDmI,CAAiCxG,QAE/F,OAAOoG,EAAStd,OAAOhB,MAAMse,EAAUvd,EAAS0d,IAEpD,SAASE,GAA0BhI,GAC/B,OAAOA,EAAWN,EAAYK,MAAMC,GAAUsD,IAAIoE,OAzDtD,SAAWlC,GACPA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAsB,KAAI,GAAK,OAC/CA,EAAgBA,EAAuB,MAAI,GAAK,QAChDA,EAAgBA,EAAwB,OAAI,GAAK,SACjDA,EAAgBA,EAAqB,IAAI,GAAK,MAC9CA,EAAgBA,EAA8B,aAAI,GAAK,eAN3D,CAOGA,IAAoBA,OAEvB,SAAWC,GACPA,EAA2BA,EAAkC,MAAI,GAAK,QACtEA,EAA2BA,EAAoC,QAAI,GAAK,UACxEA,EAA2BA,EAAmC,OAAI,GAAK,SAH3E,CAIGA,IAA+BA,OA+ClC,IAuCIwC,GAvCAC,GAAoBlgB,OAAOmgB,QAC3B/D,aAAcA,EACdG,qBAAsBA,EACtBK,gBAAiBA,EACjBE,sBAAuBA,EACvBK,mBAAoBA,EACpBC,mBAAoBA,EACpBC,gBAAiBA,EACjBC,gBAAiBA,EACjBhG,wBAA2B,OAAOA,GAClCC,8BAAiC,OAAOA,GACxCmG,gBAAiBA,EACjBI,WAAYA,EACZE,YAAaA,EACbE,aAAcA,EACdC,kBAAmBA,EACnBE,mBAAoBA,EACpBG,eAAgBA,EAChBE,iBAAkBA,EAClBE,uBAAwBA,EACxBC,iBAAkBA,EAClBC,eAAgBA,EAChBC,WAAYA,EACZC,eAAgBA,EAChBC,WAAYA,EACZC,KAAMA,EACN1B,sBAAyB,OAAOA,GAChCC,iCAAoC,OAAOA,GAC3CuC,0BAA2BA;;;;;;;QAY/B,SAAWC,GACPA,EAAaA,EAAoB,MAAI,GAAK,QAD9C,CAEGA,KAAiBA,QACpB,IAWWG,GAXPC,GAAwB,WACxB,SAASnB,EAAKoB,QACQ,IAAdA,IAAwBA,EAAY,MACxC1gB,KAAK0gB,UAAYA,EACZA,IACD1gB,KAAK0gB,cAIb,OADApB,EAAKze,UAAU8f,YAAc,SAAUC,GAAY,OAA6C,IAAtC5gB,KAAK0gB,UAAU7d,QAAQ+d,IAC1EtB,EATgB,IAWhBkB,GASR/gB,EAAQ+gB,kBAAoB/gB,EAAQ+gB,qBARnBA,GAAyB,QAAI,GAAK,UAClDA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAA0B,SAAI,GAAK,WACnDA,GAAgBA,GAA0B,SAAI,GAAK,WACnDA,GAAgBA,GAAsB,KAAI,GAAK,OAEnD,IA4DWK,GA5DPC,GAA6B,SAAUC,GAEvC,SAASD,EAAY7L,EAAMyL,QACL,IAAdA,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,IAAc1gB,KAE5C,OADAwU,EAAMS,KAAOA,EACNT,EAKX,OAVA9T,EAAUogB,EAAaC,GAOvBD,EAAYjgB,UAAUmgB,UAAY,SAAUC,EAASC,GACjD,OAAOD,EAAQE,iBAAiBnhB,KAAMkhB,IAEnCJ,EAXqB,CAY9BL,IACEW,GAAgC,SAAUL,GAE1C,SAASK,EAAepf,EAAO0e,EAAWW,QACpB,IAAdX,IAAwBA,EAAY,WACrB,IAAfW,IAAyBA,EAAa,MAC1C,IAAI7M,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,IAAc1gB,KAG5C,OAFAwU,EAAMxS,MAAQA,EACdwS,EAAM6M,WAAaA,EACZ7M,EAKX,OAZA9T,EAAU0gB,EAAgBL,GAS1BK,EAAevgB,UAAUmgB,UAAY,SAAUC,EAASC,GACpD,OAAOD,EAAQK,oBAAoBthB,KAAMkhB,IAEtCE,EAbwB,CAcjCX,IACEc,GAA2B,SAAUR,GAErC,SAASQ,EAAUC,EAAId,QACD,IAAdA,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,IAAc1gB,KAE5C,OADAwU,EAAMgN,GAAKA,EACJhN,EAKX,OAVA9T,EAAU6gB,EAAWR,GAOrBQ,EAAU1gB,UAAUmgB,UAAY,SAAUC,EAASC,GAC/C,OAAOD,EAAQQ,eAAezhB,KAAMkhB,IAEjCK,EAXmB,CAY5Bd,IACEiB,GAAyB,SAAUX,GAEnC,SAASW,EAAQC,EAAWjB,QACN,IAAdA,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,IAAc1gB,KAE5C,OADAwU,EAAMmN,UAAYA,GAAa,KACxBnN,EAGX,OARA9T,EAAUghB,EAASX,GAOnBW,EAAQ7gB,UAAUmgB,UAAY,SAAUC,EAASC,GAAW,OAAOD,EAAQW,aAAa5hB,KAAMkhB,IACvFQ,EATiB,CAU1BjB,IACEoB,GAAe,IAAIf,GAAYrhB,EAAQ+gB,gBAAgBsB,SACvDC,GAAgB,IAAIjB,GAAYrhB,EAAQ+gB,gBAAgBwB,UACxDC,GAAY,IAAInB,GAAYrhB,EAAQ+gB,gBAAgB0B,MAEpDC,IADW,IAAIrB,GAAYrhB,EAAQ+gB,gBAAgB4B,KACrC,IAAItB,GAAYrhB,EAAQ+gB,gBAAgB6B,SAGtDC,IAFc,IAAIxB,GAAYrhB,EAAQ+gB,gBAAgB+B,QACtC,IAAIzB,GAAYrhB,EAAQ+gB,gBAAgBjB,UAC5C,IAAIuB,GAAYrhB,EAAQ+gB,gBAAgBgC,OAmBxD,SAASC,GAAqBtN,EAAMuN,GAChC,OAAY,MAARvN,GAAyB,MAATuN,EACTvN,GAAQuN,EAEZvN,EAAKwN,aAAaD,GAE7B,SAASE,GAAiBzN,EAAMuN,GAC5B,IAAIG,EAAM1N,EAAK5T,OACf,GAAIshB,IAAQH,EAAMnhB,OACd,OAAO,EAEX,IAAK,IAAIH,EAAI,EAAGA,EAAIyhB,EAAKzhB,IACrB,IAAK+T,EAAK/T,GAAGuhB,aAAaD,EAAMthB,IAC5B,OAAO,EAGf,OAAO,GAlCAyf,GAiBRphB,EAAQohB,iBAAmBphB,EAAQohB,oBAhBnBA,GAAuB,OAAI,GAAK,SAC/CA,GAAeA,GAA0B,UAAI,GAAK,YAClDA,GAAeA,GAA0B,UAAI,GAAK,YAClDA,GAAeA,GAA6B,aAAI,GAAK,eACrDA,GAAeA,GAAsB,MAAI,GAAK,QAC9CA,GAAeA,GAAqB,KAAI,GAAK,OAC7CA,GAAeA,GAAuB,OAAI,GAAK,SAC/CA,GAAeA,GAAyB,SAAI,GAAK,WACjDA,GAAeA,GAAuB,OAAI,GAAK,SAC/CA,GAAeA,GAAoB,IAAI,GAAK,MAC5CA,GAAeA,GAAmB,GAAI,IAAM,KAC5CA,GAAeA,GAA2B,WAAI,IAAM,aACpDA,GAAeA,GAAsB,MAAI,IAAM,QAC/CA,GAAeA,GAA4B,YAAI,IAAM,cACrDA,GAAeA,GAAuB,OAAI,IAAM,SAChDA,GAAeA,GAA6B,aAAI,IAAM,eAoB1D,IAoFWiC,GApFPC,GAA4B,WAC5B,SAASA,EAAWC,EAAMC,GACtBjjB,KAAKgjB,KAAOA,GAAQ,KACpBhjB,KAAKijB,WAAaA,GAAc,KA+EpC,OA7EAF,EAAWliB,UAAU4N,KAAO,SAAUwG,EAAMgO,GACxC,OAAO,IAAIC,GAAaljB,KAAMiV,EAAM,KAAMgO,IAE9CF,EAAWliB,UAAUsiB,IAAM,SAAUC,EAAOJ,EAAMC,GAC9C,OAAO,IAAII,GAAYrjB,KAAMojB,EAAOJ,EAAMC,IAE9CF,EAAWliB,UAAUyiB,WAAa,SAAUrO,EAAMsO,EAAQN,GACtD,OAAO,IAAIO,GAAiBxjB,KAAMiV,EAAMsO,EAAQ,KAAMN,IAE1DF,EAAWliB,UAAU4iB,OAAS,SAAUF,EAAQN,GAC5C,OAAO,IAAIS,GAAmB1jB,KAAMujB,EAAQ,KAAMN,IAEtDF,EAAWliB,UAAU8iB,YAAc,SAAUJ,EAAQP,EAAMC,GACvD,OAAO,IAAIW,GAAgB5jB,KAAMujB,EAAQP,EAAMC,IAEnDF,EAAWliB,UAAUgjB,YAAc,SAAUC,EAAUC,EAAWd,GAE9D,YADkB,IAAdc,IAAwBA,EAAY,MACjC,IAAIC,GAAgBhkB,KAAM8jB,EAAUC,EAAW,KAAMd,IAEhEF,EAAWliB,UAAUojB,OAAS,SAAUC,EAAKjB,GACzC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAeuD,OAAQpkB,KAAMkkB,EAAK,KAAMjB,IAElFF,EAAWliB,UAAUwjB,UAAY,SAAUH,EAAKjB,GAC5C,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAeyD,UAAWtkB,KAAMkkB,EAAK,KAAMjB,IAErFF,EAAWliB,UAAU0jB,UAAY,SAAUL,EAAKjB,GAC5C,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAe2D,UAAWxkB,KAAMkkB,EAAK,KAAMjB,IAErFF,EAAWliB,UAAU4jB,aAAe,SAAUP,EAAKjB,GAC/C,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAe6D,aAAc1kB,KAAMkkB,EAAK,KAAMjB,IAExFF,EAAWliB,UAAUwK,MAAQ,SAAU6Y,EAAKjB,GACxC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAe8D,MAAO3kB,KAAMkkB,EAAK,KAAMjB,IAEjFF,EAAWliB,UAAU+jB,KAAO,SAAUV,EAAKjB,GACvC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAegE,KAAM7kB,KAAMkkB,EAAK,KAAMjB,IAEhFF,EAAWliB,UAAU+F,OAAS,SAAUsd,EAAKjB,GACzC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAeiE,OAAQ9kB,KAAMkkB,EAAK,KAAMjB,IAElFF,EAAWliB,UAAUkkB,SAAW,SAAUb,EAAKjB,GAC3C,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAemE,SAAUhlB,KAAMkkB,EAAK,KAAMjB,IAEpFF,EAAWliB,UAAUokB,OAAS,SAAUf,EAAKjB,GACzC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAeqE,OAAQllB,KAAMkkB,EAAK,KAAMjB,IAElFF,EAAWliB,UAAU0D,IAAM,SAAU2f,EAAKjB,GACtC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAesE,IAAKnlB,KAAMkkB,EAAK,KAAMjB,IAE/EF,EAAWliB,UAAUukB,WAAa,SAAUlB,EAAKjB,EAAYoC,GAEzD,YADe,IAAXA,IAAqBA,GAAS,GAC3B,IAAIlB,GAAmB1kB,EAAQohB,eAAeyE,WAAYtlB,KAAMkkB,EAAK,KAAMjB,EAAYoC,IAElGtC,EAAWliB,UAAUqM,GAAK,SAAUgX,EAAKjB,GACrC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAe0E,GAAIvlB,KAAMkkB,EAAK,KAAMjB,IAE9EF,EAAWliB,UAAU2kB,MAAQ,SAAUtB,EAAKjB,GACxC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAe4E,MAAOzlB,KAAMkkB,EAAK,KAAMjB,IAEjFF,EAAWliB,UAAU6kB,YAAc,SAAUxB,EAAKjB,GAC9C,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAe8E,YAAa3lB,KAAMkkB,EAAK,KAAMjB,IAEvFF,EAAWliB,UAAU+kB,OAAS,SAAU1B,EAAKjB,GACzC,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAegF,OAAQ7lB,KAAMkkB,EAAK,KAAMjB,IAElFF,EAAWliB,UAAUilB,aAAe,SAAU5B,EAAKjB,GAC/C,OAAO,IAAIkB,GAAmB1kB,EAAQohB,eAAekF,aAAc/lB,KAAMkkB,EAAK,KAAMjB,IAExFF,EAAWliB,UAAUmlB,QAAU,SAAU/C,GAGrC,OAAOjjB,KAAKikB,OAAOgC,GAAiBhD,IAExCF,EAAWliB,UAAUqlB,KAAO,SAAUlD,EAAMC,GACxC,OAAO,IAAIkD,GAASnmB,KAAMgjB,EAAMC,IAEpCF,EAAWliB,UAAUulB,OAAS,WAAc,OAAO,IAAIC,GAAoBrmB,KAAM,OAC1E+iB,EAlFoB,IAoFpBD,GAKRrjB,EAAQqjB,aAAerjB,EAAQqjB,gBAJnBA,GAAiB,KAAI,GAAK,OACrCA,GAAWA,GAAkB,MAAI,GAAK,QACtCA,GAAWA,GAAuB,WAAI,GAAK,aAC3CA,GAAWA,GAAuB,WAAI,GAAK,aAE/C,IAwHWwD,GAxHPC,GAA6B,SAAUxF,GAEvC,SAASwF,EAAYtR,EAAM+N,EAAMC,GAC7B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KASnD,MARoB,iBAATiV,GACPT,EAAMS,KAAOA,EACbT,EAAMgS,QAAU,OAGhBhS,EAAMS,KAAO,KACbT,EAAMgS,QAAUvR,GAEbT,EAeX,OA1BA9T,EAAU6lB,EAAaxF,GAavBwF,EAAY1lB,UAAU8hB,aAAe,SAAUvgB,GAC3C,OAAOA,aAAamkB,GAAevmB,KAAKiV,OAAS7S,EAAE6S,MAAQjV,KAAKwmB,UAAYpkB,EAAEokB,SAElFD,EAAY1lB,UAAU4lB,WAAa,WAAc,OAAO,GACxDF,EAAY1lB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACvD,OAAOD,EAAQ0F,iBAAiB3mB,KAAMkhB,IAE1CqF,EAAY1lB,UAAU0a,IAAM,SAAUvZ,GAClC,IAAKhC,KAAKiV,KACN,MAAM,IAAInS,MAAM,qBAAuB9C,KAAKwmB,QAAU,4BAE1D,OAAO,IAAII,GAAa5mB,KAAKiV,KAAMjT,EAAO,KAAMhC,KAAKijB,aAElDsD,EA3BqB,CA4B9BxD,IACE8D,GAA4B,SAAU9F,GAEtC,SAAS8F,EAAWC,EAAM9D,EAAMC,GAC5B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAEnD,OADAwU,EAAMsS,KAAOA,EACNtS,EASX,OAbA9T,EAAUmmB,EAAY9F,GAMtB8F,EAAWhmB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACtD,OAAOD,EAAQ8F,gBAAgB/mB,KAAMkhB,IAEzC2F,EAAWhmB,UAAU8hB,aAAe,SAAUvgB,GAC1C,OAAOA,aAAaykB,GAAczkB,EAAE0kB,KAAKnE,aAAa3iB,KAAK8mB,OAE/DD,EAAWhmB,UAAU4lB,WAAa,WAAc,OAAOzmB,KAAK8mB,KAAKL,cAC1DI,EAdoB,CAe7B9D,IACEiE,GAAiC,SAAUjG,GAE3C,SAASiG,EAAgBC,EAAMjE,EAAMC,GACjC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAEnD,OADAwU,EAAMyS,KAAOA,EACNzS,EASX,OAbA9T,EAAUsmB,EAAiBjG,GAM3BiG,EAAgBnmB,UAAU8hB,aAAe,SAAUvgB,GAC/C,OAAOA,aAAa4kB,GAAmBhnB,KAAKinB,OAAS7kB,EAAE6kB,MAE3DD,EAAgBnmB,UAAU4lB,WAAa,WAAc,OAAO,GAC5DO,EAAgBnmB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC3D,OAAOD,EAAQiG,qBAAqBlnB,KAAMkhB,IAEvC8F,EAdyB,CAelCjE,IACE6D,GAA8B,SAAU7F,GAExC,SAAS6F,EAAa3R,EAAMjT,EAAOghB,EAAMC,GACrC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,GAAQhhB,EAAMghB,KAAMC,IAAejjB,KAGjE,OAFAwU,EAAMS,KAAOA,EACbT,EAAMxS,MAAQA,EACPwS,EAaX,OAlBA9T,EAAUkmB,EAAc7F,GAOxB6F,EAAa/lB,UAAU8hB,aAAe,SAAUvgB,GAC5C,OAAOA,aAAawkB,GAAgB5mB,KAAKiV,OAAS7S,EAAE6S,MAAQjV,KAAKgC,MAAM2gB,aAAavgB,EAAEJ,QAE1F4kB,EAAa/lB,UAAU4lB,WAAa,WAAc,OAAO,GACzDG,EAAa/lB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACxD,OAAOD,EAAQkG,kBAAkBnnB,KAAMkhB,IAE3C0F,EAAa/lB,UAAUumB,WAAa,SAAUpE,EAAMtC,GAChD,OAAO,IAAI2G,GAAernB,KAAKiV,KAAMjV,KAAKgC,MAAOghB,EAAMtC,EAAW1gB,KAAKijB,aAE3E2D,EAAa/lB,UAAUymB,YAAc,WAAc,OAAOtnB,KAAKonB,WAAWrF,IAAgBtiB,EAAQ8nB,aAAaC,SACxGZ,EAnBsB,CAoB/B7D,IACE0E,GAA8B,SAAU1G,GAExC,SAAS0G,EAAaC,EAAUtE,EAAOphB,EAAOghB,EAAMC,GAChD,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,GAAQhhB,EAAMghB,KAAMC,IAAejjB,KAIjE,OAHAwU,EAAMkT,SAAWA,EACjBlT,EAAM4O,MAAQA,EACd5O,EAAMxS,MAAQA,EACPwS,EAUX,OAhBA9T,EAAU+mB,EAAc1G,GAQxB0G,EAAa5mB,UAAU8hB,aAAe,SAAUvgB,GAC5C,OAAOA,aAAaqlB,GAAgBznB,KAAK0nB,SAAS/E,aAAavgB,EAAEslB,WAC7D1nB,KAAKojB,MAAMT,aAAavgB,EAAEghB,QAAUpjB,KAAKgC,MAAM2gB,aAAavgB,EAAEJ,QAEtEylB,EAAa5mB,UAAU4lB,WAAa,WAAc,OAAO,GACzDgB,EAAa5mB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACxD,OAAOD,EAAQ0G,kBAAkB3nB,KAAMkhB,IAEpCuG,EAjBsB,CAkB/B1E,IACE6E,GAA+B,SAAU7G,GAEzC,SAAS6G,EAAcF,EAAUzS,EAAMjT,EAAOghB,EAAMC,GAChD,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,GAAQhhB,EAAMghB,KAAMC,IAAejjB,KAIjE,OAHAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACbT,EAAMxS,MAAQA,EACPwS,EAUX,OAhBA9T,EAAUknB,EAAe7G,GAQzB6G,EAAc/mB,UAAU8hB,aAAe,SAAUvgB,GAC7C,OAAOA,aAAawlB,GAAiB5nB,KAAK0nB,SAAS/E,aAAavgB,EAAEslB,WAC9D1nB,KAAKiV,OAAS7S,EAAE6S,MAAQjV,KAAKgC,MAAM2gB,aAAavgB,EAAEJ,QAE1D4lB,EAAc/mB,UAAU4lB,WAAa,WAAc,OAAO,GAC1DmB,EAAc/mB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACzD,OAAOD,EAAQ4G,mBAAmB7nB,KAAMkhB,IAErC0G,EAjBuB,CAkBhC7E,KACSuD,GAIR7mB,EAAQ6mB,gBAAkB7mB,EAAQ6mB,mBAHnBA,GAA2B,YAAI,GAAK,cAClDA,GAAcA,GAAmC,oBAAI,GAAK,sBAC1DA,GAAcA,GAAoB,KAAI,GAAK,OAE/C,IAmVWiB,GAnVP/D,GAAkC,SAAUzC,GAE5C,SAASyC,EAAiBkE,EAAUI,EAAQnJ,EAAMqE,EAAMC,GACpD,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAWnD,OAVAwU,EAAMkT,SAAWA,EACjBlT,EAAMmK,KAAOA,EACS,iBAAXmJ,GACPtT,EAAMS,KAAO6S,EACbtT,EAAMgS,QAAU,OAGhBhS,EAAMS,KAAO,KACbT,EAAMgS,QAAUsB,GAEbtT,EAUX,OAvBA9T,EAAU8iB,EAAkBzC,GAe5ByC,EAAiB3iB,UAAU8hB,aAAe,SAAUvgB,GAChD,OAAOA,aAAaohB,GAAoBxjB,KAAK0nB,SAAS/E,aAAavgB,EAAEslB,WACjE1nB,KAAKiV,OAAS7S,EAAE6S,MAAQjV,KAAKwmB,UAAYpkB,EAAEokB,SAAW5D,GAAiB5iB,KAAK2e,KAAMvc,EAAEuc,OAE5F6E,EAAiB3iB,UAAU4lB,WAAa,WAAc,OAAO,GAC7DjD,EAAiB3iB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC5D,OAAOD,EAAQ8G,sBAAsB/nB,KAAMkhB,IAExCsC,EAxB0B,CAyBnCT,IACEW,GAAoC,SAAU3C,GAE9C,SAAS2C,EAAmBsE,EAAIrJ,EAAMqE,EAAMC,EAAY9E,QACvC,IAATA,IAAmBA,GAAO,GAC9B,IAAI3J,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAInD,OAHAwU,EAAMwT,GAAKA,EACXxT,EAAMmK,KAAOA,EACbnK,EAAM2J,KAAOA,EACN3J,EAUX,OAjBA9T,EAAUgjB,EAAoB3C,GAS9B2C,EAAmB7iB,UAAU8hB,aAAe,SAAUvgB,GAClD,OAAOA,aAAashB,GAAsB1jB,KAAKgoB,GAAGrF,aAAavgB,EAAE4lB,KAC7DpF,GAAiB5iB,KAAK2e,KAAMvc,EAAEuc,OAAS3e,KAAKme,OAAS/b,EAAE+b,MAE/DuF,EAAmB7iB,UAAU4lB,WAAa,WAAc,OAAO,GAC/D/C,EAAmB7iB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC9D,OAAOD,EAAQgH,wBAAwBjoB,KAAMkhB,IAE1CwC,EAlB4B,CAmBrCX,IACEa,GAAiC,SAAU7C,GAE3C,SAAS6C,EAAgBsE,EAAWvJ,EAAMqE,EAAMC,GAC5C,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAGnD,OAFAwU,EAAM0T,UAAYA,EAClB1T,EAAMmK,KAAOA,EACNnK,EAUX,OAfA9T,EAAUkjB,EAAiB7C,GAO3B6C,EAAgB/iB,UAAU8hB,aAAe,SAAUvgB,GAC/C,OAAOA,aAAawhB,GAAmB5jB,KAAKkoB,UAAUvF,aAAavgB,EAAE8lB,YACjEtF,GAAiB5iB,KAAK2e,KAAMvc,EAAEuc,OAEtCiF,EAAgB/iB,UAAU4lB,WAAa,WAAc,OAAO,GAC5D7C,EAAgB/iB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC3D,OAAOD,EAAQkH,qBAAqBnoB,KAAMkhB,IAEvC0C,EAhByB,CAiBlCb,IACEqF,GAA6B,SAAUrH,GAEvC,SAASqH,EAAYpmB,EAAOghB,EAAMC,GAC9B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAEnD,OADAwU,EAAMxS,MAAQA,EACPwS,EASX,OAbA9T,EAAU0nB,EAAarH,GAMvBqH,EAAYvnB,UAAU8hB,aAAe,SAAUvgB,GAC3C,OAAOA,aAAagmB,GAAepoB,KAAKgC,QAAUI,EAAEJ,OAExDomB,EAAYvnB,UAAU4lB,WAAa,WAAc,OAAO,GACxD2B,EAAYvnB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACvD,OAAOD,EAAQoH,iBAAiBroB,KAAMkhB,IAEnCkH,EAdqB,CAe9BrF,IACEuF,GAA8B,SAAUvH,GAExC,SAASuH,EAAatmB,EAAOghB,EAAM3B,EAAY4B,QACxB,IAAf5B,IAAyBA,EAAa,MAC1C,IAAI7M,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAGnD,OAFAwU,EAAMxS,MAAQA,EACdwS,EAAM6M,WAAaA,EACZ7M,EAUX,OAhBA9T,EAAU4nB,EAAcvH,GAQxBuH,EAAaznB,UAAU8hB,aAAe,SAAUvgB,GAC5C,OAAOA,aAAakmB,GAAgBtoB,KAAKgC,MAAMiT,OAAS7S,EAAEJ,MAAMiT,MAC5DjV,KAAKgC,MAAMumB,aAAenmB,EAAEJ,MAAMumB,YAAcvoB,KAAKgC,MAAMwmB,UAAYpmB,EAAEJ,MAAMwmB,SAEvFF,EAAaznB,UAAU4lB,WAAa,WAAc,OAAO,GACzD6B,EAAaznB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACxD,OAAOD,EAAQwH,kBAAkBzoB,KAAMkhB,IAEpCoH,EAjBsB,CAkB/BvF,IACE2F,GACA,SAASA,GAAkBH,EAAYtT,EAAMuT,GACzCxoB,KAAKuoB,WAAaA,EAClBvoB,KAAKiV,KAAOA,EACZjV,KAAKwoB,QAAUA,GAInBxE,GAAiC,SAAUjD,GAE3C,SAASiD,EAAgB2E,EAAW7E,EAAUC,EAAWf,EAAMC,QACzC,IAAdc,IAAwBA,EAAY,MACxC,IAAIvP,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,GAAQc,EAASd,KAAMC,IAAejjB,KAIpE,OAHAwU,EAAMmU,UAAYA,EAClBnU,EAAMuP,UAAYA,EAClBvP,EAAMsP,SAAWA,EACVtP,EAUX,OAjBA9T,EAAUsjB,EAAiBjD,GAS3BiD,EAAgBnjB,UAAU8hB,aAAe,SAAUvgB,GAC/C,OAAOA,aAAa4hB,GAAmBhkB,KAAK2oB,UAAUhG,aAAavgB,EAAEumB,YACjE3oB,KAAK8jB,SAASnB,aAAavgB,EAAE0hB,WAAarB,GAAqBziB,KAAK+jB,UAAW3hB,EAAE2hB,YAEzFC,EAAgBnjB,UAAU4lB,WAAa,WAAc,OAAO,GAC5DzC,EAAgBnjB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC3D,OAAOD,EAAQ2H,qBAAqB5oB,KAAMkhB,IAEvC8C,EAlByB,CAmBlCjB,IACE8F,GAAyB,SAAU9H,GAEnC,SAAS8H,EAAQF,EAAW1F,GACxB,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMiiB,GAAWgB,IAAejjB,KAExD,OADAwU,EAAMmU,UAAYA,EACXnU,EASX,OAbA9T,EAAUmoB,EAAS9H,GAMnB8H,EAAQhoB,UAAU8hB,aAAe,SAAUvgB,GACvC,OAAOA,aAAaymB,GAAW7oB,KAAK2oB,UAAUhG,aAAavgB,EAAEumB,YAEjEE,EAAQhoB,UAAU4lB,WAAa,WAAc,OAAO,GACpDoC,EAAQhoB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACnD,OAAOD,EAAQ6H,aAAa9oB,KAAMkhB,IAE/B2H,EAdiB,CAe1B9F,IACEgG,GAA+B,SAAUhI,GAEzC,SAASgI,EAAcJ,EAAW1F,GAC9B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAM2oB,EAAU3F,KAAMC,IAAejjB,KAE7D,OADAwU,EAAMmU,UAAYA,EACXnU,EASX,OAbA9T,EAAUqoB,EAAehI,GAMzBgI,EAAcloB,UAAU8hB,aAAe,SAAUvgB,GAC7C,OAAOA,aAAa2mB,GAAiB/oB,KAAK2oB,UAAUhG,aAAavgB,EAAEumB,YAEvEI,EAAcloB,UAAU4lB,WAAa,WAAc,OAAO,GAC1DsC,EAAcloB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACzD,OAAOD,EAAQ+H,uBAAuBhpB,KAAMkhB,IAEzC6H,EAduB,CAehChG,IACEoD,GAA0B,SAAUpF,GAEpC,SAASoF,EAASnkB,EAAOghB,EAAMC,GAC3B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAEnD,OADAwU,EAAMxS,MAAQA,EACPwS,EASX,OAbA9T,EAAUylB,EAAUpF,GAMpBoF,EAAStlB,UAAU8hB,aAAe,SAAUvgB,GACxC,OAAOA,aAAa+jB,GAAYnmB,KAAKgC,MAAM2gB,aAAavgB,EAAEJ,QAE9DmkB,EAAStlB,UAAU4lB,WAAa,WAAc,OAAO,GACrDN,EAAStlB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACpD,OAAOD,EAAQgI,cAAcjpB,KAAMkhB,IAEhCiF,EAdkB,CAe3BpD,IACEmG,GAAyB,WACzB,SAASA,EAAQjU,EAAM+N,QACN,IAATA,IAAmBA,EAAO,MAC9BhjB,KAAKiV,KAAOA,EACZjV,KAAKgjB,KAAOA,EAGhB,OADAkG,EAAQroB,UAAU8hB,aAAe,SAAUjN,GAAS,OAAO1V,KAAKiV,OAASS,EAAMT,MACxEiU,EAPiB,GASxBC,GAA8B,SAAUpI,GAExC,SAASoI,EAAa5F,EAAQ6F,EAAYpG,EAAMC,EAAYhO,GACxD,IAAIT,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAInD,OAHAwU,EAAM+O,OAASA,EACf/O,EAAM4U,WAAaA,EACnB5U,EAAMS,KAAOA,EACNT,EAcX,OApBA9T,EAAUyoB,EAAcpI,GAQxBoI,EAAatoB,UAAU8hB,aAAe,SAAUvgB,GAC5C,OAAOA,aAAa+mB,GAAgBvG,GAAiB5iB,KAAKujB,OAAQnhB,EAAEmhB,SAChEX,GAAiB5iB,KAAKopB,WAAYhnB,EAAEgnB,aAE5CD,EAAatoB,UAAU4lB,WAAa,WAAc,OAAO,GACzD0C,EAAatoB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACxD,OAAOD,EAAQoI,kBAAkBrpB,KAAMkhB,IAE3CiI,EAAatoB,UAAUumB,WAAa,SAAUnS,EAAMyL,GAEhD,YADkB,IAAdA,IAAwBA,EAAY,MACjC,IAAI4I,GAAoBrU,EAAMjV,KAAKujB,OAAQvjB,KAAKopB,WAAYppB,KAAKgjB,KAAMtC,EAAW1gB,KAAKijB,aAE3FkG,EArBsB,CAsB/BpG,IACEoB,GAAoC,SAAUpD,GAE9C,SAASoD,EAAmBoF,EAAUC,EAAKtF,EAAKlB,EAAMC,EAAYoC,QAC/C,IAAXA,IAAqBA,GAAS,GAClC,IAAI7Q,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,GAAQwG,EAAIxG,KAAMC,IAAejjB,KAK/D,OAJAwU,EAAM+U,SAAWA,EACjB/U,EAAM0P,IAAMA,EACZ1P,EAAM6Q,OAASA,EACf7Q,EAAMgV,IAAMA,EACLhV,EAUX,OAlBA9T,EAAUyjB,EAAoBpD,GAU9BoD,EAAmBtjB,UAAU8hB,aAAe,SAAUvgB,GAClD,OAAOA,aAAa+hB,GAAsBnkB,KAAKupB,WAAannB,EAAEmnB,UAC1DvpB,KAAKwpB,IAAI7G,aAAavgB,EAAEonB,MAAQxpB,KAAKkkB,IAAIvB,aAAavgB,EAAE8hB,MAEhEC,EAAmBtjB,UAAU4lB,WAAa,WAAc,OAAO,GAC/DtC,EAAmBtjB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC9D,OAAOD,EAAQwI,wBAAwBzpB,KAAMkhB,IAE1CiD,EAnB4B,CAoBrCpB,IACEG,GAA8B,SAAUnC,GAExC,SAASmC,EAAawE,EAAUzS,EAAM+N,EAAMC,GACxC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAGnD,OAFAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACNT,EAaX,OAlBA9T,EAAUwiB,EAAcnC,GAOxBmC,EAAariB,UAAU8hB,aAAe,SAAUvgB,GAC5C,OAAOA,aAAa8gB,GAAgBljB,KAAK0nB,SAAS/E,aAAavgB,EAAEslB,WAC7D1nB,KAAKiV,OAAS7S,EAAE6S,MAExBiO,EAAariB,UAAU4lB,WAAa,WAAc,OAAO,GACzDvD,EAAariB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACxD,OAAOD,EAAQyI,kBAAkB1pB,KAAMkhB,IAE3CgC,EAAariB,UAAU0a,IAAM,SAAUvZ,GACnC,OAAO,IAAI4lB,GAAc5nB,KAAK0nB,SAAU1nB,KAAKiV,KAAMjT,EAAO,KAAMhC,KAAKijB,aAElEC,EAnBsB,CAoB/BH,IACEM,GAA6B,SAAUtC,GAEvC,SAASsC,EAAYqE,EAAUtE,EAAOJ,EAAMC,GACxC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAGnD,OAFAwU,EAAMkT,SAAWA,EACjBlT,EAAM4O,MAAQA,EACP5O,EAaX,OAlBA9T,EAAU2iB,EAAatC,GAOvBsC,EAAYxiB,UAAU8hB,aAAe,SAAUvgB,GAC3C,OAAOA,aAAaihB,GAAerjB,KAAK0nB,SAAS/E,aAAavgB,EAAEslB,WAC5D1nB,KAAKojB,MAAMT,aAAavgB,EAAEghB,QAElCC,EAAYxiB,UAAU4lB,WAAa,WAAc,OAAO,GACxDpD,EAAYxiB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACvD,OAAOD,EAAQ0I,iBAAiB3pB,KAAMkhB,IAE1CmC,EAAYxiB,UAAU0a,IAAM,SAAUvZ,GAClC,OAAO,IAAIylB,GAAaznB,KAAK0nB,SAAU1nB,KAAKojB,MAAOphB,EAAO,KAAMhC,KAAKijB,aAElEI,EAnBqB,CAoB9BN,IACE6G,GAAkC,SAAU7I,GAE5C,SAAS6I,EAAiBC,EAAS7G,EAAMC,GACrC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAEnD,OADAwU,EAAMqV,QAAUA,EACTrV,EASX,OAbA9T,EAAUkpB,EAAkB7I,GAM5B6I,EAAiB/oB,UAAU4lB,WAAa,WAAc,OAAOzmB,KAAK6pB,QAAQC,MAAM,SAAU1nB,GAAK,OAAOA,EAAEqkB,gBACxGmD,EAAiB/oB,UAAU8hB,aAAe,SAAUvgB,GAChD,OAAOA,aAAawnB,GAAoBhH,GAAiB5iB,KAAK6pB,QAASznB,EAAEynB,UAE7ED,EAAiB/oB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC5D,OAAOD,EAAQ8I,sBAAsB/pB,KAAMkhB,IAExC0I,EAd0B,CAenC7G,IACEiH,GAAiC,WACjC,SAASA,EAAgB7G,EAAKnhB,EAAOioB,GACjCjqB,KAAKmjB,IAAMA,EACXnjB,KAAKgC,MAAQA,EACbhC,KAAKiqB,OAASA,EAKlB,OAHAD,EAAgBnpB,UAAU8hB,aAAe,SAAUvgB,GAC/C,OAAOpC,KAAKmjB,MAAQ/gB,EAAE+gB,KAAOnjB,KAAKgC,MAAM2gB,aAAavgB,EAAEJ,QAEpDgoB,EATyB,GAWhCE,GAAgC,SAAUnJ,GAE1C,SAASmJ,EAAeL,EAAS7G,EAAMC,GACnC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMC,IAAejjB,KAMnD,OALAwU,EAAMqV,QAAUA,EAChBrV,EAAMmN,UAAY,KACdqB,IACAxO,EAAMmN,UAAYqB,EAAKrB,WAEpBnN,EASX,OAjBA9T,EAAUwpB,EAAgBnJ,GAU1BmJ,EAAerpB,UAAU8hB,aAAe,SAAUvgB,GAC9C,OAAOA,aAAa8nB,GAAkBtH,GAAiB5iB,KAAK6pB,QAASznB,EAAEynB,UAE3EK,EAAerpB,UAAU4lB,WAAa,WAAc,OAAOzmB,KAAK6pB,QAAQC,MAAM,SAAU1nB,GAAK,OAAOA,EAAEJ,MAAMykB,gBAC5GyD,EAAerpB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC1D,OAAOD,EAAQkJ,oBAAoBnqB,KAAMkhB,IAEtCgJ,EAlBwB,CAmBjCnH,IACEqH,GAA2B,SAAUrJ,GAErC,SAASqJ,EAAUC,EAAOpH,GACtB,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAMqqB,EAAMA,EAAM9oB,OAAS,GAAGyhB,KAAMC,IAAejjB,KAE3E,OADAwU,EAAM6V,MAAQA,EACP7V,EASX,OAbA9T,EAAU0pB,EAAWrJ,GAMrBqJ,EAAUvpB,UAAU8hB,aAAe,SAAUvgB,GACzC,OAAOA,aAAagoB,GAAaxH,GAAiB5iB,KAAKqqB,MAAOjoB,EAAEioB,QAEpED,EAAUvpB,UAAU4lB,WAAa,WAAc,OAAO,GACtD2D,EAAUvpB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GACrD,OAAOD,EAAQqJ,eAAetqB,KAAMkhB,IAEjCkJ,EAdmB,CAe5BrH,IAKEwH,IAJY,IAAIhE,GAAY9mB,EAAQqjB,WAAW0H,KAAM,KAAM,MAC9C,IAAIjE,GAAY9mB,EAAQqjB,WAAW2H,MAAO,KAAM,MAC3C,IAAIlE,GAAY9mB,EAAQqjB,WAAW4H,WAAY,KAAM,MACrD,IAAInE,GAAY9mB,EAAQqjB,WAAW6H,WAAY,KAAM,MAC3D,IAAIvC,GAAY,KAAM,KAAM,OACxCnC,GAAkB,IAAImC,GAAY,KAAMrG,GAAe,OAChDwF,GAKR9nB,EAAQ8nB,eAAiB9nB,EAAQ8nB,kBAJnBA,GAAoB,MAAI,GAAK,QAC1CA,GAAaA,GAAsB,QAAI,GAAK,UAC5CA,GAAaA,GAAuB,SAAI,GAAK,WAC7CA,GAAaA,GAAqB,OAAI,GAAK,SAE/C,IAAIqD,GAA2B,WAC3B,SAASA,EAAUlK,EAAWuC,GAC1BjjB,KAAK0gB,UAAYA,MACjB1gB,KAAKijB,WAAaA,GAAc,KAGpC,OADA2H,EAAU/pB,UAAU8f,YAAc,SAAUC,GAAY,OAA6C,IAAtC5gB,KAAK0gB,UAAU7d,QAAQ+d,IAC/EgK,EANmB,GAQ1BvD,GAAgC,SAAUtG,GAE1C,SAASsG,EAAepS,EAAMjT,EAAOghB,EAAMtC,EAAWuC,QAChC,IAAdvC,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,EAAWuC,IAAejjB,KAIxD,OAHAwU,EAAMS,KAAOA,EACbT,EAAMxS,MAAQA,EACdwS,EAAMwO,KAAOA,GAAShhB,GAASA,EAAMghB,MAAS,KACvCxO,EASX,OAhBA9T,EAAU2mB,EAAgBtG,GAS1BsG,EAAexmB,UAAU8hB,aAAe,SAAUkI,GAC9C,OAAOA,aAAgBxD,GAAkBrnB,KAAKiV,OAAS4V,EAAK5V,OACvDjV,KAAKgC,QAAU6oB,EAAK7oB,OAAShC,KAAKgC,MAAM2gB,aAAakI,EAAK7oB,QAAU6oB,EAAK7oB,QAElFqlB,EAAexmB,UAAUiqB,eAAiB,SAAU7J,EAASC,GACzD,OAAOD,EAAQ8J,oBAAoB/qB,KAAMkhB,IAEtCmG,EAjBwB,CAkBjCuD,IACEtB,GAAqC,SAAUvI,GAE/C,SAASuI,EAAoBrU,EAAMsO,EAAQ6F,EAAYpG,EAAMtC,EAAWuC,QAClD,IAAdvC,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,EAAWuC,IAAejjB,KAKxD,OAJAwU,EAAMS,KAAOA,EACbT,EAAM+O,OAASA,EACf/O,EAAM4U,WAAaA,EACnB5U,EAAMwO,KAAOA,GAAQ,KACdxO,EASX,OAjBA9T,EAAU4oB,EAAqBvI,GAU/BuI,EAAoBzoB,UAAU8hB,aAAe,SAAUkI,GACnD,OAAOA,aAAgBvB,GAAuB1G,GAAiB5iB,KAAKujB,OAAQsH,EAAKtH,SAC7EX,GAAiB5iB,KAAKopB,WAAYyB,EAAKzB,aAE/CE,EAAoBzoB,UAAUiqB,eAAiB,SAAU7J,EAASC,GAC9D,OAAOD,EAAQ+J,yBAAyBhrB,KAAMkhB,IAE3CoI,EAlB6B,CAmBtCsB,IACEvE,GAAqC,SAAUtF,GAE/C,SAASsF,EAAoBS,EAAM7D,GAC/B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAEnD,OADAwU,EAAMsS,KAAOA,EACNtS,EAQX,OAZA9T,EAAU2lB,EAAqBtF,GAM/BsF,EAAoBxlB,UAAU8hB,aAAe,SAAUkI,GACnD,OAAOA,aAAgBxE,GAAuBrmB,KAAK8mB,KAAKnE,aAAakI,EAAK/D,OAE9ET,EAAoBxlB,UAAUiqB,eAAiB,SAAU7J,EAASC,GAC9D,OAAOD,EAAQgK,oBAAoBjrB,KAAMkhB,IAEtCmF,EAb6B,CActCuE,IACEM,GAAiC,SAAUnK,GAE3C,SAASmK,EAAgBlpB,EAAOihB,GAC5B,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAEnD,OADAwU,EAAMxS,MAAQA,EACPwS,EAQX,OAZA9T,EAAUwqB,EAAiBnK,GAM3BmK,EAAgBrqB,UAAU8hB,aAAe,SAAUkI,GAC/C,OAAOA,aAAgBK,GAAmBlrB,KAAKgC,MAAM2gB,aAAakI,EAAK7oB,QAE3EkpB,EAAgBrqB,UAAUiqB,eAAiB,SAAU7J,EAASC,GAC1D,OAAOD,EAAQkK,gBAAgBnrB,KAAMkhB,IAElCgK,EAbyB,CAclCN,IACEQ,GAAmC,WACnC,SAASA,EAAkBpI,EAAMtC,GAC7B1gB,KAAK0gB,UAAYA,EACZA,IACD1gB,KAAK0gB,cAET1gB,KAAKgjB,KAAOA,GAAQ,KAGxB,OADAoI,EAAkBvqB,UAAU8f,YAAc,SAAUC,GAAY,OAA6C,IAAtC5gB,KAAK0gB,UAAU7d,QAAQ+d,IACvFwK,EAT2B,GAWlCC,GAA4B,SAAUtK,GAEtC,SAASsK,EAAWpW,EAAM+N,EAAMtC,EAAW4K,QACrB,IAAd5K,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMtC,IAAc1gB,KAGlD,OAFAwU,EAAMS,KAAOA,EACbT,EAAM8W,YAAcA,EACb9W,EAGX,OATA9T,EAAU2qB,EAAYtK,GAQtBsK,EAAWxqB,UAAU8hB,aAAe,SAAU4I,GAAK,OAAOvrB,KAAKiV,OAASsW,EAAEtW,MACnEoW,EAVoB,CAW7BD,IACEI,GAA6B,SAAUzK,GAEvC,SAASyK,EAAYvW,EAAMsO,EAAQkI,EAAMzI,EAAMtC,QACzB,IAAdA,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMtC,IAAc1gB,KAIlD,OAHAwU,EAAMS,KAAOA,EACbT,EAAM+O,OAASA,EACf/O,EAAMiX,KAAOA,EACNjX,EAKX,OAZA9T,EAAU8qB,EAAazK,GASvByK,EAAY3qB,UAAU8hB,aAAe,SAAU/gB,GAC3C,OAAO5B,KAAKiV,OAASrT,EAAEqT,MAAQ2N,GAAiB5iB,KAAKyrB,KAAM7pB,EAAE6pB,OAE1DD,EAbqB,CAc9BJ,IACEM,GAA6B,SAAU3K,GAEvC,SAAS2K,EAAYzW,EAAMwW,EAAMzI,EAAMtC,QACjB,IAAdA,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAMgjB,EAAMtC,IAAc1gB,KAGlD,OAFAwU,EAAMS,KAAOA,EACbT,EAAMiX,KAAOA,EACNjX,EAKX,OAXA9T,EAAUgrB,EAAa3K,GAQvB2K,EAAY7qB,UAAU8hB,aAAe,SAAU/gB,GAC3C,OAAO5B,KAAKiV,OAASrT,EAAEqT,MAAQ2N,GAAiB5iB,KAAKyrB,KAAM7pB,EAAE6pB,OAE1DC,EAZqB,CAa9BN,IACEO,GAA2B,SAAU5K,GAErC,SAAS4K,EAAU1W,EAAM2W,EAAQC,EAAQC,EAASC,EAAmBC,EAAStL,EAAWuC,QACnE,IAAdvC,IAAwBA,EAAY,MACxC,IAAIlM,EAAQuM,EAAOvf,KAAKxB,KAAM0gB,EAAWuC,IAAejjB,KAOxD,OANAwU,EAAMS,KAAOA,EACbT,EAAMoX,OAASA,EACfpX,EAAMqX,OAASA,EACfrX,EAAMsX,QAAUA,EAChBtX,EAAMuX,kBAAoBA,EAC1BvX,EAAMwX,QAAUA,EACTxX,EAaX,OAvBA9T,EAAUirB,EAAW5K,GAYrB4K,EAAU9qB,UAAU8hB,aAAe,SAAUkI,GACzC,OAAOA,aAAgBc,GAAa3rB,KAAKiV,OAAS4V,EAAK5V,MACnDwN,GAAqBziB,KAAK4rB,OAAQf,EAAKe,SACvChJ,GAAiB5iB,KAAK6rB,OAAQhB,EAAKgB,SACnCjJ,GAAiB5iB,KAAK8rB,QAASjB,EAAKiB,UACpC9rB,KAAK+rB,kBAAkBpJ,aAAakI,EAAKkB,oBACzCnJ,GAAiB5iB,KAAKgsB,QAASnB,EAAKmB,UAE5CL,EAAU9qB,UAAUiqB,eAAiB,SAAU7J,EAASC,GACpD,OAAOD,EAAQgL,sBAAsBjsB,KAAMkhB,IAExCyK,EAxBmB,CAyB5Bf,IACEsB,GAAwB,SAAUnL,GAElC,SAASmL,EAAOvD,EAAW7E,EAAUC,EAAWd,QAC1B,IAAdc,IAAwBA,MAC5B,IAAIvP,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAInD,OAHAwU,EAAMmU,UAAYA,EAClBnU,EAAMsP,SAAWA,EACjBtP,EAAMuP,UAAYA,EACXvP,EAUX,OAjBA9T,EAAUwrB,EAAQnL,GASlBmL,EAAOrrB,UAAU8hB,aAAe,SAAUkI,GACtC,OAAOA,aAAgBqB,GAAUlsB,KAAK2oB,UAAUhG,aAAakI,EAAKlC,YAC9D/F,GAAiB5iB,KAAK8jB,SAAU+G,EAAK/G,WACrClB,GAAiB5iB,KAAK+jB,UAAW8G,EAAK9G,YAE9CmI,EAAOrrB,UAAUiqB,eAAiB,SAAU7J,EAASC,GACjD,OAAOD,EAAQkL,YAAYnsB,KAAMkhB,IAE9BgL,EAlBgB,CAmBzBtB,IACEwB,GAA6B,SAAUrL,GAEvC,SAASqL,EAAYC,EAASC,EAAWrJ,QACnB,IAAdqJ,IAAwBA,GAAY,GACxC,IAAI9X,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAGnD,OAFAwU,EAAM6X,QAAUA,EAChB7X,EAAM8X,UAAYA,EACX9X,EAMX,OAZA9T,EAAU0rB,EAAarL,GAQvBqL,EAAYvrB,UAAU8hB,aAAe,SAAUkI,GAAQ,OAAOA,aAAgBuB,GAC9EA,EAAYvrB,UAAUiqB,eAAiB,SAAU7J,EAASC,GACtD,OAAOD,EAAQsL,iBAAiBvsB,KAAMkhB,IAEnCkL,EAbqB,CAc9BxB,IACE4B,GAAkC,SAAUzL,GAE5C,SAASyL,EAAiBC,EAAMxJ,QACf,IAATwJ,IAAmBA,MACvB,IAAIjY,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAEnD,OADAwU,EAAMiY,KAAOA,EACNjY,EASX,OAdA9T,EAAU8rB,EAAkBzL,GAO5ByL,EAAiB3rB,UAAU8hB,aAAe,SAAUkI,GAChD,OAAOA,aAAgB2B,GAAoBxsB,KAAKyZ,aAAeoR,EAAKpR,YAExE+S,EAAiB3rB,UAAUiqB,eAAiB,SAAU7J,EAASC,GAC3D,OAAOD,EAAQyL,sBAAsB1sB,KAAMkhB,IAE/CsL,EAAiB3rB,UAAU4Y,SAAW,WAAc,OAiexD,SAASkT,EAAcF,GACnB,IAAIG,EAAKlZ,EACT,GAAoB,IAAhB+Y,EAAKlrB,OACL,MAAO,GACX,IAAIsrB,EAAM,MACV,IACI,IAAK,IAAIC,EAASprB,EAAS+qB,GAAOM,EAAWD,EAAO/qB,QAASgrB,EAAS9qB,KAAM8qB,EAAWD,EAAO/qB,OAE1F8qB,GAAO,KAEPA,GAAOG,GAHGD,EAAS/qB,OAGKirB,QAAQ,MAAO,SACvCJ,GAAO,KAGf,MAAOK,GAASN,GAAQrqB,MAAO2qB,GAC/B,QACI,IACQH,IAAaA,EAAS9qB,OAASyR,EAAKoZ,EAAOK,SAASzZ,EAAGlS,KAAKsrB,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAIrqB,OAGjC,OADAsqB,EAAO;;;;;;;OAtfoDF,CAAc3sB,KAAKysB,OACvED,EAf0B,CAgBnC5B,IACEwC,GAA8B,SAAUrM,GAExC,SAASqM,EAAaC,EAAWC,EAAYrK,GACzC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAGnD,OAFAwU,EAAM6Y,UAAYA,EAClB7Y,EAAM8Y,WAAaA,EACZ9Y,EASX,OAdA9T,EAAU0sB,EAAcrM,GAOxBqM,EAAavsB,UAAU8hB,aAAe,SAAUkI,GAC5C,OAAOA,aAAgBuC,GAAgBxK,GAAiB5iB,KAAKqtB,UAAWxC,EAAKwC,YACzEzK,GAAiB5iB,KAAKstB,WAAYzC,EAAKyC,aAE/CF,EAAavsB,UAAUiqB,eAAiB,SAAU7J,EAASC,GACvD,OAAOD,EAAQsM,kBAAkBvtB,KAAMkhB,IAEpCkM,EAfsB,CAgB/BxC,IACE4C,GAA2B,SAAUzM,GAErC,SAASyM,EAAUjrB,EAAO0gB,GACtB,IAAIzO,EAAQuM,EAAOvf,KAAKxB,KAAM,KAAMijB,IAAejjB,KAEnD,OADAwU,EAAMjS,MAAQA,EACPiS,EAQX,OAZA9T,EAAU8sB,EAAWzM,GAMrByM,EAAU3sB,UAAU8hB,aAAe,SAAUkI,GACzC,OAAOA,aAAgBuC,IAAgBptB,KAAKuC,MAAMogB,aAAakI,EAAKtoB,QAExEirB,EAAU3sB,UAAUiqB,eAAiB,SAAU7J,EAASC,GACpD,OAAOD,EAAQwM,eAAeztB,KAAMkhB,IAEjCsM,EAbmB,CAc5B5C,IACE8C,GAAgC,WAChC,SAASA,KAmHT,OAjHAA,EAAe7sB,UAAU8sB,cAAgB,SAAU7G,EAAM5F,GAAW,OAAO4F,GAC3E4G,EAAe7sB,UAAU+sB,cAAgB,SAAU/C,EAAM3J,GAAW,OAAO2J,GAC3E6C,EAAe7sB,UAAU8lB,iBAAmB,SAAUkH,EAAK3M,GAAW,OAAOlhB,KAAK2tB,cAAcE,EAAK3M,IACrGwM,EAAe7sB,UAAUqmB,qBAAuB,SAAU2G,EAAK3M,GAC3D,OAAOlhB,KAAK2tB,cAAcE,EAAK3M,IAEnCwM,EAAe7sB,UAAUkmB,gBAAkB,SAAUD,EAAM5F,GACvD,OAAOlhB,KAAK2tB,cAAc,IAAI9G,GAAWC,EAAKA,KAAKJ,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK9D,KAAM8D,EAAK7D,YAAa/B,IAEpHwM,EAAe7sB,UAAUsmB,kBAAoB,SAAUL,EAAM5F,GACzD,OAAOlhB,KAAK2tB,cAAc,IAAI/G,GAAaE,EAAK7R,KAAM6R,EAAK9kB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK9D,KAAM8D,EAAK7D,YAAa/B,IAElIwM,EAAe7sB,UAAU8mB,kBAAoB,SAAUb,EAAM5F,GACzD,OAAOlhB,KAAK2tB,cAAc,IAAIlG,GAAaX,EAAKY,SAAShB,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK1D,MAAMsD,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK9kB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK9D,KAAM8D,EAAK7D,YAAa/B,IAEhNwM,EAAe7sB,UAAUgnB,mBAAqB,SAAUf,EAAM5F,GAC1D,OAAOlhB,KAAK2tB,cAAc,IAAI/F,GAAcd,EAAKY,SAAShB,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK7R,KAAM6R,EAAK9kB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAAU4F,EAAK9D,KAAM8D,EAAK7D,YAAa/B,IAEjLwM,EAAe7sB,UAAUknB,sBAAwB,SAAU8F,EAAK3M,GAC5D,IAAI4G,EAAS+F,EAAIrH,SAAWqH,EAAI5Y,KAChC,OAAOjV,KAAK2tB,cAAc,IAAInK,GAAiBqK,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GAAU4G,EAAQ9nB,KAAK8tB,oBAAoBD,EAAIlP,KAAMuC,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAEhLwM,EAAe7sB,UAAUonB,wBAA0B,SAAU4F,EAAK3M,GAC9D,OAAOlhB,KAAK2tB,cAAc,IAAIjK,GAAmBmK,EAAI7F,GAAGtB,gBAAgB1mB,KAAMkhB,GAAUlhB,KAAK8tB,oBAAoBD,EAAIlP,KAAMuC,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAEpKwM,EAAe7sB,UAAUsnB,qBAAuB,SAAU0F,EAAK3M,GAC3D,OAAOlhB,KAAK2tB,cAAc,IAAI/J,GAAgBiK,EAAI3F,UAAUxB,gBAAgB1mB,KAAMkhB,GAAUlhB,KAAK8tB,oBAAoBD,EAAIlP,KAAMuC,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAExKwM,EAAe7sB,UAAUwnB,iBAAmB,SAAUwF,EAAK3M,GAAW,OAAOlhB,KAAK2tB,cAAcE,EAAK3M,IACrGwM,EAAe7sB,UAAU4nB,kBAAoB,SAAUoF,EAAK3M,GACxD,OAAOlhB,KAAK2tB,cAAcE,EAAK3M,IAEnCwM,EAAe7sB,UAAU+nB,qBAAuB,SAAUiF,EAAK3M,GAC3D,OAAOlhB,KAAK2tB,cAAc,IAAI3J,GAAgB6J,EAAIlF,UAAUjC,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI/J,SAAS4C,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI9J,UAAU2C,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAEtNwM,EAAe7sB,UAAUioB,aAAe,SAAU+E,EAAK3M,GACnD,OAAOlhB,KAAK2tB,cAAc,IAAI9E,GAAQgF,EAAIlF,UAAUjC,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI5K,YAAa/B,IAEzGwM,EAAe7sB,UAAUmoB,uBAAyB,SAAU6E,EAAK3M,GAC7D,OAAOlhB,KAAK2tB,cAAc,IAAI5E,GAAc8E,EAAIlF,UAAUjC,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI5K,YAAa/B,IAE/GwM,EAAe7sB,UAAUooB,cAAgB,SAAU4E,EAAK3M,GACpD,OAAOlhB,KAAK2tB,cAAc,IAAIxH,GAAS0H,EAAI7rB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAEhHwM,EAAe7sB,UAAUwoB,kBAAoB,SAAUwE,EAAK3M,GACxD,OAAOlhB,KAAK2tB,cAAc,IAAIxE,GAAa0E,EAAItK,OAAQvjB,KAAK+tB,mBAAmBF,EAAIzE,WAAYlI,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAExIwM,EAAe7sB,UAAU4oB,wBAA0B,SAAUoE,EAAK3M,GAC9D,OAAOlhB,KAAK2tB,cAAc,IAAIxJ,GAAmB0J,EAAItE,SAAUsE,EAAIrE,IAAI9C,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI3J,IAAIwC,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAE9KwM,EAAe7sB,UAAU6oB,kBAAoB,SAAUmE,EAAK3M,GACxD,OAAOlhB,KAAK2tB,cAAc,IAAIzK,GAAa2K,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI5Y,KAAM4Y,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAEjIwM,EAAe7sB,UAAU8oB,iBAAmB,SAAUkE,EAAK3M,GACvD,OAAOlhB,KAAK2tB,cAAc,IAAItK,GAAYwK,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GAAU2M,EAAIzK,MAAMsD,gBAAgB1mB,KAAMkhB,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAEhKwM,EAAe7sB,UAAUkpB,sBAAwB,SAAU8D,EAAK3M,GAC5D,OAAOlhB,KAAK2tB,cAAc,IAAI/D,GAAiB5pB,KAAK8tB,oBAAoBD,EAAIhE,QAAS3I,GAAU2M,EAAI7K,KAAM6K,EAAI5K,YAAa/B,IAE9HwM,EAAe7sB,UAAUspB,oBAAsB,SAAU0D,EAAK3M,GAC1D,IAAI1M,EAAQxU,KACR6pB,EAAUgE,EAAIhE,QAAQnO,IAAI,SAAUsS,GAAS,OAAO,IAAIhE,GAAgBgE,EAAM7K,IAAK6K,EAAMhsB,MAAM0kB,gBAAgBlS,EAAO0M,GAAU8M,EAAM/D,UACtIgE,EAAU,IAAIvM,GAAQmM,EAAIlM,UAAW,MACzC,OAAO3hB,KAAK2tB,cAAc,IAAIzD,GAAeL,EAASoE,EAASJ,EAAI5K,YAAa/B,IAEpFwM,EAAe7sB,UAAUypB,eAAiB,SAAUuD,EAAK3M,GACrD,OAAOlhB,KAAK2tB,cAAc,IAAIvD,GAAUpqB,KAAK8tB,oBAAoBD,EAAIxD,MAAOnJ,GAAU2M,EAAI5K,YAAa/B,IAE3GwM,EAAe7sB,UAAUitB,oBAAsB,SAAUI,EAAOhN,GAC5D,IAAI1M,EAAQxU,KACZ,OAAOkuB,EAAMxS,IAAI,SAAUoL,GAAQ,OAAOA,EAAKJ,gBAAgBlS,EAAO0M,MAE1EwM,EAAe7sB,UAAUkqB,oBAAsB,SAAUF,EAAM3J,GAC3D,IAAIlf,EAAQ6oB,EAAK7oB,OAAS6oB,EAAK7oB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAC3D,OAAOlhB,KAAK4tB,cAAc,IAAIvG,GAAewD,EAAK5V,KAAMjT,EAAO6oB,EAAK7H,KAAM6H,EAAKnK,UAAWmK,EAAK5H,YAAa/B,IAEhHwM,EAAe7sB,UAAUmqB,yBAA2B,SAAUH,EAAM3J,GAChE,OAAOlhB,KAAK4tB,cAAc,IAAItE,GAAoBuB,EAAK5V,KAAM4V,EAAKtH,OAAQvjB,KAAK+tB,mBAAmBlD,EAAKzB,WAAYlI,GAAU2J,EAAK7H,KAAM6H,EAAKnK,UAAWmK,EAAK5H,YAAa/B,IAE9KwM,EAAe7sB,UAAUoqB,oBAAsB,SAAUJ,EAAM3J,GAC3D,OAAOlhB,KAAK4tB,cAAc,IAAIvH,GAAoBwE,EAAK/D,KAAKJ,gBAAgB1mB,KAAMkhB,GAAU2J,EAAK5H,YAAa/B,IAElHwM,EAAe7sB,UAAUsqB,gBAAkB,SAAUN,EAAM3J,GACvD,OAAOlhB,KAAK4tB,cAAc,IAAI1C,GAAgBL,EAAK7oB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAAU2J,EAAK5H,YAAa/B,IAE/GwM,EAAe7sB,UAAUorB,sBAAwB,SAAUpB,EAAM3J,GAC7D,IAAI1M,EAAQxU,KACR4rB,EAASf,EAAKe,OAAOlF,gBAAgB1mB,KAAMkhB,GAC3C4K,EAAUjB,EAAKiB,QAAQpQ,IAAI,SAAUyS,GAAU,OAAO,IAAIzC,GAAYyC,EAAOlZ,KAAMT,EAAMuZ,mBAAmBI,EAAO1C,KAAMvK,GAAUiN,EAAOnL,KAAMmL,EAAOzN,aACvJ0N,EAAavD,EAAKkB,mBAClB,IAAIP,GAAYX,EAAKkB,kBAAkB9W,KAAM4V,EAAKkB,kBAAkBxI,OAAQvjB,KAAK+tB,mBAAmBlD,EAAKkB,kBAAkBN,KAAMvK,GAAU2J,EAAKkB,kBAAkB/I,KAAM6H,EAAKkB,kBAAkBrL,WAC/LsL,EAAUnB,EAAKmB,QAAQtQ,IAAI,SAAUoM,GAAU,OAAO,IAAI0D,GAAY1D,EAAO7S,KAAM6S,EAAOvE,OAAQ/O,EAAMuZ,mBAAmBjG,EAAO2D,KAAMvK,GAAU4G,EAAO9E,KAAM8E,EAAOpH,aAC1K,OAAO1gB,KAAK4tB,cAAc,IAAIjC,GAAUd,EAAK5V,KAAM2W,EAAQf,EAAKgB,OAAQC,EAASsC,EAAYpC,EAASnB,EAAKnK,UAAWmK,EAAK5H,YAAa/B,IAE5IwM,EAAe7sB,UAAUsrB,YAAc,SAAUtB,EAAM3J,GACnD,OAAOlhB,KAAK4tB,cAAc,IAAI1B,GAAOrB,EAAKlC,UAAUjC,gBAAgB1mB,KAAMkhB,GAAUlhB,KAAK+tB,mBAAmBlD,EAAK/G,SAAU5C,GAAUlhB,KAAK+tB,mBAAmBlD,EAAK9G,UAAW7C,GAAU2J,EAAK5H,YAAa/B,IAE7MwM,EAAe7sB,UAAU0sB,kBAAoB,SAAU1C,EAAM3J,GACzD,OAAOlhB,KAAK4tB,cAAc,IAAIR,GAAaptB,KAAK+tB,mBAAmBlD,EAAKwC,UAAWnM,GAAUlhB,KAAK+tB,mBAAmBlD,EAAKyC,WAAYpM,GAAU2J,EAAK5H,YAAa/B,IAEtKwM,EAAe7sB,UAAU4sB,eAAiB,SAAU5C,EAAM3J,GACtD,OAAOlhB,KAAK4tB,cAAc,IAAIJ,GAAU3C,EAAKtoB,MAAMmkB,gBAAgB1mB,KAAMkhB,GAAU2J,EAAK5H,YAAa/B,IAEzGwM,EAAe7sB,UAAU0rB,iBAAmB,SAAU1B,EAAM3J,GACxD,OAAOlhB,KAAK4tB,cAAc/C,EAAM3J,IAEpCwM,EAAe7sB,UAAU6rB,sBAAwB,SAAU7B,EAAM3J,GAC7D,OAAOlhB,KAAK4tB,cAAc/C,EAAM3J,IAEpCwM,EAAe7sB,UAAUktB,mBAAqB,SAAUM,EAAOnN,GAC3D,IAAI1M,EAAQxU,KACZ,OAAOquB,EAAM3S,IAAI,SAAUmP,GAAQ,OAAOA,EAAKC,eAAetW,EAAO0M,MAElEwM,EApHwB,GAsH/BY,GAAqC,WACrC,SAASA,KA6KT,OA3KAA,EAAoBztB,UAAUmgB,UAAY,SAAU6M,EAAK3M,GAAW,OAAO2M,GAC3ES,EAAoBztB,UAAU6lB,gBAAkB,SAAUmH,EAAK3M,GAI3D,OAHI2M,EAAI7K,MACJ6K,EAAI7K,KAAKhC,UAAUhhB,KAAMkhB,GAEtB2M,GAEXS,EAAoBztB,UAAUsgB,iBAAmB,SAAU6B,EAAM9B,GAAW,OAAOlhB,KAAKghB,UAAUgC,EAAM9B,IACxGoN,EAAoBztB,UAAUygB,oBAAsB,SAAU0B,EAAM9B,GAChE,IAAI1M,EAAQxU,KAKZ,OAJAgjB,EAAKhhB,MAAM0kB,gBAAgB1mB,KAAMkhB,GACT,OAApB8B,EAAK3B,YACL2B,EAAK3B,WAAW3M,QAAQ,SAAUgB,GAAS,OAAOlB,EAAMwM,UAAUtL,EAAOwL,KAEtElhB,KAAKghB,UAAUgC,EAAM9B,IAEhCoN,EAAoBztB,UAAU4gB,eAAiB,SAAUuB,EAAM9B,GAAW,OAAOlhB,KAAKghB,UAAUgC,EAAM9B,IACtGoN,EAAoBztB,UAAU+gB,aAAe,SAAUoB,EAAM9B,GAAW,OAAOlhB,KAAKghB,UAAUgC,EAAM9B,IACpGoN,EAAoBztB,UAAUqmB,qBAAuB,SAAU2G,EAAK3M,GAAW,OAAO2M,GACtFS,EAAoBztB,UAAUkmB,gBAAkB,SAAU8G,EAAK3M,GAAW,OAAOlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAC3GoN,EAAoBztB,UAAU8lB,iBAAmB,SAAUkH,EAAK3M,GAC5D,OAAOlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUsmB,kBAAoB,SAAU0G,EAAK3M,GAE7D,OADA2M,EAAI7rB,MAAM0kB,gBAAgB1mB,KAAMkhB,GACzBlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAU8mB,kBAAoB,SAAUkG,EAAK3M,GAI7D,OAHA2M,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GACnC2M,EAAIzK,MAAMsD,gBAAgB1mB,KAAMkhB,GAChC2M,EAAI7rB,MAAM0kB,gBAAgB1mB,KAAMkhB,GACzBlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUgnB,mBAAqB,SAAUgG,EAAK3M,GAG9D,OAFA2M,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GACnC2M,EAAI7rB,MAAM0kB,gBAAgB1mB,KAAMkhB,GACzBlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUknB,sBAAwB,SAAU8F,EAAK3M,GAGjE,OAFA2M,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GACnClhB,KAAK8tB,oBAAoBD,EAAIlP,KAAMuC,GAC5BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUonB,wBAA0B,SAAU4F,EAAK3M,GAGnE,OAFA2M,EAAI7F,GAAGtB,gBAAgB1mB,KAAMkhB,GAC7BlhB,KAAK8tB,oBAAoBD,EAAIlP,KAAMuC,GAC5BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUsnB,qBAAuB,SAAU0F,EAAK3M,GAGhE,OAFA2M,EAAI3F,UAAUxB,gBAAgB1mB,KAAMkhB,GACpClhB,KAAK8tB,oBAAoBD,EAAIlP,KAAMuC,GAC5BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUwnB,iBAAmB,SAAUwF,EAAK3M,GAC5D,OAAOlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAU4nB,kBAAoB,SAAUoF,EAAK3M,GAC7D,IAAI1M,EAAQxU,KAIZ,OAHI6tB,EAAIxM,YACJwM,EAAIxM,WAAW3M,QAAQ,SAAUsO,GAAQ,OAAOA,EAAKhC,UAAUxM,EAAO0M,KAEnElhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAU+nB,qBAAuB,SAAUiF,EAAK3M,GAIhE,OAHA2M,EAAIlF,UAAUjC,gBAAgB1mB,KAAMkhB,GACpC2M,EAAI/J,SAAS4C,gBAAgB1mB,KAAMkhB,GACnC2M,EAAI9J,UAAU2C,gBAAgB1mB,KAAMkhB,GAC7BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUioB,aAAe,SAAU+E,EAAK3M,GAExD,OADA2M,EAAIlF,UAAUjC,gBAAgB1mB,KAAMkhB,GAC7BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUmoB,uBAAyB,SAAU6E,EAAK3M,GAElE,OADA2M,EAAIlF,UAAUjC,gBAAgB1mB,KAAMkhB,GAC7BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUooB,cAAgB,SAAU4E,EAAK3M,GAEzD,OADA2M,EAAI7rB,MAAM0kB,gBAAgB1mB,KAAMkhB,GACzBlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUwoB,kBAAoB,SAAUwE,EAAK3M,GAE7D,OADAlhB,KAAK+tB,mBAAmBF,EAAIzE,WAAYlI,GACjClhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAU4oB,wBAA0B,SAAUoE,EAAK3M,GAGnE,OAFA2M,EAAIrE,IAAI9C,gBAAgB1mB,KAAMkhB,GAC9B2M,EAAI3J,IAAIwC,gBAAgB1mB,KAAMkhB,GACvBlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAU6oB,kBAAoB,SAAUmE,EAAK3M,GAE7D,OADA2M,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GAC5BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAU8oB,iBAAmB,SAAUkE,EAAK3M,GAG5D,OAFA2M,EAAInG,SAAShB,gBAAgB1mB,KAAMkhB,GACnC2M,EAAIzK,MAAMsD,gBAAgB1mB,KAAMkhB,GACzBlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUkpB,sBAAwB,SAAU8D,EAAK3M,GAEjE,OADAlhB,KAAK8tB,oBAAoBD,EAAIhE,QAAS3I,GAC/BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUspB,oBAAsB,SAAU0D,EAAK3M,GAC/D,IAAI1M,EAAQxU,KAEZ,OADA6tB,EAAIhE,QAAQnV,QAAQ,SAAUsZ,GAAS,OAAOA,EAAMhsB,MAAM0kB,gBAAgBlS,EAAO0M,KAC1ElhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUypB,eAAiB,SAAUuD,EAAK3M,GAE1D,OADAlhB,KAAK8tB,oBAAoBD,EAAIxD,MAAOnJ,GAC7BlhB,KAAK0mB,gBAAgBmH,EAAK3M,IAErCoN,EAAoBztB,UAAUitB,oBAAsB,SAAUI,EAAOhN,GACjE,IAAI1M,EAAQxU,KACZkuB,EAAMxZ,QAAQ,SAAUoS,GAAQ,OAAOA,EAAKJ,gBAAgBlS,EAAO0M,MAEvEoN,EAAoBztB,UAAUkqB,oBAAsB,SAAUF,EAAM3J,GAOhE,OANI2J,EAAK7oB,OACL6oB,EAAK7oB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAEjC2J,EAAK7H,MACL6H,EAAK7H,KAAKhC,UAAUhhB,KAAMkhB,GAEvB2J,GAEXyD,EAAoBztB,UAAUmqB,yBAA2B,SAAUH,EAAM3J,GAKrE,OAJAlhB,KAAK+tB,mBAAmBlD,EAAKzB,WAAYlI,GACrC2J,EAAK7H,MACL6H,EAAK7H,KAAKhC,UAAUhhB,KAAMkhB,GAEvB2J,GAEXyD,EAAoBztB,UAAUoqB,oBAAsB,SAAUJ,EAAM3J,GAEhE,OADA2J,EAAK/D,KAAKJ,gBAAgB1mB,KAAMkhB,GACzB2J,GAEXyD,EAAoBztB,UAAUsqB,gBAAkB,SAAUN,EAAM3J,GAE5D,OADA2J,EAAK7oB,MAAM0kB,gBAAgB1mB,KAAMkhB,GAC1B2J,GAEXyD,EAAoBztB,UAAUorB,sBAAwB,SAAUpB,EAAM3J,GAClE,IAAI1M,EAAQxU,KAOZ,OANA6qB,EAAKe,OAAOlF,gBAAgB1mB,KAAMkhB,GAClC2J,EAAKiB,QAAQpX,QAAQ,SAAUyZ,GAAU,OAAO3Z,EAAMuZ,mBAAmBI,EAAO1C,KAAMvK,KAClF2J,EAAKkB,mBACL/rB,KAAK+tB,mBAAmBlD,EAAKkB,kBAAkBN,KAAMvK,GAEzD2J,EAAKmB,QAAQtX,QAAQ,SAAUoT,GAAU,OAAOtT,EAAMuZ,mBAAmBjG,EAAO2D,KAAMvK,KAC/E2J,GAEXyD,EAAoBztB,UAAUsrB,YAAc,SAAUtB,EAAM3J,GAIxD,OAHA2J,EAAKlC,UAAUjC,gBAAgB1mB,KAAMkhB,GACrClhB,KAAK+tB,mBAAmBlD,EAAK/G,SAAU5C,GACvClhB,KAAK+tB,mBAAmBlD,EAAK9G,UAAW7C,GACjC2J,GAEXyD,EAAoBztB,UAAU0sB,kBAAoB,SAAU1C,EAAM3J,GAG9D,OAFAlhB,KAAK+tB,mBAAmBlD,EAAKwC,UAAWnM,GACxClhB,KAAK+tB,mBAAmBlD,EAAKyC,WAAYpM,GAClC2J,GAEXyD,EAAoBztB,UAAU4sB,eAAiB,SAAU5C,EAAM3J,GAE3D,OADA2J,EAAKtoB,MAAMmkB,gBAAgB1mB,KAAMkhB,GAC1B2J,GAEXyD,EAAoBztB,UAAU0rB,iBAAmB,SAAU1B,EAAM3J,GAAW,OAAO2J,GACnFyD,EAAoBztB,UAAU6rB,sBAAwB,SAAU7B,EAAM3J,GAAW,OAAO2J,GACxFyD,EAAoBztB,UAAUktB,mBAAqB,SAAUM,EAAOnN,GAChE,IAAI1M,EAAQxU,KACZquB,EAAM3Z,QAAQ,SAAUmW,GAAQ,OAAOA,EAAKC,eAAetW,EAAO0M,MAE/DoN,EA9K6B,GAgLxC,SAASC,GAAiBF,GACtB,IAAIpN,EAAU,IAAIuN,GAElB,OADAvN,EAAQ8M,mBAAmBM,EAAO,MAC3BpN,EAAQwN,SAEnB,IAAID,GAAiC,SAAUzN,GAE3C,SAASyN,IACL,IAAIha,EAAmB,OAAXuM,GAAmBA,EAAOtf,MAAMzB,KAAMsB,YAActB,KAEhE,OADAwU,EAAMia,SAAW,IAAIC,IACdla,EAgBX,OApBA9T,EAAU8tB,EAAiBzN,GAM3ByN,EAAgB3tB,UAAUmqB,yBAA2B,SAAUH,EAAM3J,GAEjE,OAAO2J,GAEX2D,EAAgB3tB,UAAUorB,sBAAwB,SAAUpB,EAAM3J,GAE9D,OAAO2J,GAEX2D,EAAgB3tB,UAAU8lB,iBAAmB,SAAUkH,EAAK3M,GAIxD,OAHI2M,EAAI5Y,MACJjV,KAAKyuB,SAASE,IAAId,EAAI5Y,MAEnB,MAEJuZ,EArByB,CAsBlCF,IAMEM,GAAgD,SAAU7N,GAE1D,SAAS6N,IACL,IAAIpa,EAAmB,OAAXuM,GAAmBA,EAAOtf,MAAMzB,KAAMsB,YAActB,KAEhE,OADAwU,EAAMqa,sBACCra,EAMX,OAVA9T,EAAUkuB,EAAgC7N,GAM1C6N,EAA+B/tB,UAAU4nB,kBAAoB,SAAUrmB,EAAG8e,GAEtE,OADAlhB,KAAK6uB,mBAAmBvsB,KAAKF,EAAEJ,OACxB+e,EAAOlgB,UAAU4nB,kBAAkBjnB,KAAKxB,KAAMoC,EAAG8e,IAErD0N,EAXwC,CAYjDN,IACF,SAASQ,GAAmCjE,EAAM5H,GAC9C,IAAKA,EACD,OAAO4H,EAEX,IAAIkE,EAAc,IAAIC,GAA4B/L,GAClD,OAAO4H,EAAKC,eAAeiE,EAAa,MAE5C,SAASE,GAAoCnI,EAAM7D,GAC/C,IAAKA,EACD,OAAO6D,EAEX,IAAIiI,EAAc,IAAIC,GAA4B/L,GAClD,OAAO6D,EAAKJ,gBAAgBqI,EAAa,MAE7C,IAAIC,GAA6C,SAAUjO,GAEvD,SAASiO,EAA4B/L,GACjC,IAAIzO,EAAQuM,EAAOvf,KAAKxB,OAASA,KAEjC,OADAwU,EAAMyO,WAAaA,EACZzO,EAuBX,OA3BA9T,EAAUsuB,EAA6BjO,GAMvCiO,EAA4BnuB,UAAUquB,OAAS,SAAUrP,GACrD,IAAIsP,EAAQ/uB,OAAOU,OAAO+e,EAAIjf,YAAYC,WAC1C,IAAK,IAAI4N,KAAQoR,EACbsP,EAAM1gB,GAAQoR,EAAIpR,GAEtB,OAAO0gB,GAEXH,EAA4BnuB,UAAU8sB,cAAgB,SAAU7G,EAAM5F,GAKlE,OAJK4F,EAAK7D,cACN6D,EAAO9mB,KAAKkvB,OAAOpI,IACd7D,WAAajjB,KAAKijB,YAEpB6D,GAEXkI,EAA4BnuB,UAAU+sB,cAAgB,SAAU/C,EAAM3J,GAKlE,OAJK2J,EAAK5H,cACN4H,EAAO7qB,KAAKkvB,OAAOrE,IACd5H,WAAajjB,KAAKijB,YAEpB4H,GAEJmE,EA5BqC,CA6B9CtB,IACF,SAAS0B,GAASna,EAAM+N,EAAMC,GAC1B,OAAO,IAAIsD,GAAYtR,EAAM+N,EAAMC,GAEvC,SAASoM,GAAWC,EAAIjO,EAAY4B,GAEhC,YADmB,IAAf5B,IAAyBA,EAAa,MACnC,IAAIiH,GAAagH,EAAI,KAAMjO,EAAY4B,GAElD,SAASsM,GAAWD,EAAIjO,EAAYmO,GAGhC,YAFmB,IAAfnO,IAAyBA,EAAa,WACpB,IAAlBmO,IAA4BA,EAAgB,MACnC,MAANF,EAAaG,GAAeJ,GAAWC,EAAIjO,EAAY,MAAOmO,GAAiB,KAE1F,SAASC,GAAe3I,EAAM0I,EAAenO,GAGzC,YAFsB,IAAlBmO,IAA4BA,EAAgB,WAC7B,IAAfnO,IAAyBA,EAAa,MACnC,IAAID,GAAe0F,EAAM0I,EAAenO,GAKnD,SAASqO,GAAWhQ,EAAQsD,EAAMC,GAC9B,OAAO,IAAI2G,GAAiBlK,EAAQsD,EAAMC,GAE9C,SAAS0M,GAAWjQ,EAAQsD,GAExB,YADa,IAATA,IAAmBA,EAAO,MACvB,IAAIkH,GAAexK,EAAOhE,IAAI,SAAUtZ,GAAK,OAAO,IAAI4nB,GAAgB5nB,EAAE+gB,IAAK/gB,EAAEJ,MAAOI,EAAE6nB,UAAajH,EAAM,MAQxH,SAASgF,GAAGzE,EAAQkI,EAAMzI,EAAMC,EAAYhO,GACxC,OAAO,IAAIkU,GAAa5F,EAAQkI,EAAMzI,EAAMC,EAAYhO,GAE5D,SAAS2a,GAAOjH,EAAWkH,EAAYC,GACnC,OAAO,IAAI5D,GAAOvD,EAAWkH,EAAYC,GAE7C,SAASC,GAAQ/tB,EAAOghB,EAAMC,GAC1B,OAAO,IAAImF,GAAYpmB,EAAOghB,EAAMC,GASxC,SAAS+J,GAAYgD,GACjB,IAAInD,EAAM,GAIV,GAHImD,EAAI/sB,UACJ4pB,GAAO,KAAOmD,EAAI/sB,SAElB+sB,EAAIC,KAAM,CACV,GAAID,EAAIC,KAAK5X,MAAM,aACf,MAAM,IAAIvV,MAAM,2CAEpB+pB,GAAO,IAAMmD,EAAIC,KAAKhD,QAAQ,KAAM,OAExC,OAAOJ,EAkCX,IAAIqD,GAAmB,gBAUvB,SAASC,GAAa1a,EAAO2a,GACzB,OAAOC,GAAS5a,EAAO,IAAK2a,GAKhC,SAASC,GAAS5a,EAAO6a,EAAWF,GAChC,IAAIG,EAAiB9a,EAAM5S,QAAQytB,GACnC,OAAuB,GAAnBC,EACOH,GACH3a,EAAM1S,MAAM,EAAGwtB,GAAgBC,OAAQ/a,EAAM1S,MAAMwtB,EAAiB,GAAGC,QAEnF,SAASC,GAAWzuB,EAAOif,EAASC,GAChC,OAAI3gB,MAAMmwB,QAAQ1uB,GACPif,EAAQ0P,WAAW3uB,EAAOkf,GAqEzC,SAAS0P,EAAkB/Q,GACvB,MAAsB,iBAARA,GAA4B,OAARA,GAAgBzf,OAAOywB,eAAehR,KAASiR,GApE7EF,CAAkB5uB,GACXif,EAAQ8P,eAAe/uB,EAAOkf,GAE5B,MAATlf,GAAiC,iBAATA,GAAqC,iBAATA,GACpC,kBAATA,EACAif,EAAQ+P,eAAehvB,EAAOkf,GAElCD,EAAQgQ,WAAWjvB,EAAOkf,GAErC,SAASgQ,GAAUC,GACf,OAAe,OAARA,QAAwBpU,IAARoU,EAE3B,SAASC,GAAYD,GACjB,YAAepU,IAARoU,EAAoB,KAAOA,EAEtC,IAAIE,GAAkC,WAClC,SAASA,KAcT,OAZAA,EAAiBxwB,UAAU8vB,WAAa,SAAUW,EAAKpQ,GACnD,IAAI1M,EAAQxU,KACZ,OAAOsxB,EAAI5V,IAAI,SAAU1Z,GAAS,OAAOyuB,GAAWzuB,EAAOwS,EAAO0M,MAEtEmQ,EAAiBxwB,UAAUkwB,eAAiB,SAAUrV,EAAKwF,GACvD,IAAI1M,EAAQxU,KACRwZ,KAEJ,OADApZ,OAAOmxB,KAAK7V,GAAKhH,QAAQ,SAAUyO,GAAO3J,EAAO2J,GAAOsN,GAAW/U,EAAIyH,GAAM3O,EAAO0M,KAC7E1H,GAEX6X,EAAiBxwB,UAAUmwB,eAAiB,SAAUhvB,EAAOkf,GAAW,OAAOlf,GAC/EqvB,EAAiBxwB,UAAUowB,WAAa,SAAUjvB,EAAOkf,GAAW,OAAOlf,GACpEqvB,EAf0B,GAiBjCG,GACY,SAAUxvB,GAClB,GAAIyvB,GAAUzvB,GACV,MAAM,IAAIc,MAAM,4CAEpB,OAAOd,GALXwvB,GAOM,SAAUxvB,EAAO0vB,GAAM,OAAOD,GAAUzvB,GAASA,EAAM2vB,KAAKD,GAAMA,EAAG1vB,IAP3EwvB,GAQK,SAAUI,GACX,OAAOA,EAAgBC,KAAKJ,IAAaK,QAAQC,IAAIH,GAAmBA,GAGhF,SAASrvB,GAAMyvB,GACX,MAAM,IAAIlvB,MAAM,mBAAqBkvB,GAEzC,SAASC,GAAYD,EAAKE,GACtB,IAAI3vB,EAAQO,MAAMkvB,GAIlB,OAHAzvB,EAAM4vB,KAAsB,EACxBD,IACA3vB,EAAM6vB,IAAsBF,GACzB3vB,EAEX,IAAI4vB,GAAqB,gBACrBC,GAAqB,gBAQzB,SAASC,GAAalxB,GAClB,OAAOA,EAAE8rB,QAAQ,6BAA8B,QAEnD,IAAI6D,GAAmB1wB,OAAOywB,mBAI9B,SAASyB,GAAWC,GAEhB,IADA,IAAIC,EAAU,GACLpP,EAAQ,EAAGA,EAAQmP,EAAIhxB,OAAQ6hB,IAAS,CAC7C,IAAIqP,EAAYF,EAAIG,WAAWtP,GAG/B,GAAIqP,GAAa,OAAUA,GAAa,OAAUF,EAAIhxB,OAAU6hB,EAAQ,EAAI,CACxE,IAAIuP,EAAMJ,EAAIG,WAAWtP,EAAQ,GAC7BuP,GAAO,OAAUA,GAAO,QACxBvP,IACAqP,GAAcA,EAAY,OAAW,IAAME,EAAM,MAAS,OAG9DF,GAAa,IACbD,GAAWjQ,OAAOqQ,aAAaH,GAE1BA,GAAa,KAClBD,GAAWjQ,OAAOqQ,aAAeH,GAAa,EAAK,GAAQ,IAAmB,GAAZA,EAAoB,KAEjFA,GAAa,MAClBD,GAAWjQ,OAAOqQ,aAAcH,GAAa,GAAM,IAAQA,GAAa,EAAK,GAAQ,IAAmB,GAAZA,EAAoB,KAE3GA,GAAa,UAClBD,GAAWjQ,OAAOqQ,aAAeH,GAAa,GAAM,EAAQ,IAAQA,GAAa,GAAM,GAAQ,IAAQA,GAAa,EAAK,GAAQ,IAAmB,GAAZA,EAAoB,MAGpK,OAAOD,EAEX,SAASK,GAAUnW,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiBnc,MACjB,MAAO,IAAMmc,EAAMhB,IAAImX,IAAWvZ,KAAK,MAAQ,IAEnD,GAAa,MAAToD,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAMoW,eACN,MAAO,GAAKpW,EAAMoW,eAEtB,GAAIpW,EAAMzH,KACN,MAAO,GAAKyH,EAAMzH,KAItB,IAAIuD,EAAMkE,EAAMjD,WAChB,GAAW,MAAPjB,EACA,MAAO,GAAKA,EAEhB,IAAIua,EAAeva,EAAI3V,QAAQ,MAC/B,OAAyB,IAAlBkwB,EAAsBva,EAAMA,EAAIwa,UAAU,EAAGD,GAKxD,SAASE,GAAkBjQ,GACvB,MAAoB,mBAATA,GAAuBA,EAAKviB,eAAe,mBAC3CuiB,IAGAA,EAMf,SAASyO,GAAU5R,GAGf,QAASA,GAA2B,mBAAbA,EAAI8R,KAE/B,IAAIuB,GACA,SAASA,GAAQC,GACbnzB,KAAKmzB,KAAOA,EACZ,IAAIC,EAASD,EAAKE,MAAM,KACxBrzB,KAAKszB,MAAQF,EAAO,GACpBpzB,KAAKuzB,MAAQH,EAAO,GACpBpzB,KAAKwzB,MAAQJ,EAAOrwB,MAAM,GAAGuW,KAAK,MAItCma,GAA6B,oBAAXC,QAA0BA,OAC5CC,GAAyB,oBAAT9zB,MAAqD,oBAAtB+zB,mBAC/C/zB,gBAAgB+zB,mBAAqB/zB,KAIrCg0B,GAH6B,oBAAXt0B,QAA0BA,QAGtBk0B,IAAYE,GAgBlCG,MASAC,GAAiC,SAAUhT,GAE3C,SAASgT,EAAgBC,GACrB,IAAIxf,EAAQuM,EAAOvf,KAAKxB,KAAMg0B,EAAShR,OAAShjB,KAGhD,OAFAwU,EAAMwf,SAAWA,EACjBxf,EAAMyf,SAAWD,EACVxf,EAoBX,OAzBA9T,EAAUqzB,EAAiBhT,GAO3BgT,EAAgBlzB,UAAU6lB,gBAAkB,SAAUzF,EAASC,GAC3D,OAAIA,IAAY4S,GAGL9zB,KAAKi0B,SAASvN,gBAAgBzF,EAASC,GAGvClhB,KAAKg0B,SAAStN,gBAAgBzF,EAASC,IAGtD6S,EAAgBlzB,UAAU8hB,aAAe,SAAUvgB,GAC/C,OAAOA,aAAa2xB,GAAmB/zB,KAAKg0B,SAASrR,aAAavgB,EAAE4xB,WAExED,EAAgBlzB,UAAU4lB,WAAa,WAAc,OAAO,GAC5DsN,EAAgBlzB,UAAUqzB,MAAQ,SAAUC,GACxCn0B,KAAKg0B,SAAWG,EAChBn0B,KAAKo0B,QAAS,GAEXL,EA1ByB,CA2BlChR,IAMEsR,GAA8B,WAC9B,SAASA,IACLr0B,KAAKopB,cACLppB,KAAKs0B,SAAW,IAAIxa,IACpB9Z,KAAKu0B,iBAAmB,IAAIza,IAC5B9Z,KAAKw0B,oBAAsB,IAAI1a,IAC/B9Z,KAAKy0B,qBAAuB,IAAI3a,IAChC9Z,KAAK00B,qBAAuB,IAAI5a,IAChC9Z,KAAK20B,gBAAkB,IAAI7a,IAC3B9Z,KAAK40B,cAAgB,EAwHzB,OAtHAP,EAAaxzB,UAAUg0B,gBAAkB,SAAUC,EAAYC,GAC3D,GAAID,aAAsB1M,IAAe0M,aAAsBf,GAG3D,OAAOe,EAEX,IAAI3R,EAAMnjB,KAAKg1B,MAAMF,GACjBZ,EAAQl0B,KAAKs0B,SAAShZ,IAAI6H,GAC1B8R,GAAW,EAMf,GALKf,IACDA,EAAQ,IAAIH,GAAgBe,GAC5B90B,KAAKs0B,SAAS/Y,IAAI4H,EAAK+Q,GACvBe,GAAW,IAETA,IAAaf,EAAME,QAAYa,GAAYF,EAAc,CAE3D,IAAIG,EAASl1B,KAAKm1B,YAClBn1B,KAAKopB,WAAW9mB,KAAK8sB,GAAS8F,GAAQ3Z,IAAIuZ,GAAY1N,WAAWrF,IAAgBtiB,EAAQ8nB,aAAaC,SACtG0M,EAAMA,MAAM9E,GAAS8F,IAEzB,OAAOhB,GAEXG,EAAaxzB,UAAUu0B,cAAgB,SAAUpS,EAAMqS,EAAMC,EAAKP,QAC1C,IAAhBA,IAA0BA,GAAc,GAC5C,IAAIQ,EAAcv1B,KAAKw1B,cAAcH,GACjCnB,EAAQqB,EAAYja,IAAI0H,GACxBiS,GAAW,EACf,IAAKf,EAAO,CACR,IAAIuB,EAAWz1B,KAAK01B,eAAeL,GACnCnB,EAAQ,IAAIH,GAAgBuB,EAAIjG,WAAWrM,GAAMvU,KAAKgnB,IACtDF,EAAYha,IAAIyH,EAAMkR,GACtBe,GAAW,EAEf,IAAMA,IAAaf,EAAME,QAAYa,GAAYF,EAAc,CAC3D,IAAI5Z,EAASnb,KAAKm1B,YAClBn1B,KAAKopB,WAAW9mB,KAAK8sB,GAASjU,GAAQI,IAAI2Y,EAAMF,UAAU5M,WAAWrF,IAAgBtiB,EAAQ8nB,aAAaC,SAC1G0M,EAAMA,MAAM9E,GAASjU,IAEzB,OAAO+Y,GAEXG,EAAaxzB,UAAU80B,kBAAoB,SAAUb,GAEjD,GAAIA,aAAsBlL,GAAkB,CACxC,IAAIgM,EAAkBd,EAAWjL,QAAQnO,IAAI,SAAUtZ,GAAK,OAAOA,EAAEqkB,aAAerkB,EAAI2tB,GAAQ,QAC5F5M,EAAMnjB,KAAKg1B,MAAMtF,GAAWkG,IAChC,OAAO51B,KAAK61B,mBAAmB1S,EAAK2R,EAAWjL,QAAS,SAAUA,GAAW,OAAO6F,GAAW7F,KAG/F,IAAIiM,EAAmBnG,GAAWmF,EAAWjL,QAAQnO,IAAI,SAAUtZ,GAAK,OACpE+gB,IAAK/gB,EAAE+gB,IACPnhB,MAAOI,EAAEJ,MAAMykB,aAAerkB,EAAEJ,MAAQ+tB,GAAQ,MAChD9F,OAAQ7nB,EAAE6nB,WAGd,OADI9G,EAAMnjB,KAAKg1B,MAAMc,GACd91B,KAAK61B,mBAAmB1S,EAAK2R,EAAWjL,QAAQnO,IAAI,SAAUtZ,GAAK,OAAOA,EAAEJ,QAAW,SAAU6nB,GAAW,OAAO8F,GAAW9F,EAAQnO,IAAI,SAAU1Z,EAAOohB,GAAS,OACvKD,IAAK2R,EAAWjL,QAAQzG,GAAOD,IAC/BnhB,MAAOA,EACPioB,OAAQ6K,EAAWjL,QAAQzG,GAAO6G,cAI9CoK,EAAaxzB,UAAUg1B,mBAAqB,SAAU1S,EAAKzD,EAAQqW,GAC/D,IAAIvhB,EAAQxU,KACRg2B,EAAiBh2B,KAAKu0B,iBAAiBjZ,IAAI6H,GAC3C8S,EAA0BvW,EAAOwW,OAAO,SAAW9zB,GAAK,OAAQA,EAAEqkB,eACtE,IAAKuP,EAAgB,CACjB,IAAIG,EAAoBzW,EAAOhE,IAAI,SAAUtZ,EAAGghB,GAAS,OAAOhhB,EAAEqkB,aAAejS,EAAMqgB,gBAAgBzyB,GAAG,GAAQgtB,GAAS,IAAMhM,KAE7HgT,EAA0BpO,GADbmO,EAAkBD,OAAOG,IAAY3a,IAAI,SAAUtZ,GAAK,OAAO,IAAI8mB,GAAQ9mB,EAAE6S,KAAM4M,OACtD,IAAIqJ,GAAgB6K,EAAUI,KAAsBpU,IAC9F/F,EAAShc,KAAKm1B,YAClBn1B,KAAKopB,WAAW9mB,KAAK8sB,GAASpT,GAAQT,IAAI6a,GAAyBhP,WAAWrF,IAC1EtiB,EAAQ8nB,aAAaC,SAEzBwO,EAAiB5G,GAASpT,GAC1Bhc,KAAKu0B,iBAAiBhZ,IAAI4H,EAAK6S,GAEnC,OAASA,eAAgBA,EAAgBC,wBAAyBA,IAStE5B,EAAaxzB,UAAUy1B,WAAa,SAAU/yB,GAAU,MAAO,GAAKA,EAASvD,KAAK40B,iBAClFP,EAAaxzB,UAAU20B,cAAgB,SAAUH,GAC7C,OAAQA,GACJ,KAAK,EACD,OAAOr1B,KAAK00B,qBAChB,KAAK,EACD,OAAO10B,KAAKy0B,qBAChB,KAAK,EACD,OAAOz0B,KAAKw0B,oBAChB,KAAK,EACD,OAAOx0B,KAAK20B,gBAGpB,OADApyB,GAAM,2BAA6B8yB,GAC5Br1B,KAAK00B,sBAEhBL,EAAaxzB,UAAU60B,eAAiB,SAAUL,GAC9C,OAAQA,GACJ,KAAK,EACD,MAAO,iBACX,KAAK,EACD,MAAO,iBACX,KAAK,EACD,MAAO,gBACX,KAAK,EACD,MAAO,YAGf,OADA9yB,GAAM,2BAA6B8yB,GAC5B,aAEXhB,EAAaxzB,UAAUs0B,UAAY,WAAc,OAAOn1B,KAAKs2B,WA9K3C,OA+KlBjC,EAAaxzB,UAAUm0B,MAAQ,SAAUb,GACrC,OAAOA,EAAWzN,gBAAgB,IAAI6P,GAAczC,KAEjDO,EAjIsB,GAyI7BkC,GAA4B,WAC5B,SAASA,IACLv2B,KAAKknB,qBAAuBsP,GAC5Bx2B,KAAKmnB,kBAAoBqP,GACzBx2B,KAAK2nB,kBAAoB6O,GACzBx2B,KAAK6nB,mBAAqB2O,GAC1Bx2B,KAAK+nB,sBAAwByO,GAC7Bx2B,KAAKioB,wBAA0BuO,GAC/Bx2B,KAAKmoB,qBAAuBqO,GAC5Bx2B,KAAK4oB,qBAAuB4N,GAC5Bx2B,KAAK8oB,aAAe0N,GACpBx2B,KAAKgpB,uBAAyBwN,GAC9Bx2B,KAAKipB,cAAgBuN,GACrBx2B,KAAKqpB,kBAAoBmN,GACzBx2B,KAAKypB,wBAA0B+M,GAC/Bx2B,KAAK0pB,kBAAoB8M,GACzBx2B,KAAK2pB,iBAAmB6M,GACxBx2B,KAAKsqB,eAAiBkM,GA4B1B,OA1BAD,EAAW11B,UAAUwnB,iBAAmB,SAAUwF,GAC9C,MAAO,IAA2B,iBAAdA,EAAI7rB,MAAqB,IAAM6rB,EAAI7rB,MAAQ,IAAM6rB,EAAI7rB,QAE7Eu0B,EAAW11B,UAAUkpB,sBAAwB,SAAU8D,EAAK3M,GACxD,IAAI1M,EAAQxU,KACZ,MAAO,IAAM6tB,EAAIhE,QAAQnO,IAAI,SAAUsS,GAAS,OAAOA,EAAMtH,gBAAgBlS,EAAO0M,KAAa5H,KAAK,KAAO,KAEjHid,EAAW11B,UAAUspB,oBAAsB,SAAU0D,EAAK3M,GACtD,IAAI1M,EAAQxU,KAQZ,MAAO,IAAM6tB,EAAIhE,QAAQnO,IAHV,SAAUsS,GACrB,OALS,SAAUA,GACnB,IAAIyI,EAAQzI,EAAM/D,OAAS,IAAM,GACjC,MAAO,GAAKwM,EAAQzI,EAAM7K,IAAMsT,EAGzBC,CAAO1I,GAAS,IAAMA,EAAMhsB,MAAM0kB,gBAAgBlS,EAAO0M,KAE7B5H,KAAK,MAEhDid,EAAW11B,UAAU4nB,kBAAoB,SAAUoF,GAC/C,OAAOA,EAAI7rB,MAAMumB,WAAa,MAAQsF,EAAI7rB,MAAMumB,WAAa,IAAMsF,EAAI7rB,MAAMiT,KACzE,MAAQ4Y,EAAI7rB,MAAMwmB,QAAQvT,MAElCshB,EAAW11B,UAAU8lB,iBAAmB,SAAUM,GAAQ,MAAO,OAASA,EAAKhS,MAC/EshB,EAAW11B,UAAUkmB,gBAAkB,SAAUE,EAAM/F,GACnD,MAAO,UAAY+F,EAAKH,KAAKJ,gBAAgB1mB,KAAMkhB,IAEhDqV,EA7CoB,GA+C/B,SAASC,GAAQG,GACb,MAAM,IAAI7zB,MAAM,0BAA4B9C,KAAKY,YAAYqU,KAAO,mBAAqB0hB,EAAI/1B,YAAYqU,MAE7G,SAASohB,GAAWj0B,GAChB,OAAOA,aAAamkB;;;;;;;OAUxB,IAAIqQ,GAAO,gBACPC,GAA6B,WAC7B,SAASA,KAoGT,OAlGAA,EAAYC,8BACR7hB,KAAM,+BACNsT,WAAYqO,IAEhBC,EAAYE,YAAe9hB,KAAM,aAAcsT,WAAYqO,IAC3DC,EAAYG,aAAgB/hB,KAAM,cAAesT,WAAYqO,IAC7DC,EAAYI,kBAAqBhiB,KAAM,mBAAoBsT,WAAYqO,IACvEC,EAAYK,mBACRjiB,KAAM,oBACNsT,WAAYqO,IAEhBC,EAAYM,WAAcliB,KAAM,YAAasT,WAAYqO,IACzDC,EAAYO,aAAgBniB,KAAM,cAAesT,WAAYqO,IAC7DC,EAAYQ,WAAcpiB,KAAM,YAAasT,WAAYqO,IACzDC,EAAYS,iCACRriB,KAAM,mCACNsT,WAAYqO,IAEhBC,EAAYU,0BACRtiB,KAAM,2BACNsT,WAAYqO,IAEhBC,EAAYW,kBAAqBviB,KAAM,mBAAoBsT,WAAYqO,IACvEC,EAAYY,cAAiBxiB,KAAM,eAAgBsT,WAAYqO,IAC/DC,EAAYa,iBAAoBziB,KAAM,kBAAmBsT,WAAYqO,IACrEC,EAAYc,qBACR1iB,KAAM,OACNsT,WAAYqO,IAEhBC,EAAYe,WACR3iB,KAAM,OACNsT,WAAYqO,IAEhBC,EAAYgB,mBACR5iB,KAAM,OACNsT,WAAYqO,IAEhBC,EAAYiB,yBACR7iB,KAAM,yBACNsT,WAAYqO,IAEhBC,EAAYkB,QAAW9iB,KAAM,SAAUsT,WAAYqO,IACnDC,EAAYmB,UAAa/iB,KAAM,WAAYsT,WAAYqO,IACvDC,EAAYoB,UAAahjB,KAAM,WAAYsT,WAAYqO,IACvDC,EAAYqB,kBAAqBjjB,KAAM,mBAAoBsT,WAAYqO,IACvEC,EAAYsB,eAAkBljB,KAAM,iBAAkBsT,WAAYqO,IAClEC,EAAYnf,mBACRzC,KAAM,oBACNsT,WAAYqO,IAEhBC,EAAYlf,yBACR1C,KAAM,0BACNsT,WAAYqO,IAEhBC,EAAYjZ,iBACR3I,KAAM,kBACNsT,WAAYqO,IAEhBC,EAAYuB,WAAcnjB,KAAM,YAAasT,WAAYqO,IACzDC,EAAYwB,qBACRpjB,KAAM,sBACNsT,WAAYqO,IAEhBC,EAAYyB,mBACRrjB,KAAM,qBACNsT,WAAYqO,IAEhBC,EAAY0B,aAAgBtjB,KAAM,eAAgBsT,WAAYqO,IAC9DC,EAAY2B,aAAgBvjB,KAAM,eAAgBsT,WAAYqO,IAC9DC,EAAY4B,WAAcxjB,KAAM,aAAcsT,WAAYqO,IAC1DC,EAAY6B,UAAazjB,KAAM,WAAYsT,WAAYqO,IACvDC,EAAY8B,SAAY1jB,KAAM,OAAQsT,WAAYqO,IAClDC,EAAY+B,YAAe3jB,KAAM,OAAQsT,WAAYqO,IACrDC,EAAYgC,WAAc5jB,KAAM,OAAQsT,WAAYqO,IACpDC,EAAYiC,SAAY7jB,KAAM,OAAQsT,WAAYqO,IAClDC,EAAYkC,cAAiB9jB,KAAM,OAAQsT,WAAYqO,IACvDC,EAAYmC,aAAgB/jB,KAAM,OAAQsT,WAAYqO,IACtDC,EAAYoC,UAAahkB,KAAM,OAAQsT,WAAYqO,IACnDC,EAAYqC,cAAiBjkB,KAAM,OAAQsT,WAAYqO,IACvDC,EAAYsC,eAAkBlkB,KAAM,OAAQsT,WAAYqO,IACxDC,EAAYuC,aAAgBnkB,KAAM,OAAQsT,WAAYqO,IACtDC,EAAYwC,SAAYpkB,KAAM,OAAQsT,WAAYqO,IAClDC,EAAYyC,WAAcrkB,KAAM,OAAQsT,WAAYqO,IACpDC,EAAY0C,cAAiBtkB,KAAM,OAAQsT,WAAYqO,IACvDC,EAAY2C,aAAgBvkB,KAAM,OAAQsT,WAAYqO,IACtDC,EAAY4C,qBAAwBxkB,KAAM,OAAQsT,WAAYqO,IAE9DC,EAAY6C,eACRzkB,KAAM,gBACNsT,WAAYqO,IAGhBC,EAAY8C,gBACR1kB,KAAM,kBACNsT,WAAYqO,IAEhBC,EAAY+C,wBAA2B3kB,KAAM,OAAQsT,WAAYqO,IACjEC,EAAYgD,kBAAqB5kB,KAAM,oBAAqBsT,WAAYqO,IACjEC,EArGqB,GAuGhC,SAASiD,GAAwBC,GAC7B,OAASC,YAAcD,UAAWA,IAEtC,SAASE,GAAgCC,EAAWH,GAChD,OAAOD,GAAwBI,EAAUC,yBAAyBJ;;;;;;;OAetE,IAAIK,GAA8B,WAC9B,SAASA,EAAaC,EAAUplB,EAAMqlB,GAClCt6B,KAAKq6B,SAAWA,EAChBr6B,KAAKiV,KAAOA,EACZjV,KAAKs6B,QAAUA,EAOnB,OALAF,EAAav5B,UAAU05B,gBAAkB,WACrC,GAAIv6B,KAAKs6B,QAAQ/4B,OACb,MAAM,IAAIuB,MAAM,2DAA6D03B,KAAK3H,UAAU7yB,MAAQ,MAGrGo6B,EAXsB,GAiB7BK,GAAmC,WACnC,SAASA,IACLz6B,KAAK06B,MAAQ,IAAI5gB,IAarB,OAXA2gB,EAAkB55B,UAAUya,IAAM,SAAUqf,EAAiB1lB,EAAMqlB,GAE/D,IACInX,EAAM,IAAOwX,EAAkB,KAAQ1lB,IAF3CqlB,EAAUA,OACiB/4B,OAAS,IAAM+4B,EAAQhhB,KAAK,KAAO,IAE1DE,EAASxZ,KAAK06B,MAAMpf,IAAI6H,GAK5B,OAJK3J,IACDA,EAAS,IAAI4gB,GAAaO,EAAiB1lB,EAAMqlB,GACjDt6B,KAAK06B,MAAMnf,IAAI4H,EAAK3J,IAEjBA,GAEJihB,EAf2B,GA6BlCG,GAAe,qDACnB,SAASC,GAAmB5lB,GACxB,OAAOA,EAAKgY,QAAQ,MAAO,KAE/B,IA2CW6N,GA3CPC,GAAsB,EAC1B,SAASC,GAAeC,GACpB,IAAKA,IAAsBA,EAAkBlB,UACzC,OAAO,KAEX,IAAImB,EAAMD,EAAkBlB,UAC5B,GAAImB,aAAed,GACf,OAAOc,EAAIjmB,KAEf,GAAIimB,EAAqB,gBACrB,OAAOA,EAAqB,gBAEhC,IAAIlB,EAAanH,GAAUqI,GAS3B,OARIlB,EAAWn3B,QAAQ,MAAQ,GAE3Bm3B,EAAa,aAAee,KAC5BG,EAAqB,gBAAIlB,GAGzBA,EAAaa,GAAmBb,GAE7BA,EAEX,SAASmB,GAAoBF,GACzB,IAAIC,EAAMD,EAAkBlB,UAC5B,OAAImB,aAAed,GACRc,EAAIb,SAGR,KAAOxH,GAAUqI,GAE5B,SAASE,GAAcC,EAAUC,GAC7B,MAAO,QAAUN,IAAiBjB,UAAWsB,IAAc,IAAMC,EAErE,SAASC,GAAiBF,GACtB,MAAO,cAAgBL,IAAiBjB,UAAWsB,IAEvD,SAASG,GAAkBH,GACvB,MAAO,YAAcL,IAAiBjB,UAAWsB,IAErD,SAASI,GAAqBJ,GAC1B,OAAOL,IAAiBjB,UAAWsB,IAAc,YAQrD,SAASK,GAAUhf,GACf,OAAsB,MAAfA,EAAM1a,MAAgB64B,GAAmBne,EAAM1a,OAASg5B,GAAete,EAAMsd,YAExF,SAAS2B,GAAejf,GACpB,OAAwB,MAApBA,EAAMsd,WACCtd,EAAMsd,WAAWD,UAGjBrd,EAAM1a,OAdV84B,GAKRr7B,EAAQq7B,qBAAuBr7B,EAAQq7B,wBAJnBA,GAAyB,KAAI,GAAK,OACrDA,GAAmBA,GAA8B,UAAI,GAAK,YAC1DA,GAAmBA,GAA6B,SAAI,GAAK,WACzDA,GAAmBA,GAA+B,WAAI,GAAK,aAgB/D,IAAIc,GACA,SAASA,GAA0BloB,GAC/B,IAAIC,OAAY,IAAPD,KAAqBA,EAA8BmoB,EAASloB,EAAGkoB,OAAQC,EAAYnoB,EAAGmoB,UAC/F97B,KAAK+7B,UADyCpoB,EAAGooB,WACnB,KAC9B/7B,KAAK67B,OAASG,GAAgBH,GAC9B77B,KAAK87B,UAAYE,GAAgBF,IAOrCG,GAAyC,WACzC,SAASA,EAAwBvoB,GAC7B,IAAsCwoB,EAAWxoB,EAAGwoB,SAAUC,EAAczoB,EAAGyoB,YAAaC,EAAU1oB,EAAG0oB,QAASP,EAASnoB,EAAGmoB,OAAQC,EAAYpoB,EAAGooB,UAAWO,EAAsB3oB,EAAG2oB,oBAAqBC,EAAa5oB,EAAG4oB,WAAYC,EAAqB7oB,EAAG6oB,mBAAoBC,EAAgB9oB,EAAG8oB,cAAeC,EAAW/oB,EAAG+oB,SAAUC,EAAsBhpB,EAAGgpB,oBAUzW,GATA18B,KAAK28B,cADejpB,EAAGipB,cAEvB38B,KAAKk8B,SAAWA,EAChBl8B,KAAKm8B,YAAcA,EACnBn8B,KAAKo8B,QAAUA,EACfp8B,KAAK67B,OAASG,GAAgBH,GAC9B77B,KAAK87B,UAAYE,GAAgBF,GACjC97B,KAAKq8B,oBAAsBL,GAAgBK,GAC3Cr8B,KAAKs8B,WAAaA,EAAaM,GAAQN,MACvCt8B,KAAKu8B,mBAAqBA,MACtBC,GAAyC,GAAxBA,EAAcj7B,OAC/B,MAAM,IAAIuB,MAAM,0DAEpB9C,KAAKw8B,cAAgBA,EACrBx8B,KAAKy8B,SAAWA,EAChBz8B,KAAK08B,oBAAsBA,EAU/B,OARAT,EAAwBp7B,UAAUg8B,UAAY,WAC1C,OACIN,mBAAoBv8B,KAAKu8B,mBACzBI,cAAe38B,KAAK28B,cACpBd,OAAQ77B,KAAK67B,OACbS,WAAYt8B,KAAKs8B,aAGlBL,EA3BiC,GAgCxCa,GAA0C,WAC1C,SAASA,EAAyBppB,GAC9B,IAAwBsP,EAAOtP,EAAGsP,KAAM+Z,EAAcrpB,EAAGqpB,YAAa3kB,EAAW1E,EAAG0E,SAAU4kB,EAAWtpB,EAAGspB,SAAUhf,EAAkBtK,EAAGsK,gBAAiBif,EAASvpB,EAAGupB,OAAQC,EAAUxpB,EAAGwpB,QAASC,EAAgBzpB,EAAGypB,cAAeC,EAAiB1pB,EAAG0pB,eAAgBC,EAAiB3pB,EAAG2pB,eAAgBC,EAAY5pB,EAAG4pB,UAAWC,EAAgB7pB,EAAG6pB,cAAeC,EAAU9pB,EAAG8pB,QAASC,EAAS/pB,EAAG+pB,OAAQC,EAAchqB,EAAGgqB,YAAaC,EAAkBjqB,EAAGiqB,gBAAiBzB,EAAWxoB,EAAGwoB,SAAU0B,EAAoBlqB,EAAGkqB,kBAAmBC,EAAenqB,EAAGmqB,aAAcC,EAAmBpqB,EAAGoqB,iBACllB99B,KAAK+9B,SADQrqB,EAAGqqB,OAEhB/9B,KAAKgjB,KAAOA,EACZhjB,KAAK+8B,YAAcA,EACnB/8B,KAAKoY,SAAWA,EAChBpY,KAAKg9B,SAAWA,EAChBh9B,KAAKge,gBAAkBA,EACvBhe,KAAKi9B,OAASA,EACdj9B,KAAKk9B,QAAUA,EACfl9B,KAAKm9B,cAAgBA,EACrBn9B,KAAKo9B,eAAiBA,EACtBp9B,KAAKq9B,eAAiBA,EACtBr9B,KAAKs9B,UAAYtB,GAAgBsB,GACjCt9B,KAAKu9B,cAAgBvB,GAAgBuB,GACrCv9B,KAAKw9B,QAAUxB,GAAgBwB,GAC/Bx9B,KAAKy9B,OAASA,EACdz9B,KAAK09B,YAAc1B,GAAgB0B,GACnC19B,KAAK29B,gBAAkB3B,GAAgB2B,GACvC39B,KAAKk8B,SAAWA,EAChBl8B,KAAK49B,kBAAoBA,EACzB59B,KAAK69B,aAAeA,EACpB79B,KAAK89B,iBAAmBA,EAsF5B,OApFAhB,EAAyBh8B,OAAS,SAAU4S,GACxC,IAAIqqB,EAASrqB,EAAGqqB,OAAQ/a,EAAOtP,EAAGsP,KAAM+Z,EAAcrpB,EAAGqpB,YAAa3kB,EAAW1E,EAAG0E,SAAU4kB,EAAWtpB,EAAGspB,SAAUhf,EAAkBtK,EAAGsK,gBAAiBif,EAASvpB,EAAGupB,OAAQC,EAAUxpB,EAAGwpB,QAASc,EAAOtqB,EAAGsqB,KAAMV,EAAY5pB,EAAG4pB,UAAWC,EAAgB7pB,EAAG6pB,cAAeC,EAAU9pB,EAAG8pB,QAASC,EAAS/pB,EAAG+pB,OAAQC,EAAchqB,EAAGgqB,YAAaC,EAAkBjqB,EAAGiqB,gBAAiBzB,EAAWxoB,EAAGwoB,SAAU0B,EAAoBlqB,EAAGkqB,kBAAmBC,EAAenqB,EAAGmqB,aAAcC,EAAmBpqB,EAAGoqB,iBACpfX,KACAC,KACAC,KACQ,MAARW,GACA59B,OAAOmxB,KAAKyM,GAAMtpB,QAAQ,SAAUyO,GAChC,IAAInhB,EAAQg8B,EAAK7a,GACb8a,EAAU9a,EAAI9K,MAAMuiB,IACR,OAAZqD,EACAZ,EAAela,GAAOnhB,EAEH,MAAdi8B,EAAQ,GACbb,EAAea,EAAQ,IAAMj8B,EAEV,MAAdi8B,EAAQ,KACbd,EAAcc,EAAQ,IAAMj8B,KAIxC,IAAIk8B,KACU,MAAVjB,GACAA,EAAOvoB,QAAQ,SAAUypB,GAGrB,IAAI9T,EAAQ8F,GAAagO,GAAaA,EAAYA,IAClDD,EAAU7T,EAAM,IAAMA,EAAM,KAGpC,IAAI+T,KASJ,OARe,MAAXlB,GACAA,EAAQxoB,QAAQ,SAAUypB,GAGtB,IAAI9T,EAAQ8F,GAAagO,GAAaA,EAAYA,IAClDC,EAAW/T,EAAM,IAAMA,EAAM,KAG9B,IAAIyS,GACPiB,OAAQA,EACR/a,KAAMA,EACN+Z,cAAeA,EAAa3kB,SAAUA,EAAU4kB,SAAUA,EAAUhf,gBAAiBA,EACrFif,OAAQiB,EACRhB,QAASkB,EACTjB,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,EAChBC,UAAWA,EACXC,cAAeA,EACfC,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,gBAAiBA,EACjBzB,SAAUA,EACV0B,kBAAmBA,EACnBC,aAAcA,EACdC,iBAAkBA,KAG1BhB,EAAyBj8B,UAAUg8B,UAAY,WAC3C,OACIwB,YAAa5+B,EAAQq7B,mBAAmBwD,UACxCtb,KAAMhjB,KAAKgjB,KACX+Z,YAAa/8B,KAAK+8B,YAClB3kB,SAAUpY,KAAKoY,SACf4kB,SAAUh9B,KAAKg9B,SACfC,OAAQj9B,KAAKi9B,OACbC,QAASl9B,KAAKk9B,QACdC,cAAen9B,KAAKm9B,cACpBC,eAAgBp9B,KAAKo9B,eACrBC,eAAgBr9B,KAAKq9B,eACrBC,UAAWt9B,KAAKs9B,UAChBC,cAAev9B,KAAKu9B,cACpBC,QAASx9B,KAAKw9B,QACdC,OAAQz9B,KAAKy9B,OACbC,YAAa19B,KAAK09B,YAClBC,gBAAiB39B,KAAK29B,gBACtB3f,gBAAiBhe,KAAKge,gBACtBke,SAAUl8B,KAAKk8B,UAAYl8B,KAAKk8B,SAASW,YACzCe,kBAAmB59B,KAAK49B,kBACxBC,aAAc79B,KAAK69B,aACnBC,iBAAkB99B,KAAK89B,mBAGxBhB,EA7GkC,GA+GzCyB,GAAqC,WACrC,SAASA,EAAoB7qB,GACzB,IAAoBuB,EAAOvB,EAAGuB,KAAMkJ,EAAOzK,EAAGyK,KAC9Cne,KAAKgjB,KADMtP,EAAGsP,KAEdhjB,KAAKiV,KAAOA,EACZjV,KAAKme,OAASA,EAUlB,OARAogB,EAAoB19B,UAAUg8B,UAAY,WACtC,OACIwB,YAAa5+B,EAAQq7B,mBAAmB0D,KACxCxb,KAAMhjB,KAAKgjB,KACX/N,KAAMjV,KAAKiV,KACXkJ,KAAMne,KAAKme,OAGZogB,EAf6B,GAiBpCE,GACA,SAASA,OAOTC,GAAyC,WACzC,SAASA,EAAwBhrB,GAC7B,IAAoB4pB,EAAY5pB,EAAG4pB,UAAWqB,EAAqBjrB,EAAGirB,mBAAoBC,EAAqBlrB,EAAGkrB,mBAAoBC,EAAgBnrB,EAAGmrB,cAAeC,EAAgBprB,EAAGorB,cAAenB,EAAkBjqB,EAAGiqB,gBAAiBoB,EAAsBrrB,EAAGqrB,oBAAqBC,EAAkBtrB,EAAGsrB,gBAAiBC,EAAkBvrB,EAAGurB,gBAAiBC,EAAUxrB,EAAGwrB,QAASC,EAAmBzrB,EAAGyrB,iBAAkB7P,EAAK5b,EAAG4b,GAChbtvB,KAAKgjB,KADMtP,EAAGsP,MACM,KACpBhjB,KAAK2+B,mBAAqB3C,GAAgB2C,GAC1C3+B,KAAK4+B,mBAAqB5C,GAAgB4C,GAC1C5+B,KAAK6+B,cAAgB7C,GAAgB6C,GACrC7+B,KAAK8+B,cAAgB9C,GAAgB8C,GACrC9+B,KAAKs9B,UAAYtB,GAAgBsB,GACjCt9B,KAAK29B,gBAAkB3B,GAAgB2B,GACvC39B,KAAK++B,oBAAsB/C,GAAgB+C,GAC3C/+B,KAAKg/B,gBAAkBhD,GAAgBgD,GACvCh/B,KAAKi/B,gBAAkBjD,GAAgBiD,GACvCj/B,KAAKk/B,QAAUlD,GAAgBkD,GAC/Bl/B,KAAKsvB,GAAKA,GAAM,KAChBtvB,KAAKm/B,iBAAmBA,GAAoB,KAchD,OAZAT,EAAwB79B,UAAUg8B,UAAY,WAC1C,IAAIn9B,EAASM,KAAKm/B,iBAClB,OACId,YAAa5+B,EAAQq7B,mBAAmBsE,SACxCpc,KAAMhjB,KAAKgjB,KACX2a,gBAAiBj+B,EAAOi+B,gBACxBL,UAAW59B,EAAO49B,UAClB+B,QAAS3/B,EAAO2/B,QAChBT,mBAAoBl/B,EAAOk/B,mBAC3BE,cAAep/B,EAAOo/B,gBAGvBJ,EA7BiC,GA+BxCY,GAAmD,WACnD,SAASA,IACLt/B,KAAKu/B,cAAgB,IAAI7Q,IACzB1uB,KAAKw/B,cACLx/B,KAAKy/B,sBAAwB,IAAI/Q,IACjC1uB,KAAK4+B,sBACL5+B,KAAK0/B,SAAW,IAAIhR,IACpB1uB,KAAK2/B,SACL3/B,KAAK4/B,iBAAmB,IAAIlR,IAC5B1uB,KAAK8+B,iBACL9+B,KAAK6/B,WAAa,IAAInR,IACtB1uB,KAAKq/B,WACLr/B,KAAK8/B,mBAAqB,IAAIpR,IAC9B1uB,KAAK29B,mBACL39B,KAAKs9B,aAyCT,OAvCAgC,EAAkCz+B,UAAUk/B,YAAc,SAAUC,EAAUtgC,GAC1EM,KAAKs9B,UAAUh7B,MAAO09B,SAAUA,EAAUtgC,OAAQA,KAEtD4/B,EAAkCz+B,UAAUo/B,aAAe,SAAU3Q,GAC5DtvB,KAAKu/B,cAAcW,IAAI5Q,EAAGyK,aAC3B/5B,KAAKu/B,cAAc5Q,IAAIW,EAAGyK,WAC1B/5B,KAAKw/B,WAAWl9B,KAAKgtB,KAG7BgQ,EAAkCz+B,UAAUs/B,qBAAuB,SAAU7Q,GACpEtvB,KAAKy/B,sBAAsBS,IAAI5Q,EAAGyK,aACnC/5B,KAAKy/B,sBAAsB9Q,IAAIW,EAAGyK,WAClC/5B,KAAK4+B,mBAAmBt8B,KAAKgtB,KAGrCgQ,EAAkCz+B,UAAUu/B,QAAU,SAAU9Q,GACvDtvB,KAAK0/B,SAASQ,IAAI5Q,EAAGyK,aACtB/5B,KAAK0/B,SAAS/Q,IAAIW,EAAGyK,WACrB/5B,KAAK2/B,MAAMr9B,KAAKgtB,KAGxBgQ,EAAkCz+B,UAAUw/B,gBAAkB,SAAU/Q,GAC/DtvB,KAAK4/B,iBAAiBM,IAAI5Q,EAAGyK,aAC9B/5B,KAAK4/B,iBAAiBjR,IAAIW,EAAGyK,WAC7B/5B,KAAK8+B,cAAcx8B,KAAKgtB,KAGhCgQ,EAAkCz+B,UAAUy/B,UAAY,SAAUhR,GACzDtvB,KAAK6/B,WAAWK,IAAI5Q,EAAGyK,aACxB/5B,KAAK6/B,WAAWlR,IAAIW,EAAGyK,WACvB/5B,KAAKq/B,QAAQ/8B,KAAKgtB,KAG1BgQ,EAAkCz+B,UAAU0/B,kBAAoB,SAAUC,GACjExgC,KAAK8/B,mBAAmBI,IAAIM,EAAGC,iBAChCzgC,KAAK8/B,mBAAmBnR,IAAI6R,EAAGC,eAC/BzgC,KAAK29B,gBAAgBr7B,KAAKk+B,KAG3BlB,EAvD2C,GAyDtD,SAAStD,GAAgBnc,GACrB,OAAOA,MAEX,IAAI6gB,GACA,SAASA,GAAahkB,EAAOhJ,GACzB,IAAIitB,EAAWjtB,EAAGitB,SAAUC,EAAWltB,EAAGktB,SAAUC,EAAcntB,EAAGmtB,YAAaC,EAAaptB,EAAGotB,WAAYC,EAAOrtB,EAAGqtB,KAAMC,EAAQttB,EAAGstB,MACzIhhC,KAAK0c,MAAQA,EACb1c,KAAK2gC,SAAWA,GAAY,KAC5B3gC,KAAK4gC,SAAWA,EAChB5gC,KAAK6gC,YAAcA,EACnB7gC,KAAK8gC,WAAaA,GAAc,KAChC9gC,KAAKihC,aAAeF,GAAQ,KAC5B/gC,KAAKghC,QAAUA,GAIvB,SAASpE,GAAQsE,GACb,OAAOA,EAAKC,OAAO,SAAUC,EAAMC,GAC/B,IAAIC,EAAW/gC,MAAMmwB,QAAQ2Q,GAAQzE,GAAQyE,GAAQA,EACrD,OAAOD,EAAK3+B,OAAO6+B,QAG3B,SAASC,GAAaC,GAGlB,OAAOA,EAAIvU,QAAQ,2BAA4B,UAEnD,SAASwU,GAAkBC,EAAcC,EAAUC,GAC/C,IAAIJ,EAcJ,OATQA,EAJJI,EAAanF,SACTkF,EAAS3e,KAAK+W,qBAAqBK,GAG7BuH,EAAS3e,KAAK+W,UAAUM,SAAW,IAAMsH,EAAS3e,KAAK+W,UAAU9kB,KAAO,QAGxE+lB,GAAe0G,GAAgB,IAAM1G,GAAe2G,EAAS3e,MAAQ,QAIzE4e,EAAazF,YAEhBwF,EAAS3e,KAAK+W,qBAAqBK,GAAeoH,EAAMD,GAAaC,GAEhF,SAASK,GAAuBzsB,EAAMka,GAClC,IAAIwS,EAAY1sB,EAAK2mB,UAAU1I,MAAM,SAErC,OAAOkO,GAAa,OAASjS,EADdwS,EAAUA,EAAUvgC,OAAS,GACC,eAEjD,SAASwgC,GAAeC,GACpB,OAAOT,GAAavG,GAAegH,EAAWhf,MAAQ,wBAE1D,SAASif,GAAeP,EAAcC,GAClC,OAAOJ,GAAavG,GAAe0G,GAAgB,IAAM1G,GAAe2G,EAAS3e,MAAQ;;;;;;;OAU7F,IAAIkf,GAAS,gBACTC,GAA+B,WAC/B,SAAStL,KAwIT,OArIAA,EAAYuL,WAAa,UACzBvL,EAAYwL,iBAAmB,YAC/BxL,EAAYyL,WAAa,cAEzBzL,EAAY0L,eAAkBttB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAY2L,iBAAoBvtB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAY4L,cAAiBxtB,KAAM,gBAAiBsT,WAAY2Z,IAChErL,EAAY9e,SAAY9C,KAAM,WAAYsT,WAAY2Z,IACtDrL,EAAY6L,cAAiBztB,KAAM,gBAAiBsT,WAAY2Z,IAChErL,EAAY8L,YAAe1tB,KAAM,cAAesT,WAAY2Z,IAC5DrL,EAAY+L,iBAAoB3tB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAYgM,gCAAmC5tB,KAAM,kCAAmCsT,WAAY2Z,IACpGrL,EAAYiM,gCAAmC7tB,KAAM,kCAAmCsT,WAAY2Z,IACpGrL,EAAYkM,kBAAqB9tB,KAAM,oBAAqBsT,WAAY2Z,IACxErL,EAAYmM,kBAAqB/tB,KAAM,oBAAqBsT,WAAY2Z,IACxErL,EAAYoM,uBAA0BhuB,KAAM,yBAA0BsT,WAAY2Z,IAClFrL,EAAYqM,qBAAwBjuB,KAAM,uBAAwBsT,WAAY2Z,IAC9ErL,EAAYsM,gBAAmBluB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYuM,kBAAqBnuB,KAAM,oBAAqBsT,WAAY2Z,IACxErL,EAAYwM,mBAAsBpuB,KAAM,qBAAsBsT,WAAY2Z,IAC1ErL,EAAYyM,kBAAqBruB,KAAM,oBAAqBsT,WAAY2Z,IACxErL,EAAY0M,qBAAwBtuB,KAAM,uBAAwBsT,WAAY2Z,IAC9ErL,EAAY2M,iBAAoBvuB,KAAM,aAAcsT,WAAY2Z,IAChErL,EAAY4M,aAAgBxuB,KAAM,eAAgBsT,WAAY2Z,IAC9DrL,EAAY6M,gBAAmBzuB,KAAM,YAAasT,WAAY2Z,IAC9DrL,EAAY5G,MAAShb,KAAM,QAASsT,WAAY2Z,IAChDrL,EAAY8M,aAAgB1uB,KAAM,eAAgBsT,WAAY2Z,IAC9DrL,EAAY+M,MAAS3uB,KAAM,QAASsT,WAAY2Z,IAChDrL,EAAYgN,gBAAmB5uB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYiN,iBAAoB7uB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAYkN,eAAkB9uB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYmN,gBAAmB/uB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYoN,aAAgBhvB,KAAM,eAAgBsT,WAAY2Z,IAC9DrL,EAAYqN,gBAAmBjvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYsN,gBAAmBlvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYuN,gBAAmBnvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYwN,gBAAmBpvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYyN,gBAAmBrvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAY0N,gBAAmBtvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAY2N,gBAAmBvvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAY4N,gBAAmBxvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAY6N,gBAAmBzvB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAY8N,eAAkB1vB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAY+N,eAAkB3vB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYgO,eAAkB5vB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYiO,eAAkB7vB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYkO,eAAkB9vB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYmO,eAAkB/vB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYoO,eAAkBhwB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYqO,eAAkBjwB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYsO,eAAkBlwB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYuO,eAAkBnwB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYwO,WAAcpwB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAYyO,WAAcrwB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAY0O,WAActwB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAY2O,WAAcvwB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAY4O,WAAcxwB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAY6O,MAASzwB,KAAM,QAASsT,WAAY2Z,IAChDrL,EAAY8O,gBAAmB1wB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAY+O,SAAY3wB,KAAM,WAAYsT,WAAY2Z,IACtDrL,EAAYgP,WAAc5wB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAYiP,SAAY7wB,KAAM,WAAYsT,WAAY2Z,IACtDrL,EAAYkP,WAAc9wB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAYmP,iBAAoB/wB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAYoP,MAAShxB,KAAM,QAASsT,WAAY2Z,IAChDrL,EAAYqP,eAAkBjxB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYsP,MAASlxB,KAAM,QAASsT,WAAY2Z,IAChDrL,EAAYuP,YAAenxB,KAAM,cAAesT,WAAY2Z,IAC5DrL,EAAYwP,eAAkBpxB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYkD,WAAc9kB,KAAM,aAAcsT,WAAY2Z,IAC1DrL,EAAYkB,QAAW9iB,KAAM,SAAUsT,WAAY2Z,IACnDrL,EAAYyP,iBAAoBrxB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAY0P,iBAAoBtxB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAY2P,sBAAyBvxB,KAAM,wBAAyBsT,WAAY2Z,IAChFrL,EAAY4P,eAAkBxxB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAY6P,iBAAoBzxB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAY8P,aAAgB1xB,KAAM,eAAgBsT,WAAY2Z,IAC9DrL,EAAY+P,YAAe3xB,KAAM,cAAesT,WAAY2Z,IAC5DrL,EAAYgQ,SACR5xB,KAAM,WACNsT,WAAY2Z,IAEhBrL,EAAYiQ,iBAAoB7xB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAYkQ,sBACR9xB,KAAM,wBACNsT,WAAY2Z,IAEhBrL,EAAYmQ,iBACR/xB,KAAM,mBACNsT,WAAY2Z,IAEhBrL,EAAYoQ,sBACRhyB,KAAM,wBACNsT,WAAY2Z,IAEhBrL,EAAYqQ,aACRjyB,KAAM,eACNsT,WAAY2Z,IAEhBrL,EAAYsQ,gBACRlyB,KAAM,iBACNsT,WAAY2Z,IAEhBrL,EAAYuQ,qBACRnyB,KAAM,uBACNsT,WAAY2Z,IAEhBrL,EAAYwQ,gBAAmBpyB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYyQ,iBAAoBryB,KAAM,mBAAoBsT,WAAY2Z,IACtErL,EAAY0Q,YAAetyB,KAAM,cAAesT,WAAY2Z,IAC5DrL,EAAY2Q,OAAUvyB,KAAM,SAAUsT,WAAY2Z,IAClDrL,EAAY4Q,cAAiBxyB,KAAM,gBAAiBsT,WAAY2Z,IAChErL,EAAY6Q,sBAAyBzyB,KAAM,wBAAyBsT,WAAY2Z,IAChFrL,EAAY8Q,oBAAuB1yB,KAAM,sBAAuBsT,WAAY2Z,IAC5ErL,EAAY+Q,0BAA6B3yB,KAAM,4BAA6BsT,WAAY2Z,IACxFrL,EAAYgR,kBAAqB5yB,KAAM,oBAAqBsT,WAAY2Z,IACxErL,EAAYiR,UAAa7yB,KAAM,YAAasT,WAAY2Z,IACxDrL,EAAYkR,cACR9yB,KAAM,gBACNsT,WAAY2Z,IAEhBrL,EAAYmR,qBACR/yB,KAAM,uBACNsT,WAAY2Z,IAGhBrL,EAAYoR,cAAiBhzB,KAAM,gBAAiBsT,WAAY2Z,IAChErL,EAAYqR,eAAkBjzB,KAAM,iBAAkBsT,WAAY2Z,IAClErL,EAAYsR,uBAA0BlzB,KAAM,yBAA0BsT,WAAY2Z,IAClFrL,EAAYuR,qBAAwBnzB,KAAM,uBAAwBsT,WAAY2Z,IAC9ErL,EAAYwR,gBAAmBpzB,KAAM,kBAAmBsT,WAAY2Z,IACpErL,EAAYyR,aAAgBrzB,KAAM,eAAgBsT,WAAY2Z,IAC9DrL,EAAY0R,0BAA6BtzB,KAAM,4BAA6BsT,WAAY2Z,IACjFrL,EAzIuB,GAmJ9B2R,GASA,SAASA,GAAQC,EAAOC,EAAcC,EAAsBC,EAASC,EAAavZ,GAC9EtvB,KAAKyoC,MAAQA,EACbzoC,KAAK0oC,aAAeA,EACpB1oC,KAAK2oC,qBAAuBA,EAC5B3oC,KAAK4oC,QAAUA,EACf5oC,KAAK6oC,YAAcA,EACnB7oC,KAAKsvB,GAAKA,EAENtvB,KAAK8oC,QADLL,EAAMlnC,SAEE84B,SAAUoO,EAAM,GAAGxlB,WAAW8lB,MAAMC,KAAKxH,IACzCyH,UAAWR,EAAM,GAAGxlB,WAAW8lB,MAAMG,KAAO,EAC5CC,SAAUV,EAAM,GAAGxlB,WAAW8lB,MAAMzyB,IAAM,EAC1C8yB,QAASX,EAAMA,EAAMlnC,OAAS,GAAG0hB,WAAWomB,IAAIH,KAAO,EACvDI,OAAQb,EAAM,GAAGxlB,WAAW8lB,MAAMzyB,IAAM,QASxDizB,GAAsB,WACtB,SAASA,EAAKvnC,EAAOihB,GACjBjjB,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAGtB,OADAsmB,EAAK1oC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQwoB,UAAUzpC,KAAMkhB,IAC7EqoB,EANc,GASrBG,GAA2B,WAC3B,SAASA,EAAUC,EAAU1mB,GACzBjjB,KAAK2pC,SAAWA,EAChB3pC,KAAKijB,WAAaA,EAGtB,OADAymB,EAAU7oC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQ2oB,eAAe5pC,KAAMkhB,IACvFwoB,EANmB,GAQ1BG,GAAqB,WACrB,SAASA,EAAI1V,EAAYnR,EAAM8mB,EAAO7mB,GAClCjjB,KAAKm0B,WAAaA,EAClBn0B,KAAKgjB,KAAOA,EACZhjB,KAAK8pC,MAAQA,EACb9pC,KAAKijB,WAAaA,EAGtB,OADA4mB,EAAIhpC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQ8oB,SAAS/pC,KAAMkhB,IAC3E2oB,EARa,GAUpBG,GAAgC,WAChC,SAASA,EAAeha,EAAK/X,EAAOgyB,EAAWC,EAAWP,EAAUt1B,EAAQ4O,GACxEjjB,KAAKgwB,IAAMA,EACXhwB,KAAKiY,MAAQA,EACbjY,KAAKiqC,UAAYA,EACjBjqC,KAAKkqC,UAAYA,EACjBlqC,KAAK2pC,SAAWA,EAChB3pC,KAAKqU,OAASA,EACdrU,KAAKijB,WAAaA,EAGtB,OADA+mB,EAAenpC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQkpB,oBAAoBnqC,KAAMkhB,IACjG8oB,EAXwB,GAa/BI,GAA6B,WAC7B,SAASA,EAAYpoC,EAAOiT,EAAMgO,GAC9BjjB,KAAKgC,MAAQA,EACbhC,KAAKiV,KAAOA,EACZjV,KAAKijB,WAAaA,EAGtB,OADAmnB,EAAYvpC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQopB,iBAAiBrqC,KAAMkhB,IAC3FkpB,EAPqB,GAS5BE,GAAgC,WAChC,SAASA,EAAetoC,EAAOiT,EAAMgO,GACjCjjB,KAAKgC,MAAQA,EACbhC,KAAKiV,KAAOA,EACZjV,KAAKijB,WAAaA,EAGtB,OADAqnB,EAAezpC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQspB,oBAAoBvqC,KAAMkhB,IACjGopB,EAPwB,GAU/BE,GAA8B,WAC9B,SAASA,KA2BT,OAzBAA,EAAa3pC,UAAU4oC,UAAY,SAAUxZ,EAAM/O,GAAW,OAAO,IAAIqoB,GAAKtZ,EAAKjuB,MAAOiuB,EAAKhN,aAC/FunB,EAAa3pC,UAAU+oC,eAAiB,SAAUa,EAAWvpB,GACzD,IAAI1M,EAAQxU,KACR2pC,EAAWc,EAAUd,SAASjuB,IAAI,SAAUra,GAAK,OAAOA,EAAEmoC,MAAMh1B,EAAO0M,KAC3E,OAAO,IAAIwoB,GAAUC,EAAUc,EAAUxnB,aAE7CunB,EAAa3pC,UAAUkpC,SAAW,SAAUW,EAAKxpB,GAC7C,IAAI1M,EAAQxU,KACR8pC,KACJ1pC,OAAOmxB,KAAKmZ,EAAIZ,OAAOp1B,QAAQ,SAAUyO,GAAO,OAAO2mB,EAAM3mB,GAAOunB,EAAIZ,MAAM3mB,GAAKqmB,MAAMh1B,EAAO0M,KAChG,IAAI8Q,EAAM,IAAI6X,GAAIa,EAAIvW,WAAYuW,EAAI1nB,KAAM8mB,EAAOY,EAAIznB,YAEvD,OADA+O,EAAI2Y,sBAAwBD,EAAIC,sBACzB3Y,GAEXwY,EAAa3pC,UAAUspC,oBAAsB,SAAUS,EAAI1pB,GACvD,IAAI1M,EAAQxU,KACR2pC,EAAWiB,EAAGjB,SAASjuB,IAAI,SAAUra,GAAK,OAAOA,EAAEmoC,MAAMh1B,EAAO0M,KACpE,OAAO,IAAI8oB,GAAeY,EAAG5a,IAAK4a,EAAG3yB,MAAO2yB,EAAGX,UAAWW,EAAGV,UAAWP,EAAUiB,EAAGv2B,OAAQu2B,EAAG3nB,aAEpGunB,EAAa3pC,UAAUwpC,iBAAmB,SAAUO,EAAI1pB,GACpD,OAAO,IAAIkpB,GAAYQ,EAAG5oC,MAAO4oC,EAAG31B,KAAM21B,EAAG3nB,aAEjDunB,EAAa3pC,UAAU0pC,oBAAsB,SAAUK,EAAI1pB,GACvD,OAAO,IAAIopB,GAAeM,EAAG5oC,MAAO4oC,EAAG31B,KAAM21B,EAAG3nB,aAE7CunB,EA5BsB,GA+B7BK,GAAgC,WAChC,SAASA,KAiBT,OAfAA,EAAehqC,UAAU4oC,UAAY,SAAUxZ,EAAM/O,KACrD2pB,EAAehqC,UAAU+oC,eAAiB,SAAUa,EAAWvpB,GAC3D,IAAI1M,EAAQxU,KACZyqC,EAAUd,SAASj1B,QAAQ,SAAUo2B,GAAS,OAAOA,EAAMtB,MAAMh1B,MAErEq2B,EAAehqC,UAAUkpC,SAAW,SAAUW,EAAKxpB,GAC/C,IAAI1M,EAAQxU,KACZI,OAAOmxB,KAAKmZ,EAAIZ,OAAOp1B,QAAQ,SAAUq2B,GAAKL,EAAIZ,MAAMiB,GAAGvB,MAAMh1B,MAErEq2B,EAAehqC,UAAUspC,oBAAsB,SAAUS,EAAI1pB,GACzD,IAAI1M,EAAQxU,KACZ4qC,EAAGjB,SAASj1B,QAAQ,SAAUo2B,GAAS,OAAOA,EAAMtB,MAAMh1B,MAE9Dq2B,EAAehqC,UAAUwpC,iBAAmB,SAAUO,EAAI1pB,KAC1D2pB,EAAehqC,UAAU0pC,oBAAsB,SAAUK,EAAI1pB,KACtD2pB,EAlBwB;;;;;;;;AA4BnC,SAASG,GAAOC,GACZ,OAAOA,EAAQ3b,IA4EnB,SAAS4b,EAAK3Y,GACV,IAAI7e,EAAIC,EACJw3B,EAAO7Y,GAAWC,GAClB6Y,EAqJR,SAASC,EAAgB9Y,EAAK+Y,GAE1B,IADA,IAAIF,EAAU7qC,MAAOgyB,EAAIhxB,OAAS,IAAO,GAChCH,EAAI,EAAGA,EAAIgqC,EAAQ7pC,OAAQH,IAChCgqC,EAAQhqC,GAAKmqC,GAAOhZ,EAAS,EAAJnxB,EAAOkqC,GAEpC,OAAOF,EA1JOC,CAAgBF,EAAMK,GAAOC,KACvC5oB,EAAoB,EAAdsoB,EAAK5pC,OACXmqC,EAAI,IAAInrC,MAAM,IACdwT,EAAK7R,GAAQ,WAAY,WAAY,WAAY,UAAY,YAAa,GAAIypC,EAAI53B,EAAG,GAAI5T,EAAI4T,EAAG,GAAIgK,EAAIhK,EAAG,GAAI7T,EAAI6T,EAAG,GAAI3R,EAAI2R,EAAG,GACrIq3B,EAAQvoB,GAAO,IAAM,KAAS,GAAKA,EAAM,GACzCuoB,EAAiC,IAAvBvoB,EAAM,IAAM,GAAM,IAAWA,EACvC,IAAK,IAAIzhB,EAAI,EAAGA,EAAIgqC,EAAQ7pC,OAAQH,GAAK,GAAI,CAEzC,IADA,IAAI8S,EAAKhS,GAAQypC,EAAGxrC,EAAG4d,EAAG7d,EAAGkC,GAAI,GAAIwpC,EAAK13B,EAAG,GAAI23B,EAAK33B,EAAG,GAAI43B,EAAK53B,EAAG,GAAI63B,EAAK73B,EAAG,GAAI83B,EAAK93B,EAAG,GACpF+3B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAErBP,EAAEO,GADFA,EAAI,GACGb,EAAQhqC,EAAI6qC,GAGZC,GAAMR,EAAEO,EAAI,GAAKP,EAAEO,EAAI,GAAKP,EAAEO,EAAI,IAAMP,EAAEO,EAAI,IAAK,GAE9D,IAAI73B,EAAKlS,EAAOiqC,GAAGF,EAAG9rC,EAAG4d,EAAG7d,GAAI,GAAIqrB,EAAInX,EAAG,GAAI22B,EAAI32B,EAAG,GAClDg4B,GAAQF,GAAMP,EAAG,GAAIpgB,EAAGnpB,EAAG2oC,EAAGW,EAAEO,IAAI9K,OAAOkL,IACAjqC,GAA/CsR,EAAKxR,GAAQhC,EAAG6d,EAAGmuB,GAAM/rC,EAAG,IAAKwrC,EAAGS,GAAO,IAAW,GAAIlsC,EAAIwT,EAAG,GAAIqK,EAAIrK,EAAG,GAAIvT,EAAIuT,EAAG,GAAIi4B,EAAIj4B,EAAG,GAEdi4B,GAAxFh4B,EAAKzR,GAAQmqC,GAAMV,EAAGC,GAAKS,GAAMlsC,EAAG0rC,GAAKQ,GAAMtuB,EAAG+tB,GAAKO,GAAMnsC,EAAG6rC,GAAKM,GAAMjqC,EAAG4pC,IAAM,IAAW,GAAI7rC,EAAIwT,EAAG,GAAIoK,EAAIpK,EAAG,GAAIzT,EAAIyT,EAAG,GAAIvR,EAAIuR,EAAG,GAE/I,OAkKJ,SAAS24B,EAAsB/Z,GAE3B,IADA,IAAIga,EAAM,GACDnrC,EAAI,EAAGA,EAAImxB,EAAIhxB,OAAQH,IAAK,CACjC,IAAIjB,EAAIqsC,GAAOja,EAAKnxB,GACpBmrC,IAAQpsC,IAAM,GAAGsZ,SAAS,KAAW,GAAJtZ,GAAUsZ,SAAS,IAExD,OAAO8yB,EAAIx3B,cAxKJu3B,CAAsBG,IAAqBd,EAAGxrC,EAAG4d,EAAG7d,EAAGkC,KApGzC8oC,CA6CzB,SAASwB,EAAejE,GACpB,OAAOA,EAAM/sB,IAAI,SAAUiwB,GAAK,OAAOA,EAAEnC,MAAMmD,GAAmB,QA9CxCD,CAAezB,EAAQxC,OAAOnvB,KAAK,IAAO,IAAM2xB,EAAQrC,QAAU,KAEhG,SAASgE,GAAc3B,GACnB,GAAIA,EAAQ3b,GACR,OAAO2b,EAAQ3b,GAEnB,IAAIrO,EAAU,IAAI4rB,GAElB,OA2HJ,SAASC,EAAa9a,EAAK4W,GACvB,IAAIl1B,EACAC,EAAKzR,EAAO6qC,GAAY/a,GAAM,GAAIgb,EAAKr5B,EAAG,GAAIs5B,EAAKt5B,EAAG,GAC1D,GAAIi1B,EAAS,CACT,IAAI70B,EAAK7R,EAAO6qC,GAAYnE,GAAU,GAAIsE,EAAMn5B,EAAG,GAAIo5B,EAAMp5B,EAAG,GACTi5B,GAAvDt5B,EAAKxR,EAqEb,SAASkrC,EAAM15B,EAAIC,GACf,IAAII,EAAK7R,EAAOwR,EAAI,GAAI25B,EAAKt5B,EAAG,GAAIu5B,EAAKv5B,EAAG,GACxCG,EAAKhS,EAAOyR,EAAI,GAAI45B,EAAKr5B,EAAG,GAC5BE,EAAKlS,EAAOsrC,GAAUF,EADep5B,EAAG,IACT,GAAIu5B,EAAQr5B,EAAG,GAAIs5B,EAAIt5B,EAAG,GAE7D,OADQi4B,GAAMA,GAAMgB,EAAIE,GAAKE,GAClBC,GA1EKN,CAsFpB,SAASO,EAAMj6B,EAAIk6B,GACf,IAAIj6B,EAAKzR,EAAOwR,EAAI,GAAIs5B,EAAKr5B,EAAG,GAAIs5B,EAAKt5B,EAAG,GAG5C,OAFSq5B,GAAMY,EAAUX,IAAQ,GAAKW,EAC7BX,GAAMW,EAAUZ,IAAQ,GAAKY,GAzFhBD,EAAOX,EAAIC,GAAK,IAAKC,EAAKC,IAAO,IAAY,GAAIF,EAAKv5B,EAAG,GAE/E,OAqIJ,SAASm6B,EAAsBtb,GAG3B,IAFA,IAAIub,EAAU,GACVC,EAAa,IACR3sC,EAAImxB,EAAIhxB,OAAS,EAAGH,GAAK,EAAGA,IACjC0sC,EAAUE,GAAUF,EAASG,GAAkBzB,GAAOja,EAAKnxB,GAAI2sC,IAC/DA,EAAaE,GAAkB,IAAKF,GAExC,OAAOD,EAAQza,MAAM,IAAI6a,UAAU50B,KAAK,IA5IjCu0B,CAAsBpB,IAA0B,WAALO,EAAiBC,KAlI5DH,CADK7B,EAAQxC,MAAM/sB,IAAI,SAAUiwB,GAAK,OAAOA,EAAEnC,MAAMvoB,EAAS,QAC3C3H,KAAK,IAAK2xB,EAAQrC,SAShD,IA+KI4C,GA/KA2C,GAAoC,WACpC,SAASA,KAwBT,OAtBAA,EAAmBttC,UAAU4oC,UAAY,SAAUxZ,EAAM/O,GAAW,OAAO+O,EAAKjuB,OAChFmsC,EAAmBttC,UAAU+oC,eAAiB,SAAUa,EAAWvpB,GAC/D,IAAI1M,EAAQxU,KACZ,MAAO,IAAMyqC,EAAUd,SAASjuB,IAAI,SAAUovB,GAAS,OAAOA,EAAMtB,MAAMh1B,KAAW8E,KAAK,MAAQ,KAEtG60B,EAAmBttC,UAAUkpC,SAAW,SAAUW,EAAKxpB,GACnD,IAAI1M,EAAQxU,KACRouC,EAAWhuC,OAAOmxB,KAAKmZ,EAAIZ,OAAOpuB,IAAI,SAAUqvB,GAAK,OAAOA,EAAI,KAAOL,EAAIZ,MAAMiB,GAAGvB,MAAMh1B,GAAS,MACvG,MAAO,IAAMk2B,EAAIvW,WAAa,KAAOuW,EAAI1nB,KAAO,KAAOorB,EAAS90B,KAAK,MAAQ,KAEjF60B,EAAmBttC,UAAUspC,oBAAsB,SAAUS,EAAI1pB,GAC7D,IAAI1M,EAAQxU,KACZ,OAAO4qC,EAAGv2B,OACN,iBAAoBu2B,EAAGX,UAAY,MACnC,iBAAoBW,EAAGX,UAAY,KAAQW,EAAGjB,SAASjuB,IAAI,SAAUovB,GAAS,OAAOA,EAAMtB,MAAMh1B,KAAW8E,KAAK,MAAQ,cAAiBsxB,EAAGV,UAAY,MAEjKiE,EAAmBttC,UAAUwpC,iBAAmB,SAAUO,EAAI1pB,GAC1D,OAAO0pB,EAAG5oC,MAAQ,aAAgB4oC,EAAG31B,KAAO,KAAQ21B,EAAG5oC,MAAQ,QAAU,aAAgB4oC,EAAG31B,KAAO,OAEvGk5B,EAAmBttC,UAAU0pC,oBAAsB,SAAUK,EAAI1pB,GAC7D,MAAO,iBAAoB0pB,EAAG31B,KAAO,KAAQ21B,EAAG5oC,MAAMwnC,MAAMxpC,MAAQ,SAEjEmuC,EAzB4B,GA2BnCxB,GAAoB,IAAIwB,GAWxBtB,GAAgD,SAAU9rB,GAE1D,SAAS8rB,IACL,OAAkB,OAAX9rB,GAAmBA,EAAOtf,MAAMzB,KAAMsB,YAActB,KAQ/D,OAVAU,EAAUmsC,EAAgC9rB,GAI1C8rB,EAA+BhsC,UAAUkpC,SAAW,SAAUW,EAAKxpB,GAC/D,IAAI1M,EAAQxU,KACRouC,EAAWhuC,OAAOmxB,KAAKmZ,EAAIZ,OAAOpuB,IAAI,SAAUqvB,GAAK,OAAOA,EAAI,KAAOL,EAAIZ,MAAMiB,GAAGvB,MAAMh1B,GAAS,MAEvG,MAAO,IAAMk2B,EAAI1nB,KAAO,KAAOorB,EAAS90B,KAAK,MAAQ,KAElDuzB,EAXwC,CAYjDsB,IAmCF,SAAShC,GAAG/oB,EAAOjjB,EAAG4d,EAAG7d,GACrB,OAAIkjB,EAAQ,IACCjjB,EAAI4d,GAAO5d,EAAID,EAAI,YAE5BkjB,EAAQ,IACAjjB,EAAI4d,EAAI7d,EAAG,YAEnBkjB,EAAQ,IACCjjB,EAAI4d,EAAM5d,EAAID,EAAM6d,EAAI7d,EAAI,aAEjCC,EAAI4d,EAAI7d,EAAG,YAUvB,SAAS6sC,GAAYxa,GACjB,IAAI4Y,EAAO7Y,GAAWC,GAClB7e,EAAKxR,GAAQmsC,GAAOlD,EAAM,GAAIkD,GAAOlD,EAAM,SAAU,GAAI6B,EAAKt5B,EAAG,GAAIu5B,EAAKv5B,EAAG,GAKjF,OAJU,GAANs5B,GAAkB,GAANC,GAAiB,GAANA,IACvBD,GAAU,UACVC,IAAW,aAEPD,EAAIC,GAWhB,SAASoB,GAAO9b,EAAKxU,GACjB,IAAIrK,EAEAtS,EADAuS,EAAKzR,GAAQ,WAAY,YAAa,GAAIypC,EAAIh4B,EAAG,GAAIxT,EAAIwT,EAAG,GAE5DkP,EAAM0P,EAAIhxB,OACd,IAAKH,EAAI,EAAGA,EAAI,IAAMyhB,EAAKzhB,GAAK,GAIIuqC,GAAhCj4B,EAAKxR,EAAOosC,IAHZ3C,EAAIU,GAAMV,EAAGJ,GAAOhZ,EAAKnxB,EAAGoqC,GAAO+C,SACnCpuC,EAAIksC,GAAMlsC,EAAGorC,GAAOhZ,EAAKnxB,EAAI,EAAGoqC,GAAO+C,SACvCxwB,EAAIsuB,GAAMtuB,EAAGwtB,GAAOhZ,EAAKnxB,EAAI,EAAGoqC,GAAO+C,WACX,IAAW,GAAIpuC,EAAIuT,EAAG,GAAIqK,EAAIrK,EAAG,GAOjE,OAAO46B,IALP3C,EAAIU,GAAMV,EAAGJ,GAAOhZ,EAAKnxB,EAAGoqC,GAAO+C,SACnCpuC,EAAIksC,GAAMlsC,EAAGorC,GAAOhZ,EAAKnxB,EAAI,EAAGoqC,GAAO+C,SAGvCxwB,EAAIsuB,GADJtuB,EAAIsuB,GAAMtuB,EAAG8E,GACA0oB,GAAOhZ,EAAKnxB,EAAI,EAAGoqC,GAAO+C,SAAW,KAC5B,GAG1B,SAASD,GAAI56B,GACT,IAAIC,EAAKzR,EAAOwR,EAAI,GAAIi4B,EAAIh4B,EAAG,GAAIxT,EAAIwT,EAAG,GAAIoK,EAAIpK,EAAG,GA4BrD,OA1BAg4B,EAAI6C,GADJ7C,EAAI6C,GAAM7C,EAAGxrC,GACA4d,GACb4tB,GAAK5tB,IAAM,GAEX5d,EAAIquC,GADJruC,EAAIquC,GAAMruC,EAAG4d,GACA4tB,GACbxrC,GAAKwrC,GAAK,EAEV5tB,EAAIywB,GADJzwB,EAAIywB,GAAMzwB,EAAG4tB,GACAxrC,GACb4d,GAAK5d,IAAM,GAEXwrC,EAAI6C,GADJ7C,EAAI6C,GAAM7C,EAAGxrC,GACA4d,GACb4tB,GAAK5tB,IAAM,GAEX5d,EAAIquC,GADJruC,EAAIquC,GAAMruC,EAAG4d,GACA4tB,GACbxrC,GAAKwrC,GAAK,GAEV5tB,EAAIywB,GADJzwB,EAAIywB,GAAMzwB,EAAG4tB,GACAxrC,GACb4d,GAAK5d,IAAM,EAEXwrC,EAAI6C,GADJ7C,EAAI6C,GAAM7C,EAAGxrC,GACA4d,GACb4tB,GAAK5tB,IAAM,EAEX5d,EAAIquC,GADJruC,EAAIquC,GAAMruC,EAAG4d,GACA4tB,GACbxrC,GAAKwrC,GAAK,GAEV5tB,EAAIywB,GADJzwB,EAAIywB,GAAMzwB,EAAG4tB,GACAxrC,IAELwrC,EAAGxrC,EADX4d,GAAK5d,IAAM,IAUf,SAASksC,GAAMV,EAAGxrC,GACd,OAAOqtC,GAAU7B,EAAGxrC,GAAG,GAE3B,SAASqtC,GAAU7B,EAAGxrC,GAClB,IAAIwyB,GAAW,MAAJgZ,IAAmB,MAAJxrC,GACtBsuC,GAAQ9C,IAAM,KAAOxrC,IAAM,KAAOwyB,IAAQ,IAC9C,OAAQ8b,IAAS,GAAKA,GAAQ,GAAa,MAAN9b,GASzC,SAAS6b,GAAM7C,EAAGxrC,GACd,IAAIwyB,GAAW,MAAJgZ,IAAmB,MAAJxrC,GAE1B,OADYwrC,GAAK,KAAOxrC,GAAK,KAAOwyB,GAAO,KAC3B,GAAa,MAANA,EAG3B,SAASuZ,GAAMP,EAAGiC,GACd,OAAQjC,GAAKiC,EAAUjC,IAAO,GAAKiC,EAgBvC,SAASpB,GAAOja,EAAKnP,GACjB,OAAOA,GAASmP,EAAIhxB,OAAS,EAA4B,IAAxBgxB,EAAIG,WAAWtP,GAEpD,SAASmoB,GAAOhZ,EAAKnP,EAAOkoB,GACxB,IAAIoD,EAAO,EACX,GAAIpD,IAAWE,GAAOC,IAClB,IAAK,IAAIrqC,EAAI,EAAGA,EAAI,EAAGA,IACnBstC,GAAQlC,GAAOja,EAAKnP,EAAQhiB,IAAO,GAAK,EAAIA,OAIhD,IAASA,EAAI,EAAGA,EAAI,EAAGA,IACnBstC,GAAQlC,GAAOja,EAAKnP,EAAQhiB,IAAM,EAAIA,EAG9C,OAAOstC,EAEX,SAASjC,GAAoBrB,GACzB,OAAOA,EAAQjK,OAAO,SAAU5O,EAAKmc,GAAQ,OAAOnc,EAExD,SAASoc,EAAmBD,GAExB,IADA,IAAInc,EAAM,GACDnxB,EAAI,EAAGA,EAAI,EAAGA,IACnBmxB,GAAOhQ,OAAOqQ,aAAc8b,IAAS,GAAK,EAAIttC,GAAM,KAExD,OAAOmxB,EAPmDoc,CAAmBD,IAAU,IA4B3F,SAASV,GAAUY,EAAGC,GAGlB,IAFA,IAAIp+B,EAAM,GACNoS,EAAMisB,KAAKC,IAAIH,EAAErtC,OAAQstC,EAAEttC,QACtBH,EAAI,EAAGqsC,EAAQ,EAAGrsC,EAAIyhB,GAAO4qB,EAAOrsC,IAAK,CAC9C,IAAI4tC,EAASvB,KAAUmB,EAAExtC,IAAM,MAAOytC,EAAEztC,IAAM,GAC1C4tC,GAAU,IACVvB,EAAQ,EACRh9B,GAAOu+B,EAAS,KAGhBvB,EAAQ,EACRh9B,GAAOu+B,GAGf,OAAOv+B,EAEX,SAASw9B,GAAkBgB,EAAK9uC,GAG5B,IAFA,IAAI+uC,EAAU,GACVC,EAAchvC,EACH,IAAR8uC,EAAWA,KAAc,EAClB,EAANA,IACAC,EAAUlB,GAAUkB,EAASC,IACjCA,EAAcnB,GAAUmB,EAAaA,GAEzC,OAAOD;;;;;;;QAhHX,SAAW1D,GACPA,EAAOA,EAAe,OAAI,GAAK,SAC/BA,EAAOA,EAAY,IAAI,GAAK,MAFhC,CAGGA,KAAWA,QAuHd,IAAI4D,GAA4B,WAC5B,SAASA,KAKT,OADAA,EAAWvuC,UAAUwuC,iBAAmB,SAAUpE,GAAW,OAAO,MAC7DmE,EANoB,GAW3BE,GAAyC,SAAUvuB,GAGnD,SAASuuB,EAAwBrE,EAASsE,GACtC,IAAI/6B,EAAQuM,EAAOvf,KAAKxB,OAASA,KAMjC,OALAwU,EAAM+6B,QAAUA,EAChB/6B,EAAMg7B,oBACNh7B,EAAMi7B,kBACNj7B,EAAMk7B,oBACNzE,EAAQxC,MAAM/zB,QAAQ,SAAUuS,GAAQ,OAAOA,EAAKuiB,MAAMh1B,KACnDA,EAuCX,OAhDA9T,EAAU4uC,EAAyBvuB,GAWnCuuB,EAAwBzuC,UAAU8uC,aAAe,SAAUC,GACvD,OAAO5vC,KAAKwvC,iBAAiB/uC,eAAemvC,GACxC5vC,KAAKwvC,iBAAiBI,GACtB,MAERN,EAAwBzuC,UAAUgvC,eAAiB,SAAUC,GACzD,OAAO9vC,KAAK0vC,iBAAiBjvC,eAAeqvC,GAAc9vC,KAAK0vC,iBAAiBI,GAC5E,MAERR,EAAwBzuC,UAAU4oC,UAAY,SAAUxZ,EAAM/O,GAAW,OAAO,MAChFouB,EAAwBzuC,UAAUspC,oBAAsB,SAAUS,EAAI1pB,GAClElhB,KAAK+vC,qBAAqBnF,EAAGX,WAC7BlpB,EAAOlgB,UAAUspC,oBAAoB3oC,KAAKxB,KAAM4qC,EAAI1pB,GACpDlhB,KAAK+vC,qBAAqBnF,EAAGV,YAEjCoF,EAAwBzuC,UAAUwpC,iBAAmB,SAAUO,EAAI1pB,GAAWlhB,KAAK+vC,qBAAqBnF,EAAG31B,OAC3Gq6B,EAAwBzuC,UAAU0pC,oBAAsB,SAAUK,EAAI1pB,GAClElhB,KAAK+vC,qBAAqBnF,EAAG31B,OAGjCq6B,EAAwBzuC,UAAUkvC,qBAAuB,SAAUH,GAC/D,GAAKA,IAAgB5vC,KAAKwvC,iBAAiB/uC,eAAemvC,GAA1D,CAGA,IAAIE,EAAa9vC,KAAKuvC,QAAQK,GAC9B,GAAI5vC,KAAK0vC,iBAAiBjvC,eAAeqvC,GAAa,CAElD,IAAIE,EAAShwC,KAAKyvC,eAAeK,GACjC9vC,KAAKyvC,eAAeK,GAAcE,EAAS,EAC3CF,EAAaA,EAAa,IAAME,OAGhChwC,KAAKyvC,eAAeK,GAAc,EAEtC9vC,KAAKwvC,iBAAiBI,GAAgBE,EACtC9vC,KAAK0vC,iBAAiBI,GAAcF,IAEjCN,EAjDiC,CAkD1CzE,IAkCEoF,GAAW,IAzBe,WAC1B,SAASC,KAsBT,OApBAA,EAASrvC,UAAUsvC,SAAW,SAAUngB,GACpC,IAAIxb,EAAQxU,KACRowC,EAAWpwC,KAAKqwC,qBAAqBrgB,EAAI/X,OAC7C,GAA2B,GAAvB+X,EAAI2Z,SAASpoC,OACb,MAAO,IAAMyuB,EAAI/a,KAAOm7B,EAAW,KAEvC,IAAIE,EAActgB,EAAI2Z,SAASjuB,IAAI,SAAUuL,GAAQ,OAAOA,EAAKuiB,MAAMh1B,KACvE,MAAO,IAAMwb,EAAI/a,KAAOm7B,EAAW,IAAME,EAAYh3B,KAAK,IAAM,KAAO0W,EAAI/a,KAAO,KAEtFi7B,EAASrvC,UAAU4oC,UAAY,SAAUxZ,GAAQ,OAAOA,EAAKjuB,OAC7DkuC,EAASrvC,UAAU0vC,iBAAmB,SAAUC,GAC5C,MAAO,QAAUxwC,KAAKqwC,qBAAqBG,EAAKv4B,OAAS,OAE7Di4B,EAASrvC,UAAUwvC,qBAAuB,SAAUp4B,GAChD,IAAIm4B,EAAWhwC,OAAOmxB,KAAKtZ,GAAOyD,IAAI,SAAUzG,GAAQ,OAAOA,EAAO,KAAQgD,EAAMhD,GAAQ,MAASqE,KAAK,KAC1G,OAAO82B,EAAS7uC,OAAS,EAAI,IAAM6uC,EAAW,IAElDF,EAASrvC,UAAU4vC,aAAe,SAAUC,GACxC,MAAO,aAAeA,EAAQC,QAAU,OAASD,EAAQE,IAAM,QAE5DV,EAvBkB,IA0B7B,SAASW,GAAUpI,GACf,OAAOA,EAAM/sB,IAAI,SAAUuL,GAAQ,OAAOA,EAAKuiB,MAAMyG,MAAc32B,KAAK,IAE5E,IAAIw3B,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAIv8B,EAAQxU,KACZA,KAAKiY,SACL7X,OAAOmxB,KAAKwf,GAAgBr8B,QAAQ,SAAUq2B,GAC1Cv2B,EAAMyD,MAAM8yB,GAAKiG,GAAUD,EAAehG,MAIlD,OADA+F,EAAYjwC,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQsvB,iBAAiBvwC,OAC5E8wC,EATqB,GAW5BG,GAAyB,WACzB,SAASA,EAAQN,EAASC,GACtB5wC,KAAK2wC,QAAUA,EACf3wC,KAAK4wC,IAAMA,EAGf,OADAK,EAAQpwC,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQwvB,aAAazwC,OACpEixC,EANiB,GAQxBC,GAAqB,WACrB,SAASA,EAAIj8B,EAAM87B,EAAgBpH,QACR,IAAnBoH,IAA6BA,WAChB,IAAbpH,IAAuBA,MAC3B,IAAIn1B,EAAQxU,KACZA,KAAKiV,KAAOA,EACZjV,KAAK2pC,SAAWA,EAChB3pC,KAAKiY,SACL7X,OAAOmxB,KAAKwf,GAAgBr8B,QAAQ,SAAUq2B,GAC1Cv2B,EAAMyD,MAAM8yB,GAAKiG,GAAUD,EAAehG,MAIlD,OADAmG,EAAIrwC,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQkvB,SAASnwC,OAC5DkxC,EAba,GAepBC,GAAwB,WACxB,SAAS5H,EAAK6H,GACVpxC,KAAKgC,MAAQgvC,GAAUI,GAG3B,OADA7H,EAAK1oC,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQwoB,UAAUzpC,OAC9DupC,EALgB,GAOvB8H,GAAoB,SAAUtwB,GAE9B,SAASswB,EAAGC,GAER,YADW,IAAPA,IAAiBA,EAAK,GACnBvwB,EAAOvf,KAAKxB,KAAM,KAAO,IAAIO,MAAM+wC,EAAK,GAAGh4B,KAAK,OAAStZ,KAEpE,OALAU,EAAU2wC,EAAItwB,GAKPswB,EANY,CAOrBF,IACEI,KACC,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,SACN,KAAM,SAGX,SAASP,GAAU/gB,GACf,OAAOshB,GAAepQ,OAAO,SAAUlR,EAAMjC,GAAS,OAAOiC,EAAKhD,QAAQe,EAAM,GAAIA,EAAM,KAAQiC;;;;;;;OAUtG,IAMIuhB,GAAqB,SAAUzwB,GAE/B,SAASywB,IACL,OAAkB,OAAXzwB,GAAmBA,EAAOtf,MAAMzB,KAAMsB,YAActB,KAuC/D,OAzCAU,EAAU8wC,EAAKzwB,GAIfywB,EAAI3wC,UAAU4wC,MAAQ,SAAUC,EAAUC,GACtC,IAAIC,EAAiB,IAAIC,GACrB5wB,EAAU,IAAI6wB,GACdC,EAAW,IAAIb,GAdP,iBAgCZ,OAjBAQ,EAASh9B,QAAQ,SAAUu2B,GACvB,IAAIhzB,GAAUqX,GAAI2b,EAAQ3b,IACtB2b,EAAQpC,cACR5wB,EAAY,KAAIgzB,EAAQpC,aAExBoC,EAAQrC,UACR3wB,EAAe,QAAIgzB,EAAQrC,SAE/B,IAAIoJ,KACJ/G,EAAQnC,QAAQp0B,QAAQ,SAAUmB,GAC9Bm8B,EAAW1vC,KAAK,IAAI4uC,GArBlB,aAsBE,IAAIC,GAAOt7B,EAAOwkB,SAAW,IAAMxkB,EAAOozB,WAAapzB,EAAOuzB,UAAYvzB,EAAOozB,UAAY,IAAMpzB,EAAOuzB,QAAU,UAG5H2I,EAASpI,SAASrnC,KAAK,IAAI+uC,GAAG,GAAI,IAAIH,GA5B/B,MA4BiDj5B,EAAOzV,EAASwvC,EAAY/wB,EAAQ4vB,UAAU5F,EAAQxC,YAElHsJ,EAASpI,SAASrnC,KAAK,IAAI+uC,IACpBR,IACH,IAAIC,IAAcmB,QAAS,MAAOC,SAAU,UAC5C,IAAIb,GACJ,IAAIJ,GAnCI,gBAKL,ujBA+BH,IAAII,GACJO,EAAeO,mBAAmBJ,GAClC,IAAIV,MAGZG,EAAI3wC,UAAUolC,KAAO,SAAUmM,EAAS5Q,GACpC,MAAM,IAAI1+B,MAAM,gBAEpB0uC,EAAI3wC,UAAUmqC,OAAS,SAAUC,GAAW,OAAOoH,GAASpH,IAC5DuG,EAAI3wC,UAAUwuC,iBAAmB,SAAUpE,GACvC,OAAO,IAAIqE,GAAwBrE,EAAS0E,KAEzC6B,EA1Ca,CA2CtBpC,IACE0C,GAA4B,WAC5B,SAAS5B,KAyDT,OAvDAA,EAASrvC,UAAU4oC,UAAY,SAAUxZ,EAAM/O,GAAW,OAAQ,IAAIiwB,GAAOlhB,EAAKjuB,SAClFkuC,EAASrvC,UAAU+oC,eAAiB,SAAUa,EAAWvpB,GACrD,IAAI1M,EAAQxU,KACRyoC,KAEJ,OADAgC,EAAUd,SAASj1B,QAAQ,SAAUuS,GAAQ,OAAOwhB,EAAMnmC,KAAKb,MAAMgnC,EAAOjmC,EAASykB,EAAKuiB,MAAMh1B,OACzFi0B,GAEXyH,EAASrvC,UAAUkpC,SAAW,SAAUW,EAAKxpB,GACzC,IAAI1M,EAAQxU,KACRyoC,GAAS,IAAI0I,GAAO,IAAMzG,EAAIC,sBAAwB,KAAOD,EAAI1nB,KAAO,OAK5E,OAJA5iB,OAAOmxB,KAAKmZ,EAAIZ,OAAOp1B,QAAQ,SAAUqJ,GACrC0qB,EAAMnmC,KAAKb,MAAMgnC,EAAOjmC,GAAU,IAAI2uC,GAAOpzB,EAAI,OAAQ2sB,EAAIZ,MAAM/rB,GAAGyrB,MAAMh1B,IAAS,IAAI28B,GAAO,WAEpG1I,EAAMnmC,KAAK,IAAI6uC,GAAO,MACf1I,GAEXyH,EAASrvC,UAAUspC,oBAAsB,SAAUS,EAAI1pB,GACnD,IAAIoxB,EAAiB,IAAInB,GAAO,IAAMvG,EAAG5a,IAAM,KAC3CuiB,EAAU,IAAIrB,GApEP,SAoE8BoB,IAErCE,EAAa,IAAItB,GAvEN,MAuE8Bj8B,KAAM21B,EAAGX,YAAcsI,EAASD,IAC7E,GAAI1H,EAAGv2B,OAEH,OAAQm+B,GAEZ,IAAIC,EAAiB,IAAItB,GAAO,KAAOvG,EAAG5a,IAAM,KAC5C0iB,EAAU,IAAIxB,GA5EP,SA4E8BuB,IAErCE,EAAa,IAAIzB,GA/EN,MA+E8Bj8B,KAAM21B,EAAGV,YAAcwI,EAASD,IAC7E,OAAOjwC,GAAUgwC,GAAaxyC,KAAK6wC,UAAUjG,EAAGjB,WAAYgJ,KAEhEzC,EAASrvC,UAAUwpC,iBAAmB,SAAUO,EAAI1pB,GAChD,IAAI0xB,EAAsB,IAAIzB,GAAO,KAAOvG,EAAG5oC,MAAQ,MAEnD6wC,EAAQ,IAAI3B,GApFL,SAoF4B0B,IACvC,OAEI,IAAI1B,GAxFO,MAwFiBj8B,KAAM21B,EAAG31B,OAAS49B,EAAOD,MAG7D1C,EAASrvC,UAAU0pC,oBAAsB,SAAUK,EAAI1pB,GACnD,IAAI4xB,EAAgBlI,EAAG5oC,MAAMmyB,WACzB4e,EAAUnI,EAAG5oC,MAAMghB,KACnBgwB,EAAW5yC,OAAOmxB,KAAKqZ,EAAG5oC,MAAM8nC,OAAOpuB,IAAI,SAAU1Z,GAAS,OAAOA,EAAQ,WAAasX,KAAK,KAC/F25B,EAAY,IAAI9B,GAAO,IAAM2B,EAAgB,KAAOC,EAAU,KAAOC,EAAW,KAChFH,EAAQ,IAAI3B,GA/FL,SA+F4B+B,IACvC,OAEI,IAAI/B,GAnGO,MAmGiBj8B,KAAM21B,EAAG31B,OAAS49B,EAAOI,MAG7D/C,EAASrvC,UAAUgwC,UAAY,SAAUpI,GACrC,IAAIj0B,EAAQxU,KACZ,SAAUyC,OAAOhB,SAAUe,EAASimC,EAAM/sB,IAAI,SAAUuL,GAAQ,OAAOA,EAAKuiB,MAAMh1B,QAE/E07B,EA1DoB,GA4D/B,SAASmC,GAASpH,GACd,OAAO2B,GAAc3B,GAGzB,IAAI4G,GAAgC,WAChC,SAASA,KAqBT,OAnBAA,EAAehxC,UAAUsxC,mBAAqB,SAAUlrB,GAEpD,OADAA,EAAKuiB,MAAMxpC,MACJinB,GAEX4qB,EAAehxC,UAAUsvC,SAAW,SAAUngB,GAC1C,IAAIxb,EAAQxU,KACZ,GAzHe,OAyHXgwB,EAAI/a,MACJ,IAAK+a,EAAI2Z,UAAmC,GAAvB3Z,EAAI2Z,SAASpoC,OAAa,CAC3C,IAAI2xC,EAAS,IAAI/B,GAAOnhB,EAAI/X,MAAY,MAAK,OAC7C+X,EAAI2Z,UAAY,IAAIuH,GA3HjB,SA2HwCgC,WAG1CljB,EAAI2Z,UACT3Z,EAAI2Z,SAASj1B,QAAQ,SAAUuS,GAAQ,OAAOA,EAAKuiB,MAAMh1B,MAGjEq9B,EAAehxC,UAAU4oC,UAAY,SAAUxZ,KAC/C4hB,EAAehxC,UAAU0vC,iBAAmB,SAAUC,KACtDqB,EAAehxC,UAAU4vC,aAAe,SAAUC,KAC3CmB,EAtBwB,GAyBnC,SAASlC,GAAaC,GAClB,OAAOA,EAAauD,cAAclmB,QAAQ,cAAe;;;;;;;OAU7D,SAASmmB,GAAWvzB,EAAKoK,GAErB,YADe,IAAXA,IAAqBA,GAAS,GAC3B0F,GAAWvvB,OAAOmxB,KAAK1R,GAAKnE,IAAI,SAAUyH,GAAO,OACpDA,IAAKA,EACL8G,OAAQA,EACRjoB,MAAO6d,EAAIsD;;;;;;;OAYnB,IAAIkwB,GAA6B,OAC7BC,GAAqC,IAAIz7B,OAAO,IAAMw7B,IAItDE,GAAe,cAKfC,GAAY,OACZC,GAAmB,QAMnBC,GAA0B,IAC9B,SAASC,GAA0BC,EAAa3I,EAAS1nB,GACrD,IAAI5E,GAAQoR,GAAQkb,IAChB1nB,GAAUnjB,OAAOmxB,KAAKhO,GAAQhiB,QAC9Bod,EAAKrc,KAAK8wC,GAAW7vB,GAAQ,IAEjC,IAAIswB,EAASzkB,GAASmkB,IAAc9vB,OAAO9E,GAC3C,OAAOi1B,EAAYr4B,IAAIs4B,GAAQzsB,WAAWrF,IAAgBtiB,EAAQ8nB,aAAaC,QAcnF,SAASssB,GAAgB7+B,GACrB,OAAOA,IAASu+B,IAAav+B,EAAK8+B,WAAWN,IAEjD,SAASO,GAAe5+B,GACpB,OAAOA,aAAgBozB,GAE3B,SAASyL,GAAgB7+B,GACrB,OAAO4+B,GAAe5+B,IAA+B,IAAtBA,EAAKqzB,MAAMlnC,QAAgB6T,EAAKqzB,MAAM,aAAcoB,GAKvF,SAASqK,GAAoBjJ,EAAS3b,GAElC,YADW,IAAPA,IAAiBA,EAAK,OAEtBA,GAAkB,iBAAPA,EAAkBA,EAAK2b,EAAQ3b,IAAM,GAChDsZ,QAASqC,EAAQrC,SAAW,GAC5BC,YAAaoC,EAAQpC,aAAe,IAG5C,SAASsL,GAAmBlJ,GACxB,OAAOA,EAAQxC,MAAM,GAEzB,SAAS2L,GAAoBhC,EAASiC,GAGlC,YAFkB,IAAdA,IAAwBA,EAAY,GAEjC,GAAKX,GAA0BtB,GADxBiC,EAAY,EAAI,IAAMA,EAAY,IACUX,GAoB9D,SAASY,GAAqB5L,GAC1B,IAAInlB,KAIJ,OAHAmlB,EAAah0B,QAAQ,SAAUgL,EAAQyD,GACnCI,EAAOJ,GAAO4M,GAAQrQ,EAAOne,OAAS,EAAI,IAAMme,EAAOpG,KAAK,KAAO,IAAMoG,EAAO,MAE7E6D,EAEX,SAASgxB,GAAqB74B,EAAKzG,GAE/B,IADA,IAAIyK,KACKD,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpCC,EAAOD,EAAK,GAAKne,UAAUme,GAE/B,IAAI9G,EAAU+C,EAAIJ,IAAIrG,OACtB0D,EAAQrW,KAAKb,MAAMkX,EAASnW,EAASkd,IACrChE,EAAIH,IAAItG,EAAM0D,GAElB,SAAS67B,GAA8Bp/B,EAAMq/B,EAAmBJ,QAClC,IAAtBI,IAAgCA,EAAoB,QACtC,IAAdJ,IAAwBA,EAAY,GACxC,IAAIK,EAAWD,EACX/L,EAAe,IAAI5uB,IACnBmN,EAAO7R,aAAgBozB,GAAUpzB,EAAKqzB,MAAMkM,KAAK,SAAU1tB,GAAQ,OAAOA,aAAgByiB,KAAgBt0B,EAS9G,OARI6R,GACAA,EACK0iB,SAASzT,OAAO,SAAU4U,GAAS,OAAOA,aAAiBV,KAC3D11B,QAAQ,SAAUo2B,EAAO8J,GAC1B,IAAIxC,EAAUgC,GAAoBM,EAAWE,EAAKP,GAClDE,GAAqB7L,EAAcoC,EAAM71B,KAAMm9B,KAGhD1J,EA4CX,SAASmM,GAA0B5/B,GAC/B,IAKI6/B,EALAC,EAASpF,GAAa16B,GAAMoe,MAAM,KACtC,GAAsB,IAAlB0hB,EAAOxzC,OAEP,OAAO0T,EAAKF,cAIZ,QAAQigC,KAAKD,EAAOA,EAAOxzC,OAAS,MACpCuzC,EAAUC,EAAOE,OAErB,IAAIC,EAAMH,EAAOI,QAAQpgC,cAIzB,OAHIggC,EAAOxzC,SACP2zC,GAAOH,EAAOr5B,IAAI,SAAUqC,GAAK,OAAOA,EAAEq3B,OAAO,GAAGjC,cAAgBp1B,EAAEhb,MAAM,GAAGgS,gBAAkBuE,KAAK,KAEnGw7B,EAAUI,EAAM,IAAMJ,EAAUI,EAQ3C,SAASG,GAA0BC,GAC/B,OAAQ,GAAKjC,GAA6BiC,GAAOnC;;;;;;;;AA0CrD,IAAIoC,GAAiB,KAEjBC,GAAe,MAEfC,GAAe,KAYnB,SAASC,GAAmBtsB,EAAYnU,GACpC,IAAIm3B,EAAO,KACX,OAAO,WAKH,OAJKA,IACDhjB,EAAW9mB,KAAK,IAAI+kB,GAAekuB,QAAgBx4B,EAAW8E,KAC9DuqB,EAAOhd,GAASna,IAEbm3B,GAGf,SAASuJ,GAAYC,GACjB,GAAI51C,KACA,MAAM,IAAI8C,MAAM,WAAa9C,KAAKY,YAAYqU,KAAO,oBAAsB2gC,EAAU,QAEzF,MAAM,IAAI9yC,MAAM,WAAa8yC,EAAU,yBAE3C,SAASC,GAAUlf,GACf,MAAM,IAAI7zB,MAAM,0BAA4B9C,KAAKY,YAAYqU,KAAO,wBAAqB8H,GAE7F,SAAS+4B,GAAU9zC,GACf,OAAIzB,MAAMmwB,QAAQ1uB,GACP0tB,GAAW1tB,EAAM0Z,IAAIo6B,KAEzB/lB,GAAQ/tB,EAAO+f,IAE1B,SAASg0B,GAAoCxkB,EAAMykB,GAC/C,OAAI51C,OAAO61C,oBAAoB1kB,GAAMhwB,OAAS,EAKlD,SAAS20C,EAAgBx6B,EAAKs6B,GAC1B,OAAOrmB,GAAWvvB,OAAO61C,oBAAoBv6B,GAAKA,IAAI,SAAUyH,GAC5D,IAAIzP,EAAIC,EAIJwiC,EACArG,EAFA9tC,EAAQ0Z,EAAIyH,GAWhB,OAPI5iB,MAAMmwB,QAAQ1uB,IACS8tC,GAAvBp8B,EAAKxR,EAAOF,EAAO,IAAoB,GAAIm0C,EAAeziC,EAAG,KAGZyiC,GAAjDxiC,EAAKzR,EAAOiuB,GAAahN,GAAMA,EAAKnhB,IAAS,IAAsB,GAAI8tC,EAAan8B,EAAG,KAIvFwP,IAFWgzB,EAGXlsB,QAAQ,EACRjoB,MAAQg0C,GAAgBlG,IAAeqG,EACnCzmB,IAAYomB,GAAUhG,GAAagG,GAAUK,KAC7CL,GAAUhG,OAzBXoG,CAAgB3kB,EAAMykB,GAE1B,KA8BX,SAASI,GAAkBC,GACvB,MAlwEYC,EAkwEED,EAAWA,EAAW90C,OAAS,cAjwEvB6mB,IAA6B,OAAdkuB,EAAIt0C,OAkwErCq0C,EAAWpB,MAnwEnB,IAAgBqB,EAqwEZ,OAAOD,EAkBX,IAwCIE,GAMOC,GA9CPC,GAA+B,WAC/B,SAASA,IACLz2C,KAAK0f,UAQT,OANA+2B,EAAc51C,UAAU0a,IAAM,SAAU4H,EAAKnhB,GACrCA,GACAhC,KAAK0f,OAAOpd,MAAO6gB,IAAKA,EAAKnhB,MAAOA,EAAOioB,QAAQ,KAG3DwsB,EAAc51C,UAAU61C,aAAe,WAAc,OAAO/mB,GAAW3vB,KAAK0f,SACrE+2B,EAVuB,GAqBlC,SAASE,GAA6BC,GAClC,IAAIC,KAQJ,OAPAD,EAAQE,WAAWpiC,QAAQ,SAAUi3B,GAC5BmI,GAAgBnI,EAAE12B,QACnB4hC,EAAclL,EAAE12B,MAAQ02B,EAAE3pC,SAGlC40C,EAAQ3Z,OAAOvoB,QAAQ,SAAUtT,GAAKy1C,EAAcz1C,EAAE6T,MAAQ,KAC9D2hC,EAAQ1Z,QAAQxoB,QAAQ,SAAU/S,GAAKk1C,EAAcl1C,EAAEsT,MAAQ,KACxD4hC;;;;;;;OA+BX,SAASE,GAAuB3hC,GAC5B,IAAIlU,EAAIkuB,GAAS,KACbhG,KAMA4tB,EAAeC,GAAoB7hC,GAA0ElU,EAAlE,IAAIijB,GAAmB1kB,EAAQohB,eAAe0E,GAAIrkB,EAAGkU,EAAK4N,MACrGk0B,EAAW,KACf,GAAkB,OAAd9hC,EAAK2rB,KAELmW,EAAW,IAAItzB,GAAgBozB,EAAaG,GAAmB/hC,EAAK2rB,KAAM3rB,EAAKgiC,eAE9E,CACD,IAAIC,EAAcjoB,GAAS,IAAWha,EAAKH,KAAO,gBAC9C+yB,EAAsB3Y,GAAW8S,GAAc6F,qBAC/CsP,EAAkBD,EAAY97B,IAAIysB,EAAoBvkB,QAAQrO,EAAK4N,QAAQoE,WAAWrF,IACtFtiB,EAAQ8nB,aAAagwB,SAAU93C,EAAQ8nB,aAAaC,QAExD4B,EAAW9mB,KAAKg1C,GAEhBJ,EAAWG,EAAY5zB,QAAQuzB,IAEnC,IAAIQ,EAAgBN,EAChBzrB,KACAgsB,EAAU,KACd,SAASC,EAAuBC,GAC5B,IAAIx1C,EAAIitB,GAAS,KAGjB,OAFA3D,EAAKnpB,KAAKH,EAAEoZ,IAAIgP,IAAWnD,cAC3BqE,EAAKnpB,KAAKstB,GAAO1uB,GAAIiB,EAAEoZ,IAAIi8B,GAAepxB,WAAYjkB,EAAEoZ,IAAIo8B,GAAavxB,YAClEjkB,EAEX,GAAI80C,GAAoB7hC,IAASA,EAAKwiC,eAAiBrB,GAAsBsB,QAAS,CAClF,IAAIC,EAAkB1oB,GAAS,IAAWha,EAAKH,KAAO,gBAClD8yB,EAAe1Y,GAAW8S,GAAc4F,cAC5C,GAAI3yB,EAAK2iC,SAASp1B,aAAavN,EAAK4N,MAChC,MAAM,IAAIlgB,MAAM,6DAEpB,IAAIk1C,EAAsBF,EAAgBv8B,IAAIwsB,EAAatkB,QAAQrO,EAAK2iC,YAAY3wB,WAAWrF,IAC3FtiB,EAAQ8nB,aAAagwB,SAAU93C,EAAQ8nB,aAAaC,QAExD4B,EAAW9mB,KAAK01C,GAChBP,EAAUC,EAAuBI,EAAgBr0B,iBAEhD,GAAIwzB,GAAoB7hC,GAAO,CAGhC,IAAI6iC,EAAed,GAAmB/hC,EAAK8iC,aAAc9iC,EAAKgiC,UAK9DK,EAAUC,EAHQ,IAAKtiC,EAAKwiC,eAAiBrB,GAAsB4B,MAC/Dv0B,GACAF,IAAoBtO,EAAK2iC,SAAUE,SAQvCR,EAqFR,SAASW,EAA4BhjC,GACjC,YAA2B2H,IAApB3H,EAAK+e;;;;;;;OA3FHikB,CAA4BhjC,GAEvBsiC,EAAuBtiC,EAAK+e,YAG5B+iB,EAEd,OACI13C,QAASwoB,IAAI,IAAIkB,GAAQ,IAAKrH,KAAgBrf,EAASipB,GAAO,IAAIP,GAAgBusB,KAAY11B,QAAehF,EAAW3H,EAAKH,KAAO,YACpImU,WAAYA,GAGpB,SAAS+tB,GAAmBpW,EAAMqW,GAC9B,OAAOrW,EAAKrlB,IAAI,SAAU28B,GAAO,OAErC,SAASC,EAAwBD,EAAKjB,GAElC,OAAQiB,EAAIrkB,UACR,KAAKv0B,EAAQ+2C,yBAAyB+B,MAElC,IAAIC,EAAQ,GAAmBH,EAAIx4C,KAAO,EAAe,IACpDw4C,EAAII,SAAW,EAAmB,IAAMJ,EAAIra,KAAO,EAAe,IAClEqa,EAAIK,SAAW,EAAmB,GAEnCC,GAAcN,EAAI37B,OAOtB,OAHc,IAAV87B,GAA6BH,EAAIK,WACjCC,EAAWr2C,KAAKytB,GAAQyoB,IAErBnpB,GAAW+nB,GAAU3zB,OAAOk1B,GAEvC,KAAKl5C,EAAQ+2C,yBAAyBoC,UAElC,OAAOvpB,GAAW8S,GAAcmE,iBAAiB7iB,QAAQ40B,EAAI37B,QACjE,QACI,OAAOi5B,GAAY,qCAAuCl2C,EAAQ+2C,yBAAyB6B,EAAIrkB,YAxB/DskB,CAAwBD,EAAKjB,KA+BzE,SAASyB,GAA+B71B,EAAM81B,EAAW5e,GAKnCA,EAAUC,yBAAyBtD,GAAYoB,UAJjE,IAAIrL,EAAKlZ,EAMLqtB,KACJ,IACI,IAAK,IAAIptB,EAAKjS,EAASshB,EAAK+1B,QAAShlC,EAAKJ,EAAG5R,QAASgS,EAAG9R,KAAM8R,EAAKJ,EAAG5R,OAAQ,CAC3E,IAAIi3C,EAAajlC,EAAG/R,MACpB,GAAIg3C,EAAWt8B,MAAO,CAClB,IAAIu8B,EAAWtd,GAAeqd,EAAWt8B,OACrCsX,EAAWglB,EAAWE,YACtBz5C,EAAQ+2C,yBAAyBoC,UACjCn5C,EAAQ+2C,yBAAyB+B,MAGjC77B,EAAQu8B,aAAoB7e,GAAe0e,EAAUzpB,WAAW4pB,GAAYlpB,GAAQkpB,GAExFlY,EAAKz+B,MACDoa,MAAOA,EACPsX,SAAUA,EACVgK,OAAQgb,EAAWjb,OACnB2a,WAAYM,EAAWG,WACvBt5C,OAAQm5C,EAAWI,OACnBX,WAAYO,EAAWK,kBAI3B1D,GAAY,+BAIxB,MAAOzoB,GAASN,GAAQrqB,MAAO2qB,GAC/B,QACI,IACQnZ,IAAOA,EAAG9R,OAASyR,EAAKC,EAAGwZ,SAASzZ,EAAGlS,KAAKmS,GAEpD,QAAU,GAAIiZ,EAAK,MAAMA,EAAIrqB,OAEjC,OAAOw+B,EAEX,SAASkW,GAAoB7hC,GACzB,YAA6B2H,IAAtB3H,EAAKwiC,aAgBhB,SAAS0B,GAAmB59B,GAExB,OAAOiU,GADMvvB,OAAOmxB,KAAK7V,GAAKA,IAAI,SAAUyH,GAAO,OAAUA,IAAKA,EAAKnhB,MAAO0Z,EAAIyH,GAAM8G,QAAQ,MAQpG,SAASsvB,GAAoBnkC,EAAMkgB,GAC/B,GAAI/0B,MAAMmwB,QAAQtb,GACd,OAAOsa,GAAWta,EAAKsG,IAAI,SAAUsS,GAAS,OAAOurB,GAAoBvrB,EAAOsH,MAEpF,GAAIlgB,aAAgBglB,GAChB,OAAO9E,EAAIjG,WAAWja,GAE1B,GAAY,MAARA,EACA,OAAO2a,GAAQ3a,GAEnB,MAAM,IAAItS,MAAM,oDAAsDsS,GAE1E,SAASokC,GAAmBx2B,EAAMy2B,GAC9B,IAAIl2B,EAAS,KACb,GAAIk2B,EAAY,EAAG,CACfl2B,KACA,IAAK,IAAIniB,EAAI,EAAGA,EAAIq4C,EAAWr4C,IAC3BmiB,EAAOjhB,KAAKuf,IAGpB,OAAO4N,GAAezM,EAAM,KAAMO,IAhNtC,SAAWgzB,GACPA,EAAsBA,EAA6B,MAAI,GAAK,QAC5DA,EAAsBA,EAAgC,SAAI,GAAK,WAC/DA,EAAsBA,EAA+B,QAAI,GAAK,UAHlE,CAIGA,KAA0BA,SAClBC,GAWR/2C,EAAQ+2C,2BAA6B/2C,EAAQ+2C,8BAPnBA,GAAgC,MAAI,GAAK,QAMlEA,GAAyBA,GAAoC,UAAI,GAAK,YAmM1E,IAAIkD,GAAwB,IAC5B,SAASC,GAA6B1kC,GAClC,MAAO,GAAKykC,GAAwBzkC,EAKxC,SAAS2kC,GAAqC3kC,EAAM4kC,GAChD,MAAO,aAAe5kC,EAAO,IAAM4kC;;;;;;;OAUvC,SAASC,GAAkB1kC,GACvB,IAAIoE,EAAS,KACTugC,GACA9kC,KAAMG,EAAKH,KACX+N,KAAM5N,EAAK4N,KACX+d,KAAM3rB,EAAK4kC,SACX5C,SAAUvgB,GAAYkB,QAE1B,QAAsBhb,IAAlB3H,EAAKurB,SAAwB,CAO7B,IAAIsZ,EAAiB7kC,EAAKurB,SAAShe,aAAavN,EAAK4N,MACjD+d,EAAO3rB,EAAK8kC,UAAaD,GAAkB7kC,EAAK4kC,eAAaj9B,EAG7DvD,EAASu9B,GAAuB/1C,KAAa+4C,OAFpCh9B,IAATgkB,GAE4DgX,SAAU3iC,EAAKurB,SAAUuX,aAAcnX,EAAM6W,aAAcrB,GAAsB4B,QAGjFJ,SAAU3iC,EAAKurB,SAAUiX,aAAcrB,GAAsBsB,gBAI7Hr+B,EAASu9B,QADgBh6B,IAApB3H,EAAK0rB,WACsB9/B,KAAa+4C,GAAehC,SAAU3iC,EAAK0rB,WAAYoX,aAAc9iC,EAAK8kC,aAAgBtC,aAAcrB,GAAsBh3B,gBAEvIxC,IAAlB3H,EAAKwrB,SAIsB5/B,KAAa+4C,GAAe5lB,WAAY/e,EAAKwrB,gBAEnD7jB,IAArB3H,EAAKyrB,YAEsB7/B,KAAa+4C,GAAe5lB,WAAY9E,GAAWwH,GAAYkB,QAAQtU,QAAQrO,EAAKyrB,gBAGpFkZ,GAEpC,IAAIr9B,EAAQtH,EAAK4N,KACbm3B,EAAa/kC,EAAK+kC,WAGtB,OACIhmB,WAHa9E,GAAWwH,GAAYqB,kBAAkBzU,QAAQ61B,IAAqB58B,MAAOA,EAAOld,QAASga,EAAOha,QAAS26C,WAAYA,MAItIn3B,KAHO,IAAI5B,GAAeiO,GAAWwH,GAAYsB,eAAgBqhB,GAAmBpkC,EAAK4N,KAAM5N,EAAKglC,sBAIpGhxB,WAAY5P,EAAO4P;;;;;;;OAW3B,SAASixB,GAAqBrgB,EAAYh4B,GACtC,GAAa,MAATA,EAAJ,CAGA,IAAKzB,MAAMmwB,QAAQ1uB,GACf,MAAM,IAAIc,MAAM,aAAek3B,EAAa,gCAEhD,IAAK,IAAI54B,EAAI,EAAGA,EAAIY,EAAMT,OAAQH,GAAK,EACnC,GAAwB,iBAAbY,EAAMZ,GACb,MAAM,IAAI0B,MAAM,aAAek3B,EAAa,iCAIxD,IAAIsgB,IACA,QACA,OACA,SACA,cACA,SAEJ,SAASC,GAA2BvgB,EAAYh4B,GAC5C,KAAa,MAATA,GAAmBzB,MAAMmwB,QAAQ1uB,IAA0B,GAAhBA,EAAMT,QACjD,MAAM,IAAIuB,MAAM,aAAek3B,EAAa,mCAE3C,GAAa,MAATh4B,EAAe,CACpB,IAAIw4C,EAAUx4C,EAAM,GAChBy4C,EAAQz4C,EAAM,GAElBs4C,GAAgC5lC,QAAQ,SAAUgmC,GAC9C,GAAIA,EAAO1F,KAAKwF,IAAYE,EAAO1F,KAAKyF,GACpC,MAAM,IAAI33C,MAAM,KAAO03C,EAAU,OAASC,EAAQ;;;;;;;OAalE,IAAIE,GAAqC,WACrC,SAASA,EAAoB5R,EAAOM,GAChCrpC,KAAK+oC,MAAQA,EACb/oC,KAAKqpC,IAAMA,EASf,OAPAsR,EAAoBC,UAAY,SAAUC,GACtC,OAAKA,GAGLN,GAA2B,gBAAiBM,GACrC,IAAIF,EAAoBE,EAAQ,GAAIA,EAAQ,KAHxCC,IAKRH,EAZ6B,GAcpCG,GAA+B,IAAIH,GAAoB,KAAM,MAY7DI,GAAoC,WACpC,SAASA,EAAmB/R,QACX,IAATA,IAAmBA,EAAO,MAC9BhpC,KAAKgpC,KAAOA,EACZhpC,KAAKg7C,eAAiB,IAAIlhC,IAC1B9Z,KAAKi7C,SACLj7C,KAAKk7C,SAAW,EAChBl7C,KAAKm7C,aAAc,EAiGvB,OA9FAJ,EAAmBl6C,UAAUu6C,UAAY,SAAU5Z,EAAK4Q,GAKpD,YAJgB,IAAZA,IAAsBA,EAAU,MAC/BpyC,KAAKg7C,eAAe9a,IAAIsB,IACzBxhC,KAAKg7C,eAAez/B,IAAIimB,EAAK4Q,GAE1BpyC,MAEX+6C,EAAmBl6C,UAAUw6C,QAAU,WAGnC,OAFAr7C,KAAKi7C,MAAM34C,SACXtC,KAAKk7C,SAAW,EACTl7C,MAEX+6C,EAAmBl6C,UAAUy6C,WAAa,SAAUC,EAAMC,EAAWC,EAAaC,GAC9E,IAAK17C,KAAK27C,YACN,MAAM,IAAI74C,MAAM,qDAEpB,GAAiB,MAAb04C,IAAsBx7C,KAAKg7C,eAAe9a,IAAIsb,GAC9C,MAAM,IAAI14C,MAAM,wBAA2B04C,EAAY,KAE3D,GAAY,MAARD,EACA,MAAM,IAAIz4C,MAAM,qDAEpB,GAAIy4C,EAAOv7C,KAAKk7C,SACZ,MAAM,IAAIp4C,MAAM,2CAEpB,GAAI04C,IAA6B,MAAfC,GAAqC,MAAdC,GACrC,MAAM,IAAI54C,MAAM,sEAKpB,OAHA9C,KAAKm7C,aAAc,EACnBn7C,KAAKk7C,SAAWK,EAChBv7C,KAAK27C,YAAYr5C,MAAOi5C,KAAMA,EAAMC,UAAWA,EAAWC,YAAaA,EAAaC,WAAYA,IACzF17C,MAEXI,OAAOw7C,eAAeb,EAAmBl6C,UAAW,eAChDya,IAAK,WAAc,OAAOtb,KAAKi7C,MAAMl4C,OAAO,GAAG,IAC/C84C,YAAY,EACZC,cAAc,IAElBf,EAAmBl6C,UAAUk7C,OAAS,WAClC,IAAIvnC,EAAQxU,KACZ,IAAKA,KAAKm7C,YACN,OAAO,KAEX,IAAIa,EAAe,IAAIliC,IACnBgvB,KACAkS,KACJz6C,MAAM07C,KAAKj8C,KAAKg7C,eAAezpB,QAAQ7c,QAAQ,SAAU8sB,EAAKpgC,GAC1D46C,EAAazgC,IAAIimB,EAAKpgC,GACtB0nC,EAAQxmC,KAAKk/B,GACbwZ,EAAe14C,KAAKkS,EAAMwmC,eAAe1/B,IAAIkmB,IAAQ,QAEzD,IAAI0a,EAAW,GACXhB,EAAW,EACXiB,EAAkB,EAClBC,EAAkB,EAClBC,EAAiB,EA0BrB,OAzBAr8C,KAAKi7C,MAAMvmC,QAAQ,SAAU4nC,GACzBpB,EAAW,EACXgB,GAAYI,EACP5gC,IAAI,SAAU6gC,GAEf,IAAIC,EAAWC,GAAYF,EAAQhB,KAAOL,GAc1C,OAbAA,EAAWqB,EAAQhB,KACM,MAArBgB,EAAQf,YAERgB,GACIC,GAAYT,EAAa1gC,IAAIihC,EAAQf,WAAaW,GACtDA,EAAkBH,EAAa1gC,IAAIihC,EAAQf,WAE3CgB,GAAYC,GAAYF,EAAQd,YAAcW,GAC9CA,EAAkBG,EAAQd,YAE1Be,GAAYC,GAAYF,EAAQb,WAAaW,GAC7CA,EAAiBE,EAAQb,YAEtBc,IAENljC,KAAK,KACV4iC,GAAY,MAEhBA,EAAWA,EAASn5C,MAAM,GAAI,IAE1BimC,KAAQhpC,KAAKgpC,MAAQ,GACrBiJ,QA/FE,EAgGFyK,WAAc,GACd5T,QAAWA,EACXkS,eAAkBA,EAClBkB,SAAYA,IAGpBnB,EAAmBl6C,UAAU87C,YAAc,WACvC,OAAO38C,KAAKm7C,YAAc,qDAKlC,SAASyB,EAAe56C,GACpB,IAAI66C,EAAM,GACV76C,EAAQswB,GAAWtwB,GACnB,IAAK,IAAIZ,EAAI,EAAGA,EAAIY,EAAMT,QAAS,CAC/B,IAAIu7C,EAAK96C,EAAM0wB,WAAWtxB,KACtB27C,EAAK/6C,EAAM0wB,WAAWtxB,KACtB47C,EAAKh7C,EAAM0wB,WAAWtxB,KAC1By7C,GAAOI,GAAcH,GAAM,GAC3BD,GAAOI,IAAqB,EAALH,IAAW,GAAMI,MAAMH,GAAM,EAAIA,GAAM,IAC9DF,GAAOK,MAAMH,GAAM,IAAME,IAAqB,GAALF,IAAY,EAAMC,GAAM,GACjEH,GAAOK,MAAMH,IAAOG,MAAMF,GAAM,IAAMC,GAAmB,GAALD,GAExD,OAAOH,EAjB8CD,CAAepiB,KAAK3H,UAAU7yB,KAAM,KAAM,IACvF,IAED+6C,EAxG4B,GAwHvC,SAAS0B,GAAYz6C,GACjBA,EAAQA,EAAQ,EAAsB,IAAfA,GAAU,GAASA,GAAS,EACnD,IAAI6qB,EAAM,GACV,EAAG,CACC,IAAIswB,EAAgB,GAARn7C,GACZA,IAAiB,GACL,IACRm7C,GAAgB,IAEpBtwB,GAAOowB,GAAcE,SAChBn7C,EAAQ,GACjB,OAAO6qB,EAEX,IAAIuwB,GAAa,mEACjB,SAASH,GAAcj7C,GACnB,GAAIA,EAAQ,GAAKA,GAAS,GACtB,MAAM,IAAIc,MAAM,8CAEpB,OAAOs6C,GAAWp7C;;;;;;;OAUtB,IAAIq7C,GAAiC,iBACjCC,GAAuB,wBACvBC,GAAe,KACfC,GAAoBpuB,GAAS,QAAS,KAAM,MAC5CquB,GAAoBruB,GAAS,QAAS,KAAM,MAC5CsuB,GACA,SAASA,GAAaC,GAClB39C,KAAK29C,OAASA,EACd39C,KAAK49C,YAAc,EACnB59C,KAAKqqB,SACLrqB,KAAK69C,aAITC,GAAuC,WACvC,SAASA,EAAsBC,GAC3B/9C,KAAK+9C,QAAUA,EACf/9C,KAAKg+C,YACLh+C,KAAKi+C,mBAAqB,EAC1Bj+C,KAAKk+C,QAAU,IAAIR,GAAaK,IAuIpC,OArIAD,EAAsBK,WAAa,WAAc,OAAO,IAAIL,EAAsB,IAClF19C,OAAOw7C,eAAekC,EAAsBj9C,UAAW,gBACnDya,IAAK,WAAc,OAAOtb,KAAKk+C,OAAOl+C,KAAKk+C,OAAO38C,OAAS,IAC3Ds6C,YAAY,EACZC,cAAc,IAElBgC,EAAsBj9C,UAAUu9C,QAAU,SAAUnC,EAAMoC,QACrC,IAAbA,IAAuBA,EAAW,IACtCr+C,KAAKs+C,MAAMrC,GAAQ,KAAMoC,GAAU,IAEvCP,EAAsBj9C,UAAU09C,YAAc,WAAc,OAA0C,IAAnCv+C,KAAKw+C,aAAan0B,MAAM9oB,QAC3Fu8C,EAAsBj9C,UAAU49C,WAAa,WACzC,OAAOz+C,KAAKw+C,aAAab,OAASJ,GAAah8C,OAASvB,KAAKw+C,aAAaZ,aAE9EE,EAAsBj9C,UAAUy9C,MAAQ,SAAUrC,EAAMyC,EAAMC,QAC1C,IAAZA,IAAsBA,GAAU,GAChCD,EAAKn9C,OAAS,IACdvB,KAAKw+C,aAAan0B,MAAM/nB,KAAKo8C,GAC7B1+C,KAAKw+C,aAAaZ,aAAec,EAAKn9C,OACtCvB,KAAKw+C,aAAaX,SAASv7C,KAAK25C,GAAQA,EAAKh5B,YAAc,OAE3D07B,GACA3+C,KAAKk+C,OAAO57C,KAAK,IAAIo7C,GAAa19C,KAAK+9C,WAG/CD,EAAsBj9C,UAAU+9C,oBAAsB,WAC9C5+C,KAAKu+C,eACLv+C,KAAKk+C,OAAOjJ,OAGpB6I,EAAsBj9C,UAAUg+C,UAAY,WACxC7+C,KAAK+9C,UACD/9C,KAAKu+C,gBACLv+C,KAAKw+C,aAAab,OAAS39C,KAAK+9C,UAGxCD,EAAsBj9C,UAAUi+C,UAAY,WACxC9+C,KAAK+9C,UACD/9C,KAAKu+C,gBACLv+C,KAAKw+C,aAAab,OAAS39C,KAAK+9C,UAGxCD,EAAsBj9C,UAAUk+C,UAAY,SAAUC,GAASh/C,KAAKg+C,SAAS17C,KAAK08C,IAClFlB,EAAsBj9C,UAAUo+C,SAAW,WAAc,OAAOj/C,KAAKg+C,SAAS/I,OAC9E70C,OAAOw7C,eAAekC,EAAsBj9C,UAAW,gBACnDya,IAAK,WACD,OAAOtb,KAAKg+C,SAASz8C,OAAS,EAAIvB,KAAKg+C,SAASh+C,KAAKg+C,SAASz8C,OAAS,GAAK,MAEhFs6C,YAAY,EACZC,cAAc,IAElBgC,EAAsBj9C,UAAUq+C,SAAW,WACvC,OAAOl/C,KAAKm/C,YACPzjC,IAAI,SAAUgyB,GAAK,OAAOA,EAAErjB,MAAM9oB,OAAS,EAAI69C,GAAc1R,EAAEiQ,QAAUjQ,EAAErjB,MAAM/Q,KAAK,IAAM,KAC5FA,KAAK,OAEdwkC,EAAsBj9C,UAAUw+C,qBAAuB,SAAUC,EAAaC,QACrD,IAAjBA,IAA2BA,EAAe,GAY9C,IAXA,IAAI7jC,EAAM,IAAIq/B,GAAmBuE,GAC7BE,GAAoB,EACpBC,EAAyB,WACpBD,IAID9jC,EAAI0/B,UAAUkE,EAAa,KAAKhE,WAAW,EAAGgE,EAAa,EAAG,GAC9DE,GAAoB,IAGnBp+C,EAAI,EAAGA,EAAIm+C,EAAcn+C,IAC9Bsa,EAAI2/B,UACJoE,IAmCJ,OAjCAz/C,KAAKm/C,YAAYzqC,QAAQ,SAAUw0B,EAAMwW,GACrChkC,EAAI2/B,UAMJ,IALA,IAAIsE,EAAQzW,EAAK2U,SACbxzB,EAAQ6e,EAAK7e,MACbkxB,EAAOrS,EAAKyU,OAASJ,GAAah8C,OAClCq+C,EAAU,EAEPA,EAAUD,EAAMp+C,SAAWo+C,EAAMC,IACpCrE,GAAQlxB,EAAMu1B,GAASr+C,OACvBq+C,IAQJ,IANIA,EAAUD,EAAMp+C,QAAsB,IAAZm+C,GAA0B,IAATnE,EAC3CiE,GAAoB,EAGpBC,IAEGG,EAAUD,EAAMp+C,QAAQ,CAC3B,IAAIs+C,EAAOF,EAAMC,GACb/pC,EAASgqC,EAAK9W,MAAMC,KACpB8W,EAAaD,EAAK9W,MAAMG,KACxB6W,EAAYF,EAAK9W,MAAMzyB,IAM3B,IALAoF,EAAI0/B,UAAUvlC,EAAO2rB,IAAK3rB,EAAOu8B,SAC5BkJ,WAAWC,EAAM1lC,EAAO2rB,IAAKse,EAAYC,GAC9CxE,GAAQlxB,EAAMu1B,GAASr+C,OACvBq+C,IAEOA,EAAUD,EAAMp+C,SAAWs+C,IAASF,EAAMC,KAAaD,EAAMC,KAChErE,GAAQlxB,EAAMu1B,GAASr+C,OACvBq+C,OAILlkC,GAEXoiC,EAAsBj9C,UAAUm/C,qBAAuB,SAAUpS,GAAS,OAAO5tC,KAAKi+C,mBAAqBrQ,GAC3GkQ,EAAsBj9C,UAAUo/C,OAAS,SAAU/W,EAAMgX,GACrD,IAAIC,EAAcngD,KAAKk+C,OAAOhV,EAAOlpC,KAAKi+C,oBAC1C,GAAIkC,EAEA,IADA,IAAIC,EAAcF,EAASd,GAAce,EAAYxC,QAAQp8C,OACpD8+C,EAAY,EAAGA,EAAYF,EAAY91B,MAAM9oB,OAAQ8+C,IAAa,CACvE,IAAI3B,EAAOyB,EAAY91B,MAAMg2B,GAC7B,GAAI3B,EAAKn9C,OAAS6+C,EACd,OAAOD,EAAYtC,SAASwC,GAEhCD,GAAe1B,EAAKn9C,OAG5B,OAAO,MAEXnB,OAAOw7C,eAAekC,EAAsBj9C,UAAW,eACnDya,IAAK,WACD,OAAItb,KAAKk+C,OAAO38C,QAA+D,IAArDvB,KAAKk+C,OAAOl+C,KAAKk+C,OAAO38C,OAAS,GAAG8oB,MAAM9oB,OACzDvB,KAAKk+C,OAAOn7C,MAAM,GAAI,GAE1B/C,KAAKk+C,QAEhBrC,YAAY,EACZC,cAAc,IAEXgC,EA5I+B,GA8ItCwC,GAAwC,WACxC,SAASA,EAAuBC,GAC5BvgD,KAAKugD,uBAAyBA,EA8TlC,OA5TAD,EAAuBz/C,UAAUoqB,oBAAsB,SAAUJ,EAAMyK,GAGnE,OAFAzK,EAAK/D,KAAKJ,gBAAgB1mB,KAAMs1B,GAChCA,EAAI8oB,QAAQvzB,EAAM,KACX,MAEXy1B,EAAuBz/C,UAAUsqB,gBAAkB,SAAUN,EAAMyK,GAI/D,OAHAA,EAAIgpB,MAAMzzB,EAAM,WAChBA,EAAK7oB,MAAM0kB,gBAAgB1mB,KAAMs1B,GACjCA,EAAI8oB,QAAQvzB,EAAM,KACX,MAEXy1B,EAAuBz/C,UAAUsrB,YAAc,SAAUtB,EAAMyK,GAC3DA,EAAIgpB,MAAMzzB,EAAM,QAChBA,EAAKlC,UAAUjC,gBAAgB1mB,KAAMs1B,GACrCA,EAAIgpB,MAAMzzB,EAAM,OAChB,IAAI21B,EAAgC,MAAlB31B,EAAK9G,WAAqB8G,EAAK9G,UAAUxiB,OAAS,EAoBpE,OAnBIspB,EAAK/G,SAASviB,QAAU,IAAMi/C,GAC9BlrB,EAAIgpB,MAAMzzB,EAAM,KAChB7qB,KAAK+tB,mBAAmBlD,EAAK/G,SAAUwR,GACvCA,EAAIspB,sBACJtpB,EAAIgpB,MAAMzzB,EAAM,OAGhByK,EAAI8oB,UACJ9oB,EAAIupB,YACJ7+C,KAAK+tB,mBAAmBlD,EAAK/G,SAAUwR,GACvCA,EAAIwpB,YACA0B,IACAlrB,EAAI8oB,QAAQvzB,EAAM,YAClByK,EAAIupB,YACJ7+C,KAAK+tB,mBAAmBlD,EAAK9G,UAAWuR,GACxCA,EAAIwpB,cAGZxpB,EAAI8oB,QAAQvzB,EAAM,KACX,MAEXy1B,EAAuBz/C,UAAU4sB,eAAiB,SAAU5C,EAAMyK,GAI9D,OAHAA,EAAIgpB,MAAMzzB,EAAM,UAChBA,EAAKtoB,MAAMmkB,gBAAgB1mB,KAAMs1B,GACjCA,EAAI8oB,QAAQvzB,EAAM,KACX,MAEXy1B,EAAuBz/C,UAAU0rB,iBAAmB,SAAU1B,EAAMyK,GAOhE,OANIzK,EAAKyB,UACLgJ,EAAI8oB,QAAQvzB,EAAM,MAAQA,EAAKwB,QAAU,OAGzCxB,EAAKwB,QAAQgH,MAAM,MAAM3e,QAAQ,SAAUw0B,GAAQ5T,EAAI8oB,QAAQvzB,EAAM,MAAQqe,KAE1E,MAEXoX,EAAuBz/C,UAAU6rB,sBAAwB,SAAU7B,EAAMyK,GAErE,OADAA,EAAI8oB,QAAQvzB,EAAM,KAAOA,EAAKpR,WAAa,MACpC,MAEX6mC,EAAuBz/C,UAAUsmB,kBAAoB,SAAUL,EAAMwO,GACjE,IAAImrB,EAAenrB,EAAIipB,cASvB,OARKkC,GACDnrB,EAAIgpB,MAAMx3B,EAAM,KAEpBwO,EAAIgpB,MAAMx3B,EAAMA,EAAK7R,KAAO,OAC5B6R,EAAK9kB,MAAM0kB,gBAAgB1mB,KAAMs1B,GAC5BmrB,GACDnrB,EAAIgpB,MAAMx3B,EAAM,KAEb,MAEXw5B,EAAuBz/C,UAAU8mB,kBAAoB,SAAUb,EAAMwO,GACjE,IAAImrB,EAAenrB,EAAIipB,cAYvB,OAXKkC,GACDnrB,EAAIgpB,MAAMx3B,EAAM,KAEpBA,EAAKY,SAAShB,gBAAgB1mB,KAAMs1B,GACpCA,EAAIgpB,MAAMx3B,EAAM,KAChBA,EAAK1D,MAAMsD,gBAAgB1mB,KAAMs1B,GACjCA,EAAIgpB,MAAMx3B,EAAM,QAChBA,EAAK9kB,MAAM0kB,gBAAgB1mB,KAAMs1B,GAC5BmrB,GACDnrB,EAAIgpB,MAAMx3B,EAAM,KAEb,MAEXw5B,EAAuBz/C,UAAUgnB,mBAAqB,SAAUf,EAAMwO,GAClE,IAAImrB,EAAenrB,EAAIipB,cAUvB,OATKkC,GACDnrB,EAAIgpB,MAAMx3B,EAAM,KAEpBA,EAAKY,SAAShB,gBAAgB1mB,KAAMs1B,GACpCA,EAAIgpB,MAAMx3B,EAAM,IAAMA,EAAK7R,KAAO,OAClC6R,EAAK9kB,MAAM0kB,gBAAgB1mB,KAAMs1B,GAC5BmrB,GACDnrB,EAAIgpB,MAAMx3B,EAAM,KAEb,MAEXw5B,EAAuBz/C,UAAUknB,sBAAwB,SAAUjB,EAAMwO,GACrExO,EAAKY,SAAShB,gBAAgB1mB,KAAMs1B,GACpC,IAAIrgB,EAAO6R,EAAK7R,KAChB,OAAoB,MAAhB6R,EAAKN,SAEO,OADZvR,EAAOjV,KAAK0gD,qBAAqB55B,EAAKN,UAG3B,MAGf8O,EAAIgpB,MAAMx3B,EAAM,IAAM7R,EAAO,KAC7BjV,KAAK8tB,oBAAoBhH,EAAKnI,KAAM2W,EAAK,KACzCA,EAAIgpB,MAAMx3B,EAAM,KACT,OAEXw5B,EAAuBz/C,UAAUonB,wBAA0B,SAAUnB,EAAMwO,GAKvE,OAJAxO,EAAKkB,GAAGtB,gBAAgB1mB,KAAMs1B,GAC9BA,EAAIgpB,MAAMx3B,EAAM,KAChB9mB,KAAK8tB,oBAAoBhH,EAAKnI,KAAM2W,EAAK,KACzCA,EAAIgpB,MAAMx3B,EAAM,KACT,MAEXw5B,EAAuBz/C,UAAUqmB,qBAAuB,SAAU2G,EAAKyH,GACnE,MAAM,IAAIxyB,MAAM,mDAEpBw9C,EAAuBz/C,UAAUkmB,gBAAkB,SAAUD,EAAMwO,GAC/DA,EAAIgpB,MAAMx3B,EAAM,WAChBA,EAAKA,KAAKJ,gBAAgB1mB,KAAMs1B,IAEpCgrB,EAAuBz/C,UAAU8lB,iBAAmB,SAAUkH,EAAKyH,GAC/D,IAAIqrB,EAAU9yB,EAAI5Y,KAClB,GAAmB,MAAf4Y,EAAIrH,QACJ,OAAQqH,EAAIrH,SACR,KAAK/mB,EAAQqjB,WAAW2H,MACpBk2B,EAAU,QACV,MACJ,KAAKlhD,EAAQqjB,WAAW0H,KACpBm2B,EAAU,OACV,MACJ,KAAKlhD,EAAQqjB,WAAW4H,WACpBi2B,EAAUnD,GAAkBvoC,KAC5B,MACJ,KAAKxV,EAAQqjB,WAAW6H,WACpBg2B,EAAUlD,GAAkBxoC,KAC5B,MACJ,QACI,MAAM,IAAInS,MAAM,4BAA8B+qB,EAAIrH,SAI9D,OADA8O,EAAIgpB,MAAMzwB,EAAK8yB,GACR,MAEXL,EAAuBz/C,UAAUsnB,qBAAuB,SAAU0F,EAAKyH,GAMnE,OALAA,EAAIgpB,MAAMzwB,EAAK,QACfA,EAAI3F,UAAUxB,gBAAgB1mB,KAAMs1B,GACpCA,EAAIgpB,MAAMzwB,EAAK,KACf7tB,KAAK8tB,oBAAoBD,EAAIlP,KAAM2W,EAAK,KACxCA,EAAIgpB,MAAMzwB,EAAK,KACR,MAEXyyB,EAAuBz/C,UAAUwnB,iBAAmB,SAAUwF,EAAKyH,GAC/D,IAAItzB,EAAQ6rB,EAAI7rB,MAOhB,OALIszB,EAAIgpB,MAAMzwB,EADO,iBAAV7rB,EACQ4+C,GAAiB5+C,EAAOhC,KAAKugD,wBAG7B,GAAKv+C,GAEjB,MAEXs+C,EAAuBz/C,UAAU+nB,qBAAuB,SAAUiF,EAAKyH,GAQnE,OAPAA,EAAIgpB,MAAMzwB,EAAK,KACfA,EAAIlF,UAAUjC,gBAAgB1mB,KAAMs1B,GACpCA,EAAIgpB,MAAMzwB,EAAK,MACfA,EAAI/J,SAAS4C,gBAAgB1mB,KAAMs1B,GACnCA,EAAIgpB,MAAMzwB,EAAK,MACfA,EAAI9J,UAAU2C,gBAAgB1mB,KAAMs1B,GACpCA,EAAIgpB,MAAMzwB,EAAK,KACR,MAEXyyB,EAAuBz/C,UAAUioB,aAAe,SAAU+E,EAAKyH,GAG3D,OAFAA,EAAIgpB,MAAMzwB,EAAK,KACfA,EAAIlF,UAAUjC,gBAAgB1mB,KAAMs1B,GAC7B,MAEXgrB,EAAuBz/C,UAAUmoB,uBAAyB,SAAU6E,EAAKyH,GAErE,OADAzH,EAAIlF,UAAUjC,gBAAgB1mB,KAAMs1B,GAC7B,MAEXgrB,EAAuBz/C,UAAU4oB,wBAA0B,SAAUoE,EAAKyH,GACtE,IAAIurB,EACJ,OAAQhzB,EAAItE,UACR,KAAK9pB,EAAQohB,eAAeuD,OACxBy8B,EAAQ,KACR,MACJ,KAAKphD,EAAQohB,eAAe2D,UACxBq8B,EAAQ,MACR,MACJ,KAAKphD,EAAQohB,eAAeyD,UACxBu8B,EAAQ,KACR,MACJ,KAAKphD,EAAQohB,eAAe6D,aACxBm8B,EAAQ,MACR,MACJ,KAAKphD,EAAQohB,eAAesE,IACxB07B,EAAQ,KACR,MACJ,KAAKphD,EAAQohB,eAAeyE,WACxBu7B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAe0E,GACxBs7B,EAAQ,KACR,MACJ,KAAKphD,EAAQohB,eAAegE,KACxBg8B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAe8D,MACxBk8B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAeiE,OACxB+7B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAemE,SACxB67B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAeqE,OACxB27B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAe4E,MACxBo7B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAe8E,YACxBk7B,EAAQ,KACR,MACJ,KAAKphD,EAAQohB,eAAegF,OACxBg7B,EAAQ,IACR,MACJ,KAAKphD,EAAQohB,eAAekF,aACxB86B,EAAQ,KACR,MACJ,QACI,MAAM,IAAI/9C,MAAM,oBAAsB+qB,EAAItE,UASlD,OAPIsE,EAAIxI,QACJiQ,EAAIgpB,MAAMzwB,EAAK,KACnBA,EAAIrE,IAAI9C,gBAAgB1mB,KAAMs1B,GAC9BA,EAAIgpB,MAAMzwB,EAAK,IAAMgzB,EAAQ,KAC7BhzB,EAAI3J,IAAIwC,gBAAgB1mB,KAAMs1B,GAC1BzH,EAAIxI,QACJiQ,EAAIgpB,MAAMzwB,EAAK,KACZ,MAEXyyB,EAAuBz/C,UAAU6oB,kBAAoB,SAAUmE,EAAKyH,GAIhE,OAHAzH,EAAInG,SAAShB,gBAAgB1mB,KAAMs1B,GACnCA,EAAIgpB,MAAMzwB,EAAK,KACfyH,EAAIgpB,MAAMzwB,EAAKA,EAAI5Y,MACZ,MAEXqrC,EAAuBz/C,UAAU8oB,iBAAmB,SAAUkE,EAAKyH,GAK/D,OAJAzH,EAAInG,SAAShB,gBAAgB1mB,KAAMs1B,GACnCA,EAAIgpB,MAAMzwB,EAAK,KACfA,EAAIzK,MAAMsD,gBAAgB1mB,KAAMs1B,GAChCA,EAAIgpB,MAAMzwB,EAAK,KACR,MAEXyyB,EAAuBz/C,UAAUkpB,sBAAwB,SAAU8D,EAAKyH,GAIpE,OAHAA,EAAIgpB,MAAMzwB,EAAK,KACf7tB,KAAK8tB,oBAAoBD,EAAIhE,QAASyL,EAAK,KAC3CA,EAAIgpB,MAAMzwB,EAAK,KACR,MAEXyyB,EAAuBz/C,UAAUspB,oBAAsB,SAAU0D,EAAKyH,GAClE,IAAI9gB,EAAQxU,KAOZ,OANAs1B,EAAIgpB,MAAMzwB,EAAK,KACf7tB,KAAK8gD,gBAAgB,SAAU9yB,GAC3BsH,EAAIgpB,MAAMzwB,EAAK+yB,GAAiB5yB,EAAM7K,IAAK3O,EAAM+rC,uBAAwBvyB,EAAM/D,QAAU,KACzF+D,EAAMhsB,MAAM0kB,gBAAgBlS,EAAO8gB,IACpCzH,EAAIhE,QAASyL,EAAK,KACrBA,EAAIgpB,MAAMzwB,EAAK,KACR,MAEXyyB,EAAuBz/C,UAAUypB,eAAiB,SAAUuD,EAAKyH,GAI7D,OAHAA,EAAIgpB,MAAMzwB,EAAK,KACf7tB,KAAK8tB,oBAAoBD,EAAIxD,MAAOiL,EAAK,KACzCA,EAAIgpB,MAAMzwB,EAAK,KACR,MAEXyyB,EAAuBz/C,UAAUitB,oBAAsB,SAAUizB,EAAazrB,EAAK0rB,GAC/E,IAAIxsC,EAAQxU,KACZA,KAAK8gD,gBAAgB,SAAUh6B,GAAQ,OAAOA,EAAKJ,gBAAgBlS,EAAO8gB,IAASyrB,EAAazrB,EAAK0rB,IAEzGV,EAAuBz/C,UAAUigD,gBAAkB,SAAUG,EAASF,EAAazrB,EAAK0rB,GAEpF,IADA,IAAIE,GAAoB,EACf9/C,EAAI,EAAGA,EAAI2/C,EAAYx/C,OAAQH,IAChCA,EAAI,IACAk0B,EAAImpB,aAAe,IACnBnpB,EAAIgpB,MAAM,KAAM0C,GAAW,GACtBE,IAED5rB,EAAIupB,YACJvpB,EAAIupB,YACJqC,GAAoB,IAIxB5rB,EAAIgpB,MAAM,KAAM0C,GAAW,IAGnCC,EAAQF,EAAY3/C,IAEpB8/C,IAEA5rB,EAAIwpB,YACJxpB,EAAIwpB,cAGZwB,EAAuBz/C,UAAUktB,mBAAqB,SAAU3E,EAAYkM,GACxE,IAAI9gB,EAAQxU,KACZopB,EAAW1U,QAAQ,SAAUmW,GAAQ,OAAOA,EAAKC,eAAetW,EAAO8gB,MAEpEgrB,EAhUgC,GAkU3C,SAASM,GAAiBnrC,EAAO0rC,EAAcC,GAE3C,QADoB,IAAhBA,IAA0BA,GAAc,GAC/B,MAAT3rC,EACA,OAAO,KAEX,IAAIgW,EAAOhW,EAAMwX,QAAQowB,GAAgC,WAErD,IADA,IAAIhlC,KACKoH,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpCpH,EAAMoH,GAAMne,UAAUme,GAE1B,MAAgB,KAAZpH,EAAM,GACC8oC,EAAe,MAAQ,IAEb,MAAZ9oC,EAAM,GACJ,MAEU,MAAZA,EAAM,GACJ,MAGA,KAAOA,EAAM,KAI5B,OADqB+oC,IAAgB9D,GAAqBtI,KAAKvpB,GACvC,IAAMA,EAAO,IAAMA,EAE/C,SAAS2zB,GAAcxR,GAEnB,IADA,IAAIp1B,EAAM,GACDpX,EAAI,EAAGA,EAAIwsC,EAAOxsC,IACvBoX,GAAO+kC,GAEX,OAAO/kC;;;;;;;OAoMX,SAAS6oC,GAAc7F,EAAWpyB,EAAY8Q,EAAWonB,GACrD,IAAIC,EAAY,IAAIC,GAAkBtnB,GAClC5E,EAAMwoB,GAAsBK,aAGhC,OAFAoD,EAAUxzB,mBAAmB3E,EAAYkM,GACzCisB,EAAUE,iBAAiBnsB;;;;;;;;AAxB/B,SAASosB,EAAelG,EAAWlmB,EAAKqsB,EAAMC,GAC1C,IAAIC,EAASvsB,EAAI4pB,WAAa,mBAAqB1D,EAC/CsG,KACAC,KACJ,IAAK,IAAIC,KAAWL,EAChBG,EAAWx/C,KAAK0/C,GAChBD,EAAYz/C,KAAKq/C,EAAKK,IAE1B,GAAIJ,EAAiB,CAMjB,IAAIK,GAAU,IAAK1iC,SAASqkB,KAAKniC,MAAM8d,SAAU/c,QAAU,GAASs/C,EAAWr/C,OAAO,oBAAqBgX,WACvGyoC,EAAcD,EAAQl/C,MAAM,EAAGk/C,EAAQp/C,QAAQ,iBAAiBwwB,MAAM,MAAM9xB,OAAS,EACzFsgD,GAAU,KAAOvsB,EAAI+pB,qBAAqB7D,EAAW0G,GAAavF,cAEtE,OAAO,IAAKp9B,SAASqkB,KAAKniC,MAAM8d,SAAU/c,QAAU,GAASs/C,EAAWr/C,OAAOo/C,OAAapgD,WAAM,EAAQe,EAASu/C,IAO5GL,CAAelG,EAAWlmB,EAAKisB,EAAUY,UAAWb,GAE/D,IAAIE,GAAmC,SAAUzgC,GAE7C,SAASygC,EAAkBtnB,GACvB,IAAI1lB,EAAQuM,EAAOvf,KAAKxB,OAASA,KAKjC,OAJAwU,EAAM0lB,UAAYA,EAClB1lB,EAAM4tC,iBACN5tC,EAAM6tC,kBACN7tC,EAAM8tC,qBACC9tC,EAiDX,OAxDA9T,EAAU8gD,EAAmBzgC,GAS7BygC,EAAkB3gD,UAAU4gD,iBAAmB,SAAUnsB,GAC1C,IAAIpK,GAAgB,IAAIhB,GAAelqB,KAAKsiD,kBAAkB5mC,IAAI,SAAU6mC,GAAa,OAAO,IAAIv4B,GAAgBu4B,EAAWnzB,GAASmzB,IAAY,OAC1Jz3B,eAAe9qB,KAAMs1B,IAE9BksB,EAAkB3gD,UAAUshD,QAAU,WAElC,IADA,IAAI3oC,KACKpY,EAAI,EAAGA,EAAIpB,KAAKoiD,cAAc7gD,OAAQH,IAC3CoY,EAAOxZ,KAAKoiD,cAAchhD,IAAMpB,KAAKqiD,eAAejhD,GAExD,OAAOoY,GAEXgoC,EAAkB3gD,UAAU4nB,kBAAoB,SAAUoF,EAAKyH,GAE3D,OADAt1B,KAAKwiD,yBAAyB30B,EAAK7tB,KAAKk6B,UAAUC,yBAAyBtM,EAAI7rB,OAAQszB,GAChF,MAEXksB,EAAkB3gD,UAAUqmB,qBAAuB,SAAU2G,EAAKyH,GAE9D,OADAt1B,KAAKwiD,yBAAyB30B,EAAKA,EAAI5G,KAAMqO,GACtC,MAEXksB,EAAkB3gD,UAAUkqB,oBAAsB,SAAUF,EAAMyK,GAI9D,OAHIzK,EAAKlK,YAAYlhB,EAAQ8nB,aAAagwB,WACtCv3C,KAAKsiD,kBAAkBhgD,KAAKuoB,EAAK5V,MAE9B8L,EAAOlgB,UAAUkqB,oBAAoBvpB,KAAKxB,KAAM6qB,EAAMyK,IAEjEksB,EAAkB3gD,UAAUmqB,yBAA2B,SAAUH,EAAMyK,GAInE,OAHIzK,EAAKlK,YAAYlhB,EAAQ8nB,aAAagwB,WACtCv3C,KAAKsiD,kBAAkBhgD,KAAKuoB,EAAK5V,MAE9B8L,EAAOlgB,UAAUmqB,yBAAyBxpB,KAAKxB,KAAM6qB,EAAMyK,IAEtEksB,EAAkB3gD,UAAUorB,sBAAwB,SAAUpB,EAAMyK,GAIhE,OAHIzK,EAAKlK,YAAYlhB,EAAQ8nB,aAAagwB,WACtCv3C,KAAKsiD,kBAAkBhgD,KAAKuoB,EAAK5V,MAE9B8L,EAAOlgB,UAAUorB,sBAAsBzqB,KAAKxB,KAAM6qB,EAAMyK,IAEnEksB,EAAkB3gD,UAAU2hD,yBAA2B,SAAU30B,EAAK7rB,EAAOszB,GACzE,IAAIhG,EAAKtvB,KAAKqiD,eAAex/C,QAAQb,GACrC,IAAY,IAARstB,EAAW,CACXA,EAAKtvB,KAAKqiD,eAAe9gD,OACzBvB,KAAKqiD,eAAe//C,KAAKN,GACzB,IAAIkzB,EAAS8F,IAAiBjB,UAAW/3B,KAAY,MACrDhC,KAAKoiD,cAAc9/C,KAAK,OAAS4yB,EAAS,IAAM5F,GAEpDgG,EAAIgpB,MAAMzwB,EAAK7tB,KAAKoiD,cAAc9yB,KAE/BkyB,EAzD2B,CAjMQ,SAAUzgC,GAEpD,SAAS0hC,IACL,OAAO1hC,EAAOvf,KAAKxB,MAAM,IAAUA,KAyJvC,OA3JAU,EAAU+hD,EAA0B1hC,GAIpC0hC,EAAyB5hD,UAAUorB,sBAAwB,SAAUpB,EAAMyK,GACvE,IAAI9gB,EAAQxU,KAWZ,OAVAs1B,EAAIypB,UAAUl0B,GACd7qB,KAAK0iD,uBAAuB73B,EAAMyK,GACf,MAAfzK,EAAKe,SACL0J,EAAIgpB,MAAMzzB,EAAMA,EAAK5V,KAAO,+BAC5B4V,EAAKe,OAAOlF,gBAAgB1mB,KAAMs1B,GAClCA,EAAI8oB,QAAQvzB,EAAM,iBAEtBA,EAAKiB,QAAQpX,QAAQ,SAAUyZ,GAAU,OAAO3Z,EAAMmuC,kBAAkB93B,EAAMsD,EAAQmH,KACtFzK,EAAKmB,QAAQtX,QAAQ,SAAUoT,GAAU,OAAOtT,EAAMouC,kBAAkB/3B,EAAM/C,EAAQwN,KACtFA,EAAI2pB,WACG,MAEXwD,EAAyB5hD,UAAU6hD,uBAAyB,SAAU73B,EAAMyK,GACxEA,EAAIgpB,MAAMzzB,EAAM,YAAcA,EAAK5V,KAAO,KACZ,MAA1B4V,EAAKkB,mBACL/rB,KAAK6iD,aAAah4B,EAAKkB,kBAAkBxI,OAAQ+R,GAErDA,EAAI8oB,QAAQvzB,EAAM,OAClByK,EAAIupB,YAC0B,MAA1Bh0B,EAAKkB,mBACDlB,EAAKkB,kBAAkBN,KAAKlqB,OAAS,IACrC+zB,EAAI8oB,QAAQvzB,EAAM,oBAClB7qB,KAAK+tB,mBAAmBlD,EAAKkB,kBAAkBN,KAAM6J,IAG7DA,EAAIwpB,YACJxpB,EAAI8oB,QAAQvzB,EAAM,MAEtB43B,EAAyB5hD,UAAU8hD,kBAAoB,SAAU93B,EAAMsD,EAAQmH,GAC3EA,EAAI8oB,QAAQvzB,EAAM,yBAA2BA,EAAK5V,KAAO,gBAAkBkZ,EAAOlZ,KAAO,0BACzFqgB,EAAIupB,YACA1wB,EAAO1C,KAAKlqB,OAAS,IACrB+zB,EAAI8oB,QAAQvzB,EAAM,oBAClB7qB,KAAK+tB,mBAAmBI,EAAO1C,KAAM6J,IAEzCA,EAAIwpB,YACJxpB,EAAI8oB,QAAQvzB,EAAM,SAEtB43B,EAAyB5hD,UAAU+hD,kBAAoB,SAAU/3B,EAAM/C,EAAQwN,GAC3EA,EAAIgpB,MAAMzzB,EAAMA,EAAK5V,KAAO,cAAgB6S,EAAO7S,KAAO,gBAC1DjV,KAAK6iD,aAAa/6B,EAAOvE,OAAQ+R,GACjCA,EAAI8oB,QAAQvzB,EAAM,OAClByK,EAAIupB,YACA/2B,EAAO2D,KAAKlqB,OAAS,IACrB+zB,EAAI8oB,QAAQvzB,EAAM,oBAClB7qB,KAAK+tB,mBAAmBjG,EAAO2D,KAAM6J,IAEzCA,EAAIwpB,YACJxpB,EAAI8oB,QAAQvzB,EAAM,OAEtB43B,EAAyB5hD,UAAUqmB,qBAAuB,SAAU2G,EAAKyH,GACrE,MAAM,IAAIxyB,MAAM,iDAEpB2/C,EAAyB5hD,UAAU8lB,iBAAmB,SAAUkH,EAAKyH,GACjE,GAAIzH,EAAIrH,UAAY/mB,EAAQqjB,WAAW0H,KACnC8K,EAAIgpB,MAAMzwB,EAAK,YAEd,CAAA,GAAIA,EAAIrH,UAAY/mB,EAAQqjB,WAAW2H,MACxC,MAAM,IAAI3nB,MAAM,gFAGhBie,EAAOlgB,UAAU8lB,iBAAiBnlB,KAAKxB,KAAM6tB,EAAKyH,GAEtD,OAAO,MAEXmtB,EAAyB5hD,UAAUkqB,oBAAsB,SAAUF,EAAMyK,GAOrE,OANAA,EAAIgpB,MAAMzzB,EAAM,OAASA,EAAK5V,MAC1B4V,EAAK7oB,QACLszB,EAAIgpB,MAAMzzB,EAAM,OAChBA,EAAK7oB,MAAM0kB,gBAAgB1mB,KAAMs1B,IAErCA,EAAI8oB,QAAQvzB,EAAM,KACX,MAEX43B,EAAyB5hD,UAAUooB,cAAgB,SAAU4E,EAAKyH,GAE9D,OADAzH,EAAI7rB,MAAM0kB,gBAAgB1mB,KAAMs1B,GACzB,MAEXmtB,EAAyB5hD,UAAUonB,wBAA0B,SAAUnB,EAAMwO,GACzE,IAAIwtB,EAASh8B,EAAKkB,GAalB,OAZI86B,aAAkBv8B,IAAeu8B,EAAOt8B,UAAY/mB,EAAQqjB,WAAW2H,OACvE6K,EAAIytB,aAAan3B,OAAOlF,gBAAgB1mB,KAAMs1B,GAC9CA,EAAIgpB,MAAMx3B,EAAM,cACZA,EAAKnI,KAAKpd,OAAS,IACnB+zB,EAAIgpB,MAAMx3B,EAAM,MAChB9mB,KAAK8tB,oBAAoBhH,EAAKnI,KAAM2W,EAAK,MAE7CA,EAAIgpB,MAAMx3B,EAAM,MAGhB/F,EAAOlgB,UAAUonB,wBAAwBzmB,KAAKxB,KAAM8mB,EAAMwO,GAEvD,MAEXmtB,EAAyB5hD,UAAUwoB,kBAAoB,SAAUwE,EAAKyH,GAQlE,OAPAA,EAAIgpB,MAAMzwB,EAAK,YAAcA,EAAI5Y,KAAO,IAAM4Y,EAAI5Y,KAAO,IAAM,KAC/DjV,KAAK6iD,aAAah1B,EAAItK,OAAQ+R,GAC9BA,EAAI8oB,QAAQvwB,EAAK,OACjByH,EAAIupB,YACJ7+C,KAAK+tB,mBAAmBF,EAAIzE,WAAYkM,GACxCA,EAAIwpB,YACJxpB,EAAIgpB,MAAMzwB,EAAK,KACR,MAEX40B,EAAyB5hD,UAAUmqB,yBAA2B,SAAUH,EAAMyK,GAQ1E,OAPAA,EAAIgpB,MAAMzzB,EAAM,YAAcA,EAAK5V,KAAO,KAC1CjV,KAAK6iD,aAAah4B,EAAKtH,OAAQ+R,GAC/BA,EAAI8oB,QAAQvzB,EAAM,OAClByK,EAAIupB,YACJ7+C,KAAK+tB,mBAAmBlD,EAAKzB,WAAYkM,GACzCA,EAAIwpB,YACJxpB,EAAI8oB,QAAQvzB,EAAM,KACX,MAEX43B,EAAyB5hD,UAAU0sB,kBAAoB,SAAU1C,EAAMyK,GACnEA,EAAI8oB,QAAQvzB,EAAM,SAClByK,EAAIupB,YACJ7+C,KAAK+tB,mBAAmBlD,EAAKwC,UAAWiI,GACxCA,EAAIwpB,YACJxpB,EAAI8oB,QAAQvzB,EAAM,YAAc2yB,GAAkBvoC,KAAO,OACzDqgB,EAAIupB,YACJ,IAAIvxB,GAAcmwB,GAAkBliC,IAAIiiC,GAAkB/uC,KAAK,UAAU2Y,WAAW,MAC5E3nB,EAAQ8nB,aAAaC,SACrB/kB,OAAOooB,EAAKyC,YAIpB,OAHAttB,KAAK+tB,mBAAmBT,EAAYgI,GACpCA,EAAIwpB,YACJxpB,EAAI8oB,QAAQvzB,EAAM,KACX,MAEX43B,EAAyB5hD,UAAUgiD,aAAe,SAAUt/B,EAAQ+R,GAChEt1B,KAAK8gD,gBAAgB,SAAUprC,GAAS,OAAO4f,EAAIgpB,MAAM,KAAM5oC,EAAMT,OAAUsO,EAAQ+R,EAAK,MAEhGmtB,EAAyB5hD,UAAU6/C,qBAAuB,SAAU54B,GAChE,IAAI7S,EACJ,OAAQ6S,GACJ,KAAKroB,EAAQ6mB,cAAc08B,YACvB/tC,EAAO,SACP,MACJ,KAAKxV,EAAQ6mB,cAAc28B,oBACvBhuC,EAAO,YACP,MACJ,KAAKxV,EAAQ6mB,cAAc48B,KACvBjuC,EAAO,OACP,MACJ,QACI,MAAM,IAAInS,MAAM,2BAA6BglB,GAErD,OAAO7S,GAEJwtC,EA5JkC,CA6J3CnC,KA6GE6C,GAAgC,WAChC,SAASA,EAAejiC,GACpBlhB,KAAKkhB,QAAUA,EAoBnB,OAlBAiiC,EAAetiD,UAAUs5B,yBAA2B,SAAUe,GAE1D,GAAuB,kBAAnBA,EAAI3S,WACJ,MAAM,IAAIzlB,MAAM,wCAA0Co4B,EAAI3S,WAAa,qDAE/E,IAAKvoB,KAAKkhB,QAAQzgB,eAAey6B,EAAIjmB,MACjC,MAAM,IAAInS,MAAM,+CAAiDo4B,EAAIjmB,KAAO,MAEhF,OAAOjV,KAAKkhB,QAAQga,EAAIjmB,OAE5BkuC,EAAetiD,UAAUw1C,WAAa,SAAU+M,GAAc,MAAM,IAAItgD,MAAM,qBAC9EqgD,EAAetiD,UAAUwiD,YAAc,SAAUD,GAAc,MAAM,IAAItgD,MAAM,qBAC/EqgD,EAAetiD,UAAUyiD,mBAAqB,SAAUF,GAAc,MAAM,IAAItgD,MAAM,qBACtFqgD,EAAetiD,UAAU0iD,eAAiB,SAAUH,GAAc,MAAM,IAAItgD,MAAM,qBAClFqgD,EAAetiD,UAAU2iD,aAAe,SAAUJ,GAAc,MAAM,IAAItgD,MAAM,qBAChFqgD,EAAetiD,UAAU4iD,iBAAmB,SAAUzgC,EAAM0gC,GAAc,MAAM,IAAI5gD,MAAM,qBAC1FqgD,EAAetiD,UAAU48B,OAAS,SAAU2lB,GAAc,MAAM,IAAItgD,MAAM,qBAC1EqgD,EAAetiD,UAAU8iD,mBAAqB,SAAU3gC,EAAM4gC,GAAe,MAAM,IAAI9gD,MAAM,qBACtFqgD,EAtBwB;;;;;;;OAiCnC,SAASU,GAAcC,EAAK5iC,EAASs6B,EAAWuI,GAQ5C,OADU1C,GAAc7F,EAHPh5C,EAASuhD,GACtB,IAAI18B,GAAe,OAAQy8B,OAAK/mC,GAAYtd,EAAQ8nB,aAAagwB,aAEtB,IAAI4L,GAAejiC,IAAU,GAC3D;;;;;;;OAarB,SAAS8iC,GAAgB5uC,GACrB,IAAI6uC,EAAa7uC,EAAK4N,KAAMkhC,EAAY9uC,EAAK8uC,UAAWC,EAAe/uC,EAAK+uC,aAAcC,EAAUhvC,EAAKgvC,QAAS3kD,EAAU2V,EAAK3V,QAajI,OAAS00B,WAZQ9E,GAAW8S,GAAckF,gBAAgB5jB,QAAQ61B,IAC1Dt2B,KAAMihC,EACNC,UAAWx0B,GAAWw0B,EAAUxoC,IAAI,SAAUwf,GAAO,OAAOA,EAAIl5B,SAChEmiD,aAAcz0B,GAAWy0B,EAAazoC,IAAI,SAAUwf,GAAO,OAAOA,EAAIl5B,SACtEoiD,QAAS10B,GAAW00B,EAAQ1oC,IAAI,SAAUwf,GAAO,OAAOA,EAAIl5B,SAC5DvC,QAASiwB,GAAWjwB,EAAQic,IAAI,SAAUwf,GAAO,OAAOA,EAAIl5B,aAOnCghB,KALtB,IAAI5B,GAAeiO,GAAW8S,GAAciF,qBACnD,IAAIhmB,GAAe6iC,GAAaI,GAAYF,GAAeE,GAAYD,GACvEC,GAAY5kD,MAG6B6kD,yBAEjD,SAASC,GAAgBnvC,GACrB,IAAIoE,EAASu9B,IACT9hC,KAAMG,EAAKH,KACX+N,KAAM5N,EAAK4N,KACX+d,KAAM3rB,EAAK2rB,KACXqW,SAAUjV,GAAcpK,SAQ5B,OAAS5D,WANQ9E,GAAW8S,GAAcgF,gBAAgB1jB,QAAQ61B,IAC1D95C,QAASga,EAAOha,QAChB89B,UAAWloB,EAAKkoB,UAChB8mB,QAAShvC,EAAKgvC,YAGWphC,KADtB,IAAI5B,GAAeiO,GAAW8S,GAAc+E,aAAc,IAAI9lB,GAAehM,EAAK4N,SAChDoG,WAAY5P,EAAO4P,YAyBpE,SAASi7B,GAAY/N,GACjB,IAAIkO,EAAQlO,EAAI56B,IAAI,SAAUwf,GAAO,OA/sHzC,SAASupB,EAAW39B,GAChB,OAAO,IAAID,GAAWC,GA8sHsB29B,CAAWvpB,EAAIlY,QAC3D,OAAOszB,EAAI/0C,OAAS,EAAIkuB,GAAeC,GAAW80B,IAAUliC;;;;;;;OAUhE,SAASoiC,GAAwBC,GAC7B,IAAIC,KAEJA,EAAoBtiD,MAAO6gB,IAAK,OAAQnhB,MAAO+tB,GAAQ40B,EAASE,UAAW56B,QAAQ,IAEnF26B,EAAoBtiD,MAAO6gB,IAAK,OAAQnhB,MAAO2iD,EAAS3hC,KAAMiH,QAAQ,IACtE,IAAI66B,EAAkB/N,IAClB9hC,KAAM0vC,EAAS1vC,KACf+N,KAAM2hC,EAAS3hC,KACf+d,KAAM4jB,EAAS5jB,KACfqW,SAAUjV,GAAcoE,kBAU5B,OARAqe,EAAoBtiD,MAAO6gB,IAAK,UAAWnhB,MAAO8iD,EAAgBtlD,QAASyqB,QAAQ,IAEnF26B,EAAoBtiD,MAAO6gB,IAAK,OAAQnhB,MAAO+tB,GAAQ40B,EAASxmC,MAAO8L,QAAQ,KAMtEkK,WALQ9E,GAAW8S,GAAcoF,YAAY9jB,QAAQkM,GAAWi1B,KAKxC5hC,KAJtB,IAAI5B,GAAeiO,GAAW8S,GAAcmF,iBACnD,IAAIlmB,GAAeujC,EAAS3hC,MAC5B,IAAI5B,GAAe,IAAIgH,GAAYu8B,EAASE,cAEHz7B,WAAY07B,EAAgB17B;;;;;;;;AAuC7E,IAuvBW27B,GAvvBPC,GACA,SAASA,GAAY/Z,EAASx1B,EAAOwvC,EAAaC,GAC9CllD,KAAKyV,MAAQA,EACbzV,KAAKilD,YAAcA,EACnBjlD,KAAKklD,YAAcA,EACnBllD,KAAKirC,QAAU,iBAAmBA,EAAU,IAAMga,EAAc,KAAOxvC,EAAQ,QAAUyvC,GAI7FC,GACA,SAASA,GAAUpc,EAAOM,GACtBrpC,KAAK+oC,MAAQA,EACb/oC,KAAKqpC,IAAMA,GAIf+b,GAAqB,WACrB,SAASA,EAAIvF,GACT7/C,KAAK6/C,KAAOA,EAOhB,OALAuF,EAAIvkD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAErC,YADgB,IAAZA,IAAsBA,EAAU,MAC7B,MAEXkkC,EAAIvkD,UAAU4Y,SAAW,WAAc,MAAO,OACvC2rC,EATa,GAwBpBC,GAAuB,SAAUtkC,GAEjC,SAASskC,EAAMxF,EAAMt8C,EAAQ+hD,EAAyBC,GAClD,IAAI/wC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMjR,OAASA,EACfiR,EAAM8wC,wBAA0BA,EAChC9wC,EAAM+wC,SAAWA,EACV/wC,EAOX,OAbA9T,EAAU2kD,EAAOtkC,GAQjBskC,EAAMxkD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQukC,WAAWxlD,KAAMkhB,IAEpCmkC,EAAMxkD,UAAU4Y,SAAW,WAAc,MAAO,SACzC4rC,EAde,CAexBD,IACEK,GAA2B,SAAU1kC,GAErC,SAAS0kC,IACL,OAAkB,OAAX1kC,GAAmBA,EAAOtf,MAAMzB,KAAMsB,YAActB,KAM/D,OARAU,EAAU+kD,EAAW1kC,GAIrB0kC,EAAU5kD,UAAU2oC,MAAQ,SAAUvoB,EAASC,QAC3B,IAAZA,IAAsBA,EAAU,OAGjCukC,EATmB,CAU5BL,IACEM,GAAkC,SAAU3kC,GAE5C,SAAS2kC,IACL,OAAkB,OAAX3kC,GAAmBA,EAAOtf,MAAMzB,KAAMsB,YAActB,KAM/D,OARAU,EAAUglD,EAAkB3kC,GAI5B2kC,EAAiB7kD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAElD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ0kC,sBAAsB3lD,KAAMkhB,IAExCwkC,EAT0B,CAUnCN,IAIEQ,GAAuB,SAAU7kC,GAEjC,SAAS6kC,EAAM/F,EAAMkB,GACjB,IAAIvsC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAEvC,OADAwU,EAAMusC,YAAcA,EACbvsC,EAMX,OAVA9T,EAAUklD,EAAO7kC,GAMjB6kC,EAAM/kD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ4kC,WAAW7lD,KAAMkhB,IAE7B0kC,EAXe,CAYxBR,IACEU,GAA6B,SAAU/kC,GAEvC,SAAS+kC,EAAYjG,EAAMl3B,EAAWo9B,EAASC,GAC3C,IAAIxxC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMmU,UAAYA,EAClBnU,EAAMuxC,QAAUA,EAChBvxC,EAAMwxC,SAAWA,EACVxxC,EAMX,OAZA9T,EAAUolD,EAAa/kC,GAQvB+kC,EAAYjlD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE7C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQglC,iBAAiBjmD,KAAMkhB,IAEnC4kC,EAbqB,CAc9BV,IACEc,GAA8B,SAAUnlC,GAExC,SAASmlC,EAAarG,EAAMn4B,EAAUzS,GAClC,IAAIT,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAGvC,OAFAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACNT,EAMX,OAXA9T,EAAUwlD,EAAcnlC,GAOxBmlC,EAAarlD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQklC,kBAAkBnmD,KAAMkhB,IAEpCglC,EAZsB,CAa/Bd,IACEgB,GAA+B,SAAUrlC,GAEzC,SAASqlC,EAAcvG,EAAMn4B,EAAUzS,EAAMjT,GACzC,IAAIwS,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACbT,EAAMxS,MAAQA,EACPwS,EAMX,OAZA9T,EAAU0lD,EAAerlC,GAQzBqlC,EAAcvlD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQolC,mBAAmBrmD,KAAMkhB,IAErCklC,EAbuB,CAchChB,IACEkB,GAAkC,SAAUvlC,GAE5C,SAASulC,EAAiBzG,EAAMn4B,EAAUzS,GACtC,IAAIT,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAGvC,OAFAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACNT,EAMX,OAXA9T,EAAU4lD,EAAkBvlC,GAO5BulC,EAAiBzlD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAElD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQslC,sBAAsBvmD,KAAMkhB,IAExColC,EAZ0B,CAanClB,IACEoB,GAA2B,SAAUzlC,GAErC,SAASylC,EAAU3G,EAAMhgC,EAAKsD,GAC1B,IAAI3O,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAGvC,OAFAwU,EAAMqL,IAAMA,EACZrL,EAAM2O,IAAMA,EACL3O,EAMX,OAXA9T,EAAU8lD,EAAWzlC,GAOrBylC,EAAU3lD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE3C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQwlC,eAAezmD,KAAMkhB,IAEjCslC,EAZmB,CAa5BpB,IACEsB,GAA4B,SAAU3lC,GAEtC,SAAS2lC,EAAW7G,EAAMhgC,EAAKsD,EAAKnhB,GAChC,IAAIwS,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMqL,IAAMA,EACZrL,EAAM2O,IAAMA,EACZ3O,EAAMxS,MAAQA,EACPwS,EAMX,OAZA9T,EAAUgmD,EAAY3lC,GAQtB2lC,EAAW7lD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ0lC,gBAAgB3mD,KAAMkhB,IAElCwlC,EAboB,CAc7BtB,IACEwB,GAA6B,SAAU7lC,GAEvC,SAAS6lC,EAAY/G,EAAMvJ,EAAKrhC,EAAM0J,GAClC,IAAInK,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAM8hC,IAAMA,EACZ9hC,EAAMS,KAAOA,EACbT,EAAMmK,KAAOA,EACNnK,EAMX,OAZA9T,EAAUkmD,EAAa7lC,GAQvB6lC,EAAY/lD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE7C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ4lC,UAAU7mD,KAAMkhB,IAE5B0lC,EAbqB,CAc9BxB,IACE0B,GAAkC,SAAU/lC,GAE5C,SAAS+lC,EAAiBjH,EAAM79C,GAC5B,IAAIwS,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAEvC,OADAwU,EAAMxS,MAAQA,EACPwS,EAMX,OAVA9T,EAAUomD,EAAkB/lC,GAM5B+lC,EAAiBjmD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAElD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ8lC,sBAAsB/mD,KAAMkhB,IAExC4lC,EAX0B,CAYnC1B,IACE4B,GAA8B,SAAUjmC,GAExC,SAASimC,EAAanH,EAAMkB,GACxB,IAAIvsC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAEvC,OADAwU,EAAMusC,YAAcA,EACbvsC,EAMX,OAVA9T,EAAUsmD,EAAcjmC,GAMxBimC,EAAanmD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQgmC,kBAAkBjnD,KAAMkhB,IAEpC8lC,EAXsB,CAY/B5B,IACE8B,GAA4B,SAAUnmC,GAEtC,SAASmmC,EAAWrH,EAAMtuB,EAAM7R,GAC5B,IAAIlL,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAGvC,OAFAwU,EAAM+c,KAAOA,EACb/c,EAAMkL,OAASA,EACRlL,EAMX,OAXA9T,EAAUwmD,EAAYnmC,GAOtBmmC,EAAWrmD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQkmC,gBAAgBnnD,KAAMkhB,IAElCgmC,EAZoB,CAa7B9B,IACEgC,GAA+B,SAAUrmC,GAEzC,SAASqmC,EAAcvH,EAAMwH,EAAStG,GAClC,IAAIvsC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAGvC,OAFAwU,EAAM6yC,QAAUA,EAChB7yC,EAAMusC,YAAcA,EACbvsC,EAMX,OAXA9T,EAAU0mD,EAAermC,GAOzBqmC,EAAcvmD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQqmC,mBAAmBtnD,KAAMkhB,IAErCkmC,EAZuB,CAahChC,IACEmC,GAAwB,SAAUxmC,GAElC,SAASwmC,EAAO1H,EAAM2H,EAAWC,EAAMC,GACnC,IAAIlzC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMgzC,UAAYA,EAClBhzC,EAAMizC,KAAOA,EACbjzC,EAAMkzC,MAAQA,EACPlzC,EAMX,OAZA9T,EAAU6mD,EAAQxmC,GAQlBwmC,EAAO1mD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAExC,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ0mC,YAAY3nD,KAAMkhB,IAE9BqmC,EAbgB,CAczBnC,IACEwC,GAA2B,SAAU7mC,GAErC,SAAS6mC,EAAU/H,EAAM1rB,GACrB,IAAI3f,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAEvC,OADAwU,EAAM2f,WAAaA,EACZ3f,EAMX,OAVA9T,EAAUknD,EAAW7mC,GAMrB6mC,EAAU/mD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE3C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ4mC,eAAe7nD,KAAMkhB,IAEjC0mC,EAXmB,CAY5BxC,IACE0C,GAA+B,SAAU/mC,GAEzC,SAAS+mC,EAAcjI,EAAM1rB,GACzB,IAAI3f,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAEvC,OADAwU,EAAM2f,WAAaA,EACZ3f,EAMX,OAVA9T,EAAUonD,EAAe/mC,GAMzB+mC,EAAcjnD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQ8mC,mBAAmB/nD,KAAMkhB,IAErC4mC,EAXuB,CAYhC1C,IACE4C,GAA4B,SAAUjnC,GAEtC,SAASinC,EAAWnI,EAAMn4B,EAAUzS,EAAM0J,GACtC,IAAInK,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACbT,EAAMmK,KAAOA,EACNnK,EAMX,OAZA9T,EAAUsnD,EAAYjnC,GAQtBinC,EAAWnnD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE5C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQgnC,gBAAgBjoD,KAAMkhB,IAElC8mC,EAboB,CAc7B5C,IACE8C,GAAgC,SAAUnnC,GAE1C,SAASmnC,EAAerI,EAAMn4B,EAAUzS,EAAM0J,GAC1C,IAAInK,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAIvC,OAHAwU,EAAMkT,SAAWA,EACjBlT,EAAMS,KAAOA,EACbT,EAAMmK,KAAOA,EACNnK,EAMX,OAZA9T,EAAUwnD,EAAgBnnC,GAQ1BmnC,EAAernD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAEhD,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQknC,oBAAoBnoD,KAAMkhB,IAEtCgnC,EAbwB,CAcjC9C,IACEgD,GAA8B,SAAUrnC,GAExC,SAASqnC,EAAavI,EAAMwI,EAAQ1pC,GAChC,IAAInK,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,IAAS7/C,KAGvC,OAFAwU,EAAM6zC,OAASA,EACf7zC,EAAMmK,KAAOA,EACNnK,EAMX,OAXA9T,EAAU0nD,EAAcrnC,GAOxBqnC,EAAavnD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE9C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BD,EAAQqnC,kBAAkBtoD,KAAMkhB,IAEpCknC,EAZsB,CAa/BhD,IACEmD,GAA+B,SAAUxnC,GAEzC,SAASwnC,EAAc16B,EAAKhY,EAAQ0vC,EAAUiD,GAC1C,IAAIh0C,EAAQuM,EAAOvf,KAAKxB,KAAM,IAAImlD,GAAU,EAAa,MAAVtvC,EAAiB,EAAIA,EAAOtU,UAAYvB,KAKvF,OAJAwU,EAAMqZ,IAAMA,EACZrZ,EAAMqB,OAASA,EACfrB,EAAM+wC,SAAWA,EACjB/wC,EAAMg0C,OAASA,EACRh0C,EAOX,OAdA9T,EAAU6nD,EAAexnC,GASzBwnC,EAAc1nD,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAE/C,YADgB,IAAZA,IAAsBA,EAAU,MAC7BlhB,KAAK6tB,IAAI2b,MAAMvoB,EAASC,IAEnCqnC,EAAc1nD,UAAU4Y,SAAW,WAAc,OAAOzZ,KAAK6V,OAAS,OAAS7V,KAAKulD,UAC7EgD,EAfuB,CAgBhCnD,IACEqD,GACA,SAASA,GAAgB5I,EAAM18B,EAAKulC,EAAUzzC,EAAMkf,GAChDn0B,KAAK6/C,KAAOA,EACZ7/C,KAAKmjB,IAAMA,EACXnjB,KAAK0oD,SAAWA,EAChB1oD,KAAKiV,KAAOA,EACZjV,KAAKm0B,WAAaA,GAItBw0B,GAAgC,WAChC,SAASA,KAsBT,OApBAA,EAAe9nD,UAAU8mD,YAAc,SAAU95B,EAAK3M,KACtDynC,EAAe9nD,UAAUglD,WAAa,SAAUh4B,EAAK3M,KACrDynC,EAAe9nD,UAAUolD,iBAAmB,SAAUp4B,EAAK3M,KAC3DynC,EAAe9nD,UAAUynD,kBAAoB,SAAUz6B,EAAK3M,KAC5DynC,EAAe9nD,UAAU8kD,sBAAwB,SAAU93B,EAAK3M,KAChEynC,EAAe9nD,UAAUymD,mBAAqB,SAAUz5B,EAAK3M,KAC7DynC,EAAe9nD,UAAU4lD,eAAiB,SAAU54B,EAAK3M,KACzDynC,EAAe9nD,UAAU8lD,gBAAkB,SAAU94B,EAAK3M,KAC1DynC,EAAe9nD,UAAUomD,kBAAoB,SAAUp5B,EAAK3M,KAC5DynC,EAAe9nD,UAAUsmD,gBAAkB,SAAUt5B,EAAK3M,KAC1DynC,EAAe9nD,UAAUkmD,sBAAwB,SAAUl5B,EAAK3M,KAChEynC,EAAe9nD,UAAUonD,gBAAkB,SAAUp6B,EAAK3M,KAC1DynC,EAAe9nD,UAAUgmD,UAAY,SAAUh5B,EAAK3M,KACpDynC,EAAe9nD,UAAUgnD,eAAiB,SAAUh6B,EAAK3M,KACzDynC,EAAe9nD,UAAUknD,mBAAqB,SAAUl6B,EAAK3M,KAC7DynC,EAAe9nD,UAAUslD,kBAAoB,SAAUt4B,EAAK3M,KAC5DynC,EAAe9nD,UAAUwlD,mBAAqB,SAAUx4B,EAAK3M,KAC7DynC,EAAe9nD,UAAU2kD,WAAa,SAAU33B,EAAK3M,KACrDynC,EAAe9nD,UAAUsnD,oBAAsB,SAAUt6B,EAAK3M,KAC9DynC,EAAe9nD,UAAU0lD,sBAAwB,SAAU14B,EAAK3M,KACzDynC,EAvBwB,GAyB/BC,GAAuC,WACvC,SAASt6B,KA+ET,OA7EAA,EAAoBztB,UAAU8mD,YAAc,SAAU95B,EAAK3M,GAGvD,OAFA2M,EAAI45B,KAAKje,MAAMxpC,MACf6tB,EAAI65B,MAAMle,MAAMxpC,MACT,MAEXsuB,EAAoBztB,UAAUglD,WAAa,SAAUh4B,EAAK3M,GAAW,OAAOlhB,KAAK6oD,SAASh7B,EAAIkzB,YAAa7/B,IAC3GoN,EAAoBztB,UAAUolD,iBAAmB,SAAUp4B,EAAK3M,GAI5D,OAHA2M,EAAIlF,UAAU6gB,MAAMxpC,MACpB6tB,EAAIk4B,QAAQvc,MAAMxpC,MAClB6tB,EAAIm4B,SAASxc,MAAMxpC,MACZ,MAEXsuB,EAAoBztB,UAAUgmD,UAAY,SAAUh5B,EAAK3M,GAGrD,OAFA2M,EAAIyoB,IAAI9M,MAAMxpC,MACdA,KAAK6oD,SAASh7B,EAAIlP,KAAMuC,GACjB,MAEXoN,EAAoBztB,UAAUynD,kBAAoB,SAAUz6B,EAAK3M,GAG7D,OAFA2M,EAAIw6B,OAAO7e,MAAMxpC,MACjBA,KAAK6oD,SAASh7B,EAAIlP,KAAMuC,GACjB,MAEXoN,EAAoBztB,UAAU8kD,sBAAwB,SAAU93B,EAAK3M,GAAW,OAAO,MACvFoN,EAAoBztB,UAAUymD,mBAAqB,SAAUz5B,EAAK3M,GAC9D,OAAOlhB,KAAK6oD,SAASh7B,EAAIkzB,YAAa7/B,IAE1CoN,EAAoBztB,UAAU4lD,eAAiB,SAAU54B,EAAK3M,GAG1D,OAFA2M,EAAIhO,IAAI2pB,MAAMxpC,MACd6tB,EAAI1K,IAAIqmB,MAAMxpC,MACP,MAEXsuB,EAAoBztB,UAAU8lD,gBAAkB,SAAU94B,EAAK3M,GAI3D,OAHA2M,EAAIhO,IAAI2pB,MAAMxpC,MACd6tB,EAAI1K,IAAIqmB,MAAMxpC,MACd6tB,EAAI7rB,MAAMwnC,MAAMxpC,MACT,MAEXsuB,EAAoBztB,UAAUomD,kBAAoB,SAAUp5B,EAAK3M,GAC7D,OAAOlhB,KAAK6oD,SAASh7B,EAAIkzB,YAAa7/B,IAE1CoN,EAAoBztB,UAAUsmD,gBAAkB,SAAUt5B,EAAK3M,GAAW,OAAOlhB,KAAK6oD,SAASh7B,EAAInO,OAAQwB,IAC3GoN,EAAoBztB,UAAUkmD,sBAAwB,SAAUl5B,EAAK3M,GAAW,OAAO,MACvFoN,EAAoBztB,UAAUonD,gBAAkB,SAAUp6B,EAAK3M,GAE3D,OADA2M,EAAInG,SAAS8hB,MAAMxpC,MACZA,KAAK6oD,SAASh7B,EAAIlP,KAAMuC,IAEnCoN,EAAoBztB,UAAUgnD,eAAiB,SAAUh6B,EAAK3M,GAE1D,OADA2M,EAAIsG,WAAWqV,MAAMxpC,MACd,MAEXsuB,EAAoBztB,UAAUknD,mBAAqB,SAAUl6B,EAAK3M,GAE9D,OADA2M,EAAIsG,WAAWqV,MAAMxpC,MACd,MAEXsuB,EAAoBztB,UAAUslD,kBAAoB,SAAUt4B,EAAK3M,GAE7D,OADA2M,EAAInG,SAAS8hB,MAAMxpC,MACZ,MAEXsuB,EAAoBztB,UAAUwlD,mBAAqB,SAAUx4B,EAAK3M,GAG9D,OAFA2M,EAAInG,SAAS8hB,MAAMxpC,MACnB6tB,EAAI7rB,MAAMwnC,MAAMxpC,MACT,MAEXsuB,EAAoBztB,UAAU0lD,sBAAwB,SAAU14B,EAAK3M,GAEjE,OADA2M,EAAInG,SAAS8hB,MAAMxpC,MACZ,MAEXsuB,EAAoBztB,UAAUsnD,oBAAsB,SAAUt6B,EAAK3M,GAE/D,OADA2M,EAAInG,SAAS8hB,MAAMxpC,MACZA,KAAK6oD,SAASh7B,EAAIlP,KAAMuC,IAEnCoN,EAAoBztB,UAAUgoD,SAAW,SAAUC,EAAM5nC,GACrD,IAAI1M,EAAQxU,KAEZ,OADA8oD,EAAKp0C,QAAQ,SAAUmZ,GAAO,OAAOA,EAAI2b,MAAMh1B,EAAO0M,KAC/C,MAEXoN,EAAoBztB,UAAU2kD,WAAa,SAAU33B,EAAK3M,GAAW,OAAO,MACrEoN,EAhF+B,GAkFtCy6B,GAAkC,WAClC,SAASr7B,KAmET,OAjEAA,EAAe7sB,UAAU8kD,sBAAwB,SAAU93B,EAAK3M,GAAW,OAAO2M,GAClFH,EAAe7sB,UAAUymD,mBAAqB,SAAUz5B,EAAK3M,GACzD,OAAO,IAAIkmC,GAAcv5B,EAAIgyB,KAAMhyB,EAAIw5B,QAASrnD,KAAK6oD,SAASh7B,EAAIkzB,eAEtErzB,EAAe7sB,UAAUkmD,sBAAwB,SAAUl5B,EAAK3M,GAC5D,OAAO,IAAI4lC,GAAiBj5B,EAAIgyB,KAAMhyB,EAAI7rB,QAE9C0rB,EAAe7sB,UAAUslD,kBAAoB,SAAUt4B,EAAK3M,GACxD,OAAO,IAAIglC,GAAar4B,EAAIgyB,KAAMhyB,EAAInG,SAAS8hB,MAAMxpC,MAAO6tB,EAAI5Y,OAEpEyY,EAAe7sB,UAAUwlD,mBAAqB,SAAUx4B,EAAK3M,GACzD,OAAO,IAAIklC,GAAcv4B,EAAIgyB,KAAMhyB,EAAInG,SAAS8hB,MAAMxpC,MAAO6tB,EAAI5Y,KAAM4Y,EAAI7rB,MAAMwnC,MAAMxpC,QAE3F0tB,EAAe7sB,UAAU0lD,sBAAwB,SAAU14B,EAAK3M,GAC5D,OAAO,IAAIolC,GAAiBz4B,EAAIgyB,KAAMhyB,EAAInG,SAAS8hB,MAAMxpC,MAAO6tB,EAAI5Y,OAExEyY,EAAe7sB,UAAUonD,gBAAkB,SAAUp6B,EAAK3M,GACtD,OAAO,IAAI8mC,GAAWn6B,EAAIgyB,KAAMhyB,EAAInG,SAAS8hB,MAAMxpC,MAAO6tB,EAAI5Y,KAAMjV,KAAK6oD,SAASh7B,EAAIlP,QAE1F+O,EAAe7sB,UAAUsnD,oBAAsB,SAAUt6B,EAAK3M,GAC1D,OAAO,IAAIgnC,GAAer6B,EAAIgyB,KAAMhyB,EAAInG,SAAS8hB,MAAMxpC,MAAO6tB,EAAI5Y,KAAMjV,KAAK6oD,SAASh7B,EAAIlP,QAE9F+O,EAAe7sB,UAAUynD,kBAAoB,SAAUz6B,EAAK3M,GACxD,OAAO,IAAIknC,GAAav6B,EAAIgyB,KAAMhyB,EAAIw6B,OAAO7e,MAAMxpC,MAAOA,KAAK6oD,SAASh7B,EAAIlP,QAEhF+O,EAAe7sB,UAAUomD,kBAAoB,SAAUp5B,EAAK3M,GACxD,OAAO,IAAI8lC,GAAan5B,EAAIgyB,KAAM7/C,KAAK6oD,SAASh7B,EAAIkzB,eAExDrzB,EAAe7sB,UAAUsmD,gBAAkB,SAAUt5B,EAAK3M,GACtD,OAAO,IAAIgmC,GAAWr5B,EAAIgyB,KAAMhyB,EAAI0D,KAAMvxB,KAAK6oD,SAASh7B,EAAInO,UAEhEgO,EAAe7sB,UAAU8mD,YAAc,SAAU95B,EAAK3M,GAClD,OAAO,IAAIqmC,GAAO15B,EAAIgyB,KAAMhyB,EAAI25B,UAAW35B,EAAI45B,KAAKje,MAAMxpC,MAAO6tB,EAAI65B,MAAMle,MAAMxpC,QAErF0tB,EAAe7sB,UAAUgnD,eAAiB,SAAUh6B,EAAK3M,GACrD,OAAO,IAAI0mC,GAAU/5B,EAAIgyB,KAAMhyB,EAAIsG,WAAWqV,MAAMxpC,QAExD0tB,EAAe7sB,UAAUknD,mBAAqB,SAAUl6B,EAAK3M,GACzD,OAAO,IAAI4mC,GAAcj6B,EAAIgyB,KAAMhyB,EAAIsG,WAAWqV,MAAMxpC,QAE5D0tB,EAAe7sB,UAAUolD,iBAAmB,SAAUp4B,EAAK3M,GACvD,OAAO,IAAI4kC,GAAYj4B,EAAIgyB,KAAMhyB,EAAIlF,UAAU6gB,MAAMxpC,MAAO6tB,EAAIk4B,QAAQvc,MAAMxpC,MAAO6tB,EAAIm4B,SAASxc,MAAMxpC,QAE5G0tB,EAAe7sB,UAAUgmD,UAAY,SAAUh5B,EAAK3M,GAChD,OAAO,IAAI0lC,GAAY/4B,EAAIgyB,KAAMhyB,EAAIyoB,IAAI9M,MAAMxpC,MAAO6tB,EAAI5Y,KAAMjV,KAAK6oD,SAASh7B,EAAIlP,QAEtF+O,EAAe7sB,UAAU4lD,eAAiB,SAAU54B,EAAK3M,GACrD,OAAO,IAAIslC,GAAU34B,EAAIgyB,KAAMhyB,EAAIhO,IAAI2pB,MAAMxpC,MAAO6tB,EAAI1K,IAAIqmB,MAAMxpC,QAEtE0tB,EAAe7sB,UAAU8lD,gBAAkB,SAAU94B,EAAK3M,GACtD,OAAO,IAAIwlC,GAAW74B,EAAIgyB,KAAMhyB,EAAIhO,IAAI2pB,MAAMxpC,MAAO6tB,EAAI1K,IAAIqmB,MAAMxpC,MAAO6tB,EAAI7rB,MAAMwnC,MAAMxpC,QAE9F0tB,EAAe7sB,UAAUgoD,SAAW,SAAUC,GAE1C,IADA,IAAItwC,EAAM,IAAIjY,MAAMuoD,EAAKvnD,QAChBH,EAAI,EAAGA,EAAI0nD,EAAKvnD,SAAUH,EAC/BoX,EAAIpX,GAAK0nD,EAAK1nD,GAAGooC,MAAMxpC,MAE3B,OAAOwY,GAEXkV,EAAe7sB,UAAUglD,WAAa,SAAUh4B,EAAK3M,GACjD,OAAO,IAAI0kC,GAAM/3B,EAAIgyB,KAAM7/C,KAAK6oD,SAASh7B,EAAIkzB,eAEjDrzB,EAAe7sB,UAAU2kD,WAAa,SAAU33B,EAAK3M,GACjD,OAAO,IAAImkC,GAAMx3B,EAAIgyB,KAAMhyB,EAAItqB,OAAQsqB,EAAIy3B,wBAAyBz3B,EAAI03B,WAErE73B,EApE0B,GAwEjCs7B,GAA+C,WAC/C,SAASA,KAgJT,OA9IAA,EAA8BnoD,UAAU8kD,sBAAwB,SAAU93B,EAAK3M,GAAW,OAAO2M,GACjGm7B,EAA8BnoD,UAAUymD,mBAAqB,SAAUz5B,EAAK3M,GACxE,IAAI6/B,EAAc/gD,KAAK6oD,SAASh7B,EAAIkzB,aACpC,OAAIA,IAAgBlzB,EAAIkzB,YACb,IAAIqG,GAAcv5B,EAAIgyB,KAAMhyB,EAAIw5B,QAAStG,GAC7ClzB,GAEXm7B,EAA8BnoD,UAAUkmD,sBAAwB,SAAUl5B,EAAK3M,GAAW,OAAO2M,GACjGm7B,EAA8BnoD,UAAUslD,kBAAoB,SAAUt4B,EAAK3M,GACvE,IAAIwG,EAAWmG,EAAInG,SAAS8hB,MAAMxpC,MAClC,OAAI0nB,IAAamG,EAAInG,SACV,IAAIw+B,GAAar4B,EAAIgyB,KAAMn4B,EAAUmG,EAAI5Y,MAE7C4Y,GAEXm7B,EAA8BnoD,UAAUwlD,mBAAqB,SAAUx4B,EAAK3M,GACxE,IAAIwG,EAAWmG,EAAInG,SAAS8hB,MAAMxpC,MAC9BgC,EAAQ6rB,EAAI7rB,MAAMwnC,MAAMxpC,MAC5B,OAAI0nB,IAAamG,EAAInG,UAAY1lB,IAAU6rB,EAAI7rB,MACpC,IAAIokD,GAAcv4B,EAAIgyB,KAAMn4B,EAAUmG,EAAI5Y,KAAMjT,GAEpD6rB,GAEXm7B,EAA8BnoD,UAAU0lD,sBAAwB,SAAU14B,EAAK3M,GAC3E,IAAIwG,EAAWmG,EAAInG,SAAS8hB,MAAMxpC,MAClC,OAAI0nB,IAAamG,EAAInG,SACV,IAAI4+B,GAAiBz4B,EAAIgyB,KAAMn4B,EAAUmG,EAAI5Y,MAEjD4Y,GAEXm7B,EAA8BnoD,UAAUonD,gBAAkB,SAAUp6B,EAAK3M,GACrE,IAAIwG,EAAWmG,EAAInG,SAAS8hB,MAAMxpC,MAClC,OAAI0nB,IAAamG,EAAInG,SACV,IAAIsgC,GAAWn6B,EAAIgyB,KAAMn4B,EAAUmG,EAAI5Y,KAAMjV,KAAK6oD,SAASh7B,EAAIlP,OAEnEkP,GAEXm7B,EAA8BnoD,UAAUsnD,oBAAsB,SAAUt6B,EAAK3M,GACzE,IAAIwG,EAAWmG,EAAInG,SAAS8hB,MAAMxpC,MAC9B2e,EAAO3e,KAAK6oD,SAASh7B,EAAIlP,MAC7B,OAAI+I,IAAamG,EAAInG,UAAY/I,IAASkP,EAAIlP,KACnC,IAAIupC,GAAer6B,EAAIgyB,KAAMn4B,EAAUmG,EAAI5Y,KAAM0J,GAErDkP,GAEXm7B,EAA8BnoD,UAAUynD,kBAAoB,SAAUz6B,EAAK3M,GACvE,IAAImnC,EAASx6B,EAAIw6B,QAAUx6B,EAAIw6B,OAAO7e,MAAMxpC,MACxC2e,EAAO3e,KAAK6oD,SAASh7B,EAAIlP,MAC7B,OAAI0pC,IAAWx6B,EAAIw6B,QAAU1pC,IAASkP,EAAIlP,KAC/B,IAAIypC,GAAav6B,EAAIgyB,KAAMwI,EAAQ1pC,GAEvCkP,GAEXm7B,EAA8BnoD,UAAUomD,kBAAoB,SAAUp5B,EAAK3M,GACvE,IAAI6/B,EAAc/gD,KAAK6oD,SAASh7B,EAAIkzB,aACpC,OAAIA,IAAgBlzB,EAAIkzB,YACb,IAAIiG,GAAan5B,EAAIgyB,KAAMkB,GAE/BlzB,GAEXm7B,EAA8BnoD,UAAUsmD,gBAAkB,SAAUt5B,EAAK3M,GACrE,IAAIxB,EAAS1f,KAAK6oD,SAASh7B,EAAInO,QAC/B,OAAIA,IAAWmO,EAAInO,OACR,IAAIwnC,GAAWr5B,EAAIgyB,KAAMhyB,EAAI0D,KAAM7R,GAEvCmO,GAEXm7B,EAA8BnoD,UAAU8mD,YAAc,SAAU95B,EAAK3M,GACjE,IAAIumC,EAAO55B,EAAI45B,KAAKje,MAAMxpC,MACtB0nD,EAAQ75B,EAAI65B,MAAMle,MAAMxpC,MAC5B,OAAIynD,IAAS55B,EAAI45B,MAAQC,IAAU75B,EAAI65B,MAC5B,IAAIH,GAAO15B,EAAIgyB,KAAMhyB,EAAI25B,UAAWC,EAAMC,GAE9C75B,GAEXm7B,EAA8BnoD,UAAUgnD,eAAiB,SAAUh6B,EAAK3M,GACpE,IAAIiT,EAAatG,EAAIsG,WAAWqV,MAAMxpC,MACtC,OAAIm0B,IAAetG,EAAIsG,WACZ,IAAIyzB,GAAU/5B,EAAIgyB,KAAM1rB,GAE5BtG,GAEXm7B,EAA8BnoD,UAAUknD,mBAAqB,SAAUl6B,EAAK3M,GACxE,IAAIiT,EAAatG,EAAIsG,WAAWqV,MAAMxpC,MACtC,OAAIm0B,IAAetG,EAAIsG,WACZ,IAAI2zB,GAAcj6B,EAAIgyB,KAAM1rB,GAEhCtG,GAEXm7B,EAA8BnoD,UAAUolD,iBAAmB,SAAUp4B,EAAK3M,GACtE,IAAIyH,EAAYkF,EAAIlF,UAAU6gB,MAAMxpC,MAChC+lD,EAAUl4B,EAAIk4B,QAAQvc,MAAMxpC,MAC5BgmD,EAAWn4B,EAAIm4B,SAASxc,MAAMxpC,MAClC,OAAI2oB,IAAckF,EAAIlF,WAAao9B,IAAYl4B,EAAIk4B,SAAWC,GAAaA,EAChE,IAAIF,GAAYj4B,EAAIgyB,KAAMl3B,EAAWo9B,EAASC,GAElDn4B,GAEXm7B,EAA8BnoD,UAAUgmD,UAAY,SAAUh5B,EAAK3M,GAC/D,IAAIo1B,EAAMzoB,EAAIyoB,IAAI9M,MAAMxpC,MACpB2e,EAAO3e,KAAK6oD,SAASh7B,EAAIlP,MAC7B,OAAI23B,IAAQzoB,EAAIyoB,KAAO33B,IAASkP,EAAIlP,KACzB,IAAIioC,GAAY/4B,EAAIgyB,KAAMvJ,EAAKzoB,EAAI5Y,KAAM0J,GAE7CkP,GAEXm7B,EAA8BnoD,UAAU4lD,eAAiB,SAAU54B,EAAK3M,GACpE,IAAIrB,EAAMgO,EAAIhO,IAAI2pB,MAAMxpC,MACpBmjB,EAAM0K,EAAI1K,IAAIqmB,MAAMxpC,MACxB,OAAI6f,IAAQgO,EAAIhO,KAAOsD,IAAQ0K,EAAI1K,IACxB,IAAIqjC,GAAU34B,EAAIgyB,KAAMhgC,EAAKsD,GAEjC0K,GAEXm7B,EAA8BnoD,UAAU8lD,gBAAkB,SAAU94B,EAAK3M,GACrE,IAAIrB,EAAMgO,EAAIhO,IAAI2pB,MAAMxpC,MACpBmjB,EAAM0K,EAAI1K,IAAIqmB,MAAMxpC,MACpBgC,EAAQ6rB,EAAI7rB,MAAMwnC,MAAMxpC,MAC5B,OAAI6f,IAAQgO,EAAIhO,KAAOsD,IAAQ0K,EAAI1K,KAAOnhB,IAAU6rB,EAAI7rB,MAC7C,IAAI0kD,GAAW74B,EAAIgyB,KAAMhgC,EAAKsD,EAAKnhB,GAEvC6rB,GAEXm7B,EAA8BnoD,UAAUgoD,SAAW,SAAUC,GAGzD,IAFA,IAAItwC,EAAM,IAAIjY,MAAMuoD,EAAKvnD,QACrB0nD,GAAW,EACN7nD,EAAI,EAAGA,EAAI0nD,EAAKvnD,SAAUH,EAAG,CAClC,IAAI6yB,EAAW60B,EAAK1nD,GAChBY,EAAQiyB,EAASuV,MAAMxpC,MAC3BwY,EAAIpX,GAAKY,EACTinD,EAAWA,GAAYjnD,IAAUiyB,EAErC,OAAOg1B,EAAWzwC,EAAMswC,GAE5BE,EAA8BnoD,UAAUglD,WAAa,SAAUh4B,EAAK3M,GAChE,IAAI6/B,EAAc/gD,KAAK6oD,SAASh7B,EAAIkzB,aACpC,OAAIA,IAAgBlzB,EAAIkzB,YACb,IAAI6E,GAAM/3B,EAAIgyB,KAAMkB,GAExBlzB,GAEXm7B,EAA8BnoD,UAAU2kD,WAAa,SAAU33B,EAAK3M,GAAW,OAAO2M,GAC/Em7B,EAjJuC,GA+M9CE,GACA,SAASA,GAAej0C,EAAMkf,EAAYnR,EAAMC,GAC5CjjB,KAAKiV,KAAOA,EACZjV,KAAKm0B,WAAaA,EAClBn0B,KAAKgjB,KAAOA,EACZhjB,KAAKijB,WAAaA,EAClBjjB,KAAKmpD,UAAYnpD,KAAKgjB,OAASvjB,EAAQslD,mBAAmBqE,aAC1DppD,KAAKqpD,YAAcrpD,KAAKgjB,OAASvjB,EAAQslD,mBAAmBuE,YAIzDvE,GAIRtlD,EAAQslD,qBAAuBtlD,EAAQslD,wBAHnBA,GAA4B,QAAI,GAAK,UACxDA,GAAmBA,GAAiC,aAAI,GAAK,eAC7DA,GAAmBA,GAA8B,UAAI,GAAK,YAE9D,IAAIwE,GAGA,SAASA,GAAYt0C,EAAMu0C,EAAexmC,EAAMi+B,EAASh+B,GACrDjjB,KAAKiV,KAAOA,EACZjV,KAAKwpD,cAAgBA,EACrBxpD,KAAKgjB,KAAOA,EACZhjB,KAAKihD,QAAUA,EACfjhD,KAAKijB,WAAaA,GAItBwmC,GACA,SAASA,GAAex0C,EAAMjT,EAAOihB,GACjCjjB,KAAKiV,KAAOA,EACZjV,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,GAItBymC,GACA,SAASA,GAAqBz0C,EAAM+N,EAAM2mC,EAAiB3nD,EAAO4nD,EAAM3mC,GACpEjjB,KAAKiV,KAAOA,EACZjV,KAAKgjB,KAAOA,EACZhjB,KAAK2pD,gBAAkBA,EACvB3pD,KAAKgC,MAAQA,EACbhC,KAAK4pD,KAAOA,EACZ5pD,KAAKijB,WAAaA,GAYtB4mC,GAAkC,WAClC,SAASA,KAGT,OADAA,EAAiBC,MAAQ16B,GAAS,UAC3By6B,EAJ0B,GAMjCE,GACA,SAASA,GAIT17B,EAIA27B,GACIhqD,KAAKquB,MAAQA,EACbruB,KAAKgqD,aAAeA,EAmBpBhqD,KAAKiqD,aAAe57B,EAAM3S,IAAI,SAAUwuC,GACpC,OAAIA,aAAqB7iC,IAAkB6iC,EAAUj1C,MAAQ+0C,EAAa/0C,MACtEi1C,EAAUloD,iBAAiBmiB,GAEpB,IAAI+G,GADDg/B,EAAUloD,MAAMwnB,IACKxnB,OAE5BkoD,KASnB,SAASC,GAAqBC,EAAeC,EAAkBC,EAAQC,EAAWC,GACzEJ,IACDA,EAAgB,IAAIK,IAExB,IAAIC,EAAwBC,IACxBC,4BAA6B,SAAUC,GAEnC,OAAO,SAAUlsC,GAAQ,OAAO+Q,GAAW/Q,KAE/CmsC,0BAA2B,SAAUv5B,GAEjC,OAAO,SAAU7R,GAMb,OAAOiQ,GALO4B,EAAK7V,IAAI,SAAUqvB,EAAG3pC,GAAK,OACrC+hB,IAAK4nB,EAAE5nB,IACPnhB,MAAO0d,EAAOte,GACd6oB,OAAQ8gB,EAAE9gB,aAKtB8gC,oBAAqB,SAAU91C,GAC3B,MAAM,IAAInS,MAAM,kEAAoEmS,KAEzFq1C,GACCrpC,EAAU,IAAI+pC,GAAgBZ,EAAeC,EAAkBE,EAAWC,GAC1ES,MA4fR,SAASC,EAAkBv0B,EAAKw0B,GACxB5qD,MAAMmwB,QAAQiG,GACdA,EAAIjiB,QAAQ,SAAUsZ,GAAS,OAAOk9B,EAAkBl9B,EAAOm9B,KAG/DA,EAAO7oD,KAAKq0B,GAhgBhBu0B,CAAkBR,EAAsBlhB,MAAMvoB,EAASmqC,GAAMxgC,WAAYqgC,GAsE7E,SAASI,EAAsBC,EAAgBf,EAAWnhC,GACtD,IAAK,IAAIhoB,EAAIkqD,EAAiB,EAAGlqD,GAAK,EAAGA,IACrCgoB,EAAWmiC,QAAQC,GAAqBjB,EAAWnpD,IAvEvDiqD,CAAsBpqC,EAAQqqC,eAAgBf,EAAWU,GACzD,IAAIpyC,EAAYoyC,EAAY1pD,OAAS,EACjCkqD,EAAoB,KACxB,GAAI5yC,GAAa,EAAG,CAChB,IACI6yC,EA8gBZ,SAASC,EAA0B9gC,GAC/B,OAAIA,aAAgBxE,GACTwE,EAAK/D,KAEP+D,aAAgBK,GACdL,EAAK7oB,MAET,KArhBc2pD,CADGV,EAAYpyC,IAE5B6yC,IAGAD,EAugBZ,SAASG,EAAwBrB,GAC7B,OAAOn7B,GAAS,MAAQm7B,GAxgBIqB,CAAwBrB,GAC5CU,EAAYpyC,GACR4yC,EAAkBlwC,IAAImwC,EAAWxlC,KAAKrE,IAAc4C,aAAasL,IAAQ,KACpE3I,WAAW,MAAO3nB,EAAQ8nB,aAAaC,SAGxD,OAAO,IAAIuiC,GAA2BkB,EAAaQ,GAEvD,SAASd,GAA+BkB,EAAkBh+B,GACtD,OAyCJ,SAASi+B,EAAgBD,EAAkBh+B,GACvC,IAAI5M,EAAU,IAAI8qC,GAAqBF,GACvC,OAAOh+B,EAAI2b,MAAMvoB,GA3CV6qC,CAAgBD,EAAkBh+B,GAE7C,IAOIm+B,GA+CAZ,GAtDAa,GACA,SAASA,GAA6B59B,EAAO69B,GACzClsD,KAAKquB,MAAQA,EACbruB,KAAKksD,YAAcA,GAiB3B,SAASC,GAAuB/B,EAAeC,EAAkB+B,EAA2B7B,EAAW8B,EAAM7B,GACpGJ,IACDA,EAAgB,IAAIK,IAExB,IAAIyB,EAieR,SAASI,EAAoB/B,GACzB,OAAOn7B,GAAS,WAAam7B,GAleX+B,CAAoB/B,GAClCl8B,KACApN,EAAU,IAAI+pC,GAAgBZ,EAAeC,EAAkBE,EAAWC,GAC1E+B,EAAaH,EAA0B5iB,MAAMvoB,EAASmqC,GAAMroC,YAChE,GAAI9B,EAAQqqC,eACR,IAAK,IAAIlqD,EAAI,EAAGA,EAAI6f,EAAQqqC,eAAgBlqD,IACxCitB,EAAM/rB,KAAKkpD,GAAqBjB,EAAWnpD,SAG9C,GAAIirD,GAAQL,GAAYQ,UACzB,OAAO,IAAIP,MAAiCM,GAGhD,OADAl+B,EAAM/rB,KAAK4pD,EAAY3wC,IAAIgxC,GAAYnlC,WAAWvF,IAAepiB,EAAQ8nB,aAAaC,SAC/E,IAAIykC,GAA6B59B,EAAO69B,GAMnD,SAASO,GAAclC,EAAWmC,GAC9B,MAAO,OAASnC,EAAY,IAAMmC,EAEtC,SAASlB,GAAqBjB,EAAWmC,GACrC,OAAO,IAAIrlC,GAAeolC,GAAclC,EAAWmC,GAAkBniC,IAiBzE,SAASoiC,GAAqBC,EAAM/+B,GAChC,GAAI++B,IAASxB,GAAMroC,WACf,MAAM,IAAIjgB,MAAM,mCAAqC+qB,GAG7D,SAASg/B,GAA2BD,EAAM9lC,GACtC,OAAI8lC,IAASxB,GAAMxgC,UACR9D,EAAKV,SAGLU,GAlEf,SAAWklC,GAEPA,EAAYA,EAAqB,QAAI,GAAK,UAG1CA,EAAYA,EAAuB,UAAI,GAAK,YALhD,CAMGA,KAAgBA,QAyCnB,SAAWZ,GACPA,EAAMA,EAAiB,UAAI,GAAK,YAChCA,EAAMA,EAAkB,WAAI,GAAK,aAFrC,CAGGA,KAAUA,QAmBb,IA6cI0B,GA7cAf,GAAsC,SAAUhrC,GAEhD,SAASgrC,EAAqBgB,GAC1B,IAAIv4C,EAAQuM,EAAOvf,KAAKxB,OAASA,KAEjC,OADAwU,EAAMu4C,kBAAoBA,EACnBv4C,EAiBX,OArBA9T,EAAUqrD,EAAsBhrC,GAMhCgrC,EAAqBlrD,UAAUgmD,UAAY,SAAUh5B,EAAK3M,GACtD,IAAI1M,EAAQxU,KACR2e,EAAOnc,GAAUqrB,EAAIyoB,KAAMzoB,EAAIlP,MAAMjD,IAAI,SAAUmS,GAAO,OAAOA,EAAI2b,MAAMh1B,EAAO0M,KACtF,OAAO,IAAI8rC,GAAoBn/B,EAAIgyB,KAAMlhC,EAAM3e,KAAK+sD,kBAAkBhC,oBAAoBl9B,EAAI5Y,KAAM0J,EAAKpd,UAE7GwqD,EAAqBlrD,UAAUomD,kBAAoB,SAAUp5B,EAAK3M,GAC9D,IAAI1M,EAAQxU,KACR2e,EAAOkP,EAAIkzB,YAAYrlC,IAAI,SAAUmS,GAAO,OAAOA,EAAI2b,MAAMh1B,EAAO0M,KACxE,OAAO,IAAI8rC,GAAoBn/B,EAAIgyB,KAAMlhC,EAAM3e,KAAK+sD,kBAAkBnC,4BAA4B/8B,EAAIkzB,YAAYx/C,UAEtHwqD,EAAqBlrD,UAAUsmD,gBAAkB,SAAUt5B,EAAK3M,GAC5D,IAAI1M,EAAQxU,KACR2e,EAAOkP,EAAInO,OAAOhE,IAAI,SAAUmS,GAAO,OAAOA,EAAI2b,MAAMh1B,EAAO0M,KACnE,OAAO,IAAI8rC,GAAoBn/B,EAAIgyB,KAAMlhC,EAAM3e,KAAK+sD,kBAAkBjC,0BAA0Bj9B,EAAI0D,QAEjGw6B,EAtB8B,CAuBvChD,IACEiC,GAAiC,WACjC,SAASA,EAAgBiC,EAAgBC,EAAmB3C,EAAWC,GACnExqD,KAAKitD,eAAiBA,EACtBjtD,KAAKktD,kBAAoBA,EACzBltD,KAAKuqD,UAAYA,EACjBvqD,KAAKwqD,sBAAwBA,EAC7BxqD,KAAKmtD,SAAW,IAAIrzC,IACpB9Z,KAAKotD,WAAa,IAAItzC,IACtB9Z,KAAKqtD,kBAAoB,EACzBrtD,KAAKsrD,eAAiB,EAsX1B,OApXAN,EAAgBnqD,UAAU8mD,YAAc,SAAU95B,EAAK++B,GACnD,IAAIU,EACJ,OAAQz/B,EAAI25B,WACR,IAAK,IACD8F,EAAK7tD,EAAQohB,eAAegE,KAC5B,MACJ,IAAK,IACDyoC,EAAK7tD,EAAQohB,eAAe8D,MAC5B,MACJ,IAAK,IACD2oC,EAAK7tD,EAAQohB,eAAemE,SAC5B,MACJ,IAAK,IACDsoC,EAAK7tD,EAAQohB,eAAeiE,OAC5B,MACJ,IAAK,IACDwoC,EAAK7tD,EAAQohB,eAAeqE,OAC5B,MACJ,IAAK,KACDooC,EAAK7tD,EAAQohB,eAAesE,IAC5B,MACJ,IAAK,KACDmoC,EAAK7tD,EAAQohB,eAAe0E,GAC5B,MACJ,IAAK,KACD+nC,EAAK7tD,EAAQohB,eAAeuD,OAC5B,MACJ,IAAK,KACDkpC,EAAK7tD,EAAQohB,eAAeyD,UAC5B,MACJ,IAAK,MACDgpC,EAAK7tD,EAAQohB,eAAe2D,UAC5B,MACJ,IAAK,MACD8oC,EAAK7tD,EAAQohB,eAAe6D,aAC5B,MACJ,IAAK,IACD4oC,EAAK7tD,EAAQohB,eAAe4E,MAC5B,MACJ,IAAK,IACD6nC,EAAK7tD,EAAQohB,eAAegF,OAC5B,MACJ,IAAK,KACDynC,EAAK7tD,EAAQohB,eAAe8E,YAC5B,MACJ,IAAK,KACD2nC,EAAK7tD,EAAQohB,eAAekF,aAC5B,MACJ,QACI,MAAM,IAAIjjB,MAAM,yBAA2B+qB,EAAI25B,WAEvD,OAAOqF,GAA2BD,EAAM,IAAIzoC,GAAmBmpC,EAAIttD,KAAKutD,OAAO1/B,EAAI45B,KAAM2D,GAAMroC,YAAa/iB,KAAKutD,OAAO1/B,EAAI65B,MAAO0D,GAAMroC,eAE7IioC,EAAgBnqD,UAAUglD,WAAa,SAAUh4B,EAAK++B,GAElD,OA5GR,SAASY,EAAoBZ,EAAM/+B,GAC/B,GAAI++B,IAASxB,GAAMxgC,UACf,MAAM,IAAI9nB,MAAM,iCAAmC+qB,GAyGnD2/B,CAAoBZ,EAAM/+B,GACnB7tB,KAAK6oD,SAASh7B,EAAIkzB,YAAa6L,IAE1C5B,EAAgBnqD,UAAUolD,iBAAmB,SAAUp4B,EAAK++B,GAExD,OAAOC,GAA2BD,EADtB5sD,KAAKutD,OAAO1/B,EAAIlF,UAAWyiC,GAAMroC,YACCc,YAAY7jB,KAAKutD,OAAO1/B,EAAIk4B,QAASqF,GAAMroC,YAAa/iB,KAAKutD,OAAO1/B,EAAIm4B,SAAUoF,GAAMroC,eAE1IioC,EAAgBnqD,UAAUgmD,UAAY,SAAUh5B,EAAK++B,GACjD,MAAM,IAAI9pD,MAAM,yEAA2E+qB,EAAI5Y,OAEnG+1C,EAAgBnqD,UAAUynD,kBAAoB,SAAUz6B,EAAK++B,GACzD,IAAIa,EAAgBztD,KAAK6oD,SAASh7B,EAAIlP,KAAMysC,GAAMroC,YAQlD,OAAO8pC,GAA2BD,EAN9B/+B,aAAem/B,GACJn/B,EAAI0zB,UAAUkM,GAGdztD,KAAKutD,OAAO1/B,EAAIw6B,OAAQ+C,GAAMroC,YAAYU,OAAOgqC,KAIpEzC,EAAgBnqD,UAAU8kD,sBAAwB,SAAU93B,EAAK++B,GAE7D,OADAD,GAAqBC,EAAM/+B,GACpB7tB,KAAKktD,mBAEhBlC,EAAgBnqD,UAAUymD,mBAAqB,SAAUz5B,EAAK++B,GAC1DD,GAAqBC,EAAM/+B,GAE3B,IADA,IAAIlP,GAAQoR,GAAQlC,EAAIkzB,YAAYx/C,SAC3BH,EAAI,EAAGA,EAAIysB,EAAIw5B,QAAQ9lD,OAAS,EAAGH,IACxCud,EAAKrc,KAAKytB,GAAQlC,EAAIw5B,QAAQjmD,KAC9Bud,EAAKrc,KAAKtC,KAAKutD,OAAO1/B,EAAIkzB,YAAY3/C,GAAIgqD,GAAMroC,aAGpD,OADApE,EAAKrc,KAAKytB,GAAQlC,EAAIw5B,QAAQx5B,EAAIw5B,QAAQ9lD,OAAS,KAC/CvB,KAAKwqD,sBACExqD,KAAKwqD,sBAAsB7rC,GAE/BkP,EAAIkzB,YAAYx/C,QAAU,EAC7B8tB,GAAWwH,GAAYyB,mBAAmB7U,OAAO9E,GACjD0Q,GAAWwH,GAAY0B,aAAa9U,QAAQ9E,EAAK,GAAI+Q,GAAW/Q,EAAK5b,MAAM,OAEnFioD,EAAgBnqD,UAAU4lD,eAAiB,SAAU54B,EAAK++B,GACtD,IAAIc,EAAe1tD,KAAK2tD,iBAAiB9/B,GACzC,OAAI6/B,EACO1tD,KAAK4tD,kBAAkB//B,EAAK6/B,EAAcd,GAG1CC,GAA2BD,EAAM5sD,KAAKutD,OAAO1/B,EAAIhO,IAAKurC,GAAMroC,YAAYI,IAAInjB,KAAKutD,OAAO1/B,EAAI1K,IAAKioC,GAAMroC,eAGtHioC,EAAgBnqD,UAAU8lD,gBAAkB,SAAU94B,EAAK++B,GACvD,IAAI/sC,EAAM7f,KAAKutD,OAAO1/B,EAAIhO,IAAKurC,GAAMroC,YACjCI,EAAMnjB,KAAKutD,OAAO1/B,EAAI1K,IAAKioC,GAAMroC,YACjC/gB,EAAQhC,KAAKutD,OAAO1/B,EAAI7rB,MAAOopD,GAAMroC,YACzC,OAAO8pC,GAA2BD,EAAM/sC,EAAIsD,IAAIA,GAAK5H,IAAIvZ,KAE7DgpD,EAAgBnqD,UAAUomD,kBAAoB,SAAUp5B,EAAK++B,GACzD,MAAM,IAAI9pD,MAAM,4EAEpBkoD,EAAgBnqD,UAAUsmD,gBAAkB,SAAUt5B,EAAK++B,GACvD,MAAM,IAAI9pD,MAAM,0EAEpBkoD,EAAgBnqD,UAAUkmD,sBAAwB,SAAUl5B,EAAK++B,GAM7D,OAAOC,GAA2BD,EAAM78B,GAAQlC,EAAI7rB,MAH3B,OAAd6rB,EAAI7rB,YAAgC+a,IAAd8Q,EAAI7rB,QAAqC,IAAd6rB,EAAI7rB,QAAgC,IAAd6rB,EAAI7rB,MAClF+f,QACAhF,KAGRiuC,EAAgBnqD,UAAUgtD,UAAY,SAAU54C,GAAQ,OAAOjV,KAAKitD,eAAea,SAAS74C,IAC5F+1C,EAAgBnqD,UAAUonD,gBAAkB,SAAUp6B,EAAK++B,GACvD,GAAI/+B,EAAInG,oBAAoBg+B,IAAgC,QAAZ73B,EAAI5Y,KAAgB,CAEhE,GAAmB,IADf0J,EAAO3e,KAAK6oD,SAASh7B,EAAIlP,KAAMysC,GAAMroC,aAChCxhB,OACL,MAAM,IAAIuB,MAAM,2DAA6D6b,EAAKpd,QAAU,SAEhG,OAAOod,EAAK,GAAGuH,KAAKrE,IAExB,IAAI6rC,EAAe1tD,KAAK2tD,iBAAiB9/B,GACzC,GAAI6/B,EACA,OAAO1tD,KAAK4tD,kBAAkB//B,EAAK6/B,EAAcd,GAGjD,IAAIjuC,EAAO3e,KAAK6oD,SAASh7B,EAAIlP,KAAMysC,GAAMroC,YACrCvJ,EAAS,KACTkO,EAAW1nB,KAAKutD,OAAO1/B,EAAInG,SAAU0jC,GAAMroC,YAC/C,GAAI2E,IAAa1nB,KAAKktD,kBAAmB,CACrC,IAAIa,EAAU/tD,KAAK6tD,UAAUhgC,EAAI5Y,MAC7B84C,IACAv0C,EAASu0C,EAAQtqC,OAAO9E,IAMhC,OAHc,MAAVnF,IACAA,EAASkO,EAASpE,WAAWuK,EAAI5Y,KAAM0J,IAEpCkuC,GAA2BD,EAAMpzC,IAGhDwxC,EAAgBnqD,UAAUgnD,eAAiB,SAAUh6B,EAAK++B,GACtD,OAAOC,GAA2BD,EAz5J1C,SAAS/gD,EAAIib,EAAM7D,GACf,OAAO,IAAI4F,GAAQ/B,EAAM7D,GAw5JmBpX,CAAI7L,KAAKutD,OAAO1/B,EAAIsG,WAAYi3B,GAAMroC,eAElFioC,EAAgBnqD,UAAUknD,mBAAqB,SAAUl6B,EAAK++B,GAC1D,OAAOC,GAA2BD,EAz5J1C,SAASoB,EAAclnC,EAAM7D,GACzB,OAAO,IAAI8F,GAAcjC,EAAM7D,GAw5Ja+qC,CAAchuD,KAAKutD,OAAO1/B,EAAIsG,WAAYi3B,GAAMroC,eAE5FioC,EAAgBnqD,UAAUslD,kBAAoB,SAAUt4B,EAAK++B,GACzD,IAAIc,EAAe1tD,KAAK2tD,iBAAiB9/B,GACzC,GAAI6/B,EACA,OAAO1tD,KAAK4tD,kBAAkB//B,EAAK6/B,EAAcd,GAGjD,IAAIpzC,EAAS,KACTkO,EAAW1nB,KAAKutD,OAAO1/B,EAAInG,SAAU0jC,GAAMroC,YAO/C,OANI2E,IAAa1nB,KAAKktD,oBAClB1zC,EAASxZ,KAAK6tD,UAAUhgC,EAAI5Y,OAElB,MAAVuE,IACAA,EAASkO,EAASjZ,KAAKof,EAAI5Y,OAExB43C,GAA2BD,EAAMpzC,IAGhDwxC,EAAgBnqD,UAAUwlD,mBAAqB,SAAUx4B,EAAK++B,GAC1D,IAAIllC,EAAW1nB,KAAKutD,OAAO1/B,EAAInG,SAAU0jC,GAAMroC,YAC3CgrC,EAAU,KACd,GAAIrmC,IAAa1nB,KAAKktD,kBAAmB,CACrC,IAAIe,EAAYjuD,KAAK6tD,UAAUhgC,EAAI5Y,MACnC,GAAIg5C,EAAW,CACX,KAAIA,aAAqB/qC,IAQrB,MAAM,IAAIpgB,MAAM,6CAJhBirD,EAAUE,GAatB,OAHgB,OAAZF,IACAA,EAAUrmC,EAASjZ,KAAKof,EAAI5Y,OAEzB43C,GAA2BD,EAAMmB,EAAQxyC,IAAIvb,KAAKutD,OAAO1/B,EAAI7rB,MAAOopD,GAAMroC,eAErFioC,EAAgBnqD,UAAU0lD,sBAAwB,SAAU14B,EAAK++B,GAC7D,OAAO5sD,KAAK4tD,kBAAkB//B,EAAK7tB,KAAK2tD,iBAAiB9/B,GAAM++B,IAEnE5B,EAAgBnqD,UAAUsnD,oBAAsB,SAAUt6B,EAAK++B,GAC3D,OAAO5sD,KAAK4tD,kBAAkB//B,EAAK7tB,KAAK2tD,iBAAiB9/B,GAAM++B,IAEnE5B,EAAgBnqD,UAAUgoD,SAAW,SAAUC,EAAM8D,GACjD,IAAIp4C,EAAQxU,KACZ,OAAO8oD,EAAKptC,IAAI,SAAUmS,GAAO,OAAOrZ,EAAM+4C,OAAO1/B,EAAK++B,MAE9D5B,EAAgBnqD,UAAU2kD,WAAa,SAAU33B,EAAK++B,GAClD,MAAM,IAAI9pD,MAAM,gEAAkE+qB,EAAIy3B,wBAA0B,eAAiBz3B,EAAI03B,WAEzIyF,EAAgBnqD,UAAU0sD,OAAS,SAAU1/B,EAAK++B,GAE9C,OADa5sD,KAAKotD,WAAW9xC,IAAIuS,KAGzB7tB,KAAKmtD,SAAS7xC,IAAIuS,IAAQA,GAAK2b,MAAMxpC,KAAM4sD,IAEvD5B,EAAgBnqD,UAAU+sD,kBAAoB,SAAU//B,EAAK6/B,EAAcd,GAoCvE,IAAIsB,EAAoBluD,KAAKutD,OAAOG,EAAahmC,SAAU0jC,GAAMroC,YAC7DorC,OAAYpxC,EACZ/c,KAAKouD,eAAeV,EAAahmC,YAKjCwmC,GAFAC,EAAYnuD,KAAKquD,qBAEa9yC,IAAI2yC,GAElCluD,KAAKotD,WAAW7xC,IAAImyC,EAAahmC,SAAUymC,IAE/C,IAAIxlC,EAAYulC,EAAkBloC,UAI9BhmB,KAAKmtD,SAAS5xC,IAAImyC,EADlBA,aAAwBxF,GACQ,IAAIF,GAAW0F,EAAa7N,KAAM6N,EAAahmC,SAAUgmC,EAAaz4C,KAAMy4C,EAAa/uC,MAGzF,IAAIunC,GAAawH,EAAa7N,KAAM6N,EAAahmC,SAAUgmC,EAAaz4C,OAG5G,IAAIq5C,EAAStuD,KAAKutD,OAAO1/B,EAAKu9B,GAAMroC,YASpC,OANA/iB,KAAKmtD,SAASoB,OAAOb,GAEjBS,GACAnuD,KAAKwuD,iBAAiBL,GAGnBtB,GAA2BD,EAAMjkC,EAAU9E,YAAYkM,GAAQ,MAAOu+B,KASjFtD,EAAgBnqD,UAAU8sD,iBAAmB,SAAU9/B,GACnD,IAAIrZ,EAAQxU,KACRwpC,EAAQ,SAAUvoB,EAAS4M,GAC3B,OAAQrZ,EAAM24C,SAAS7xC,IAAIuS,IAAQA,GAAK2b,MAAMvoB,IAElD,OAAO4M,EAAI2b,OACPme,YAAa,SAAU95B,GAAO,OAAO,MACrCg4B,WAAY,SAAUh4B,GAAO,OAAO,MACpCo4B,iBAAkB,SAAUp4B,GAAO,OAAO,MAC1Cy6B,kBAAmB,SAAUz6B,GAAO,OAAO,MAC3C83B,sBAAuB,SAAU93B,GAAO,OAAO,MAC/Cy5B,mBAAoB,SAAUz5B,GAAO,OAAO,MAC5C44B,eAAgB,SAAU54B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAIhO,MACxD8mC,gBAAiB,SAAU94B,GAAO,OAAO,MACzCo5B,kBAAmB,SAAUp5B,GAAO,OAAO,MAC3Cs5B,gBAAiB,SAAUt5B,GAAO,OAAO,MACzCk5B,sBAAuB,SAAUl5B,GAAO,OAAO,MAC/Co6B,gBAAiB,SAAUp6B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAInG,WACzDm/B,UAAW,SAAUh5B,GAAO,OAAO,MACnCg6B,eAAgB,SAAUh6B,GAAO,OAAO,MACxCk6B,mBAAoB,SAAUl6B,GAAO,OAAO,MAC5Cs4B,kBAAmB,SAAUt4B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAInG,WAC3D2+B,mBAAoB,SAAUx4B,GAAO,OAAO,MAC5C23B,WAAY,SAAU33B,GAAO,OAAO,MACpCs6B,oBAAqB,SAAUt6B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAInG,WAAamG,GAC1E04B,sBAAuB,SAAU14B,GAC7B,OAAO2b,EAAMxpC,KAAM6tB,EAAInG,WAAamG,MAOhDm9B,EAAgBnqD,UAAUutD,eAAiB,SAAUvgC,GACjD,IAAIrZ,EAAQxU,KACRwpC,EAAQ,SAAUvoB,EAAS4M,GAC3B,OAAOA,IAAQrZ,EAAM24C,SAAS7xC,IAAIuS,IAAQA,GAAK2b,MAAMvoB,IAKzD,OAAO4M,EAAI2b,OACPme,YAAa,SAAU95B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAI45B,OAASje,EAAMxpC,KAAM6tB,EAAI65B,QAC9E7B,WAAY,SAAUh4B,GAAO,OAAO,GACpCo4B,iBAAkB,SAAUp4B,GACxB,OAAO2b,EAAMxpC,KAAM6tB,EAAIlF,YAAc6gB,EAAMxpC,KAAM6tB,EAAIk4B,UACjDvc,EAAMxpC,KAAM6tB,EAAIm4B,WAExBsC,kBAAmB,SAAUz6B,GAAO,OAAO,GAC3C83B,sBAAuB,SAAU93B,GAAO,OAAO,GAC/Cy5B,mBAAoB,SAAUz5B,GAAO,OAZzB,SAAU5M,EAAS4M,GAC/B,OAAOA,EAAIgE,KAAK,SAAUhE,GAAO,OAAO2b,EAAMvoB,EAAS4M,KAWX4gC,CAAUzuD,KAAM6tB,EAAIkzB,cAChE0F,eAAgB,SAAU54B,GAAO,OAAO,GACxC84B,gBAAiB,SAAU94B,GAAO,OAAO,GACzCo5B,kBAAmB,SAAUp5B,GAAO,OAAO,GAC3Cs5B,gBAAiB,SAAUt5B,GAAO,OAAO,GACzCk5B,sBAAuB,SAAUl5B,GAAO,OAAO,GAC/Co6B,gBAAiB,SAAUp6B,GAAO,OAAO,GACzCg5B,UAAW,SAAUh5B,GAAO,OAAO,GACnCg6B,eAAgB,SAAUh6B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAIsG,aACxD4zB,mBAAoB,SAAUl6B,GAAO,OAAO2b,EAAMxpC,KAAM6tB,EAAIsG,aAC5DgyB,kBAAmB,SAAUt4B,GAAO,OAAO,GAC3Cw4B,mBAAoB,SAAUx4B,GAAO,OAAO,GAC5C23B,WAAY,SAAU33B,GAAO,OAAO,GACpCs6B,oBAAqB,SAAUt6B,GAAO,OAAO,GAC7C04B,sBAAuB,SAAU14B,GAAO,OAAO,MAGvDm9B,EAAgBnqD,UAAUwtD,kBAAoB,WAC1C,IAAIK,EAAa1uD,KAAKqtD,oBAEtB,OADArtD,KAAKsrD,eAAiBxc,KAAKC,IAAI/uC,KAAKqtD,kBAAmBrtD,KAAKsrD,gBACrD,IAAI/kC,GAAYkmC,GAAczsD,KAAKuqD,UAAWmE,KAEzD1D,EAAgBnqD,UAAU2tD,iBAAmB,SAAUL,GAEnD,GADAnuD,KAAKqtD,oBACDc,EAAUl5C,MAAQw3C,GAAczsD,KAAKuqD,UAAWvqD,KAAKqtD,mBACrD,MAAM,IAAIvqD,MAAM,aAAeqrD,EAAUl5C,KAAO,2BAGjD+1C,EA/XyB,GAyYhCP,GAAsC,WACtC,SAASA,KAQT,OANAA,EAAqB5pD,UAAUitD,SAAW,SAAU74C,GAChD,OAAIA,IAAS40C,GAAiBC,MAAM70C,KACzB40C,GAAiBC,MAErB,MAEJW,EAT8B,GA0BrCuC,GAAqC,SAAUjsC,GAE/C,SAASisC,EAAoBnN,EAAMlhC,EAAM4iC,GACrC,IAAI/sC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,EAAM,KAAMlhC,IAAS3e,KAGnD,OAFAwU,EAAMmK,KAAOA,EACbnK,EAAM+sC,UAAYA,EACX/sC,EAEX,OAPA9T,EAAUssD,EAAqBjsC,GAOxBisC,EAR6B,CAStC5E,KAUF,SAAW0E,GACPA,EAAeA,EAAuB,OAAI,GAAK,SAC/CA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAAwB,QAAI,GAAK,UAChDA,EAAeA,EAA0B,UAAI,GAAK,YAClDA,EAAeA,EAAiC,iBAAI,GAAK,mBACzDA,EAAeA,EAAoC,oBAAI,GAAK,sBAC5DA,EAAeA,EAA8B,cAAI,GAAK,gBACtDA,EAAeA,EAAiC,iBAAI,GAAK,mBAR7D,CASGA,KAAmBA,QACtB,IAAI6B,IACA7B,GAAe8B,OAAQ9B,GAAe+B,UAAW/B,GAAegC,QAAShC,GAAeiC,UACxFjC,GAAekC,iBAAkBlC,GAAemC,oBAAqBnC,GAAeoC,cACpFpC,GAAeqC,kBA2CfC,GAAO,EACPC,GAAO,EACPC,GAAM,GACNC,GAAQ,GACRC,GAAM,GACNC,GAAM,GACNC,GAAS,GAETC,GAAM,GAENC,GAAK,GAGLC,GAAM,GAINC,GAAQ,GAERC,GAAS,GAETC,GAAS,GAETC,GAAa,GAEbC,GAAM,GACNC,GAAM,GAENC,GAAK,GACLC,GAAK,GACLC,GAAK,GAELC,GAAK,GAELC,GAAK,GAKLC,GAAK,GACLC,GAAK,GAELC,GAAK,IACLC,GAAK,IACLC,GAAK,IACLC,GAAK,IAELC,GAAK,IAELC,GAAK,IACLC,GAAU,IAGVC,GAAQ,IACRC,GAAM,GACV,SAASC,GAAaC,GAClB,OAAQA,GAAQhC,IAAQgC,GAAQ3B,IAAY2B,GAAQH,GAExD,SAASI,GAAQD,GACb,OAAOjB,IAAMiB,GAAQA,GAAQhB,GAEjC,SAASkB,GAAcF,GACnB,OAAOA,GAAQX,IAAMW,GAAQL,IAAMK,GAAQf,IAAMe,GAAQb;;;;;;;;AAa7D,IAuGWgB,GAvGPC,GAA+B,WAC/B,SAASA,EAAczoB,EAAM0oB,EAAQxoB,EAAM5yB,GACvCtW,KAAKgpC,KAAOA,EACZhpC,KAAK0xD,OAASA,EACd1xD,KAAKkpC,KAAOA,EACZlpC,KAAKsW,IAAMA,EA6Ef,OA3EAm7C,EAAc5wD,UAAU4Y,SAAW,WAC/B,OAAsB,MAAfzZ,KAAK0xD,OAAiB1xD,KAAKgpC,KAAKxH,IAAM,IAAMxhC,KAAKkpC,KAAO,IAAMlpC,KAAKsW,IAAMtW,KAAKgpC,KAAKxH,KAE9FiwB,EAAc5wD,UAAU8wD,OAAS,SAAUjrD,GAMvC,IALA,IAAImP,EAAS7V,KAAKgpC,KAAKoJ,QACnBvvB,EAAMhN,EAAOtU,OACbmwD,EAAS1xD,KAAK0xD,OACdxoB,EAAOlpC,KAAKkpC,KACZ5yB,EAAMtW,KAAKsW,IACRo7C,EAAS,GAAKhrD,EAAQ,GAIzB,GAFAA,KACIkrD,EAAK/7C,EAAO6c,aAFhBg/B,KAGUpC,GAAK,CACXpmB,IACA,IAAI2oB,EAAYh8C,EAAOi8C,OAAO,EAAGJ,EAAS,GAAGK,YAAYxvC,OAAOqQ,aAAa08B,KAC7Eh5C,EAAMu7C,EAAY,EAAIH,EAASG,EAAYH,OAG3Cp7C,IAGR,KAAOo7C,EAAS7uC,GAAOnc,EAAQ,GAAG,CAC9B,IAAIkrD,EAAK/7C,EAAO6c,WAAWg/B,GAC3BA,IACAhrD,IACIkrD,GAAMtC,IACNpmB,IACA5yB,EAAM,GAGNA,IAGR,OAAO,IAAIm7C,EAAczxD,KAAKgpC,KAAM0oB,EAAQxoB,EAAM5yB,IAItDm7C,EAAc5wD,UAAUmxD,WAAa,SAAUC,EAAUC,GACrD,IAAI9f,EAAUpyC,KAAKgpC,KAAKoJ,QACpB+f,EAAcnyD,KAAK0xD,OACvB,GAAmB,MAAfS,EAAqB,CACjBA,EAAc/f,EAAQ7wC,OAAS,IAC/B4wD,EAAc/f,EAAQ7wC,OAAS,GAKnC,IAHA,IAAI6wD,EAAYD,EACZE,EAAW,EACXC,EAAW,EACRD,EAAWJ,GAAYE,EAAc,IAExCE,IAC4B,MAAxBjgB,IAFJ+f,MAGUG,GAAYJ,KAO1B,IAFAG,EAAW,EACXC,EAAW,EACJD,EAAWJ,GAAYG,EAAYhgB,EAAQ7wC,OAAS,IAEvD8wD,IAC0B,MAAtBjgB,IAFJggB,MAGUE,GAAYJ,KAK1B,OACIK,OAAQngB,EAAQpf,UAAUm/B,EAAanyD,KAAK0xD,QAC5Cc,MAAOpgB,EAAQpf,UAAUhzB,KAAK0xD,OAAQU,EAAY,IAG1D,OAAO,MAEJX,EAlFuB,GAoF9BgB,GACA,SAASA,GAAgBrgB,EAAS5Q,GAC9BxhC,KAAKoyC,QAAUA,EACfpyC,KAAKwhC,IAAMA,GAIfkxB,GAAiC,WACjC,SAASA,EAAgB3pB,EAAOM,EAAKspB,QACjB,IAAZA,IAAsBA,EAAU,MACpC3yD,KAAK+oC,MAAQA,EACb/oC,KAAKqpC,IAAMA,EACXrpC,KAAK2yD,QAAUA,EAKnB,OAHAD,EAAgB7xD,UAAU4Y,SAAW,WACjC,OAAOzZ,KAAK+oC,MAAMC,KAAKoJ,QAAQpf,UAAUhzB,KAAK+oC,MAAM2oB,OAAQ1xD,KAAKqpC,IAAIqoB,SAElEgB,EAVyB,IAYzBlB,GAGR/xD,EAAQ+xD,kBAAoB/xD,EAAQ+xD,qBAFnBA,GAAyB,QAAI,GAAK,UAClDA,GAAgBA,GAAuB,MAAI,GAAK,QAEpD,IAAIoB,GAA4B,WAC5B,SAASA,EAAW/S,EAAM7tB,EAAK6gC,QACb,IAAVA,IAAoBA,EAAQpzD,EAAQ+xD,gBAAgBsB,OACxD9yD,KAAK6/C,KAAOA,EACZ7/C,KAAKgyB,IAAMA,EACXhyB,KAAK6yD,MAAQA,EAWjB,OATAD,EAAW/xD,UAAUkyD,kBAAoB,WACrC,IAAIz9B,EAAMt1B,KAAK6/C,KAAK9W,MAAMipB,WAAW,IAAK,GAC1C,OAAO18B,EAAMt1B,KAAKgyB,IAAM,MAASsD,EAAIi9B,OAAS,IAAM9yD,EAAQ+xD,gBAAgBxxD,KAAK6yD,OAAS,OAASv9B,EAAIk9B,MAAQ,KAC3GxyD,KAAKgyB,KAEb4gC,EAAW/xD,UAAU4Y,SAAW,WAC5B,IAAIk5C,EAAU3yD,KAAK6/C,KAAK8S,QAAU,KAAO3yD,KAAK6/C,KAAK8S,QAAU,GAC7D,OAAO3yD,KAAK+yD,oBAAsB,KAAO/yD,KAAK6/C,KAAK9W,MAAQ4pB,GAExDC,EAhBoB,GAkB/B,SAASI,GAAe39B,EAAMrS,GAC1B,IAAI+Y,EAAYZ,GAAoBnY,GAChCiwC,EAA8B,MAAbl3B,EAAoB,MAAQ1G,EAAO,IAAM2F,GAAehY,GAAQ,OAAS+Y,EAC1F,MAAQ1G,EAAO,IAAM2F,GAAehY,GACpCkwC,EAAa,IAAIT,GAAgB,GAAIQ,GACzC,OAAO,IAAIP,GAAgB,IAAIjB,GAAcyB,GAAa,GAAI,GAAI,GAAI,IAAIzB,GAAcyB,GAAa,GAAI,GAAI;;;;;;;OAsIjH,IAAIC,GAA2B,WAC3B,SAASA,IACLnzD,KAAKozD,eAAgB,EAsUzB,OA5TAD,EAAUtyD,UAAUwyD,YAAc,SAAUC,EAASl7C,EAAUm7C,QACtC,IAAjBA,IAA2BA,EAAe,IAC9C,IAAIC,EA0XZ,SAASC,EAAwBh+C,GAC7B,OAAOA,EAAM4C,MAAMq7C,QA3XQD,CAAwBH,GAI/C,OAHAA,EAqXR,SAASK,EAAcl+C,GACnB,OAAOA,EAAMwX,QAAQ2mC,GAAY,IAtXnBD,CAAcL,GACxBA,EAAUtzD,KAAK6zD,kBAAkBP,GAE1B9wD,GADaxC,KAAK8zD,cAAcR,EAASl7C,EAAUm7C,IACzBC,GAAkBl6C,KAAK,OAE5D65C,EAAUtyD,UAAUgzD,kBAAoB,SAAUP,GAE9C,OADAA,EAAUtzD,KAAK+zD,mCAAmCT,GAC3CtzD,KAAKg0D,8BAA8BV,IAgB9CH,EAAUtyD,UAAUkzD,mCAAqC,SAAUT,GAE/D,OAAOA,EAAQrmC,QAAQgnC,GAA2B,WAE9C,IADA,IAAIryD,KACK6d,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpC7d,EAAE6d,GAAMne,UAAUme,GAEtB,OAAO7d,EAAE,GAAK,OAkBtBuxD,EAAUtyD,UAAUmzD,8BAAgC,SAAUV,GAE1D,OAAOA,EAAQrmC,QAAQinC,GAAmB,WAEtC,IADA,IAAItyD,KACK6d,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpC7d,EAAE6d,GAAMne,UAAUme,GAEtB,IAAI00C,EAAOvyD,EAAE,GAAGqrB,QAAQrrB,EAAE,GAAI,IAAIqrB,QAAQrrB,EAAE,GAAI,IAChD,OAAOA,EAAE,GAAKuyD,KAWtBhB,EAAUtyD,UAAUizD,cAAgB,SAAUR,EAASc,EAAeb,GAClE,IAAIc,EAAgBr0D,KAAKs0D,iCAAiChB,GAU1D,OARAA,EAAUtzD,KAAKu0D,6BAA6BjB,GAC5CA,EAAUtzD,KAAKw0D,kBAAkBlB,GACjCA,EAAUtzD,KAAKy0D,yBAAyBnB,GACxCA,EAAUtzD,KAAK00D,2BAA2BpB,GACtCc,IACAd,EAAUtzD,KAAK20D,gBAAgBrB,EAASc,EAAeb,KAE3DD,EAAUA,EAAU,KAAOe,GACZ7jC,QAiBnB2iC,EAAUtyD,UAAUyzD,iCAAmC,SAAUhB,GAE7D,IACI1xD,EADAO,EAAI,GAGR,IADAyyD,GAA0B/7C,UAAY,EACmB,QAAjDjX,EAAIgzD,GAA0B97C,KAAKw6C,KAEvCnxD,GADWP,EAAE,GAAGqrB,QAAQrrB,EAAE,GAAI,IAAIqrB,QAAQrrB,EAAE,GAAIA,EAAE,IACtC,OAEhB,OAAOO,GASXgxD,EAAUtyD,UAAU2zD,kBAAoB,SAAUlB,GAC9C,OAAOtzD,KAAK60D,kBAAkBvB,EAASwB,GAAiB90D,KAAK+0D,yBAiBjE5B,EAAUtyD,UAAU4zD,yBAA2B,SAAUnB,GACrD,OAAOtzD,KAAK60D,kBAAkBvB,EAAS0B,GAAwBh1D,KAAKi1D,gCAExE9B,EAAUtyD,UAAUg0D,kBAAoB,SAAUvB,EAAS4B,EAAQC,GAE/D,OAAO7B,EAAQrmC,QAAQioC,EAAQ,WAE3B,IADA,IAAItzD,KACK6d,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpC7d,EAAE6d,GAAMne,UAAUme,GAEtB,GAAI7d,EAAE,GAAI,CAGN,IAFA,IAAIyoB,EAAQzoB,EAAE,GAAGyxB,MAAM,KACnBlxB,KACKf,EAAI,EAAGA,EAAIipB,EAAM9oB,OAAQH,IAAK,CACnC,IAAIZ,EAAI6pB,EAAMjpB,GAAGovB,OACjB,IAAKhwB,EACD,MACJ2B,EAAEG,KAAK6yD,EAAaC,GAA2B50D,EAAGoB,EAAE,KAExD,OAAOO,EAAEmX,KAAK,KAGd,OAAO87C,GAA4BxzD,EAAE,MAIjDuxD,EAAUtyD,UAAUo0D,8BAAgC,SAAUj3B,EAAM0gB,EAAM2W,GACtE,OAAI3W,EAAK77C,QAAQyyD,KAAkB,EACxBt1D,KAAK+0D,uBAAuB/2B,EAAM0gB,EAAM2W,GAGxCr3B,EAAO0gB,EAAO2W,EAAS,KAAO3W,EAAO,IAAM1gB,EAAOq3B,GAGjElC,EAAUtyD,UAAUk0D,uBAAyB,SAAU/2B,EAAM0gB,EAAM2W,GAC/D,OAAOr3B,EAAO0gB,EAAKzxB,QAAQqoC,GAAe,IAAMD,GAMpDlC,EAAUtyD,UAAU6zD,2BAA6B,SAAUpB,GACvD,OAAOiC,GAAsBp0B,OAAO,SAAU3nB,EAAQg8C,GAAW,OAAOh8C,EAAOyT,QAAQuoC,EAAS,MAASlC,IAG7GH,EAAUtyD,UAAU8zD,gBAAkB,SAAUrB,EAASc,EAAeb,GACpE,IAAI/+C,EAAQxU,KACZ,OAsNR,SAASy1D,EAAahgD,EAAOigD,GACzB,IAAIC,EA2BR,SAASC,EAAangD,GAMlB,IALA,IAAIogD,EAAapgD,EAAM4d,MAAMyiC,IACzBC,KACAC,KACAC,EAAe,EACfC,KACK7V,EAAY,EAAGA,EAAYwV,EAAWt0D,OAAQ8+C,IAAa,CAChE,IAAI3B,EAAOmX,EAAWxV,GAClB3B,GAAQyX,IACRF,IAEAA,EAAe,EACfC,EAAkB5zD,KAAKo8C,IAGnBwX,EAAkB30D,OAAS,IAC3By0D,EAAc1zD,KAAK4zD,EAAkB58C,KAAK,KAC1Cy8C,EAAYzzD,KAAK8zD,IACjBF,MAEJH,EAAYzzD,KAAKo8C,IAEjBA,GAAQ2X,IACRJ,IAOR,OAJIC,EAAkB30D,OAAS,IAC3By0D,EAAc1zD,KAAK4zD,EAAkB58C,KAAK,KAC1Cy8C,EAAYzzD,KAAK8zD,KAEd,IAAIE,GAAwBP,EAAYz8C,KAAK,IAAK08C;;;;;;;OAzD5BJ,CAAangD,GACtC8gD,EAAiB,EACrB,OAAOZ,EAAuBa,cAAcvpC,QAAQwpC,GAAS,WAEzD,IADA,IAAI70D,KACK6d,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpC7d,EAAE6d,GAAMne,UAAUme,GAEtB,IAAIrH,EAAWxW,EAAE,GACbwwC,EAAU,GACVijB,EAASzzD,EAAE,GACX80D,EAAgB,GAChBrB,GAAUA,EAAOthB,WAAW,IAAMqiB,MAClChkB,EAAUujB,EAAuBgB,OAAOJ,KACxClB,EAASA,EAAOriC,UAAUojC,GAAkB70D,OAAS,GACrDm1D,EAAgB,KAEpB,IAAIvC,EAAOuB,EAAa,IAAIkB,GAAQx+C,EAAUg6B,IAC9C,MAAO,GAAKxwC,EAAE,GAAKuyD,EAAK/7C,SAAWxW,EAAE,GAAK80D,EAAgBvC,EAAK/hB,QAAUijB,IAxOlEI,CAAanC,EAAS,SAAUa,GACnC,IAAI/7C,EAAW+7C,EAAK/7C,SAChBg6B,EAAU+hB,EAAK/hB,QASnB,MARwB,KAApB+hB,EAAK/7C,SAAS,GACdA,EACI5D,EAAMqiD,eAAe1C,EAAK/7C,SAAUg8C,EAAeb,EAAc/+C,EAAM4+C,gBAEtEe,EAAK/7C,SAAS27B,WAAW,WAAaogB,EAAK/7C,SAAS27B,WAAW,cACpEogB,EAAK/7C,SAAS27B,WAAW,UAAYogB,EAAK/7C,SAAS27B,WAAW,gBAC9D3B,EAAU59B,EAAMmgD,gBAAgBR,EAAK/hB,QAASgiB,EAAeb,IAE1D,IAAIqD,GAAQx+C,EAAUg6B,MAGrC+gB,EAAUtyD,UAAUg2D,eAAiB,SAAUz+C,EAAUg8C,EAAeb,EAAcuD,GAClF,IAAItiD,EAAQxU,KACZ,OAAOoY,EAASib,MAAM,KACjB3X,IAAI,SAAUgjC,GAAQ,OAAOA,EAAKluB,OAAO6C,MAAM0jC,MAC/Cr7C,IAAI,SAAUs7C,GACf,IAAItjD,EAAKxR,EAAO80D,GAAYC,EAAcvjD,EAAG,GAAIwjD,EAAaxjD,EAAG3Q,MAAM,GAWvE,OAAOP,GAVU,SAAUy0D,GACvB,OAAIziD,EAAM2iD,sBAAsBF,EAAa7C,GAClC0C,EACHtiD,EAAM4iD,0BAA0BH,EAAa7C,EAAeb,GAC5D/+C,EAAM6iD,oBAAoBJ,EAAa7C,EAAeb,GAGnD0D,EAGEK,CAAWL,IAAeC,GAAY59C,KAAK,OAE3DA,KAAK,OAEd65C,EAAUtyD,UAAUs2D,sBAAwB,SAAU/+C,EAAUg8C,GAE5D,OADSp0D,KAAKu3D,kBAAkBnD,GACrBpf,KAAK58B,IAEpB+6C,EAAUtyD,UAAU02D,kBAAoB,SAAUnD,GAI9C,OADAA,EAAgBA,EAAcnnC,QAFpB,MAEiC,OAAOA,QADxC,MACqD,OACxD,IAAIpV,OAAO,KAAOu8C,EAAgB,IAAMoD,GAAmB,MAEtErE,EAAUtyD,UAAUw2D,oBAAsB,SAAUj/C,EAAUg8C,EAAeb,GAEzE,OAAOvzD,KAAKy3D,0BAA0Br/C,EAAUg8C,EAAeb,IAGnEJ,EAAUtyD,UAAU42D,0BAA4B,SAAUr/C,EAAUg8C,EAAeb,GAG/E,GADAmE,GAAgB7+C,UAAY,EACxB6+C,GAAgB1iB,KAAK58B,GAAW,CAChC,IAAIu/C,EAAc33D,KAAKozD,cAAgB,IAAMG,EAAe,IAAMa,EAClE,OAAOh8C,EACF6U,QAAQ2qC,GAA6B,SAAUC,EAAKz/C,GACrD,OAAOA,EAAS6U,QAAQ,kBAAmB,SAAU6qC,EAAGvF,EAAQwF,EAAOvF,GACnE,OAAOD,EAASoF,EAAcI,EAAQvF,MAGzCvlC,QAAQyqC,GAAiBC,EAAc,KAEhD,OAAOvD,EAAgB,IAAMh8C,GAIjC+6C,EAAUtyD,UAAUu2D,0BAA4B,SAAUh/C,EAAUg8C,EAAeb,GAmD/E,IAlDA,IAkCI/6C,EAlCAhE,EAAQxU,KASRg4D,EAAW,KAPf5D,EAAgBA,EAAcnnC,QADnB,mBACiC,SAAU6qC,GAElD,IADA,IAAIztC,KACK5K,EAAK,EAAGA,EAAKne,UAAUC,OAAQke,IACpC4K,EAAM5K,EAAK,GAAKne,UAAUme,GAE9B,OAAO4K,EAAM,MAEoB,IACjC4tC,EAAqB,SAAUz3D,GAC/B,IAAI03D,EAAU13D,EAAEgwB,OAChB,IAAK0nC,EACD,MAAO,GAEX,GAAI13D,EAAEqC,QAAQuyD,KAA8B,EACxC8C,EAAU1jD,EAAMijD,0BAA0Bj3D,EAAG4zD,EAAeb,OAE3D,CAED,IAAIryD,EAAIV,EAAEysB,QAAQyqC,GAAiB,IACnC,GAAIx2D,EAAEK,OAAS,EAAG,CACd,IAAI08B,EAAU/8B,EAAEmX,MAAM,mBAClB4lB,IACAi6B,EAAUj6B,EAAQ,GAAK+5B,EAAW/5B,EAAQ,GAAKA,EAAQ,KAInE,OAAOi6B,GAEPC,EAAc,IAAIC,GAAahgD,GAE/BigD,EAAiB,GACjBC,EAAa,EAEbC,EAAM,sBAcNC,KAlBJpgD,EAAW+/C,EAAY/lB,WAgBAvvC,QAAQuyD,KAA8B,GAGvB,QAA9B58C,EAAM+/C,EAAIz/C,KAAKV,KAAqB,CACxC,IAAI4oC,EAAYxoC,EAAI,GAChBigD,EAASrgD,EAASrV,MAAMu1D,EAAY9/C,EAAI4K,OAAOoN,OAGnD6nC,KAFAG,EAAcA,GAAeC,EAAO51D,QAAQuyD,KAA8B,GAC3C6C,EAAmBQ,GAAUA,GAC7B,IAAMzX,EAAY,IACjDsX,EAAaC,EAAI1/C,UAErB,IAAI6lC,EAAOtmC,EAAS4a,UAAUslC,GAI9B,OAFAD,IADAG,EAAcA,GAAe9Z,EAAK77C,QAAQuyD,KAA8B,GACxC6C,EAAmBvZ,GAAQA,EAEpDyZ,EAAYO,QAAQL,IAE/BlF,EAAUtyD,UAAU0zD,6BAA+B,SAAUn8C,GACzD,OAAOA,EAAS6U,QAAQ0rC,GAAqBC,IACxC3rC,QAAQ4rC,GAAcvD,KAExBnC,EAxUmB,GA0U1BiF,GAA8B,WAC9B,SAASA,EAAahgD,GAClB,IAAI5D,EAAQxU,KACZA,KAAK0oC,gBACL1oC,KAAKojB,MAAQ,EAGbhL,EAAWA,EAAS6U,QAAQ,gBAAiB,SAAU6qC,EAAGgB,GACtD,IAAIC,EAAY,QAAUvkD,EAAM4O,MAAQ,KAGxC,OAFA5O,EAAMk0B,aAAapmC,KAAKw2D,GACxBtkD,EAAM4O,QACC21C,IAIX/4D,KAAKg5D,SAAW5gD,EAAS6U,QAAQ,4BAA6B,SAAU6qC,EAAGmB,EAAQ3iB,GAC/E,IAAIyiB,EAAY,QAAUvkD,EAAM4O,MAAQ,KAGxC,OAFA5O,EAAMk0B,aAAapmC,KAAKg0C,GACxB9hC,EAAM4O,QACC61C,EAASF,IAQxB,OALAX,EAAav3D,UAAU63D,QAAU,SAAUtmB,GACvC,IAAI59B,EAAQxU,KACZ,OAAOoyC,EAAQnlB,QAAQ,gBAAiB,SAAU2d,EAAIxnB,GAAS,OAAO5O,EAAMk0B,cAActlB,MAE9Fg1C,EAAav3D,UAAUuxC,QAAU,WAAc,OAAOpyC,KAAKg5D,UACpDZ,EA3BsB,GA6B7BnE,GAA4B,4EAC5BC,GAAoB,kEACpBU,GAA4B,2EAC5BU,GAAgB,iBAEhBsD,GAAuB,oBACvBM,GAAe,kDAGfpE,GAAkB,IAAIj9C,OAAO,IAAMy9C,GAAgB4D,GAAc,OACjElE,GAAyB,IAAIn9C,OAAO,IAAM+gD,GAAuBM,GAAc,OAC/E9D,GAA4BE,GAAgB,iBAC5CsC,GAA8B,uCAC9BrC,IACA,YACA,aAEA,mBACA,eAKAwB,GAAuB,sCACvBS,GAAoB,6BACpBE,GAAkB,oBAClBmB,GAAe,WACfF,GAAsB,mBACtB/E,GAAa,uBAIbF,GAAqB,+CAIrB+C,GAAU,wDACVX,GAAW,UACXO,GAAa,IACbF,GAAc,IACdC,GAAoB,UACpBQ,GACA,SAASA,GAAQx+C,EAAUg6B,GACvBpyC,KAAKoY,SAAWA,EAChBpY,KAAKoyC,QAAUA,GAyBnBkkB,GACA,SAASA,GAAwBE,EAAeG,GAC5C32D,KAAKw2D,cAAgBA,EACrBx2D,KAAK22D,OAASA,GA6ClBwC,GAAY,iBACZC,GAAe,oBACfC,GACA,SAASA,GAAwBpkD,EAAM8mB,EAAWu9B,GAC9Ct5D,KAAKiV,KAAOA,EACZjV,KAAK+7B,UAAYA,EACjB/7B,KAAKs5D,SAAWA,GAIpBC,GACA,SAASA,GAAmBzgB,EAAW0gB,EAAWv4B,EAAcw4B,EAAWrkD,GACvEpV,KAAK84C,UAAYA,EACjB94C,KAAKw5D,UAAYA,EACjBx5D,KAAKihC,aAAeA,EACpBjhC,KAAKy5D,UAAYA,EACjBz5D,KAAKoV,KAAOA,GAIhBskD,GAA+B,WAC/B,SAASA,EAAcC,GACnB35D,KAAK25D,aAAeA,EACpB35D,KAAK45D,WAAa,IAAIzG,GAyC1B,OAvCAuG,EAAc74D,UAAUg5D,iBAAmB,SAAU/gB,EAAWghB,GAC5D,IAAI59B,EAAW49B,EAAK59B,SACpB,OAAOl8B,KAAK+5D,eAAejhB,EAAWghB,EAAM,IAAIl+B,IAC5CC,OAAQK,EAASL,OACjBC,UAAWI,EAASJ,UACpBC,UAAWZ,GAAoB2+B,EAAK92C,QACpChjB,KAAKg6D,eAAeF,IAAO,IAEnCJ,EAAc74D,UAAUo5D,cAAgB,SAAUnhB,EAAWghB,EAAMI,EAAYC,GAE3E,YADa,IAATA,IAAmBA,EAAOn6D,KAAKg6D,eAAeF,IAC3C95D,KAAK+5D,eAAejhB,EAAWghB,EAAMI,EAAYC,GAAM,IAElET,EAAc74D,UAAUm5D,eAAiB,SAAUF,GAC/C,OAAOA,EAAK59B,SAASS,gBAAkBjlB,EAAkB0iD,UAE7DV,EAAc74D,UAAUk5D,eAAiB,SAAUjhB,EAAWghB,EAAMI,EAAYC,EAAME,GAClF,IAAI7lD,EAAQxU,KACRs6D,EAAmBJ,EAAWr+B,OAAOngB,IAAI,SAAU6+C,GAAc,OAAOxqC,GAAQvb,EAAMgmD,cAAcD,EAAYJ,MAChHl5B,KACJi5B,EAAWp+B,UAAUpnB,QAAQ,SAAU+lD,GACnC,IAAIC,EAAYJ,EAAiB/4D,OAEjC+4D,EAAiBh4D,KAAK,MACtB2+B,EAAa3+B,KAAK,IAAI+2D,GAAwBsB,GAAiB,MAAOF,EAAU,SAAUz4D,GAAS,OAAOs4D,EAAiBI,GAAa5hB,EAAUzpB,WAAWrtB,QAIjK,IAAIw3D,EAAYmB,GAAiBN,EAAwBP,EAAO,MAC5DjvC,EAAOuE,GAASoqC,GACfj+C,IAAImU,GAAW4qC,EAAkB,IAAI/4C,GAAUM,IAAexB,GAAau6C,UAC3ExzC,WAAW,KAAMizC,GAAyB56D,EAAQ8nB,aAAaC,QAChE/nB,EAAQ8nB,aAAaC,MAAO/nB,EAAQ8nB,aAAagwB,WAGrD,OADAuB,EAAU1vB,WAAW9mB,KAAKuoB,GACnB,IAAI0uC,GAAmBzgB,EAAW0gB,EAAWv4B,EAAck5B,EAAMD,IAE5ER,EAAc74D,UAAU25D,cAAgB,SAAUpjD,EAAO+iD,GACrD,OAAOA,EAAOn6D,KAAK45D,WAAWvG,YAAYj8C,EAAOgiD,GAAcD,IAAa/hD,GAEzEsiD,EA5CuB,GA8ClC,SAASiB,GAAiBE,GACtB,IAAIrhD,EAAS,SAIb,OAHIqhD,IACArhD,GAAU,IAAMwhB,GAAe6/B,EAAU73C,OAEtCxJ;;;;;;;OAUX,IAAIshD,GAAwB,WACxB,SAASvxB,EAAKvnC,EAAOihB,GACjBjjB,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAGtB,OADAsmB,EAAK1oC,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQwoB,UAAUzpC,OAC9DupC,EANgB,GAQvBwxB,GAA2B,WAC3B,SAASA,EAAU/4D,EAAOihB,EAAYyiB,GAClC1lC,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAClBjjB,KAAK0lC,KAAOA,EAGhB,OADAq1B,EAAUl6D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQ+5C,eAAeh7D,OACxE+6D,EAPmB,GAS1BE,GAA+B,WAC/B,SAASA,EAAchmD,EAAMjT,EAAOihB,EAAYi4C,EAAWx1B,GACvD1lC,KAAKiV,KAAOA,EACZjV,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAClBjjB,KAAKk7D,UAAYA,EACjBl7D,KAAK0lC,KAAOA,EAGhB,OADAu1B,EAAcp6D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQk6C,mBAAmBn7D,OAChFi7D,EATuB,GAW9BG,GAAgC,WAChC,SAASA,EAAenmD,EAAM+N,EAAM2mC,EAAiB3nD,EAAO4nD,EAAM3mC,EAAYyiB,GAC1E1lC,KAAKiV,KAAOA,EACZjV,KAAKgjB,KAAOA,EACZhjB,KAAK2pD,gBAAkBA,EACvB3pD,KAAKgC,MAAQA,EACbhC,KAAK4pD,KAAOA,EACZ5pD,KAAKijB,WAAaA,EAClBjjB,KAAK0lC,KAAOA,EAMhB,OAJA01B,EAAeC,yBAA2B,SAAU5sD,EAAMi3B,GACtD,OAAO,IAAI01B,EAAe3sD,EAAKwG,KAAMxG,EAAKuU,KAAMvU,EAAKk7C,gBAAiBl7C,EAAKzM,MAAOyM,EAAKm7C,KAAMn7C,EAAKwU,WAAYyiB,IAElH01B,EAAev6D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQq6C,oBAAoBt7D,OAClFo7D,EAdwB,GAgB/BG,GAA4B,WAC5B,SAASA,EAAWtmD,EAAM+N,EAAMi+B,EAASoH,EAAQxO,EAAO52B,GACpDjjB,KAAKiV,KAAOA,EACZjV,KAAKgjB,KAAOA,EACZhjB,KAAKihD,QAAUA,EACfjhD,KAAKqoD,OAASA,EACdroD,KAAK65C,MAAQA,EACb75C,KAAKijB,WAAaA,EAQtB,OANAs4C,EAAWC,gBAAkB,SAAU1R,GAGnC,OAAO,IAAIyR,EAAWzR,EAAM70C,KAAM60C,EAAM9mC,KAAM8mC,EAAM7I,QAFxB,IAAf6I,EAAM9mC,KAA2B8mC,EAAMN,cAAgB,KACzC,IAAfM,EAAM9mC,KAA6B8mC,EAAMN,cAAgB,KACOM,EAAM7mC,aAEtFs4C,EAAW16D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQw6C,gBAAgBz7D,OAC1Eu7D,EAfoB,GAiB3BG,GAAyB,WACzB,SAASA,EAAQzmD,EAAM6hC,EAAY7Z,EAAQC,EAASyM,EAAUgyB,EAAY14C,EAAY24C,EAAiBC,EAAen2B,GAClH1lC,KAAKiV,KAAOA,EACZjV,KAAK82C,WAAaA,EAClB92C,KAAKi9B,OAASA,EACdj9B,KAAKk9B,QAAUA,EACfl9B,KAAK2pC,SAAWA,EAChB3pC,KAAK27D,WAAaA,EAClB37D,KAAKijB,WAAaA,EAClBjjB,KAAK47D,gBAAkBA,EACvB57D,KAAK67D,cAAgBA,EACrB77D,KAAK0lC,KAAOA,EAGhB,OADAg2B,EAAQ76D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQ66C,aAAa97D,OACpE07D,EAdiB,GAgBxBK,GAA0B,WAC1B,SAASA,EAAS94D,EAAS6zC,EAAY7Z,EAAQC,EAASyM,EAAUgyB,EAAYK,EAAW/4C,EAAY24C,EAAiBC,EAAen2B,GACjI1lC,KAAKiD,QAAUA,EACfjD,KAAK82C,WAAaA,EAClB92C,KAAKi9B,OAASA,EACdj9B,KAAKk9B,QAAUA,EACfl9B,KAAK2pC,SAAWA,EAChB3pC,KAAK27D,WAAaA,EAClB37D,KAAKg8D,UAAYA,EACjBh8D,KAAKijB,WAAaA,EAClBjjB,KAAK47D,gBAAkBA,EACvB57D,KAAK67D,cAAgBA,EACrB77D,KAAK0lC,KAAOA,EAGhB,OADAq2B,EAASl7D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQg7C,cAAcj8D,OACtE+7D,EAfkB,GAiBzBG,GAAyB,WACzB,SAASA,EAAQ9jD,EAAU0+B,EAAY7zB,EAAYyiB,GAC/C1lC,KAAKoY,SAAWA,EAChBpY,KAAK82C,WAAaA,EAClB92C,KAAKijB,WAAaA,EAClBjjB,KAAK0lC,KAAOA,EAGhB,OADAw2B,EAAQr7D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQk7C,aAAan8D,OACpEk8D,EARiB,GAUxBE,GAA0B,WAC1B,SAASA,EAASnnD,EAAMjT,EAAOihB,GAC3BjjB,KAAKiV,KAAOA,EACZjV,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAGtB,OADAm5C,EAASv7D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQo7C,cAAcr8D,OACtEo8D,EAPkB,GASzBE,GAA2B,WAC3B,SAASA,EAAUrnD,EAAMjT,EAAOihB,GAC5BjjB,KAAKiV,KAAOA,EACZjV,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAGtB,OADAq5C,EAAUz7D,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQs7C,eAAev8D,OACxEs8D,EAPmB,GAS1BE,GAAuB,WACvB,SAAS3yB,EAAI8X,EAAMjZ,EAAczlB,EAAYyiB,GACzC1lC,KAAK2hD,KAAOA,EACZ3hD,KAAK0oC,aAAeA,EACpB1oC,KAAKijB,WAAaA,EAClBjjB,KAAK0lC,KAAOA,EAGhB,OADAmE,EAAIhpC,UAAU2oC,MAAQ,SAAUvoB,GAAW,OAAOA,EAAQ8oB,SAAS/pC,OAC5D6pC,EARe,GAU1B,SAASgf,GAAS5nC,EAASwnB,GACvB,IAAI7b,EAAKlZ,EAAI+oD,EAAK9oD,EACd6F,KACJ,GAAIyH,EAAQuoB,MACR,IACI,IAAK,IAAIkzB,EAAUh7D,EAAS+mC,GAAQk0B,EAAYD,EAAQ36D,QAAS46D,EAAU16D,KAAM06D,EAAYD,EAAQ36D,OACjG,IACI66D,EAAU37C,EAAQuoB,MADlBviB,EAAO01C,EAAU36D,QACgBilB,EAAKuiB,MAAMvoB,GAGxD,MAAOiM,GAASN,GAAQrqB,MAAO2qB,GAC/B,QACI,IACQyvC,IAAcA,EAAU16D,OAASyR,EAAKgpD,EAAQvvC,SAASzZ,EAAGlS,KAAKk7D,GAEvE,QAAU,GAAI9vC,EAAK,MAAMA,EAAIrqB,YAIjC,IACI,IAAK,IAAIs6D,EAAUn7D,EAAS+mC,GAAQq0B,EAAYD,EAAQ96D,QAAS+6D,EAAU76D,KAAM66D,EAAYD,EAAQ96D,OAAQ,CACzG,IAAIklB,GACA21C,GADA31C,EAAO61C,EAAU96D,OACFwnC,MAAMvoB,KAErBzH,EAAOlX,KAAKs6D,IAIxB,MAAOG,GAASN,GAAQl6D,MAAOw6D,GAC/B,QACI,IACQD,IAAcA,EAAU76D,OAAS0R,EAAKkpD,EAAQ1vC,SAASxZ,EAAGnS,KAAKq7D,GAEvE,QAAU,GAAIJ,EAAK,MAAMA,EAAIl6D,OAGrC,OAAOiX;;;;;;;OAqFX,SAASwjD,GAAuBh7D,GAC5B,IAAIi7D,EAAKj7D,EAAM0wB,WAAW,GAE1B,GAAIuqC,GADKj7D,EAAM0wB,WAAW1wB,EAAMT,OAAS,KAClB,IAAN07D,GAAoC,IAANA,GAA6B,CACxE,IAAIC,EAAYl7D,EAAMgxB,UAAU,EAAGhxB,EAAMT,OAAS,IAGlB,GAA5B27D,EAAUr6D,QAAQ,OAA0C,GAA3Bq6D,EAAUr6D,QAAQ,OACnDb,EAAQk7D,GAGhB,OAAOl7D,EAEX,SAASm7D,GAAUn7D,GACf,OAAOA,EAAMirB,QAAQ,cAAe,SAAUmwC,GAC1C,OAAOA,EAAEhoB,OAAO,GAAK,IAAMgoB,EAAEhoB,OAAO,KACrCrgC,cAgCP,IAAIsoD,GAAgC,WAChC,SAASA,EAAeC,EAAmBC,GACvCv9D,KAAKs9D,kBAAoBA,EACzBt9D,KAAKu9D,eAAiBA,EAEtBv9D,KAAKw9D,mBAAoB,EAKzBx9D,KAAKy9D,aAAc,EAEnBz9D,KAAK09D,eAAiB,KAEtB19D,KAAK29D,eAAiB,KAEtB39D,KAAK49D,mBAAqB,KAE1B59D,KAAK69D,mBAAqB,KAC1B79D,KAAK89D,kBAAoB,KAQzB99D,KAAK+9D,aAAe,IAAIjkD,IAMxB9Z,KAAKg+D,cAAgB,IAAIlkD,IACzB9Z,KAAKi+D,uBACLj+D,KAAKk+D,uBAGLl+D,KAAKm+D,sBAAuB,EA2ShC,OAnSAd,EAAex8D,UAAUu9D,mBAAqB,SAAU3oD,GAOpD,IAAIR,EAAOQ,EAAMR,KACbopD,EAAU,KACd,OAAQ5oD,EAAMuN,MACV,KAAK,EACW,SAAR/N,EACAopD,EAAUr+D,KAAKs+D,mBAAmB,KAAM7oD,EAAMzT,MAAO,GAAIyT,EAAMwN,YAyRnF,SAASs7C,EAAetpD,GACpB,MAAe,aAARA,GAA+B,SAARA,EAxRTspD,CAAe9oD,EAAMR,QAC1BopD,EAAUr+D,KAAKw+D,mBAAmB,KAAM/oD,EAAMzT,MAAOyT,EAAMwN,aAE/D,MACJ,KAAK,EACDo7C,EAAUr+D,KAAKs+D,mBAAmB7oD,EAAMR,KAAMQ,EAAMzT,MAAOyT,EAAMm0C,KAAMn0C,EAAMwN,YAC7E,MACJ,KAAK,EACDo7C,EAAUr+D,KAAKw+D,mBAAmB/oD,EAAMR,KAAMQ,EAAMzT,MAAOyT,EAAMwN,YAGzE,QAAOo7C,GAEXhB,EAAex8D,UAAUy9D,mBAAqB,SAAUG,EAAcz8D,EAAO4nD,EAAM3mC,GAC/E,IAAI+K,GAAU/Y,KAAMwpD,EAAc7U,KAAMA,EAAM5nD,MAAOA,EAAOihB,WAAYA,GAYxE,OAXIw7C,IACCz+D,KAAK49D,mBAAqB59D,KAAK49D,wBAA0Bt7D,KAAK0rB,GAC/DhuB,KAAKm+D,qBAAuBn+D,KAAKm+D,sBA8Q7C,SAASO,EAAmBjwD,GACxB,MAAgB,qBAATA,GAAwC,eAATA,GAAkC,iBAATA,GAClD,WAATA,GAA8B,eAATA,GAAkC,qBAATA,EAhReiwD,CAAmBD,GAC5EE,GAAgB3+D,KAAK+9D,aAAcU,KAGnCz+D,KAAKm+D,sBAAuB,EAC5Bn+D,KAAK29D,eAAiB3vC,GAE1BhuB,KAAK89D,kBAAoB9vC,EACzBhuB,KAAKy9D,aAAc,EACZzvC,GAEXqvC,EAAex8D,UAAU29D,mBAAqB,SAAUtjD,EAAWlZ,EAAOihB,GACtE,IAAI+K,GAAU/Y,KAAMiG,EAAWlZ,MAAOA,EAAOihB,WAAYA,GAUzD,OATI/H,IACClb,KAAK69D,mBAAqB79D,KAAK69D,wBAA0Bv7D,KAAK0rB,GAC/D2wC,GAAgB3+D,KAAKg+D,cAAe9iD,IAGpClb,KAAK09D,eAAiB1vC,EAE1BhuB,KAAK89D,kBAAoB9vC,EACzBhuB,KAAKy9D,aAAc,EACZzvC,GAOXqvC,EAAex8D,UAAU+9D,kBAAoB,SAAU58D,GACnDhC,KAAKi+D,oBA9Nb,SAAS9lD,EAAMnW,GAaX,IARA,IAAI65B,KACAz6B,EAAI,EACJy9D,EAAa,EACbpoC,EAAQ,EACRqoC,EAAa,EACbC,EAAY,EACZC,EAAc,KACdC,GAAiB,EACd79D,EAAIY,EAAMT,QAEb,OADYS,EAAM0wB,WAAWtxB,MAEzB,KAAK,GACDy9D,IACA,MACJ,KAAK,GACDA,IACA,MACJ,KAAK,GAGDI,EAAiBA,GAAkBH,EAAa,EAClC,IAAVroC,EACAA,EAAQ,GAEO,KAAVA,GAA8D,KAA5Bz0B,EAAM0wB,WAAWtxB,EAAI,KAC5Dq1B,EAAQ,GAEZ,MACJ,KAAK,GAEDwoC,EAAiBA,GAAkBH,EAAa,EAClC,IAAVroC,EACAA,EAAQ,GAEO,KAAVA,GAA8D,KAA5Bz0B,EAAM0wB,WAAWtxB,EAAI,KAC5Dq1B,EAAQ,GAEZ,MACJ,KAAK,GACIuoC,GAA8B,IAAfH,GAA8B,IAAVpoC,IACpCuoC,EAAc7B,GAAUn7D,EAAMgxB,UAAU+rC,EAAW39D,EAAI,GAAGovB,QAC1DsuC,EAAa19D,GAEjB,MACJ,KAAK,GACD,GAAI49D,GAAeF,EAAa,GAAoB,IAAfD,GAA8B,IAAVpoC,EAA6B,CAClF,IAAIyoC,EAAWl9D,EAAMgxB,UAAU8rC,EAAY19D,EAAI,GAAGovB,OAClDqL,EAAOv5B,KAAK08D,EAAaC,EAAiBjC,GAAuBkC,GAAYA,GAC7EH,EAAY39D,EACZ09D,EAAa,EACbE,EAAc,KACdC,GAAiB,GASjC,OAJID,GAAeF,IACXI,EAAWl9D,EAAM8vD,OAAOgN,GAAYtuC,OACxCqL,EAAOv5B,KAAK08D,EAAaC,EAAiBjC,GAAuBkC,GAAYA,IAE1ErjC,EA6JwB1jB,CAAMnW,GACjChC,KAAKw9D,mBAAoB,GAO7BH,EAAex8D,UAAUs+D,kBAAoB,SAAUn9D,GACnDhC,KAAKk+D,oBAAsBl8D,EAAMwuB,OAAO6C,MAAM,QAC9CrzB,KAAKw9D,mBAAoB,GAQ7BH,EAAex8D,UAAUu+D,4BAA8B,SAAUnnD,GAE7D,GAAIjY,KAAKk+D,oBAAoB38D,OAAQ,CACjC0W,EAAM3V,KAAKytB,GAAQ,IACnB,IAAK,IAAI3uB,EAAI,EAAGA,EAAIpB,KAAKk+D,oBAAoB38D,OAAQH,IACjD6W,EAAM3V,KAAKytB,GAAQ/vB,KAAKk+D,oBAAoB98D,KAIpD,GAAIpB,KAAKi+D,oBAAoB18D,OAEzB,IADA0W,EAAM3V,KAAKytB,GAAQ,IACV3uB,EAAI,EAAGA,EAAIpB,KAAKi+D,oBAAoB18D,OAAQH,GAAK,EACtD6W,EAAM3V,KAAKytB,GAAQ/vB,KAAKi+D,oBAAoB78D,IAAK2uB,GAAQ/vB,KAAKi+D,oBAAoB78D,EAAI,MAWlGi8D,EAAex8D,UAAUw+D,0BAA4B,SAAUp8C,EAAYhL,EAAOqnD,GAC9E,IAAI9qD,EAAQxU,KACZ,OAAIA,KAAKu9D,iBAAmBtlD,EAAM1W,QAAUvB,KAAKw9D,oBAEzCv6C,WAAYA,EACZ8W,UAAWoI,GAAciB,iBACzBm8B,qBAAsB,EACtBC,YAAa,WAET,OADAhrD,EAAM4qD,4BAA4BnnD,IAC1BzD,EAAM+oD,eAAgBkC,GAA4BH,EAAcrnD,MAI7E,MAQXolD,EAAex8D,UAAU6+D,+BAAiC,SAAUz8C,EAAYq8C,GAC5E,IAAI9qD,EAAQxU,KACZ,OAAIA,KAAKy9D,aAEDx6C,WAAYA,EACZs8C,qBAAsB,EACtBxlC,UAAWoI,GAAcgB,eACzBq8B,YAAa,WAET,IAAIG,EAAoBnrD,EAAMopD,mBAAqBppD,EAAMopD,mBAAmBliD,IAAI,SAAUta,GAAK,OAAO2uB,GAAQ3uB,EAAE6T,WAE5G2qD,EAAoBprD,EAAMqpD,mBAAqBrpD,EAAMqpD,mBAAmBniD,IAAI,SAAUta,GAAK,OAAO2uB,GAAQ3uB,EAAE6T,WAS5G4qD,EAAuB,EACvBrrD,EAAM+oD,eACNsC,EAAuB,EAElBrrD,EAAM2pD,qBACX0B,EAAuB,EAElBF,EAAkBp+D,OACvBs+D,EAAuB,EAElBD,EAAkBr+D,SACvBs+D,EAAuB,GAE3B,IAAIt8C,KAOJ,OANAu8C,GAASv8C,EAAQq8C,EAAkBr+D,OAAS,EAAGk+D,GAA4BH,EAAcM,GAAoB,EAAGC,GAChHC,GAASv8C,EAAQo8C,EAAkBp+D,OAAS,EAAGk+D,GAA4BH,EAAcK,GAAoB,EAAGE,GAChHC,GAASv8C,EAAQ/O,EAAM2pD,qBAAsB9uC,GAAW8S,GAAcgG,uBAAwB,EAAG03B,GAC7FrrD,EAAM+oD,gBACNh6C,EAAOjhB,KAAKkS,EAAM+oD,gBAEfh6C,IAIZ,MASX85C,EAAex8D,UAAUk/D,kCAAoC,SAAUC,GACnE,IAAIxrD,EAAQxU,KACZ,GAAIA,KAAK09D,gBAAkB19D,KAAK29D,eAAgB,CAC5C,IAAIsC,EAAejgE,KAAK09D,gBAAkB19D,KAAK29D,eAC3CuC,EAA4B,EAI5BC,EAAuBngE,KAAK09D,eAAiB19D,KAAK09D,eAAe17D,MAAMwnC,MAAMw2B,GAAkB,KAC/FG,aAAgC/Y,KAChC8Y,GAA6BC,EAAqBpf,YAAYx/C,QAElE,IAAI6+D,EAAuBpgE,KAAK29D,eAAiB39D,KAAK29D,eAAe37D,MAAMwnC,MAAMw2B,GAAkB,KAInG,OAHII,aAAgChZ,KAChC8Y,GAA6BE,EAAqBrf,YAAYx/C,SAG9D0hB,WAAYg9C,EAAah9C,WACzB8W,UAAWoI,GAAckB,kBACzBk8B,qBAAsBW,EACtBV,YAAa,SAAUa,GACnB,IAAI98C,GAAU/O,EAAM8oD,mBAgBpB,OAfI6C,EACA58C,EAAOjhB,KAAK+9D,EAAUF,IAEjB3rD,EAAMmpD,gBACXp6C,EAAOjhB,KAAKioB,IAEZ61C,EACA78C,EAAOjhB,KAAK+9D,EAAUD,IAEjB5rD,EAAM+oD,gBACXh6C,EAAOjhB,KAAKioB,IAEZ/V,EAAM+oD,gBACNh6C,EAAOjhB,KAAKkS,EAAM+oD,gBAEfh6C,IAInB,OAAO,MAEX85C,EAAex8D,UAAUy/D,mBAAqB,SAAUvmC,EAAWkD,EAAQsjC,EAAUC,EAAYR,GAC7F,IAAIxrD,EAAQxU,KACRkgE,EAA4B,EAChC,OAAOjjC,EAAOvhB,IAAI,SAAUjG,GACxB,IAAIgrD,EAAeF,EAASjlD,IAAI7F,EAAMR,MAClCjT,EAAQyT,EAAMzT,MAAMwnC,MAAMw2B,GAE9B,OACI/8C,WAAYxN,EAAMwN,WAClBs8C,qBAHJW,GAA8Bl+D,aAAiBolD,GAAiBplD,EAAM++C,YAAYx/C,OAAS,EAGtCw4B,UAAWA,EAC5DylC,YAAa,SAAUa,GACnB,IAAI98C,GAAU/O,EAAM8oD,kBAAmBvtC,GAAQ0wC,GAAeJ,EAAUr+D,IAYxE,OAXIw+D,IACI/qD,EAAMm0C,KACNrmC,EAAOjhB,KAAKytB,GAAQta,EAAMm0C,OAErBp1C,EAAM+oD,gBACXh6C,EAAOjhB,KAAKioB,KAGhB/V,EAAM+oD,gBACNh6C,EAAOjhB,KAAKkS,EAAM+oD,gBAEfh6C,OAKvB85C,EAAex8D,UAAU6/D,kBAAoB,SAAUV,GACnD,OAAIhgE,KAAK69D,mBACE79D,KAAKsgE,mBAAmBn+B,GAAca,iBAAkBhjC,KAAK69D,mBAAoB79D,KAAKg+D,eAAe,EAAOgC,OAI3H3C,EAAex8D,UAAU8/D,kBAAoB,SAAUX,GACnD,OAAIhgE,KAAK49D,mBACE59D,KAAKsgE,mBAAmBn+B,GAAcmB,iBAAkBtjC,KAAK49D,mBAAoB59D,KAAK+9D,cAAc,EAAMiC,OAIzH3C,EAAex8D,UAAU+/D,cAAgB,WACrC,IAAIpsD,EAAQxU,KACZ,OACIijB,WAAYjjB,KAAK89D,kBAAoB99D,KAAK89D,kBAAkB76C,WAAa,KACzE8W,UAAWoI,GAAcoB,oBACzBg8B,qBAAsB,EACtBC,YAAa,WACT,IAAIj8C,GAAU/O,EAAM8oD,mBAIpB,OAHI9oD,EAAM+oD,gBACNh6C,EAAOjhB,KAAKkS,EAAM+oD,gBAEfh6C,KAQnB85C,EAAex8D,UAAUggE,6BAA+B,SAAUb,GAC9D,IAAIc,KACJ,GAAI9gE,KAAKy9D,YAAa,CAClB,IAAIsD,EAAiB/gE,KAAK+/D,kCAAkCC,GACxDe,GACAD,EAAax+D,KAAKy+D,GAEtBD,EAAax+D,KAAKb,MAAMq/D,EAAct+D,EAASxC,KAAK2gE,kBAAkBX,KACtEc,EAAax+D,KAAKb,MAAMq/D,EAAct+D,EAASxC,KAAK0gE,kBAAkBV,KACtEc,EAAax+D,KAAKtC,KAAK4gE,iBAE3B,OAAOE,GAEJzD,EAjVwB,GAsVnC,SAASsB,GAAgBjjD,EAAKyH,GACrBzH,EAAIwkB,IAAI/c,IACTzH,EAAIH,IAAI4H,EAAKzH,EAAIslD,MAWzB,SAASvB,GAA4BH,EAAc5/C,GAC/C,OAAOA,EAAOne,OAAS+9D,EAAazqC,gBAAgBnF,GAAWhQ,IAAS,GAAQ6K,GAMpF,SAASu1C,GAASv8C,EAAQ09C,EAAWj/D,EAAOk/D,EAAWC,GAC/CF,EACA19C,EAAOjhB,KAAKN,GAEPk/D,EAAYC,GACjB59C,EAAOjhB,KAAKioB;;;;;;;;;;;;;;;CAWpB,SAAW62C,GACPA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAsB,WAAI,GAAK,aACzCA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAkB,OAAI,GAAK,SACrCA,EAAUA,EAAiB,MAAI,GAAK,QAPxC,CAQG3hE,EAAQ2hE,YAAc3hE,EAAQ2hE,eACjC,IAgBI7oB,GAhBA8oB,IAAY,MAAO,MAAO,KAAM,OAAQ,YAAa,OAAQ,QAAS,KAAM,OAAQ,QACpFC,GAAuB,WACvB,SAASA,KAYT,OAVAA,EAAMzgE,UAAU0gE,SAAW,SAAUtxC,GAIjC,IAHA,IAAIuxC,EAAU,IAAIC,GAASxxC,GACvByxC,KACAhlD,EAAQ8kD,EAAQG,YACJ,MAATjlD,GACHglD,EAAOp/D,KAAKoa,GACZA,EAAQ8kD,EAAQG,YAEpB,OAAOD,GAEJJ,EAbe,GA4D1B,SAASM,GAAkBx+C,EAAOiuC,GAC9B,OAAO,IAAI9Y,GAAMn1B,EAAO3jB,EAAQ2hE,UAAUS,UAAWxQ,EAAM9uC,OAAOqQ,aAAay+B,IAQnF,SAASyQ,GAAiB1+C,EAAO6M,GAC7B,OAAO,IAAIsoB,GAAMn1B,EAAO3jB,EAAQ2hE,UAAUW,SAAU,EAAG9xC,GAW3D,IAAI+xC,GAAM,IAlENzpB,GAAuB,WACvB,SAASA,EAAMn1B,EAAOJ,EAAMi/C,EAAUC,GAClCliE,KAAKojB,MAAQA,EACbpjB,KAAKgjB,KAAOA,EACZhjB,KAAKiiE,SAAWA,EAChBjiE,KAAKkiE,SAAWA,EAsCpB,OApCA3pB,EAAM13C,UAAUshE,YAAc,SAAU9Q,GACpC,OAAOrxD,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUS,WAAa7hE,KAAKiiE,UAAY5Q,GAExE9Y,EAAM13C,UAAUuhE,SAAW,WAAc,OAAOpiE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAU/+C,QAC/Ek2B,EAAM13C,UAAUwhE,SAAW,WAAc,OAAOriE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAU7+C,QAC/Eg2B,EAAM13C,UAAUyhE,WAAa,SAAU/4C,GACnC,OAAOvpB,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUW,UAAY/hE,KAAKkiE,UAAY34C,GAEvEgvB,EAAM13C,UAAU0hE,aAAe,WAAc,OAAOviE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUoB,YACnFjqB,EAAM13C,UAAU4hE,UAAY,WAAc,OAAOziE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAChFnqB,EAAM13C,UAAU8hE,aAAe,WAAc,OAAO3iE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,OAAjB1iE,KAAKkiE,UACnG3pB,EAAM13C,UAAU+hE,YAAc,WAAc,OAAO5iE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,MAAjB1iE,KAAKkiE,UAClG3pB,EAAM13C,UAAUgiE,cAAgB,WAAc,OAAO7iE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,QAAjB1iE,KAAKkiE,UACpG3pB,EAAM13C,UAAUiiE,mBAAqB,WACjC,OAAO9iE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,aAAjB1iE,KAAKkiE,UAE1D3pB,EAAM13C,UAAUkiE,cAAgB,WAAc,OAAO/iE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,QAAjB1iE,KAAKkiE,UACpG3pB,EAAM13C,UAAUmiE,eAAiB,WAAc,OAAOhjE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,SAAjB1iE,KAAKkiE,UACrG3pB,EAAM13C,UAAUoiE,cAAgB,WAAc,OAAOjjE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUsB,SAA4B,QAAjB1iE,KAAKkiE,UACpG3pB,EAAM13C,UAAUqiE,QAAU,WAAc,OAAOljE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAUt+D,OAC9Ey1C,EAAM13C,UAAUsiE,SAAW,WAAc,OAAOnjE,KAAKgjB,MAAQvjB,EAAQ2hE,UAAU/+C,OAASriB,KAAKiiE,UAAY,GACzG1pB,EAAM13C,UAAU4Y,SAAW,WACvB,OAAQzZ,KAAKgjB,MACT,KAAKvjB,EAAQ2hE,UAAUS,UACvB,KAAKpiE,EAAQ2hE,UAAUoB,WACvB,KAAK/iE,EAAQ2hE,UAAUsB,QACvB,KAAKjjE,EAAQ2hE,UAAUW,SACvB,KAAKtiE,EAAQ2hE,UAAU7+C,OACvB,KAAK9iB,EAAQ2hE,UAAUt+D,MACnB,OAAO9C,KAAKkiE,SAChB,KAAKziE,EAAQ2hE,UAAU/+C,OACnB,OAAOriB,KAAKiiE,SAASxoD,WACzB,QACI,OAAO,OAGZ8+B,EA3Ce,KAkEL,EAAG94C,EAAQ2hE,UAAUS,UAAW,EAAG,IACpDJ,GAA0B,WAC1B,SAASA,EAAShsD,GACdzV,KAAKyV,MAAQA,EACbzV,KAAKojE,KAAO,EACZpjE,KAAKojB,OAAS,EACdpjB,KAAKuB,OAASkU,EAAMlU,OACpBvB,KAAKqjE,UA6LT,OA3LA5B,EAAS5gE,UAAUwiE,QAAU,WACzBrjE,KAAKojE,OAASpjE,KAAKojB,OAASpjB,KAAKuB,OAAS6tD,GAAOpvD,KAAKyV,MAAMid,WAAW1yB,KAAKojB,QAEhFq+C,EAAS5gE,UAAU8gE,UAAY,WAI3B,IAHA,IAAIlsD,EAAQzV,KAAKyV,MAAOlU,EAASvB,KAAKuB,OAClC6hE,EAAOpjE,KAAKojE,KAAMhgD,EAAQpjB,KAAKojB,MAE5BggD,GAAQ1T,IAAQ,CACnB,KAAMtsC,GAAS7hB,EAAQ,CACnB6hE,EAAOhU,GACP,MAGAgU,EAAO3tD,EAAMid,WAAWtP,GAKhC,GAFApjB,KAAKojE,KAAOA,EACZpjE,KAAKojB,MAAQA,EACTA,GAAS7hB,EACT,OAAO,KAGX,GAAI+hE,GAAkBF,GAClB,OAAOpjE,KAAKujE,iBAChB,GAAIjS,GAAQ8R,GACR,OAAOpjE,KAAKwjE,WAAWpgD,GAC3B,IAAI2lB,EAAQ3lB,EACZ,OAAQggD,GACJ,KAnpDE,GAqpDE,OADApjE,KAAKqjE,UACE/R,GAAQtxD,KAAKojE,MAAQpjE,KAAKwjE,WAAWz6B,GACxC64B,GAAkB74B,EAtpDxB,IAupDF,KA7pDE,GA8pDF,KA7pDE,GA8pDF,KAAKkoB,GACL,KA1nDE,IA2nDF,KA5oDI,GA6oDJ,KA3oDI,GA4oDJ,KA/pDC,GAgqDD,KA5pDC,GA6pDD,KAAKhB,GACD,OAAOjwD,KAAKyjE,cAAc16B,EAAOq6B,GACrC,KAAKvT,GACL,KAAKF,GACD,OAAO3vD,KAAK0jE,aAChB,KA/qDA,GAgrDA,KAAK5T,GACL,KAAKC,GACL,KA3qDA,GA4qDA,KAAKC,GACL,KAlrDG,GAmrDH,KAxpDC,GAypDG,OAAOhwD,KAAK2jE,aAAa56B,EAAOxmB,OAAOqQ,aAAawwC,IACxD,KArqDI,GAsqDA,OAAOpjE,KAAK4jE,oBAAoB76B,EAAO,IA7qDzC,GA6qDuD,KACzD,KA1qDF,GA2qDE,KAAKonB,GACD,OAAOnwD,KAAK4jE,oBAAoB76B,EAAOxmB,OAAOqQ,aAAawwC,GAAOlT,GAAK,KAC3E,KA9rDA,GA+rDA,KAAKA,GACD,OAAOlwD,KAAK4jE,oBAAoB76B,EAAOxmB,OAAOqQ,aAAawwC,GAAOlT,GAAK,IAAKA,GAAK,KACrF,KA5rDK,GA6rDD,OAAOlwD,KAAK4jE,oBAAoB76B,EAAO,IA7rDtC,GA6rDuD,KAC5D,KAvpDD,IAwpDK,OAAO/oC,KAAK4jE,oBAAoB76B,EAAO,IAxpD5C,IAwpDuD,KACtD,KAAKmoB,GACD,KAAOE,GAAapxD,KAAKojE,OACrBpjE,KAAKqjE,UACT,OAAOrjE,KAAK2hE,YAGpB,OADA3hE,KAAKqjE,UACErjE,KAAKuC,MAAM,yBAA2BggB,OAAOqQ,aAAawwC,GAAQ,IAAK,IAElF3B,EAAS5gE,UAAU4iE,cAAgB,SAAU16B,EAAOsoB,GAEhD,OADArxD,KAAKqjE,UACEzB,GAAkB74B,EAAOsoB,IAEpCoQ,EAAS5gE,UAAU8iE,aAAe,SAAU56B,EAAOxW,GAE/C,OADAvyB,KAAKqjE,UACEvB,GAAiB/4B,EAAOxW,IAYnCkvC,EAAS5gE,UAAU+iE,oBAAsB,SAAU76B,EAAO86B,EAAKC,EAASC,EAAKC,EAAWC,GACpFjkE,KAAKqjE,UACL,IAAI9wC,EAAMsxC,EASV,OARI7jE,KAAKojE,MAAQU,IACb9jE,KAAKqjE,UACL9wC,GAAOwxC,GAEM,MAAbC,GAAqBhkE,KAAKojE,MAAQY,IAClChkE,KAAKqjE,UACL9wC,GAAO0xC,GAEJnC,GAAiB/4B,EAAOxW,IAEnCkvC,EAAS5gE,UAAU0iE,eAAiB,WAChC,IAAIx6B,EAAQ/oC,KAAKojB,MAEjB,IADApjB,KAAKqjE,UACEa,GAAiBlkE,KAAKojE,OACzBpjE,KAAKqjE,UACT,IAAI9wC,EAAMvyB,KAAKyV,MAAMud,UAAU+V,EAAO/oC,KAAKojB,OAC3C,OAAOi+C,GAASx+D,QAAQ0vB,IAAQ,EAtIxC,SAAS4xC,EAAgB/gD,EAAO6M,GAC5B,OAAO,IAAIsoB,GAAMn1B,EAAO3jB,EAAQ2hE,UAAUsB,QAAS,EAAGzyC,GAqIdk0C,CAAgBp7B,EAAOxW,GAzInE,SAAS6xC,EAAmBhhD,EAAO6M,GAC/B,OAAO,IAAIsoB,GAAMn1B,EAAO3jB,EAAQ2hE,UAAUoB,WAAY,EAAGvyC,GAyIjDm0C,CAAmBr7B,EAAOxW,IAElCkvC,EAAS5gE,UAAU2iE,WAAa,SAAUz6B,GACtC,IAiGiBsoB,EAjGbgT,EAAUrkE,KAAKojB,QAAU2lB,EAE7B,IADA/oC,KAAKqjE,YACQ,CACT,GAAI/R,GAAQtxD,KAAKojE,YACZ,GA7uDH,IA6uDOpjE,KAAKojE,KACViB,GAAS,MAER,CAAA,GA3tDR,MAqzDgBhT,EA1FYrxD,KAAKojE,OAruDjC,IAg0DgB/R,EAlFT,MALA,GAHArxD,KAAKqjE,UACDiB,GAAetkE,KAAKojE,OACpBpjE,KAAKqjE,WACJ/R,GAAQtxD,KAAKojE,MACd,OAAOpjE,KAAKuC,MAAM,oBAAqB,GAC3C8hE,GAAS,EAKbrkE,KAAKqjE,UAET,IAAI9wC,EAAMvyB,KAAKyV,MAAMud,UAAU+V,EAAO/oC,KAAKojB,OAE3C,OAvJR,SAASmhD,EAAenhD,EAAO/hB,GAC3B,OAAO,IAAIk3C,GAAMn1B,EAAO3jB,EAAQ2hE,UAAU/+C,OAAQhhB,EAAG,IAsJ1CkjE,CAAex7B,EADVs7B,EAqGpB,SAASG,EAAkBv0C,GACvB,IAAIzW,EAASirD,SAASx0C,GACtB,GAAIitB,MAAM1jC,GACN,MAAM,IAAI1W,MAAM,wCAA0CmtB,GAE9D,OAAOzW;;;;;;;OA1GkBgrD,CAAkBjyC,GAAOmyC,WAAWnyC,KAG7DkvC,EAAS5gE,UAAU6iE,WAAa,WAC5B,IAAI36B,EAAQ/oC,KAAKojB,MACbqT,EAAQz2B,KAAKojE,KACjBpjE,KAAKqjE,UAIL,IAHA,IAAIsB,EAAS,GACTC,EAAS5kE,KAAKojB,MACd3N,EAAQzV,KAAKyV,MACVzV,KAAKojE,MAAQ3sC,GAChB,GAzvDK,IAyvDDz2B,KAAKojE,KAAoB,CACzBuB,GAAUlvD,EAAMud,UAAU4xC,EAAQ5kE,KAAKojB,OACvCpjB,KAAKqjE,UACL,IAAIwB,OAAgB,EAGpB,GADA7kE,KAAKojE,KAAOpjE,KAAKojE,KApvDxB,KAqvDWpjE,KAAKojE,KAAY,CAEjB,IAAI72B,EAAM92B,EAAMud,UAAUhzB,KAAKojB,MAAQ,EAAGpjB,KAAKojB,MAAQ,GACvD,IAAI,eAAe4xB,KAAKzI,GAIpB,OAAOvsC,KAAKuC,MAAM,8BAAgCgqC,EAAM,IAAK,GAH7Ds4B,EAAgBJ,SAASl4B,EAAK,IAKlC,IAAK,IAAInrC,EAAI,EAAGA,EAAI,EAAGA,IACnBpB,KAAKqjE,eAITwB,EAAgBC,GAAS9kE,KAAKojE,MAC9BpjE,KAAKqjE,UAETsB,GAAUpiD,OAAOqQ,aAAaiyC,GAC9BD,EAAS5kE,KAAKojB,UAEb,CAAA,GAAIpjB,KAAKojE,MAAQhU,GAClB,OAAOpvD,KAAKuC,MAAM,qBAAsB,GAGxCvC,KAAKqjE,UAGb,IAAI0B,EAAOtvD,EAAMud,UAAU4xC,EAAQ5kE,KAAKojB,OAExC,OADApjB,KAAKqjE,UAtMb,SAAS2B,EAAe5hD,EAAO6M,GAC3B,OAAO,IAAIsoB,GAAMn1B,EAAO3jB,EAAQ2hE,UAAU7+C,OAAQ,EAAG0N,GAsM1C+0C,CAAej8B,EAAO47B,EAASI,IAE1CtD,EAAS5gE,UAAU0B,MAAQ,SAAU0oC,EAASymB,GAC1C,IAAIuT,EAAWjlE,KAAKojB,MAAQsuC,EAC5B,OArMR,SAASwT,EAAc9hD,EAAO6nB,GAC1B,OAAO,IAAIsN,GAAMn1B,EAAO3jB,EAAQ2hE,UAAUt+D,MAAO,EAAGmoC,GAoMzCi6B,CAAcD,EAAU,gBAAkBh6B,EAAU,cAAgBg6B,EAAW,mBAAqBjlE,KAAKyV,MAAQ,MAErHgsD,EAnMkB,GAqM7B,SAAS6B,GAAkBjS,GACvB,OAAQX,IAAMW,GAAQA,GAAQL,IAAQV,IAAMe,GAAQA,GAAQb,IACvDa,GAAQZ,IAAQY,GAAQzB,GAEjC,SAAS2S,GAAa9sD,GAClB,GAAoB,GAAhBA,EAAMlU,OACN,OAAO,EACX,IAAIigE,EAAU,IAAIC,GAAShsD,GAC3B,IAAK6tD,GAAkB9B,EAAQ4B,MAC3B,OAAO,EAEX,IADA5B,EAAQ6B,UACD7B,EAAQ4B,OAAShU,IAAM,CAC1B,IAAK8U,GAAiB1C,EAAQ4B,MAC1B,OAAO,EACX5B,EAAQ6B,UAEZ,OAAO,EAEX,SAASa,GAAiB7S,GACtB,OAAOE,GAAcF,IAASC,GAAQD,IAAUA,GAAQZ,IACnDY,GAAQzB,GAKjB,SAAS0U,GAAejT,GACpB,OAAOA,GAAQtB,IAAUsB,GAAQvB,GAErC,SAASqV,GAAQ9T,GACb,OAAOA,IAASxB,IAAOwB,IAAS1B,IAAO0B,IAASF,GAEpD,SAAS2T,GAASzT,GACd,OAAQA,GACJ,KAAKT,GACD,OAAOtB,GACX,KAAKqB,GACD,OAAOnB,GACX,KAAKqB,GACD,OAAOpB,GACX,KAAKqB,GACD,OAAOzB,GACX,KAAK0B,GACD,OAAOxB,GACX,QACI,OAAO8B,GAkBnB,IAAI+T,GACA,SAASA,GAAmB/d,EAAStG,EAAaskB,GAC9CrlE,KAAKqnD,QAAUA,EACfrnD,KAAK+gD,YAAcA,EACnB/gD,KAAKqlE,QAAUA,GAInBC,GACA,SAASA,GAA2BC,EAAkBC,EAAUhd,GAC5DxoD,KAAKulE,iBAAmBA,EACxBvlE,KAAKwlE,SAAWA,EAChBxlE,KAAKwoD,OAASA,GAItB,SAASid,GAAyBC,GAC9B,IAAIlQ,EAAUnjC,GAAaqzC,EAAO38B,OAAS,eAAiB1W,GAAaqzC,EAAOr8B,KAChF,OAAO,IAAIxxB,OAAO29C,EAAS,KAE/B,IAAImQ,GAAwB,WACxB,SAASA,EAAOC,GACZ5lE,KAAK4lE,OAASA,EACd5lE,KAAKwoD,UAiJT,OA/IAmd,EAAO9kE,UAAUglE,YAAc,SAAUpwD,EAAO8vC,EAAUugB,QAC1B,IAAxBA,IAAkCA,EAAsBhrB,IAC5D96C,KAAK+lE,sBAAsBtwD,EAAO8vC,EAAUugB,GAC5C,IAAIE,EAAchmE,KAAKimE,eAAexwD,GAClCisD,EAAS1hE,KAAK4lE,OAAOrE,SAASvhE,KAAKimE,eAAexwD,IAClDoY,EAAM,IAAIq4C,GAAUzwD,EAAO8vC,EAAUmc,EAAQsE,EAAYzkE,QAAQ,EAAMvB,KAAKwoD,OAAQ/yC,EAAMlU,OAASykE,EAAYzkE,QAC9G4kE,aACL,OAAO,IAAI5d,GAAc16B,EAAKpY,EAAO8vC,EAAUvlD,KAAKwoD,SAExDmd,EAAO9kE,UAAUulE,aAAe,SAAU3wD,EAAO8vC,EAAUugB,QAC3B,IAAxBA,IAAkCA,EAAsBhrB,IAC5D,IAAIjtB,EAAM7tB,KAAKqmE,iBAAiB5wD,EAAO8vC,EAAUugB,GACjD,OAAO,IAAIvd,GAAc16B,EAAKpY,EAAO8vC,EAAUvlD,KAAKwoD,SAExDmd,EAAO9kE,UAAUylE,mBAAqB,SAAU7wD,EAAO8vC,EAAUugB,QACjC,IAAxBA,IAAkCA,EAAsBhrB,IAC5D,IAAIjtB,EAAM7tB,KAAKqmE,iBAAiB5wD,EAAO8vC,EAAUugB,GAC7Ctd,EAAS+d,GAAwBC,MAAM34C,GAI3C,OAHI26B,EAAOjnD,OAAS,GAChBvB,KAAKymE,aAAa,0CAA4Cje,EAAOlvC,KAAK,KAAM7D,EAAO8vC,GAEpF,IAAIgD,GAAc16B,EAAKpY,EAAO8vC,EAAUvlD,KAAKwoD,SAExDmd,EAAO9kE,UAAU4lE,aAAe,SAAUx7B,EAASx1B,EAAOwvC,EAAaC,GACnEllD,KAAKwoD,OAAOlmD,KAAK,IAAI0iD,GAAY/Z,EAASx1B,EAAOwvC,EAAaC,KAElEygB,EAAO9kE,UAAUwlE,iBAAmB,SAAU5wD,EAAO8vC,EAAUugB,GAG3D,IAAIrvC,EAAQz2B,KAAK0mE,YAAYjxD,EAAO8vC,GACpC,GAAa,MAAT9uB,EACA,OAAOA,EAEXz2B,KAAK+lE,sBAAsBtwD,EAAO8vC,EAAUugB,GAC5C,IAAIE,EAAchmE,KAAKimE,eAAexwD,GAClCisD,EAAS1hE,KAAK4lE,OAAOrE,SAASyE,GAClC,OAAO,IAAIE,GAAUzwD,EAAO8vC,EAAUmc,EAAQsE,EAAYzkE,QAAQ,EAAOvB,KAAKwoD,OAAQ/yC,EAAMlU,OAASykE,EAAYzkE,QAC5G4kE,cAETR,EAAO9kE,UAAU6lE,YAAc,SAAUjxD,EAAO8vC,GAC5C,GAAa,MAAT9vC,EACA,OAAO,KACX,IAAIkxD,EAAuBlxD,EAAM5S,QAAQ,KACzC,IAA6B,GAAzB8jE,EACA,OAAO,KACX,IAAIpjE,EAASkS,EAAMud,UAAU,EAAG2zC,GAAsBn2C,OACtD,IAAK+xC,GAAah/D,GACd,OAAO,KACX,IAAI+hD,EAA0B7vC,EAAMud,UAAU2zC,EAAuB,GACrE,OAAO,IAAIthB,GAAM,IAAIF,GAAU,EAAG1vC,EAAMlU,QAASgC,EAAQ+hD,EAAyBC,IAEtFogB,EAAO9kE,UAAU+lE,sBAAwB,SAAUC,EAAQC,EAAUvhB,GACjE,IAAImc,EAAS1hE,KAAK4lE,OAAOrE,SAASuF,GAClC,OAAO,IAAIZ,GAAUY,EAAUvhB,EAAUmc,EAAQoF,EAASvlE,QAAQ,EAAOvB,KAAKwoD,OAAQ,GACjFoe,sBAAsBC,IAE/BlB,EAAO9kE,UAAUkmE,mBAAqB,SAAUtxD,EAAO8vC,EAAUugB,QACjC,IAAxBA,IAAkCA,EAAsBhrB,IAC5D,IAAIznB,EAAQrzB,KAAKgnE,mBAAmBvxD,EAAO8vC,EAAUugB,GACrD,GAAa,MAATzyC,EACA,OAAO,KAEX,IADA,IAAI0tB,KACK3/C,EAAI,EAAGA,EAAIiyB,EAAM0tB,YAAYx/C,SAAUH,EAAG,CAC/C,IAAI6lE,EAAiB5zC,EAAM0tB,YAAY3/C,GACnC4kE,EAAchmE,KAAKimE,eAAegB,GAClCvF,EAAS1hE,KAAK4lE,OAAOrE,SAASyE,GAC9Bn4C,EAAM,IAAIq4C,GAAUzwD,EAAO8vC,EAAUmc,EAAQsE,EAAYzkE,QAAQ,EAAOvB,KAAKwoD,OAAQn1B,EAAMgyC,QAAQjkE,IAAM6lE,EAAe1lE,OAASykE,EAAYzkE,SAC5I4kE,aACLplB,EAAYz+C,KAAKurB,GAErB,OAAO,IAAI06B,GAAc,IAAInB,GAAc,IAAIjC,GAAU,EAAY,MAAT1vC,EAAgB,EAAIA,EAAMlU,QAAS8xB,EAAMg0B,QAAStG,GAActrC,EAAO8vC,EAAUvlD,KAAKwoD,SAEtJmd,EAAO9kE,UAAUmmE,mBAAqB,SAAUvxD,EAAO8vC,EAAUugB,QACjC,IAAxBA,IAAkCA,EAAsBhrB,IAC5D,IAAIJ,EAAS+qB,GAAyBK,GAClCz7C,EAAQ5U,EAAM4d,MAAMqnB,GACxB,GAAIrwB,EAAM9oB,QAAU,EAChB,OAAO,KAMX,IAJA,IAAI8lD,KACAtG,KACAskB,KACA3T,EAAS,EACJtwD,EAAI,EAAGA,EAAIipB,EAAM9oB,OAAQH,IAAK,CACnC,IAAIs9C,EAAOr0B,EAAMjpB,GACbA,EAAI,GAAM,GAEVimD,EAAQ/kD,KAAKo8C,GACbgT,GAAUhT,EAAKn9C,QAEVm9C,EAAKluB,OAAOjvB,OAAS,GAC1BmwD,GAAUoU,EAAoB/8B,MAAMxnC,OACpCw/C,EAAYz+C,KAAKo8C,GACjB2mB,EAAQ/iE,KAAKovD,GACbA,GAAUhT,EAAKn9C,OAASukE,EAAoBz8B,IAAI9nC,SAGhDvB,KAAKymE,aAAa,4DAA6DhxD,EAAO,aAAezV,KAAKknE,8BAA8B78C,EAAOjpB,EAAG0kE,GAAuB,MAAOvgB,GAChLxE,EAAYz+C,KAAK,YACjB+iE,EAAQ/iE,KAAKovD,IAGrB,OAAO,IAAI0T,GAAmB/d,EAAStG,EAAaskB,IAExDM,EAAO9kE,UAAUsmE,qBAAuB,SAAU1xD,EAAO8vC,GACrD,OAAO,IAAIgD,GAAc,IAAIzB,GAAiB,IAAI3B,GAAU,EAAY,MAAT1vC,EAAgB,EAAIA,EAAMlU,QAASkU,GAAQA,EAAO8vC,EAAUvlD,KAAKwoD,SAEpImd,EAAO9kE,UAAUolE,eAAiB,SAAUxwD,GACxC,IAAIrU,EAAIpB,KAAKonE,cAAc3xD,GAC3B,OAAY,MAALrU,EAAYqU,EAAMud,UAAU,EAAG5xB,GAAGovB,OAAS/a,GAEtDkwD,EAAO9kE,UAAUumE,cAAgB,SAAU3xD,GAEvC,IADA,IAAI4xD,EAAa,KACRjmE,EAAI,EAAGA,EAAIqU,EAAMlU,OAAS,EAAGH,IAAK,CACvC,IAAIkmE,EAAO7xD,EAAMid,WAAWtxB,GACxBmmE,EAAW9xD,EAAMid,WAAWtxB,EAAI,GACpC,GAAIkmE,IAAStX,IAAUuX,GAAYvX,IAAwB,MAAdqX,EACzC,OAAOjmE,EACPimE,IAAeC,EACfD,EAAa,KAEM,MAAdA,GAAsBlC,GAAQmC,KACnCD,EAAaC,GAGrB,OAAO,MAEX3B,EAAO9kE,UAAUklE,sBAAwB,SAAUtwD,EAAO8vC,EAAUugB,GAChE,IAAIprB,EAAS+qB,GAAyBK,GAClCz7C,EAAQ5U,EAAM4d,MAAMqnB,GACpBrwB,EAAM9oB,OAAS,GACfvB,KAAKymE,aAAa,sBAAwBX,EAAoB/8B,MAAQ+8B,EAAoBz8B,IAAM,kCAAmC5zB,EAAO,aAAezV,KAAKknE,8BAA8B78C,EAAO,EAAGy7C,GAAuB,MAAOvgB,IAG5OogB,EAAO9kE,UAAUqmE,8BAAgC,SAAU78C,EAAOm9C,EAAc1B,GAE5E,IADA,IAAI7gB,EAAc,GACThZ,EAAI,EAAGA,EAAIu7B,EAAcv7B,IAC9BgZ,GAAehZ,EAAI,GAAM,EACrB5hB,EAAM4hB,GACN,GAAK65B,EAAoB/8B,MAAQ1e,EAAM4hB,GAAK65B,EAAoBz8B,IAExE,OAAO4b,EAAY1jD,QAEhBokE,EApJgB,GAsJvBO,GAA2B,WAC3B,SAASA,EAAUzwD,EAAO8vC,EAAUmc,EAAQ+F,EAAa5B,EAAard,EAAQkJ,GAC1E1xD,KAAKyV,MAAQA,EACbzV,KAAKulD,SAAWA,EAChBvlD,KAAK0hE,OAASA,EACd1hE,KAAKynE,YAAcA,EACnBznE,KAAK6lE,YAAcA,EACnB7lE,KAAKwoD,OAASA,EACdxoD,KAAK0xD,OAASA,EACd1xD,KAAK0nE,gBAAkB,EACvB1nE,KAAK2nE,kBAAoB,EACzB3nE,KAAK4nE,gBAAkB,EACvB5nE,KAAKojB,MAAQ,EA8gBjB,OA5gBA8iD,EAAUrlE,UAAUuiE,KAAO,SAAU1R,GACjC,IAAItwD,EAAIpB,KAAKojB,MAAQsuC,EACrB,OAAOtwD,EAAIpB,KAAK0hE,OAAOngE,OAASvB,KAAK0hE,OAAOtgE,GAAK4gE,IAErD5hE,OAAOw7C,eAAesqB,EAAUrlE,UAAW,QACvCya,IAAK,WAAc,OAAOtb,KAAKojE,KAAK,IACpCvnB,YAAY,EACZC,cAAc,IAElB17C,OAAOw7C,eAAesqB,EAAUrlE,UAAW,cACvCya,IAAK,WACD,OAAQtb,KAAKojB,MAAQpjB,KAAK0hE,OAAOngE,OAAUvB,KAAK+B,KAAKqhB,MAAQpjB,KAAK0xD,OAC9D1xD,KAAKynE,YAAcznE,KAAK0xD,QAEhC7V,YAAY,EACZC,cAAc,IAElBoqB,EAAUrlE,UAAUg/C,KAAO,SAAU9W,GAAS,OAAO,IAAIoc,GAAUpc,EAAO/oC,KAAK6nE,aAC/E3B,EAAUrlE,UAAUwiE,QAAU,WAAcrjE,KAAKojB,SACjD8iD,EAAUrlE,UAAUinE,kBAAoB,SAAUzW,GAC9C,QAAIrxD,KAAK+B,KAAKogE,YAAY9Q,KACtBrxD,KAAKqjE,WACE,IAMf6C,EAAUrlE,UAAUknE,eAAiB,WAAc,OAAO/nE,KAAK+B,KAAK4gE,gBACpEuD,EAAUrlE,UAAUmnE,cAAgB,WAAc,OAAOhoE,KAAK+B,KAAK6gE,eACnEsD,EAAUrlE,UAAUonE,gBAAkB,SAAU5W,GACxCrxD,KAAK8nE,kBAAkBzW,IAE3BrxD,KAAKuC,MAAM,oBAAsBggB,OAAOqQ,aAAay+B,KAEzD6U,EAAUrlE,UAAUqnE,iBAAmB,SAAU5a,GAC7C,QAAIttD,KAAK+B,KAAKugE,WAAWhV,KACrBttD,KAAKqjE,WACE,IAMf6C,EAAUrlE,UAAUsnE,eAAiB,SAAU5+C,GACvCvpB,KAAKkoE,iBAAiB3+C,IAE1BvpB,KAAKuC,MAAM,6BAA+BgnB,IAE9C28C,EAAUrlE,UAAUunE,0BAA4B,WAC5C,IAAI/mE,EAAIrB,KAAK+B,KACb,OAAKV,EAAEkhE,gBAAmBlhE,EAAEohE,aAI5BziE,KAAKqjE,UACEhiE,EAAEoY,aAJLzZ,KAAKuC,MAAM,oBAAsBlB,EAAI,oCAC9B,KAKf6kE,EAAUrlE,UAAUwnE,kCAAoC,WACpD,IAAIhnE,EAAIrB,KAAK+B,KACb,OAAKV,EAAEkhE,gBAAmBlhE,EAAEohE,aAAgBphE,EAAEghE,YAI9CriE,KAAKqjE,UACEhiE,EAAEoY,aAJLzZ,KAAKuC,MAAM,oBAAsBlB,EAAI,6CAC9B,KAKf6kE,EAAUrlE,UAAUslE,WAAa,WAG7B,IAFA,IAAIj4C,KACA6a,EAAQ/oC,KAAK6nE,WACV7nE,KAAKojB,MAAQpjB,KAAK0hE,OAAOngE,QAAQ,CACpC,IAAIulB,EAAO9mB,KAAKsoE,YAEhB,GADAp6C,EAAM5rB,KAAKwkB,GACP9mB,KAAK8nE,kBAAkB7X,IAIvB,IAHKjwD,KAAK6lE,aACN7lE,KAAKuC,MAAM,wDAERvC,KAAK8nE,kBAAkB7X,WAGzBjwD,KAAKojB,MAAQpjB,KAAK0hE,OAAOngE,QAC9BvB,KAAKuC,MAAM,qBAAuBvC,KAAK+B,KAAO,KAGtD,OAAoB,GAAhBmsB,EAAM3sB,OACC,IAAIkkD,GAAUzlD,KAAK6/C,KAAK9W,IACf,GAAhB7a,EAAM3sB,OACC2sB,EAAM,GACV,IAAI03B,GAAM5lD,KAAK6/C,KAAK9W,GAAQ7a,IAEvCg4C,EAAUrlE,UAAUynE,UAAY,WAC5B,IAAI9uD,EAASxZ,KAAKuoE,kBAClB,GAAIvoE,KAAKkoE,iBAAiB,KAAM,CACxBloE,KAAK6lE,aACL7lE,KAAKuC,MAAM,8CAEf,EAAG,CAGC,IAFA,IAAI2yB,EAASl1B,KAAKooE,4BACdzpD,KACG3e,KAAK8nE,kBA3oEf,KA4oEOnpD,EAAKrc,KAAKtC,KAAKuoE,mBAEnB/uD,EAAS,IAAIotC,GAAY5mD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQvvB,EAAQ0b,EAAQvW,SAClE3e,KAAKkoE,iBAAiB,MAEnC,OAAO1uD,GAEX0sD,EAAUrlE,UAAU0nE,gBAAkB,WAAc,OAAOvoE,KAAKwoE,oBAChEtC,EAAUrlE,UAAU2nE,iBAAmB,WACnC,IAAIz/B,EAAQ/oC,KAAK6nE,WACbruD,EAASxZ,KAAKyoE,iBAClB,GAAIzoE,KAAKkoE,iBAAiB,KAAM,CAC5B,IAAIQ,EAAM1oE,KAAKsoE,YACXK,OAAK,EACT,GAAK3oE,KAAK8nE,kBA1pET,IAiqEGa,EAAK3oE,KAAKsoE,gBAPuB,CACjC,IACIn0C,EAAan0B,KAAKyV,MAAMud,UAAU+V,EAD5B/oC,KAAK6nE,YAEf7nE,KAAKuC,MAAM,0BAA4B4xB,EAAa,+BACpDw0C,EAAK,IAAIljB,GAAUzlD,KAAK6/C,KAAK9W,IAKjC,OAAO,IAAI+c,GAAY9lD,KAAK6/C,KAAK9W,GAAQvvB,EAAQkvD,EAAKC,GAGtD,OAAOnvD,GAGf0sD,EAAUrlE,UAAU4nE,eAAiB,WAGjC,IADA,IAAIjvD,EAASxZ,KAAK4oE,kBACX5oE,KAAKkoE,iBAAiB,OAAO,CAChC,IAAIxgB,EAAQ1nD,KAAK4oE,kBACjBpvD,EAAS,IAAI+tC,GAAOvnD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQ,KAAMvvB,EAAQkuC,GAEpE,OAAOluC,GAEX0sD,EAAUrlE,UAAU+nE,gBAAkB,WAGlC,IADA,IAAIpvD,EAASxZ,KAAK6oE,gBACX7oE,KAAKkoE,iBAAiB,OAAO,CAChC,IAAIxgB,EAAQ1nD,KAAK6oE,gBACjBrvD,EAAS,IAAI+tC,GAAOvnD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQ,KAAMvvB,EAAQkuC,GAEpE,OAAOluC,GAEX0sD,EAAUrlE,UAAUgoE,cAAgB,WAGhC,IADA,IAAIrvD,EAASxZ,KAAK8oE,kBACX9oE,KAAK+B,KAAKihB,MAAQvjB,EAAQ2hE,UAAUW,UAAU,CACjD,IAAIx4C,EAAWvpB,KAAK+B,KAAKmgE,SACzB,OAAQ34C,GACJ,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACDvpB,KAAKqjE,UACL,IAAI3b,EAAQ1nD,KAAK8oE,kBACjBtvD,EAAS,IAAI+tC,GAAOvnD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQxf,EAAU/P,EAAQkuC,GACpE,SAER,MAEJ,OAAOluC,GAEX0sD,EAAUrlE,UAAUioE,gBAAkB,WAGlC,IADA,IAAItvD,EAASxZ,KAAK+oE,gBACX/oE,KAAK+B,KAAKihB,MAAQvjB,EAAQ2hE,UAAUW,UAAU,CACjD,IAAIx4C,EAAWvpB,KAAK+B,KAAKmgE,SACzB,OAAQ34C,GACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACDvpB,KAAKqjE,UACL,IAAI3b,EAAQ1nD,KAAK+oE,gBACjBvvD,EAAS,IAAI+tC,GAAOvnD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQxf,EAAU/P,EAAQkuC,GACpE,SAER,MAEJ,OAAOluC,GAEX0sD,EAAUrlE,UAAUkoE,cAAgB,WAGhC,IADA,IAAIvvD,EAASxZ,KAAKgpE,sBACXhpE,KAAK+B,KAAKihB,MAAQvjB,EAAQ2hE,UAAUW,UAAU,CACjD,IAAIx4C,EAAWvpB,KAAK+B,KAAKmgE,SACzB,OAAQ34C,GACJ,IAAK,IACL,IAAK,IACDvpB,KAAKqjE,UACL,IAAI3b,EAAQ1nD,KAAKgpE,sBACjBxvD,EAAS,IAAI+tC,GAAOvnD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQxf,EAAU/P,EAAQkuC,GACpE,SAER,MAEJ,OAAOluC,GAEX0sD,EAAUrlE,UAAUmoE,oBAAsB,WAGtC,IADA,IAAIxvD,EAASxZ,KAAKipE,cACXjpE,KAAK+B,KAAKihB,MAAQvjB,EAAQ2hE,UAAUW,UAAU,CACjD,IAAIx4C,EAAWvpB,KAAK+B,KAAKmgE,SACzB,OAAQ34C,GACJ,IAAK,IACL,IAAK,IACL,IAAK,IACDvpB,KAAKqjE,UACL,IAAI3b,EAAQ1nD,KAAKipE,cACjBzvD,EAAS,IAAI+tC,GAAOvnD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQxf,EAAU/P,EAAQkuC,GACpE,SAER,MAEJ,OAAOluC,GAEX0sD,EAAUrlE,UAAUooE,YAAc,WAC9B,GAAIjpE,KAAK+B,KAAKihB,MAAQvjB,EAAQ2hE,UAAUW,SAAU,CAC9C,IAAIh5B,EAAQ/oC,KAAK6nE,WACbt+C,EAAWvpB,KAAK+B,KAAKmgE,SACrB1oD,OAAS,EACb,OAAQ+P,GACJ,IAAK,IAGD,OAFAvpB,KAAKqjE,UACL7pD,EAASxZ,KAAKipE,cACP,IAAI1hB,GAAOvnD,KAAK6/C,KAAK9W,GAAQ,IAAKvvB,EAAQ,IAAIstC,GAAiB,IAAI3B,GAAUpc,EAAOA,GAAQ,IACvG,IAAK,IAGD,OAFA/oC,KAAKqjE,UACL7pD,EAASxZ,KAAKipE,cACP,IAAI1hB,GAAOvnD,KAAK6/C,KAAK9W,GAAQxf,EAAU,IAAIu9B,GAAiB,IAAI3B,GAAUpc,EAAOA,GAAQ,GAAIvvB,GACxG,IAAK,IAGD,OAFAxZ,KAAKqjE,UACL7pD,EAASxZ,KAAKipE,cACP,IAAIrhB,GAAU5nD,KAAK6/C,KAAK9W,GAAQvvB,IAGnD,OAAOxZ,KAAKkpE,kBAEhBhD,EAAUrlE,UAAUqoE,eAAiB,WAEjC,IADA,IAAI1vD,EAASxZ,KAAKmpE,iBAEd,GAAInpE,KAAK8nE,kBA/xEP,IAgyEEtuD,EAASxZ,KAAKopE,8BAA8B5vD,GAAQ,QAEnD,GAAIxZ,KAAKkoE,iBAAiB,MAC3B1uD,EAASxZ,KAAKopE,8BAA8B5vD,GAAQ,QAEnD,GAAIxZ,KAAK8nE,kBAtxEV,IAsxEwC,CACxC9nE,KAAK2nE,oBACL,IAAIxkD,EAAMnjB,KAAKsoE,YAGf,GAFAtoE,KAAK2nE,oBACL3nE,KAAKioE,gBAxxEL,IAyxEIjoE,KAAKkoE,iBAAiB,KAAM,CAC5B,IAAIlmE,EAAQhC,KAAKwoE,mBACjBhvD,EAAS,IAAIktC,GAAW1mD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQvvB,EAAQ2J,EAAKnhB,QAGnEwX,EAAS,IAAIgtC,GAAUxmD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQvvB,EAAQ2J,QAGhE,GAAInjB,KAAK8nE,kBAxzEZ,IAwzEwC,CACtC9nE,KAAK0nE,kBACL,IAAI/oD,EAAO3e,KAAKqpE,qBAChBrpE,KAAK0nE,kBACL1nE,KAAKioE,gBA3zEP,IA4zEEzuD,EAAS,IAAI4uC,GAAapoD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQvvB,EAAQmF,OAE/D,CAAA,IAAI3e,KAAKkoE,iBAAiB,KAI3B,OAAO1uD,EAHPA,EAAS,IAAIsuC,GAAc9nD,KAAK6/C,KAAKrmC,EAAOqmC,KAAK9W,OAAQvvB,KAOrE0sD,EAAUrlE,UAAUsoE,aAAe,WAC/B,IAAIpgC,EAAQ/oC,KAAK6nE,WACjB,GAAI7nE,KAAK8nE,kBAz0EH,IAy0E+B,CACjC9nE,KAAK0nE,kBACL,IAAIluD,EAASxZ,KAAKsoE,YAGlB,OAFAtoE,KAAK0nE,kBACL1nE,KAAKioE,gBA50EH,IA60EKzuD,EAEN,GAAIxZ,KAAK+B,KAAK8gE,gBAEf,OADA7iE,KAAKqjE,UACE,IAAIvc,GAAiB9mD,KAAK6/C,KAAK9W,GAAQ,MAE7C,GAAI/oC,KAAK+B,KAAK+gE,qBAEf,OADA9iE,KAAKqjE,UACE,IAAIvc,GAAiB9mD,KAAK6/C,KAAK9W,QAAQ,GAE7C,GAAI/oC,KAAK+B,KAAKghE,gBAEf,OADA/iE,KAAKqjE,UACE,IAAIvc,GAAiB9mD,KAAK6/C,KAAK9W,IAAQ,GAE7C,GAAI/oC,KAAK+B,KAAKihE,iBAEf,OADAhjE,KAAKqjE,UACE,IAAIvc,GAAiB9mD,KAAK6/C,KAAK9W,IAAQ,GAE7C,GAAI/oC,KAAK+B,KAAKkhE,gBAEf,OADAjjE,KAAKqjE,UACE,IAAI3d,GAAiB1lD,KAAK6/C,KAAK9W,IAErC,GAAI/oC,KAAK8nE,kBA/0EN,IA+0EoC,CACxC9nE,KAAK2nE,oBACL,IAAI2B,EAAWtpE,KAAKupE,oBA/0EhB,IAk1EJ,OAFAvpE,KAAK2nE,oBACL3nE,KAAKioE,gBAj1ED,IAk1EG,IAAIjhB,GAAahnD,KAAK6/C,KAAK9W,GAAQugC,GAEzC,GAAItpE,KAAK+B,KAAKogE,YAAYlR,IAC3B,OAAOjxD,KAAKwpE,kBAEX,GAAIxpE,KAAK+B,KAAKwgE,eACf,OAAOviE,KAAKopE,8BAA8B,IAAI1jB,GAAiB1lD,KAAK6/C,KAAK9W,KAAS,GAEjF,GAAI/oC,KAAK+B,KAAKqgE,WAAY,CAC3B,IAAIpgE,EAAQhC,KAAK+B,KAAKohE,WAEtB,OADAnjE,KAAKqjE,UACE,IAAIvc,GAAiB9mD,KAAK6/C,KAAK9W,GAAQ/mC,GAE7C,GAAIhC,KAAK+B,KAAKsgE,WAAY,CAC3B,IAAIoH,EAAezpE,KAAK+B,KAAK0X,WAE7B,OADAzZ,KAAKqjE,UACE,IAAIvc,GAAiB9mD,KAAK6/C,KAAK9W,GAAQ0gC,GAE7C,OAAIzpE,KAAKojB,OAASpjB,KAAK0hE,OAAOngE,QAC/BvB,KAAKuC,MAAM,iCAAmCvC,KAAKyV,OAC5C,IAAIgwC,GAAUzlD,KAAK6/C,KAAK9W,MAG/B/oC,KAAKuC,MAAM,oBAAsBvC,KAAK+B,MAC/B,IAAI0jD,GAAUzlD,KAAK6/C,KAAK9W,MAGvCm9B,EAAUrlE,UAAU0oE,oBAAsB,SAAUG,GAChD,IAAIlwD,KACJ,IAAKxZ,KAAK+B,KAAKogE,YAAYuH,GACvB,GACIlwD,EAAOlX,KAAKtC,KAAKsoE,mBACZtoE,KAAK8nE,kBAr4Eb,KAu4EL,OAAOtuD,GAEX0sD,EAAUrlE,UAAU2oE,gBAAkB,WAClC,IAAIj4C,KACA7R,KACAqpB,EAAQ/oC,KAAK6nE,WAEjB,GADA7nE,KAAKioE,gBAAgBhX,KAChBjxD,KAAK8nE,kBA52EJ,KA42EgC,CAClC9nE,KAAK4nE,kBACL,EAAG,CACC,IAAI39C,EAASjqB,KAAK+B,KAAKsgE,WACnBl/C,EAAMnjB,KAAKqoE,oCACf92C,EAAKjvB,MAAO6gB,IAAKA,EAAK8G,OAAQA,IAC9BjqB,KAAKioE,gBAh5ER,IAi5EGvoD,EAAOpd,KAAKtC,KAAKsoE,mBACZtoE,KAAK8nE,kBAt5Eb,KAu5ED9nE,KAAK4nE,kBACL5nE,KAAKioE,gBAt3EH,KAw3EN,OAAO,IAAI/gB,GAAWlnD,KAAK6/C,KAAK9W,GAAQxX,EAAM7R,IAElDwmD,EAAUrlE,UAAUuoE,8BAAgC,SAAU1hD,EAAUiiD,QACrD,IAAXA,IAAqBA,GAAS,GAClC,IAAI5gC,EAAQrhB,EAASm4B,KAAK9W,MACtBzZ,EAAKtvB,KAAKooE,4BACd,GAAIpoE,KAAK8nE,kBAp6EH,IAo6E+B,CACjC9nE,KAAK0nE,kBACL,IAAI/oD,EAAO3e,KAAKqpE,qBAChBrpE,KAAKioE,gBAt6EH,IAu6EFjoE,KAAK0nE,kBACL,IAAI7nB,EAAO7/C,KAAK6/C,KAAK9W,GACrB,OAAO4gC,EAAS,IAAIzhB,GAAerI,EAAMn4B,EAAU4H,EAAI3Q,GACnD,IAAIqpC,GAAWnI,EAAMn4B,EAAU4H,EAAI3Q,GAGvC,GAAIgrD,EACA,OAAI3pE,KAAKkoE,iBAAiB,MACtBloE,KAAKuC,MAAM,sDACJ,IAAIkjD,GAAUzlD,KAAK6/C,KAAK9W,KAGxB,IAAIud,GAAiBtmD,KAAK6/C,KAAK9W,GAAQrhB,EAAU4H,GAI5D,GAAItvB,KAAKkoE,iBAAiB,KAAM,CAC5B,IAAKloE,KAAK6lE,YAEN,OADA7lE,KAAKuC,MAAM,uCACJ,IAAIkjD,GAAUzlD,KAAK6/C,KAAK9W,IAEnC,IAAI/mC,EAAQhC,KAAKwoE,mBACjB,OAAO,IAAIpiB,GAAcpmD,KAAK6/C,KAAK9W,GAAQrhB,EAAU4H,EAAIttB,GAGzD,OAAO,IAAIkkD,GAAalmD,KAAK6/C,KAAK9W,GAAQrhB,EAAU4H,IAKpE42C,EAAUrlE,UAAUwoE,mBAAqB,WACrC,GAAIrpE,KAAK+B,KAAKogE,YAt8ER,IAu8EF,SACJ,IAAIyH,KACJ,GACIA,EAAYtnE,KAAKtC,KAAKsoE,mBACjBtoE,KAAK8nE,kBAx8ET,KAy8EL,OAAO8B,GAKX1D,EAAUrlE,UAAUgpE,yBAA2B,WAC3C,IAAIrwD,EAAS,GACTswD,GAAgB,EACpB,GACItwD,GAAUxZ,KAAKqoE,qCACfyB,EAAgB9pE,KAAKkoE,iBAAiB,QAElC1uD,GAAU,WAETswD,GACT,OAAOtwD,EAAOC,YAGlBysD,EAAUrlE,UAAU+lE,sBAAwB,SAAUC,GAClD,IAAIkD,GAAe,EACfC,KAEJ,EAAG,CACC,IAAIjhC,EAAQ/oC,KAAK6nE,WACboC,OAAS,EACT9mD,OAAM,EACN+mD,GAAQ,EACRH,GACAE,EAAS9mD,EAAM0jD,EACfkD,GAAe,KAGfG,EAAQlqE,KAAK+nE,mBAET/nE,KAAKqjE,UACT4G,EAASjqE,KAAK6pE,2BACd1mD,EAAM+mD,EAAQD,EAASpD,EAASoD,EAAO,GAAG92B,cAAgB82B,EAAOj3C,UAAU,GAC3EhzB,KAAK8nE,kBA1+ER,KA4+ED,IAAI3sD,EAAS,KACTgZ,EAAa,KACjB,GAAI+1C,EAEI/uD,EADAnb,KAAKkoE,iBAAiB,KACbloE,KAAK6pE,2BAGL,iBAGZ,GAAI7pE,KAAKgoE,gBACVhoE,KAAKqjE,UACLloD,EAAS8uD,EACT9mD,EAAMnjB,KAAK6pE,2BACXK,GAAQ,OAEP,GAAIlqE,KAAK+B,OAASigE,KAAQhiE,KAAK+nE,iBAAkB,CAClD,IAAIvtB,EAAUx6C,KAAK6nE,WACfh6C,EAAM7tB,KAAKsoE,YACXzyD,EAAS7V,KAAKyV,MAAMud,UAAUwnB,EAAUx6C,KAAK0xD,OAAQ1xD,KAAK6nE,WAAa7nE,KAAK0xD,QAChFv9B,EAAa,IAAIo0B,GAAc16B,EAAKhY,EAAQ7V,KAAKulD,SAAUvlD,KAAKwoD,QAGpE,GADAwhB,EAAS1nE,KAAK,IAAImmD,GAAgBzoD,KAAK6/C,KAAK9W,GAAQ5lB,EAAK+mD,EAAO/uD,EAAQgZ,IACpEn0B,KAAKgoE,kBAAoBkC,EAAO,CAChC,IAAIC,EAAWnqE,KAAK6nE,WACpB7nE,KAAKqjE,UACL,IAAI+G,EAAUpqE,KAAK6pE,2BACnBG,EAAS1nE,KAAK,IAAImmD,GAAgBzoD,KAAK6/C,KAAKsqB,GAAWC,GAAS,EAAMjnD,EAAK,OAE1EnjB,KAAK8nE,kBAAkB7X,KACxBjwD,KAAK8nE,kBA9gFR,UAghFI9nE,KAAKojB,MAAQpjB,KAAK0hE,OAAOngE,QAClC,OAAO,IAAI+jE,GAA2B0E,KAAoBhqE,KAAKwoD,SAEnE0d,EAAUrlE,UAAU0B,MAAQ,SAAU0oC,EAAS7nB,QAC7B,IAAVA,IAAoBA,EAAQ,MAChCpjB,KAAKwoD,OAAOlmD,KAAK,IAAI0iD,GAAY/Z,EAASjrC,KAAKyV,MAAOzV,KAAKqqE,aAAajnD,GAAQpjB,KAAKulD,WACrFvlD,KAAKsqE,QAETpE,EAAUrlE,UAAUwpE,aAAe,SAAUjnD,GAIzC,YAHc,IAAVA,IAAoBA,EAAQ,MACnB,MAATA,IACAA,EAAQpjB,KAAKojB,OACTA,EAAQpjB,KAAK0hE,OAAOngE,OAAU,cAAgBvB,KAAK0hE,OAAOt+C,GAAOA,MAAQ,GAAK,MAClF,gCAcR8iD,EAAUrlE,UAAUypE,KAAO,WAEvB,IADA,IAAIjpE,EAAIrB,KAAK+B,KACN/B,KAAKojB,MAAQpjB,KAAK0hE,OAAOngE,SAAWF,EAAE8gE,YAAYlS,MACpDjwD,KAAK0nE,iBAAmB,IAAMrmE,EAAE8gE,YAjjF/B,OAkjFDniE,KAAK4nE,iBAAmB,IAAMvmE,EAAE8gE,YA7gF/B,QA8gFDniE,KAAK2nE,mBAAqB,IAAMtmE,EAAE8gE,YA7hF/B,MA8hFAniE,KAAK+B,KAAKmhE,WACVljE,KAAKwoD,OAAOlmD,KAAK,IAAI0iD,GAAYhlD,KAAK+B,KAAK0X,WAAYzZ,KAAKyV,MAAOzV,KAAKqqE,eAAgBrqE,KAAKulD,WAEjGvlD,KAAKqjE,UACLhiE,EAAIrB,KAAK+B,MAGVmkE,EA1hBmB,GA4hB1BK,GAAyC,WACzC,SAASA,IACLvmE,KAAKwoD,UA+BT,OA7BA+d,EAAwBC,MAAQ,SAAU34C,GACtC,IAAI1sB,EAAI,IAAIolE,EAEZ,OADA14C,EAAI2b,MAAMroC,GACHA,EAAEqnD,QAEb+d,EAAwB1lE,UAAU8kD,sBAAwB,SAAU93B,EAAK3M,KACzEqlD,EAAwB1lE,UAAUymD,mBAAqB,SAAUz5B,EAAK3M,KACtEqlD,EAAwB1lE,UAAUkmD,sBAAwB,SAAUl5B,EAAK3M,KACzEqlD,EAAwB1lE,UAAUslD,kBAAoB,SAAUt4B,EAAK3M,KACrEqlD,EAAwB1lE,UAAUwlD,mBAAqB,SAAUx4B,EAAK3M,KACtEqlD,EAAwB1lE,UAAU0lD,sBAAwB,SAAU14B,EAAK3M,KACzEqlD,EAAwB1lE,UAAUonD,gBAAkB,SAAUp6B,EAAK3M,KACnEqlD,EAAwB1lE,UAAUsnD,oBAAsB,SAAUt6B,EAAK3M,KACvEqlD,EAAwB1lE,UAAUynD,kBAAoB,SAAUz6B,EAAK3M,KACrEqlD,EAAwB1lE,UAAUomD,kBAAoB,SAAUp5B,EAAK3M,GAAWlhB,KAAK6oD,SAASh7B,EAAIkzB,cAClGwlB,EAAwB1lE,UAAUsmD,gBAAkB,SAAUt5B,EAAK3M,GAAWlhB,KAAK6oD,SAASh7B,EAAInO,SAChG6mD,EAAwB1lE,UAAU8mD,YAAc,SAAU95B,EAAK3M,KAC/DqlD,EAAwB1lE,UAAUgnD,eAAiB,SAAUh6B,EAAK3M,KAClEqlD,EAAwB1lE,UAAUknD,mBAAqB,SAAUl6B,EAAK3M,KACtEqlD,EAAwB1lE,UAAUolD,iBAAmB,SAAUp4B,EAAK3M,KACpEqlD,EAAwB1lE,UAAUgmD,UAAY,SAAUh5B,EAAK3M,GAAWlhB,KAAKwoD,OAAOlmD,KAAK,UACzFikE,EAAwB1lE,UAAU4lD,eAAiB,SAAU54B,EAAK3M,KAClEqlD,EAAwB1lE,UAAU8lD,gBAAkB,SAAU94B,EAAK3M,KACnEqlD,EAAwB1lE,UAAUgoD,SAAW,SAAUC,GACnD,IAAIt0C,EAAQxU,KACZ,OAAO8oD,EAAKptC,IAAI,SAAUuL,GAAQ,OAAOA,EAAKuiB,MAAMh1B,MAExD+xD,EAAwB1lE,UAAUglD,WAAa,SAAUh4B,EAAK3M,KAC9DqlD,EAAwB1lE,UAAU2kD,WAAa,SAAU33B,EAAK3M,KACvDqlD,EAjCiC,GA4DxCgE,GAAyB,WACzB,SAASA,EAAQC,EAAMvF,QACF,IAAbA,IAAuBA,GAAY,GACvCjlE,KAAKwqE,KAAOA,EACZxqE,KAAKilE,SAAWA,EA8BpB,OA5BA7kE,OAAOw7C,eAAe2uB,EAAQ1pE,UAAW,SACrCya,IAAK,WAAc,OAAQtb,KAAKwqE,OAASxqE,KAAKwqE,KAAKjpE,QACnDs6C,YAAY,EACZC,cAAc,IAElB17C,OAAOw7C,eAAe2uB,EAAQ1pE,UAAW,QACrCya,IAAK,WAAc,OAAOtb,KAAKwqE,KAAK,IACpC3uB,YAAY,EACZC,cAAc,IAElB17C,OAAOw7C,eAAe2uB,EAAQ1pE,UAAW,QACrCya,IAAK,WAAc,OAAOtb,KAAKwqE,KAAKxqE,KAAKwqE,KAAKjpE,OAAS,IACvDs6C,YAAY,EACZC,cAAc,IAElByuB,EAAQ1pE,UAAU4pE,SAAW,SAAUxjD,GACnC,OAAOA,GAAQjnB,KAAKwqE,KAAKxqE,KAAKwqE,KAAK3nE,QAAQokB,GAAQ,IAEvDsjD,EAAQ1pE,UAAU6pE,QAAU,SAAUzjD,GAAQ,OAAOjnB,KAAKwqE,KAAKxqE,KAAKwqE,KAAK3nE,QAAQokB,GAAQ,IACzFsjD,EAAQ1pE,UAAUuc,MAAQ,SAAUutD,GAChC,IAAK,IAAIvpE,EAAIpB,KAAKwqE,KAAKjpE,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC5C,IAAIigC,EAAOrhC,KAAKwqE,KAAKppE,GACrB,GAAIigC,aAAgBspC,EAChB,OAAOtpC,IAGnBkpC,EAAQ1pE,UAAUyB,KAAO,SAAU2kB,GAAQjnB,KAAKwqE,KAAKloE,KAAK2kB,IAC1DsjD,EAAQ1pE,UAAUo0C,IAAM,WAAc,OAAOj1C,KAAKwqE,KAAKv1B,OAChDs1B,EAlCiB,GA4CxBK,GAAwB,WACxB,SAASrhC,EAAKvnC,EAAOihB,EAAYyiB,GAC7B1lC,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAClBjjB,KAAK0lC,KAAOA,EAGhB,OADA6D,EAAK1oC,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQwoB,UAAUzpC,KAAMkhB,IAC7EqoB,EAPgB,GASvBshC,GAA2B,WAC3B,SAASA,EAAUC,EAAa9nD,EAAM8mB,EAAO7mB,EAAY8nD,EAAuBrlC,GAC5E1lC,KAAK8qE,YAAcA,EACnB9qE,KAAKgjB,KAAOA,EACZhjB,KAAK8pC,MAAQA,EACb9pC,KAAKijB,WAAaA,EAClBjjB,KAAK+qE,sBAAwBA,EAC7B/qE,KAAK0lC,KAAOA,EAGhB,OADAmlC,EAAUhqE,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQ+pD,eAAehrE,KAAMkhB,IACvF2pD,EAVmB,GAY1BI,GAA+B,WAC/B,SAASA,EAAcjpE,EAAOmyB,EAAYlR,EAAYioD,EAAiBC,GACnEnrE,KAAKgC,MAAQA,EACbhC,KAAKm0B,WAAaA,EAClBn0B,KAAKijB,WAAaA,EAClBjjB,KAAKkrE,gBAAkBA,EACvBlrE,KAAKmrE,cAAgBA,EAGzB,OADAF,EAAcpqE,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQmqD,mBAAmBprE,KAAMkhB,IAC/F+pD,EATuB,GAW9BryB,GAA2B,WAC3B,SAASA,EAAU3jC,EAAMjT,EAAOihB,EAAYi4C,EAAWx1B,GACnD1lC,KAAKiV,KAAOA,EACZjV,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAClBjjB,KAAKk7D,UAAYA,EACjBl7D,KAAK0lC,KAAOA,EAGhB,OADAkT,EAAU/3C,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQoqD,eAAerrE,KAAMkhB,IACvF03B,EATmB,GAW1B0yB,GAA2B,WAC3B,SAAS5P,EAAQzmD,EAAMgD,EAAO0xB,EAAU1mB,EAAY24C,EAAiBC,EAAen2B,QACxD,IAApBk2B,IAA8BA,EAAkB,WAC9B,IAAlBC,IAA4BA,EAAgB,MAChD77D,KAAKiV,KAAOA,EACZjV,KAAKiY,MAAQA,EACbjY,KAAK2pC,SAAWA,EAChB3pC,KAAKijB,WAAaA,EAClBjjB,KAAK47D,gBAAkBA,EACvB57D,KAAK67D,cAAgBA,EACrB77D,KAAK0lC,KAAOA,EAGhB,OADAg2B,EAAQ76D,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQ66C,aAAa97D,KAAMkhB,IACnFw6C,EAbmB,GAe1B6P,GAAyB,WACzB,SAASA,EAAQvpE,EAAOihB,GACpBjjB,KAAKgC,MAAQA,EACbhC,KAAKijB,WAAaA,EAGtB,OADAsoD,EAAQ1qE,UAAU2oC,MAAQ,SAAUvoB,EAASC,GAAW,OAAOD,EAAQuqD,aAAaxrE,KAAMkhB,IACnFqqD,EANiB,GAQ5B,SAASE,GAAWxqD,EAASwnB,EAAOvnB,QAChB,IAAZA,IAAsBA,EAAU,MACpC,IAAI1H,KACAgwB,EAAQvoB,EAAQuoB,MAChB,SAAU3b,GAAO,OAAO5M,EAAQuoB,MAAM3b,EAAK3M,IAAY2M,EAAI2b,MAAMvoB,EAASC,IAC1E,SAAU2M,GAAO,OAAOA,EAAI2b,MAAMvoB,EAASC,IAO/C,OANAunB,EAAM/zB,QAAQ,SAAUmZ,GACpB,IAAI69C,EAAYliC,EAAM3b,GAClB69C,GACAlyD,EAAOlX,KAAKopE,KAGblyD,EAEX,IAuEI4nD,GAvEAuK,GAAoC,WACpC,SAASC,KAyBT,OAvBAA,EAAiB/qE,UAAUi7D,aAAe,SAAUjuC,EAAK3M,GACrDlhB,KAAK6rE,cAAc3qD,EAAS,SAAUsoB,GAClCA,EAAM3b,EAAI5V,OACVuxB,EAAM3b,EAAI8b,aAGlBiiC,EAAiB/qE,UAAUwqE,eAAiB,SAAUx9C,EAAK3M,KAC3D0qD,EAAiB/qE,UAAU4oC,UAAY,SAAU5b,EAAK3M,KACtD0qD,EAAiB/qE,UAAU2qE,aAAe,SAAU39C,EAAK3M,KACzD0qD,EAAiB/qE,UAAUmqE,eAAiB,SAAUn9C,EAAK3M,GACvD,OAAOlhB,KAAK6rE,cAAc3qD,EAAS,SAAUsoB,GAASA,EAAM3b,EAAIic,UAEpE8hC,EAAiB/qE,UAAUuqE,mBAAqB,SAAUv9C,EAAK3M,KAC/D0qD,EAAiB/qE,UAAUgrE,cAAgB,SAAU3qD,EAASwQ,GAC1D,IAAIpZ,KACApX,EAAIlB,KAMR,OADA0xB,EAJA,SAAS8X,EAAMG,GACPA,GACArxB,EAAQhW,KAAKmpE,GAAWvqE,EAAGyoC,EAAUzoB,SAGnCze,OAAOhB,SAAU6W,IAExBszD,EA1B4B,IAwEvC,SAAWxK,GACPA,EAAUA,EAA0B,eAAI,GAAK,iBAC7CA,EAAUA,EAAwB,aAAI,GAAK,eAC3CA,EAAUA,EAA6B,kBAAI,GAAK,oBAChDA,EAAUA,EAAqB,UAAI,GAAK,YACxCA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAA8B,mBAAI,GAAK,qBACjDA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAyB,cAAI,GAAK,gBAC5CA,EAAUA,EAAuB,YAAI,GAAK,cAC1CA,EAAUA,EAAuB,YAAI,GAAK,cAC1CA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAqB,UAAI,IAAM,YACzCA,EAAUA,EAAsB,WAAI,IAAM,aAC1CA,EAAUA,EAAoB,SAAI,IAAM,WACxCA,EAAUA,EAAgC,qBAAI,IAAM,uBACpDA,EAAUA,EAAgC,qBAAI,IAAM,uBACpDA,EAAUA,EAAoC,yBAAI,IAAM,2BACxDA,EAAUA,EAAkC,uBAAI,IAAM,yBACtDA,EAAUA,EAA8B,mBAAI,IAAM,qBAClDA,EAAUA,EAAe,IAAI,IAAM,MApBvC,CAqBGA,KAAcA,QACjB,IAAI0K,GACA,SAASvzB,GAAMv1B,EAAMqH,EAAOpH,GACxBjjB,KAAKgjB,KAAOA,EACZhjB,KAAKqqB,MAAQA,EACbrqB,KAAKijB,WAAaA,GAItB8oD,GAA4B,SAAUhrD,GAEtC,SAASgrD,EAAWC,EAAUC,EAAWpsB,GACrC,IAAIrrC,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,EAAMmsB,IAAahsE,KAEjD,OADAwU,EAAMy3D,UAAYA,EACXz3D,EAEX,OANA9T,EAAUqrE,EAAYhrD,GAMfgrD,EAPoB,CAQ7BnZ,IACEsZ,GACA,SAASA,GAAexK,EAAQlZ,GAC5BxoD,KAAK0hE,OAASA,EACd1hE,KAAKwoD,OAASA,GAUlB2jB,GAAqB,SACzB,SAASC,GAA6BC,GAElC,MAAO,0BADIA,IAAajd,GAAO,MAAQ7sC,OAAOqQ,aAAay5C,IACjB,IAE9C,SAASC,GAAuBC,GAC5B,MAAO,mBAAsBA,EAAY,oDAE7C,IAAIC,GACA,SAASA,GAAkBjqE,GACvBvC,KAAKuC,MAAQA,GAKjBkqE,GAA4B,WAO5B,SAASA,EAAWC,EAAOC,EAAmBC,EAAcC,QAC3B,IAAzBA,IAAmCA,EAAuB/xB,IAC9D96C,KAAK0sE,MAAQA,EACb1sE,KAAK2sE,kBAAoBA,EACzB3sE,KAAK4sE,aAAeA,EACpB5sE,KAAK6sE,qBAAuBA,EAE5B7sE,KAAK8sE,OAAS,EACd9sE,KAAK+sE,WAAa,EAClB/sE,KAAKgtE,QAAU,EACfhtE,KAAKitE,MAAQ,EACbjtE,KAAKktE,SAAW,EAChBltE,KAAKmtE,uBACLntE,KAAKotE,kBAAmB,EACxBptE,KAAK0hE,UACL1hE,KAAKwoD,UACLxoD,KAAKqtE,OAASX,EAAMt6B,QACpBpyC,KAAKstE,QAAUZ,EAAMt6B,QAAQ7wC,OAC7BvB,KAAKutE,WAufT,OArfAd,EAAW5rE,UAAU2sE,wBAA0B,SAAUp7B,GAKrD,OAAOA,EAAQnlB,QAAQk/C,GAAoB,OAE/CM,EAAW5rE,UAAU0gE,SAAW,WAC5B,KAAOvhE,KAAK8sE,QAAU1d,IAAM,CACxB,IAAIrmB,EAAQ/oC,KAAKytE,eACjB,IACQztE,KAAK0tE,iBA75Ff,IA85Fc1tE,KAAK0tE,iBA/6FjB,IAg7FgB1tE,KAAK0tE,iBAp5FjB,IAq5FY1tE,KAAK2tE,cAAc5kC,GAEd/oC,KAAK0tE,iBAAiB3d,IAC3B/vD,KAAK4tE,gBAAgB7kC,GAGrB/oC,KAAK6tE,gBAAgB9kC,GAGpB/oC,KAAK0tE,iBAAiB1d,IAC3BhwD,KAAK8tE,iBAAiB/kC,GAGtB/oC,KAAK+tE,gBAAgBhlC,GAGlB/oC,KAAK4sE,cAAgB5sE,KAAKguE,0BACjChuE,KAAKiuE,eAGb,MAAO7rE,GACH,KAAIA,aAAaoqE,IAIb,MAAMpqE,EAHNpC,KAAKwoD,OAAOlmD,KAAKF,EAAEG,QAS/B,OAFAvC,KAAKkuE,YAAY9M,GAAUY,KAC3BhiE,KAAKmuE,cACE,IAAIjC,GAwenB,SAASkC,EAAgBC,GAGrB,IAFA,IAAIC,KACAC,OAAexxD,EACV3b,EAAI,EAAGA,EAAIitE,EAAU9sE,OAAQH,IAAK,CACvC,IAAIsb,EAAQ2xD,EAAUjtE,GAClBmtE,GAAgBA,EAAavrD,MAAQo+C,GAAUoN,MAAQ9xD,EAAMsG,MAAQo+C,GAAUoN,MAC/ED,EAAalkD,MAAM,IAAM3N,EAAM2N,MAAM,GACrCkkD,EAAatrD,WAAWomB,IAAM3sB,EAAMuG,WAAWomB,KAI/CilC,EAAUhsE,KADVisE,EAAe7xD,GAIvB,OAAO4xD;;;;;;;OAtfuBF,CAAgBpuE,KAAK0hE,QAAS1hE,KAAKwoD,SAMjEikB,EAAW5rE,UAAUmtE,uBAAyB,WAC1C,GAAIS,GAAqBzuE,KAAKqtE,OAAQrtE,KAAKgtE,OAAQhtE,KAAK6sE,sBAEpD,OADA7sE,KAAK0uE,8BACE,EAEX,GAodR,SAASC,EAAqBvL,GAC1B,OAAOA,IAASlT,IAAOqB,GAAc6R,IAAS9R,GAAQ8R,GArd9CuL,CAAqB3uE,KAAK8sE,QAAU9sE,KAAK4uE,qBAEzC,OADA5uE,KAAK6uE,8BACE,EAEX,GAl7FM,MAk7FF7uE,KAAK8sE,MAAmB,CACxB,GAAI9sE,KAAK8uE,qBAEL,OADA9uE,KAAK+uE,4BACE,EAEX,GAAI/uE,KAAK4uE,qBAEL,OADA5uE,KAAKgvE,4BACE,EAGf,OAAO,GAEXvC,EAAW5rE,UAAU4sE,aAAe,WAChC,OAAO,IAAIhc,GAAczxD,KAAK0sE,MAAO1sE,KAAKgtE,OAAQhtE,KAAKitE,MAAOjtE,KAAKktE,UAEvET,EAAW5rE,UAAUouE,SAAW,SAAUlmC,EAAOM,GAG7C,YAFc,IAAVN,IAAoBA,EAAQ/oC,KAAKytE,qBACzB,IAARpkC,IAAkBA,EAAMrpC,KAAKytE,gBAC1B,IAAI/a,GAAgB3pB,EAAOM,IAEtCojC,EAAW5rE,UAAUqtE,YAAc,SAAUlrD,EAAM+lB,QACjC,IAAVA,IAAoBA,EAAQ/oC,KAAKytE,gBACrCztE,KAAKkvE,mBAAqBnmC,EAC1B/oC,KAAKmvE,kBAAoBnsD,GAE7BypD,EAAW5rE,UAAUstE,UAAY,SAAU9jD,EAAOgf,QAClC,IAARA,IAAkBA,EAAMrpC,KAAKytE,gBACjC,IAAI/wD,EAAQ,IAAIovD,GAAQ9rE,KAAKmvE,kBAAmB9kD,EAAO,IAAIqoC,GAAgB1yD,KAAKkvE,mBAAoB7lC,IAIpG,OAHArpC,KAAK0hE,OAAOp/D,KAAKoa,GACjB1c,KAAKkvE,mBAAqB,KAC1BlvE,KAAKmvE,kBAAoB,KAClBzyD,GAEX+vD,EAAW5rE,UAAUuuE,aAAe,SAAUp9C,EAAK6tB,GAC3C7/C,KAAK4uE,uBACL58C,GAAO,sFAEX,IAAIzvB,EAAQ,IAAIwpE,GAAW/5C,EAAKhyB,KAAKmvE,kBAAmBtvB,GAGxD,OAFA7/C,KAAKkvE,mBAAqB,KAC1BlvE,KAAKmvE,kBAAoB,KAClB,IAAI3C,GAAkBjqE,IAEjCkqE,EAAW5rE,UAAU0sE,SAAW,WAC5B,GAAIvtE,KAAKgtE,QAAUhtE,KAAKstE,QACpB,MAAMttE,KAAKovE,aAAahD,GAA6Bhd,IAAOpvD,KAAKivE,YAEjEjvE,KAAK8sE,QAAUxd,IACftvD,KAAKitE,QACLjtE,KAAKktE,QAAU,GAEVltE,KAAK8sE,QAAUxd,IAAOtvD,KAAK8sE,QAAUrd,IAC1CzvD,KAAKktE,UAETltE,KAAKgtE,SACLhtE,KAAK8sE,MAAQ9sE,KAAKgtE,QAAUhtE,KAAKstE,QAAUle,GAAOpvD,KAAKqtE,OAAO36C,WAAW1yB,KAAKgtE,QAC9EhtE,KAAK+sE,UACD/sE,KAAKgtE,OAAS,GAAKhtE,KAAKstE,QAAUle,GAAOpvD,KAAKqtE,OAAO36C,WAAW1yB,KAAKgtE,OAAS,IAEtFP,EAAW5rE,UAAU6sE,iBAAmB,SAAUrB,GAC9C,OAAIrsE,KAAK8sE,QAAUT,IACfrsE,KAAKutE,YACE,IAIfd,EAAW5rE,UAAUwuE,gCAAkC,SAAUhD,GAC7D,QAiZR,SAASiD,EAA+BC,EAAOC,GAC3C,OAAOC,GAAoBF,IAAUE,GAAoBD,GAlZjDF,CAA+BtvE,KAAK8sE,MAAOT,KAC3CrsE,KAAKutE,YACE,IAIfd,EAAW5rE,UAAU6uE,iBAAmB,SAAUrD,GAC9C,IAAI9mB,EAAWvlD,KAAKytE,eACpB,IAAKztE,KAAK0tE,iBAAiBrB,GACvB,MAAMrsE,KAAKovE,aAAahD,GAA6BpsE,KAAK8sE,OAAQ9sE,KAAKivE,SAAS1pB,EAAUA,KAGlGknB,EAAW5rE,UAAU8uE,YAAc,SAAUC,GACzC,IAAI/sD,EAAM+sD,EAAMruE,OAChB,GAAIvB,KAAKgtE,OAASnqD,EAAM7iB,KAAKstE,QACzB,OAAO,EAGX,IADA,IAAIuC,EAAkB7vE,KAAK8vE,gBAClB1uE,EAAI,EAAGA,EAAIyhB,EAAKzhB,IACrB,IAAKpB,KAAK0tE,iBAAiBkC,EAAMl9C,WAAWtxB,IAIxC,OADApB,KAAK+vE,iBAAiBF,IACf,EAGf,OAAO,GAEXpD,EAAW5rE,UAAUmvE,2BAA6B,SAAUJ,GACxD,IAAK,IAAIxuE,EAAI,EAAGA,EAAIwuE,EAAMruE,OAAQH,IAC9B,IAAKpB,KAAKqvE,gCAAgCO,EAAMl9C,WAAWtxB,IACvD,OAAO,EAGf,OAAO,GAEXqrE,EAAW5rE,UAAUovE,YAAc,SAAUL,GACzC,IAAIrqB,EAAWvlD,KAAKytE,eACpB,IAAKztE,KAAK2vE,YAAYC,GAClB,MAAM5vE,KAAKovE,aAAahD,GAA6BpsE,KAAK8sE,OAAQ9sE,KAAKivE,SAAS1pB,KAGxFknB,EAAW5rE,UAAUqvE,wBAA0B,SAAUjP,GACrD,MAAQA,EAAUjhE,KAAK8sE,QACnB9sE,KAAKutE,YAGbd,EAAW5rE,UAAUsvE,wBAA0B,SAAUlP,EAAWp+C,GAChE,IAAIkmB,EAAQ/oC,KAAKytE,eAEjB,GADAztE,KAAKkwE,wBAAwBjP,GACzBjhE,KAAKgtE,OAASjkC,EAAM2oB,OAAS7uC,EAC7B,MAAM7iB,KAAKovE,aAAahD,GAA6BpsE,KAAK8sE,OAAQ9sE,KAAKivE,SAASlmC,EAAOA,KAG/F0jC,EAAW5rE,UAAUuvE,kBAAoB,SAAU9I,GAC/C,KAAOtnE,KAAK8sE,QAAUxF,GAClBtnE,KAAKutE,YAGbd,EAAW5rE,UAAUwvE,UAAY,SAAUC,GACvC,GAAIA,GAxlGK,KAwlGatwE,KAAK8sE,MACvB,OAAO9sE,KAAKuwE,gBAGZ,IAAIntD,EAAQpjB,KAAKgtE,OAEjB,OADAhtE,KAAKutE,WACEvtE,KAAKqtE,OAAOjqD,IAG3BqpD,EAAW5rE,UAAU0vE,cAAgB,WACjC,IAAIxnC,EAAQ/oC,KAAKytE,eAEjB,GADAztE,KAAKutE,YACDvtE,KAAK0tE,iBAvmGL,IAynGC,CACD,IAAI8C,EAAgBxwE,KAAK8vE,gBAEzB,GADA9vE,KAAKkwE,wBAAwBO,IACzBzwE,KAAK8sE,OAAS7c,GAEd,OADAjwD,KAAK+vE,iBAAiBS,GACf,IAEXxwE,KAAKutE,WACL,IAAIr4C,EAASl1B,KAAKqtE,OAAOr6C,UAAU+V,EAAM2oB,OAAS,EAAG1xD,KAAKgtE,OAAS,GAC/D1F,EAAO7jE,EAAeyxB,GAC1B,IAAKoyC,EACD,MAAMtnE,KAAKovE,aAAa9C,GAAuBp3C,GAASl1B,KAAKivE,SAASlmC,IAE1E,OAAOu+B,EA9BP,IAAIoJ,EAAQ1wE,KAAK0tE,iBAjkGpB,MAikG4C1tE,KAAK0tE,iBAhlGjD,IAilGOiD,EAAc3wE,KAAKytE,eAAe/b,OAEtC,GADA1xD,KAAKkwE,wBAAwBU,IACzB5wE,KAAK8sE,OAAS7c,GACd,MAAMjwD,KAAKovE,aAAahD,GAA6BpsE,KAAK8sE,OAAQ9sE,KAAKivE,YAE3EjvE,KAAKutE,WACL,IAAIsD,EAAS7wE,KAAKqtE,OAAOr6C,UAAU29C,EAAa3wE,KAAKgtE,OAAS,GAC9D,IACI,IAAIX,EAAW5H,SAASoM,EAAQH,EAAQ,GAAK,IAC7C,OAAOnuD,OAAOqQ,aAAay5C,GAE/B,MAAO34D,GACH,IAAIo9D,EAAS9wE,KAAKqtE,OAAOr6C,UAAU+V,EAAM2oB,OAAS,EAAG1xD,KAAKgtE,OAAS,GACnE,MAAMhtE,KAAKovE,aAAa9C,GAAuBwE,GAAS9wE,KAAKivE,SAASlmC,MAmBlF0jC,EAAW5rE,UAAUkwE,gBAAkB,SAAUT,EAAgBU,EAAgBC,GAC7E,IAAIC,EACAC,EAAYnxE,KAAKytE,eACrBztE,KAAKkuE,YAAYoC,EAAiBlP,GAAU5pD,mBAAqB4pD,GAAU/pD,SAAU85D,GAErF,IADA,IAAI9mD,KAEA6mD,EAAgBlxE,KAAKytE,gBACjBztE,KAAK0tE,iBAAiBsD,KAAmBC,KAO7C,IAJIjxE,KAAKgtE,OAASkE,EAAcxf,QAE5BrnC,EAAM/nB,KAAKtC,KAAKqtE,OAAOr6C,UAAUk+C,EAAcxf,OAAQ1xD,KAAKgtE,SAEzDhtE,KAAK8sE,QAAUkE,GAClB3mD,EAAM/nB,KAAKtC,KAAKqwE,UAAUC,IAGlC,OAAOtwE,KAAKmuE,WAAWnuE,KAAKwtE,wBAAwBnjD,EAAM/Q,KAAK,MAAO43D,IAE1EzE,EAAW5rE,UAAU+sE,gBAAkB,SAAU7kC,GAC7C,IAAIv0B,EAAQxU,KACZA,KAAKkuE,YAAY9M,GAAUgQ,cAAeroC,GAC1C/oC,KAAK0vE,iBAAiB3f,IACtB/vD,KAAKmuE,cACL,IAAIkD,EAAYrxE,KAAK+wE,iBAAgB,EAAOhhB,GAAQ,WAAc,OAAOv7C,EAAMm7D,YAAY,QAC3F3vE,KAAKkuE,YAAY9M,GAAUkQ,YAAaD,EAAUpuD,WAAWomB,KAC7DrpC,KAAKmuE,eAET1B,EAAW5rE,UAAU8sE,cAAgB,SAAU5kC,GAC3C,IAAIv0B,EAAQxU,KACZA,KAAKkuE,YAAY9M,GAAUmQ,YAAaxoC,GACxC/oC,KAAKiwE,YAAY,UACjBjwE,KAAKmuE,cACL,IAAIkD,EAAYrxE,KAAK+wE,iBAAgB,EA/oG7B,GA+oG+C,WAAc,OAAOv8D,EAAMm7D,YAAY,QAC9F3vE,KAAKkuE,YAAY9M,GAAUoQ,UAAWH,EAAUpuD,WAAWomB,KAC3DrpC,KAAKmuE,eAET1B,EAAW5rE,UAAUgtE,gBAAkB,SAAU9kC,GAC7C/oC,KAAKkuE,YAAY9M,GAAUqQ,SAAU1oC,GACrC/oC,KAAKowE,kBAAkBjgB,IACvBnwD,KAAKutE,WACLvtE,KAAKmuE,WAAWnuE,KAAKqtE,OAAOr6C,UAAU+V,EAAM2oB,OAAS,EAAG1xD,KAAKgtE,OAAS,MAE1EP,EAAW5rE,UAAU6wE,sBAAwB,WAGzC,IAFA,IAyOargB,EApOTsgB,EALAC,EAAoB5xE,KAAKgtE,OACzBzpE,EAAS,KA1qGR,KA2qGEvD,KAAK8sE,WAuOCzb,EAvOgCrxD,KAAK8sE,OAwOvCpc,IAAMM,GAAKK,KAAUA,EAAOf,IAAME,GAAKa,KACjDA,EAAOjB,IAAMiB,EAAOhB,MAxOjBrwD,KAAKutE,WAaT,OAzrGK,KA+qGDvtE,KAAK8sE,OACL9sE,KAAKutE,WACLhqE,EAASvD,KAAKqtE,OAAOr6C,UAAU4+C,EAAmB5xE,KAAKgtE,OAAS,GAChE2E,EAAY3xE,KAAKgtE,QAGjB2E,EAAYC,EAEhB5xE,KAAKmwE,wBAAwB0B,GAAW7xE,KAAKgtE,SAAW2E,EAAY,EAAI,IAEhEpuE,EADGvD,KAAKqtE,OAAOr6C,UAAU2+C,EAAW3xE,KAAKgtE,UAGrDP,EAAW5rE,UAAUktE,gBAAkB,SAAUhlC,GAC7C,IACI9lC,EACA6uE,EAFAC,EAAW/xE,KAAK8vE,gBAGpB,IACI,IAAKve,GAAcvxD,KAAK8sE,OACpB,MAAM9sE,KAAKovE,aAAahD,GAA6BpsE,KAAK8sE,OAAQ9sE,KAAKivE,YAE3E,IAAI0C,EAAY3xE,KAAKgtE,OAKrB,IAJAhtE,KAAKgyE,qBAAqBjpC,GAE1B+oC,GADA7uE,EAAUjD,KAAKqtE,OAAOr6C,UAAU2+C,EAAW3xE,KAAKgtE,SACrBj4D,cAC3B/U,KAAKkwE,wBAAwB+B,IACtBjyE,KAAK8sE,QAAU9c,IAAUhwD,KAAK8sE,QAAU3c,IAC3CnwD,KAAKkyE,wBACLlyE,KAAKkwE,wBAAwB+B,IACzBjyE,KAAK0tE,iBAAiBxd,MACtBlwD,KAAKkwE,wBAAwB+B,IAC7BjyE,KAAKmyE,0BAETnyE,KAAKkwE,wBAAwB+B,IAEjCjyE,KAAKoyE,qBAET,MAAOhwE,GACH,GAAIA,aAAaoqE,GAMb,OAJAxsE,KAAK+vE,iBAAiBgC,GAEtB/xE,KAAKkuE,YAAY9M,GAAUoN,KAAMzlC,QACjC/oC,KAAKmuE,WAAW,MAGpB,MAAM/rE,EAEV,IAAIiwE,EAAmBryE,KAAK2sE,kBAAkB1pE,GAAS+Q,YACnDq+D,IAAqB5yE,EAAQsB,eAAesW,SAC5CrX,KAAKsyE,4BAA4BR,GAAkB,GAE9CO,IAAqB5yE,EAAQsB,eAAeyW,oBACjDxX,KAAKsyE,4BAA4BR,GAAkB,IAG3DrF,EAAW5rE,UAAUyxE,4BAA8B,SAAUR,EAAkBxB,GAC3E,IAAI97D,EAAQxU,KACRqxE,EAAYrxE,KAAK+wE,gBAAgBT,EAtuGnC,GAsuGwD,WACtD,QAAK97D,EAAMk5D,iBAAiB1d,MAE5Bx7C,EAAM07D,wBAAwB+B,MACzBz9D,EAAMw7D,2BAA2B8B,KAEtCt9D,EAAM07D,wBAAwB+B,IACvBz9D,EAAMk5D,iBAAiBvd,QAElCnwD,KAAKkuE,YAAY9M,GAAUmR,UAAWlB,EAAUpuD,WAAWomB,KAC3DrpC,KAAKmuE,WAAW,KAAM2D,KAE1BrF,EAAW5rE,UAAUmxE,qBAAuB,SAAUjpC,GAClD/oC,KAAKkuE,YAAY9M,GAAUoR,eAAgBzpC,GAC3C,IAAI1e,EAAQrqB,KAAK0xE,wBACjB1xE,KAAKmuE,UAAU9jD,IAEnBoiD,EAAW5rE,UAAUqxE,sBAAwB,WACzClyE,KAAKkuE,YAAY9M,GAAUqR,WAC3B,IAAIC,EAAgB1yE,KAAK0xE,wBACzB1xE,KAAKmuE,UAAUuE,IAEnBjG,EAAW5rE,UAAUsxE,uBAAyB,WAE1C,IAAInwE,EACJ,GAFAhC,KAAKkuE,YAAY9M,GAAUuR,YAEvB3yE,KAAK8sE,QAAUjd,IAAO7vD,KAAK8sE,QAAUnd,GAAK,CAC1C,IAAIijB,EAAY5yE,KAAK8sE,MACrB9sE,KAAKutE,WAEL,IADA,IAAIljD,KACGrqB,KAAK8sE,QAAU8F,GAClBvoD,EAAM/nB,KAAKtC,KAAKqwE,WAAU,IAE9BruE,EAAQqoB,EAAM/Q,KAAK,IACnBtZ,KAAKutE,eAEJ,CACD,IAAIzO,EAAa9+D,KAAKgtE,OACtBhtE,KAAKmwE,wBAAwB0B,GAAW,GACxC7vE,EAAQhC,KAAKqtE,OAAOr6C,UAAU8rC,EAAY9+D,KAAKgtE,QAEnDhtE,KAAKmuE,WAAWnuE,KAAKwtE,wBAAwBxrE,MAEjDyqE,EAAW5rE,UAAUuxE,mBAAqB,WACtC,IAAInG,EAAYjsE,KAAK0tE,iBAAiB1d,IAAUoR,GAAUyR,kBAAoBzR,GAAU0R,aACxF9yE,KAAKkuE,YAAYjC,GACjBjsE,KAAK0vE,iBAAiBvf,IACtBnwD,KAAKmuE,eAET1B,EAAW5rE,UAAUitE,iBAAmB,SAAU/kC,GAC9C/oC,KAAKkuE,YAAY9M,GAAUmR,UAAWxpC,GACtC/oC,KAAKkwE,wBAAwB+B,IAC7B,IAAIS,EAAgB1yE,KAAK0xE,wBACzB1xE,KAAKkwE,wBAAwB+B,IAC7BjyE,KAAK0vE,iBAAiBvf,IACtBnwD,KAAKmuE,UAAUuE,IAEnBjG,EAAW5rE,UAAU6tE,2BAA6B,WAC9C1uE,KAAKkuE,YAAY9M,GAAU2R,qBAAsB/yE,KAAKytE,gBACtDztE,KAAK0vE,iBAAiBze,IACtBjxD,KAAKmuE,cACLnuE,KAAKmtE,oBAAoB7qE,KAAK8+D,GAAU2R,sBACxC/yE,KAAKkuE,YAAY9M,GAAU/pD,SAAUrX,KAAKytE,gBAC1C,IAAI9kD,EAAY3oB,KAAKgzE,WA1yGhB,IA2yGLhzE,KAAKmuE,WAAWxlD,GAAY3oB,KAAKytE,gBACjCztE,KAAK0vE,iBA5yGA,IA6yGL1vE,KAAKkwE,wBAAwB+B,IAC7BjyE,KAAKkuE,YAAY9M,GAAU/pD,SAAUrX,KAAKytE,gBAC1C,IAAIzqD,EAAOhjB,KAAKgzE,WA/yGX,IAgzGLhzE,KAAKmuE,WAAWnrD,GAAOhjB,KAAKytE,gBAC5BztE,KAAK0vE,iBAjzGA,IAkzGL1vE,KAAKkwE,wBAAwB+B,KAEjCxF,EAAW5rE,UAAUguE,2BAA6B,WAC9C7uE,KAAKkuE,YAAY9M,GAAU6R,qBAAsBjzE,KAAKytE,gBACtD,IAAIzrE,EAAQhC,KAAKgzE,WAAW/hB,IAASzgC,OACrCxwB,KAAKmuE,WAAWnsE,GAAQhC,KAAKytE,gBAC7BztE,KAAKkwE,wBAAwB+B,IAC7BjyE,KAAKkuE,YAAY9M,GAAU8R,yBAA0BlzE,KAAKytE,gBAC1DztE,KAAK0vE,iBAAiBze,IACtBjxD,KAAKmuE,aAAcnuE,KAAKytE,gBACxBztE,KAAKkwE,wBAAwB+B,IAC7BjyE,KAAKmtE,oBAAoB7qE,KAAK8+D,GAAU8R,2BAE5CzG,EAAW5rE,UAAUkuE,yBAA2B,WAC5C/uE,KAAKkuE,YAAY9M,GAAU+R,uBAAwBnzE,KAAKytE,gBACxDztE,KAAK0vE,iBA/xGC,KAgyGN1vE,KAAKmuE,aAAcnuE,KAAKytE,gBACxBztE,KAAKkwE,wBAAwB+B,IAC7BjyE,KAAKmtE,oBAAoBl4B,OAE7Bw3B,EAAW5rE,UAAUmuE,yBAA2B,WAC5ChvE,KAAKkuE,YAAY9M,GAAUgS,mBAAoBpzE,KAAKytE,gBACpDztE,KAAK0vE,iBAtyGC,KAuyGN1vE,KAAKmuE,cACLnuE,KAAKmtE,oBAAoBl4B,OAE7Bw3B,EAAW5rE,UAAUotE,aAAe,WAChC,IAAIllC,EAAQ/oC,KAAKytE,eACjBztE,KAAKkuE,YAAY9M,GAAUoN,KAAMzlC,GACjC,IAAI1e,KACJ,GACQrqB,KAAK6sE,sBAAwB7sE,KAAK2vE,YAAY3vE,KAAK6sE,qBAAqB9jC,QACxE1e,EAAM/nB,KAAKtC,KAAK6sE,qBAAqB9jC,OACrC/oC,KAAKotE,kBAAmB,GAEnBptE,KAAK6sE,sBAAwB7sE,KAAKotE,kBACvCptE,KAAK2vE,YAAY3vE,KAAK6sE,qBAAqBxjC,MAC3Chf,EAAM/nB,KAAKtC,KAAK6sE,qBAAqBxjC,KACrCrpC,KAAKotE,kBAAmB,GAGxB/iD,EAAM/nB,KAAKtC,KAAKqwE,WAAU,WAExBrwE,KAAKqzE,cACfrzE,KAAKmuE,WAAWnuE,KAAKwtE,wBAAwBnjD,EAAM/Q,KAAK,QAE5DmzD,EAAW5rE,UAAUwyE,WAAa,WAC9B,GA31GE,KA21GErzE,KAAK8sE,OAAiB9sE,KAAK8sE,QAAU1d,GACrC,OAAO,EAEX,GAAIpvD,KAAK4sE,eAAiB5sE,KAAKotE,iBAAkB,CAC7C,GAAIqB,GAAqBzuE,KAAKqtE,OAAQrtE,KAAKgtE,OAAQhtE,KAAK6sE,sBAEpD,OAAO,EAEX,GAv0GE,MAu0GE7sE,KAAK8sE,OAAqB9sE,KAAK8uE,qBAE/B,OAAO,EAGf,OAAO,GAEXrC,EAAW5rE,UAAUivE,cAAgB,WACjC,OAAQ9vE,KAAK8sE,MAAO9sE,KAAKgtE,OAAQhtE,KAAKktE,QAASltE,KAAKitE,MAAOjtE,KAAK0hE,OAAOngE,SAE3EkrE,EAAW5rE,UAAUmyE,WAAa,SAAU1L,GACxC,IAAIv+B,EAAQ/oC,KAAKgtE,OAEjB,OADAhtE,KAAKowE,kBAAkB9I,GAChBtnE,KAAKqtE,OAAOr6C,UAAU+V,EAAO/oC,KAAKgtE,SAE7CP,EAAW5rE,UAAUkvE,iBAAmB,SAAU9K,GAC9CjlE,KAAK8sE,MAAQ7H,EAAS,GACtBjlE,KAAKgtE,OAAS/H,EAAS,GACvBjlE,KAAKktE,QAAUjI,EAAS,GACxBjlE,KAAKitE,MAAQhI,EAAS,GACtB,IAAIqO,EAAWrO,EAAS,GACpBqO,EAAWtzE,KAAK0hE,OAAOngE,SAEvBvB,KAAK0hE,OAAS1hE,KAAK0hE,OAAO3+D,MAAM,EAAGuwE,KAG3C7G,EAAW5rE,UAAUiuE,mBAAqB,WACtC,OAAO9uE,KAAKmtE,oBAAoB5rE,OAAS,GACrCvB,KAAKmtE,oBAAoBntE,KAAKmtE,oBAAoB5rE,OAAS,KACvD6/D,GAAU8R,0BAEtBzG,EAAW5rE,UAAU+tE,mBAAqB,WACtC,OAAO5uE,KAAKmtE,oBAAoB5rE,OAAS,GACrCvB,KAAKmtE,oBAAoBntE,KAAKmtE,oBAAoB5rE,OAAS,KACvD6/D,GAAU2R,sBAEftG,EAhhBoB,GAkhB/B,SAASwF,GAAgB5gB,GACrB,OAAQD,GAAaC,IAASA,IAASjC,GAE3C,SAASyiB,GAAUxgB,GACf,OAAOD,GAAaC,IAASA,IAASlB,IAAOkB,IAASrB,IAClDqB,IAASxB,IAAOwB,IAAS1B,IAAO0B,IAASnB,GAMjD,SAAS0gB,GAAiBvf,GACtB,OAAOA,GAAQpB,IAAcoB,GAAQjC,KA72GzC,SAASmkB,EAAgBliB,GACrB,OAAOA,GAAQX,IAAMW,GAAQV,IAAMU,GAAQf,IAAMe,GAAQd,IAAMe,GAAQD,GA42GzBkiB,CAAgBliB,GAElE,SAASof,GAAiBpf,GACtB,OAAOA,GAAQpB,IAAcoB,GAAQjC,KAASmC,GAAcF,GAEhE,SAASod,GAAqBh5D,EAAOi8C,EAAQoU,GACzC,IAAI0N,IAAuB1N,GAAsBrwD,EAAM5S,QAAQijE,EAAoB/8B,MAAO2oB,IAAWA,EACrG,OAAOj8C,EAAMid,WAAWg/B,IAAWT,KAAYuiB,EAQnD,SAAS/D,GAAoBpe,GACzB,OAAOA,GAAQX,IAAMW,GAAQL,GAAKK,EAAOX,GAAKJ,GAAKe,EA0BvD,IAAIoiB,GAA2B,SAAU1yD,GAErC,SAAS0yD,EAAU9wE,EAAak9C,EAAM7tB,GAClC,IAAIxd,EAAQuM,EAAOvf,KAAKxB,KAAM6/C,EAAM7tB,IAAQhyB,KAE5C,OADAwU,EAAM7R,YAAcA,EACb6R,EAKX,OATA9T,EAAU+yE,EAAW1yD,GAMrB0yD,EAAU3yE,OAAS,SAAU6B,EAAak9C,EAAM7tB,GAC5C,OAAO,IAAIyhD,EAAU9wE,EAAak9C,EAAM7tB,IAErCyhD,EAVmB,CAW5B7gB,IACE8gB,GACA,SAASA,GAAgBC,EAAWnrB,GAChCxoD,KAAK2zE,UAAYA,EACjB3zE,KAAKwoD,OAASA,GAIlBorB,GAA0B,WAC1B,SAASjO,EAAOkO,GACZ7zE,KAAK6zE,iBAAmBA,EAS5B,OAPAlO,EAAO9kE,UAAUsX,MAAQ,SAAUtC,EAAQ2rB,EAAKsyC,EAAqBhO,QACrC,IAAxBgO,IAAkCA,GAAsB,QAChC,IAAxBhO,IAAkCA,EAAsBhrB,IAC5D,IAAIi5B,EAvnBZ,SAASxS,EAAS1rD,EAAQ2rB,EAAKqyC,EAAkBG,EAAwBlO,GAGrE,YAF+B,IAA3BkO,IAAqCA,GAAyB,QACtC,IAAxBlO,IAAkCA,EAAsBhrB,IACrD,IAAI2xB,GAAW,IAAIha,GAAgB58C,EAAQ2rB,GAAMqyC,EAAkBG,EAAwBlO,GAC7FvE,WAmnBqBA,CAAS1rD,EAAQ2rB,EAAKxhC,KAAK6zE,iBAAkBC,EAAqBhO,GACpFmO,EAAgB,IAAIC,GAAaH,EAAgBrS,OAAQ1hE,KAAK6zE,kBAAkBM,QACpF,OAAO,IAAIT,GAAgBO,EAAcN,UAAWI,EAAgBvrB,OAAO/lD,OAAOwxE,EAAczrB,UAE7Fmd,EAXkB,GAazBuO,GAA8B,WAC9B,SAASA,EAAaxS,EAAQmS,GAC1B7zE,KAAK0hE,OAASA,EACd1hE,KAAK6zE,iBAAmBA,EACxB7zE,KAAKgtE,QAAU,EACfhtE,KAAKo0E,cACLp0E,KAAKq0E,WACLr0E,KAAKs0E,iBACLt0E,KAAKutE,WA8ST,OA5SA2G,EAAarzE,UAAUszE,MAAQ,WAC3B,KAAOn0E,KAAK8sE,MAAM9pD,OAASo+C,GAAUY,KAC7BhiE,KAAK8sE,MAAM9pD,OAASo+C,GAAUoR,eAC9BxyE,KAAKu0E,iBAAiBv0E,KAAKutE,YAEtBvtE,KAAK8sE,MAAM9pD,OAASo+C,GAAUmR,UACnCvyE,KAAKw0E,eAAex0E,KAAKutE,YAEpBvtE,KAAK8sE,MAAM9pD,OAASo+C,GAAUmQ,aACnCvxE,KAAKy0E,oBACLz0E,KAAK2tE,cAAc3tE,KAAKutE,aAEnBvtE,KAAK8sE,MAAM9pD,OAASo+C,GAAUgQ,eACnCpxE,KAAKy0E,oBACLz0E,KAAK4tE,gBAAgB5tE,KAAKutE,aAErBvtE,KAAK8sE,MAAM9pD,OAASo+C,GAAUoN,MAAQxuE,KAAK8sE,MAAM9pD,OAASo+C,GAAU/pD,UACzErX,KAAK8sE,MAAM9pD,OAASo+C,GAAU5pD,oBAC9BxX,KAAKy0E,oBACLz0E,KAAKiuE,aAAajuE,KAAKutE,aAElBvtE,KAAK8sE,MAAM9pD,OAASo+C,GAAU2R,qBACnC/yE,KAAK00E,kBAAkB10E,KAAKutE,YAI5BvtE,KAAKutE,WAGb,OAAO,IAAImG,GAAgB1zE,KAAKo0E,WAAYp0E,KAAKq0E,UAErDH,EAAarzE,UAAU0sE,SAAW,WAC9B,IAAIoH,EAAO30E,KAAK8sE,MAMhB,OALI9sE,KAAKgtE,OAAShtE,KAAK0hE,OAAOngE,OAAS,GAEnCvB,KAAKgtE,SAEThtE,KAAK8sE,MAAQ9sE,KAAK0hE,OAAO1hE,KAAKgtE,QACvB2H,GAEXT,EAAarzE,UAAU+zE,WAAa,SAAU5xD,GAC1C,OAAIhjB,KAAK8sE,MAAM9pD,OAASA,EACbhjB,KAAKutE,WAET,MAEX2G,EAAarzE,UAAU8sE,cAAgB,SAAUkH,GAC7C70E,KAAKiuE,aAAajuE,KAAKutE,YACvBvtE,KAAK40E,WAAWxT,GAAUoQ,YAE9B0C,EAAarzE,UAAU+sE,gBAAkB,SAAUlxD,GAC/C,IAAIuT,EAAOjwB,KAAK40E,WAAWxT,GAAU/pD,UACrCrX,KAAK40E,WAAWxT,GAAUkQ,aAC1B,IAAItvE,EAAgB,MAARiuB,EAAeA,EAAK5F,MAAM,GAAGmG,OAAS,KAClDxwB,KAAK80E,aAAa,IAAIvJ,GAAQvpE,EAAO0a,EAAMuG,cAE/CixD,EAAarzE,UAAU6zE,kBAAoB,SAAUh4D,GAKjD,IAJA,IAAIouD,EAAc9qE,KAAKutE,WACnBvqD,EAAOhjB,KAAKutE,WACZzjC,KAEG9pC,KAAK8sE,MAAM9pD,OAASo+C,GAAU6R,sBAAsB,CACvD,IAAI8B,EAAU/0E,KAAKg1E,sBACnB,IAAKD,EACD,OACJjrC,EAAMxnC,KAAKyyE,GAGf,GAAI/0E,KAAK8sE,MAAM9pD,OAASo+C,GAAUgS,mBAAlC,CAIA,IAAInwD,EAAa,IAAIyvC,GAAgBh2C,EAAMuG,WAAW8lB,MAAO/oC,KAAK8sE,MAAM7pD,WAAWomB,KACnFrpC,KAAK80E,aAAa,IAAIjK,GAAUC,EAAYzgD,MAAM,GAAIrH,EAAKqH,MAAM,GAAIyf,EAAO7mB,EAAY6nD,EAAY7nD,aACpGjjB,KAAKutE,gBALDvtE,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAO,KAAMd,KAAK8sE,MAAM7pD,WAAY,uCAOxEixD,EAAarzE,UAAUm0E,oBAAsB,WACzC,IAAIhzE,EAAQhC,KAAKutE,WAEjB,GAAIvtE,KAAK8sE,MAAM9pD,OAASo+C,GAAU8R,yBAE9B,OADAlzE,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAO,KAAMd,KAAK8sE,MAAM7pD,WAAY,sCACzD,KAGX,IAAI8lB,EAAQ/oC,KAAKutE,WACbj3B,EAAMt2C,KAAKi1E,2BAA2BlsC,GAC1C,IAAKuN,EACD,OAAO,KACX,IAAIjN,EAAMrpC,KAAKutE,WACfj3B,EAAIh0C,KAAK,IAAIwpE,GAAQ1K,GAAUY,OAAS34B,EAAIpmB,aAE5C,IAAIiyD,EAAY,IAAIhB,EAAa59B,EAAKt2C,KAAK6zE,kBAAkBM,QAC7D,GAAIe,EAAU1sB,OAAOjnD,OAAS,EAE1B,OADAvB,KAAKq0E,QAAUr0E,KAAKq0E,QAAQ5xE,OAAOyyE,EAAU1sB,QACtC,KAEX,IAAIvlC,EAAa,IAAIyvC,GAAgB1wD,EAAMihB,WAAW8lB,MAAOM,EAAIpmB,WAAWomB,KACxE8hC,EAAgB,IAAIzY,GAAgB3pB,EAAM9lB,WAAW8lB,MAAOM,EAAIpmB,WAAWomB,KAC/E,OAAO,IAAI4hC,GAAcjpE,EAAMqoB,MAAM,GAAI6qD,EAAUvB,UAAW1wD,EAAYjhB,EAAMihB,WAAYkoD,IAEhG+I,EAAarzE,UAAUo0E,2BAA6B,SAAUlsC,GAG1D,IAFA,IAAIuN,KACA6+B,GAAsB/T,GAAU8R,4BACvB,CAKT,GAJIlzE,KAAK8sE,MAAM9pD,OAASo+C,GAAU2R,sBAC9B/yE,KAAK8sE,MAAM9pD,OAASo+C,GAAU8R,0BAC9BiC,EAAmB7yE,KAAKtC,KAAK8sE,MAAM9pD,MAEnChjB,KAAK8sE,MAAM9pD,OAASo+C,GAAU+R,uBAAwB,CACtD,IAAIiC,GAAYD,EAAoB/T,GAAU8R,0BAO1C,OADAlzE,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAO,KAAMioC,EAAM9lB,WAAY,sCACpD,KALP,GADAkyD,EAAmBlgC,MACc,GAA7BkgC,EAAmB5zE,OACnB,OAAO+0C,EAOnB,GAAIt2C,KAAK8sE,MAAM9pD,OAASo+C,GAAUgS,mBAAoB,CAClD,IAAIgC,GAAYD,EAAoB/T,GAAU2R,sBAK1C,OADA/yE,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAO,KAAMioC,EAAM9lB,WAAY,sCACpD,KAJPkyD,EAAmBlgC,MAO3B,GAAIj1C,KAAK8sE,MAAM9pD,OAASo+C,GAAUY,IAE9B,OADAhiE,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAO,KAAMioC,EAAM9lB,WAAY,sCACpD,KAEXqzB,EAAIh0C,KAAKtC,KAAKutE,cAGtB2G,EAAarzE,UAAUotE,aAAe,SAAUvxD,GAC5C,IAAIuT,EAAOvT,EAAM2N,MAAM,GACvB,GAAI4F,EAAK1uB,OAAS,GAAgB,MAAX0uB,EAAK,GAAY,CACpC,IAAIolD,EAAWr1E,KAAKs1E,oBACJ,MAAZD,GAAgD,GAA5BA,EAAS1rC,SAASpoC,QACtCvB,KAAK6zE,iBAAiBwB,EAASpgE,MAAMV,gBACrC0b,EAAOA,EAAK+C,UAAU,IAG1B/C,EAAK1uB,OAAS,GACdvB,KAAK80E,aAAa,IAAIlK,GAAO36C,EAAMvT,EAAMuG,cAGjDixD,EAAarzE,UAAU4zE,kBAAoB,WACvC,IAAIc,EAAKv1E,KAAKs1E,oBACVC,GAAMv1E,KAAK6zE,iBAAiB0B,EAAGtgE,MAAMZ,QACrCrU,KAAKs0E,cAAcr/B,OAG3Bi/B,EAAarzE,UAAU0zE,iBAAmB,SAAUiB,GAIhD,IAHA,IAAIjyE,EAASiyE,EAAcnrD,MAAM,GAC7BpV,EAAOugE,EAAcnrD,MAAM,GAC3BpS,KACGjY,KAAK8sE,MAAM9pD,OAASo+C,GAAUqR,WACjCx6D,EAAM3V,KAAKtC,KAAKy1E,aAAaz1E,KAAKutE,aAEtC,IAAIlqE,EAAWrD,KAAK01E,oBAAoBnyE,EAAQ0R,EAAMjV,KAAKs1E,qBACvDK,GAAc,EAGlB,GAAI31E,KAAK8sE,MAAM9pD,OAASo+C,GAAUyR,kBAAmB,CACjD7yE,KAAKutE,WACLoI,GAAc,EACd,IAAIC,EAAS51E,KAAK6zE,iBAAiBxwE,GAC7BuyE,EAAOnhE,cAA0C,OAA1BrR,EAAYC,IAAsBuyE,EAAOvhE,QAClErU,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAOuC,EAAUmyE,EAAcvyD,WAAY,sDAAyDuyD,EAAcnrD,MAAM,GAAK,WAGxJrqB,KAAK8sE,MAAM9pD,OAASo+C,GAAU0R,eACnC9yE,KAAKutE,WACLoI,GAAc,GAElB,IACI91B,EAAO,IAAI6S,GAAgB8iB,EAAcvyD,WAAW8lB,MAD9C/oC,KAAK8sE,MAAM7pD,WAAW8lB,OAE5BwsC,EAAK,IAAIjK,GAAUjoE,EAAU4U,KAAW4nC,EAAMA,OAAM9iC,GACxD/c,KAAK61E,aAAaN,GACdI,IACA31E,KAAK81E,YAAYzyE,GACjBkyE,EAAG1Z,cAAgBhc,IAG3Bq0B,EAAarzE,UAAUg1E,aAAe,SAAUN,GAC5C,IAAIQ,EAAW/1E,KAAKs1E,oBAChBS,GAAY/1E,KAAK6zE,iBAAiBkC,EAAS9gE,MAAMD,gBAAgBugE,EAAGtgE,OACpEjV,KAAKs0E,cAAcr/B,MAEvB,IAAI2gC,EAAS51E,KAAK6zE,iBAAiB0B,EAAGtgE,MAClCvB,EAAK1T,KAAKg2E,sCAAuCpqD,EAASlY,EAAGkY,OAAQ6e,EAAY/2B,EAAG+2B,UACxF,GAAI7e,GAAUgqD,EAAOhhE,mBAAmBgX,EAAO3W,MAAO,CAClD,IAAIghE,EAAY,IAAI3K,GAAUsK,EAAOjhE,kBAAqB4gE,EAAGtyD,WAAYsyD,EAAG3Z,gBAAiB2Z,EAAG1Z,eAChG77D,KAAKk2E,uBAAuBtqD,EAAQ6e,EAAWwrC,GAEnDj2E,KAAK80E,aAAaS,GAClBv1E,KAAKs0E,cAAchyE,KAAKizE,IAE5BrB,EAAarzE,UAAU2zE,eAAiB,SAAU2B,GAC9C,IAAI9yE,EAAWrD,KAAK01E,oBAAoBS,EAAY9rD,MAAM,GAAI8rD,EAAY9rD,MAAM,GAAIrqB,KAAKs1E,qBACrFt1E,KAAKs1E,sBACLt1E,KAAKs1E,oBAAoBzZ,cAAgBsa,EAAYlzD,YAErDjjB,KAAK6zE,iBAAiBxwE,GAAUgR,OAChCrU,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAOuC,EAAU8yE,EAAYlzD,WAAY,uCAA0CkzD,EAAY9rD,MAAM,GAAK,MAEhIrqB,KAAK81E,YAAYzyE,IAEvBrD,KAAKq0E,QAAQ/xE,KAAKmxE,GAAU3yE,OAAOuC,EAAU8yE,EAAYlzD,WAD5C,2BAA8B5f,EAAW,iLAI9D6wE,EAAarzE,UAAUi1E,YAAc,SAAUzyE,GAC3C,IAAK,IAAI+yE,EAAap2E,KAAKs0E,cAAc/yE,OAAS,EAAG60E,GAAc,EAAGA,IAAc,CAChF,IAAIb,EAAKv1E,KAAKs0E,cAAc8B,GAC5B,GAAIb,EAAGtgE,MAAQ5R,EAEX,OADArD,KAAKs0E,cAAc+B,OAAOD,EAAYp2E,KAAKs0E,cAAc/yE,OAAS60E,IAC3D,EAEX,IAAKp2E,KAAK6zE,iBAAiB0B,EAAGtgE,MAAMd,eAChC,OAAO,EAGf,OAAO,GAEX+/D,EAAarzE,UAAU40E,aAAe,SAAUzd,GAC5C,IAAI30D,EAAWC,EAAe00D,EAAS3tC,MAAM,GAAI2tC,EAAS3tC,MAAM,IAC5Dgf,EAAM2uB,EAAS/0C,WAAWomB,IAC1BrnC,EAAQ,GACRk5D,OAAYn+C,EAChB,GAAI/c,KAAK8sE,MAAM9pD,OAASo+C,GAAUuR,WAAY,CAC1C,IAAI2D,EAAat2E,KAAKutE,WACtBvrE,EAAQs0E,EAAWjsD,MAAM,GACzBgf,EAAMitC,EAAWrzD,WAAWomB,IAC5B6xB,EAAYob,EAAWrzD,WAE3B,OAAO,IAAI21B,GAAUv1C,EAAUrB,EAAO,IAAI0wD,GAAgBsF,EAAS/0C,WAAW8lB,MAAOM,GAAM6xB,IAE/FgZ,EAAarzE,UAAUy0E,kBAAoB,WACvC,OAAOt1E,KAAKs0E,cAAc/yE,OAAS,EAAIvB,KAAKs0E,cAAct0E,KAAKs0E,cAAc/yE,OAAS,GAAK,MAO/F2yE,EAAarzE,UAAUm1E,oCAAsC,WAEzD,IADA,IAAIvrC,EAAY,KACPrpC,EAAIpB,KAAKs0E,cAAc/yE,OAAS,EAAGH,GAAK,EAAGA,IAAK,CACrD,IAAK4B,EAAchD,KAAKs0E,cAAclzE,GAAG6T,MACrC,OAAS2W,OAAQ5rB,KAAKs0E,cAAclzE,GAAIqpC,UAAWA,GAEvDA,EAAYzqC,KAAKs0E,cAAclzE,GAEnC,OAASwqB,OAAQ,KAAM6e,UAAWA,IAEtCypC,EAAarzE,UAAUi0E,aAAe,SAAU7tD,GAC5C,IAAI2E,EAAS5rB,KAAKs1E,oBACJ,MAAV1pD,EACAA,EAAO+d,SAASrnC,KAAK2kB,GAGrBjnB,KAAKo0E,WAAW9xE,KAAK2kB,IAU7BitD,EAAarzE,UAAUq1E,uBAAyB,SAAUtqD,EAAQ6e,EAAWxjB,GACzE,GAAKwjB,EAIA,CACD,GAAI7e,EAAQ,CAER,IAAIxI,EAAQwI,EAAO+d,SAAS9mC,QAAQ4nC,GACpC7e,EAAO+d,SAASvmB,GAAS6D,OAGzBjnB,KAAKo0E,WAAW9xE,KAAK2kB,GAEzBA,EAAK0iB,SAASrnC,KAAKmoC,GACnBzqC,KAAKs0E,cAAc+B,OAAOr2E,KAAKs0E,cAAczxE,QAAQ4nC,GAAY,EAAGxjB,QAbpEjnB,KAAK80E,aAAa7tD,GAClBjnB,KAAKs0E,cAAchyE,KAAK2kB,IAehCitD,EAAarzE,UAAU60E,oBAAsB,SAAUnyE,EAAQC,EAAW+yE,GAOtE,OANc,MAAVhzE,GAEc,OADdA,EAASvD,KAAK6zE,iBAAiBrwE,GAAWsQ,0BACH,MAAjByiE,IAClBhzE,EAASH,EAAYmzE,EAActhE,OAGpC3R,EAAeC,EAAQC,IAE3B0wE,EAtTsB,GAwTjC,SAASkB,GAAYoB,EAAOz+D,GACxB,OAAOy+D,EAAMj1E,OAAS,GAAKi1E,EAAMA,EAAMj1E,OAAS,KAAOwW;;;;;;;OAU3D,IAAI0+D,GAA4B,SAAU11D,GAEtC,SAAS01D,IACL,OAAO11D,EAAOvf,KAAKxB,KAAMkV,IAAyBlV,KAOtD,OATAU,EAAU+1E,EAAY11D,GAItB01D,EAAW51E,UAAUsX,MAAQ,SAAUtC,EAAQ2rB,EAAKsyC,EAAqBhO,GAGrE,YAF4B,IAAxBgO,IAAkCA,GAAsB,QAChC,IAAxBhO,IAAkCA,EAAsBhrB,IACrD/5B,EAAOlgB,UAAUsX,MAAM3W,KAAKxB,KAAM6V,EAAQ2rB,EAAKsyC,EAAqBhO,IAExE2Q,EAVoB,CAW7B7C,IAUE8C,GAAoB,IAAIhoD,KAAK,MAAO,WAAY,WAAY,SAAU,UAGtEioD,GAAW,wCACXC,GAAe,IAAI/+D,OAAO,KAAO8+D,GAAW,KAC5CE,GAAoB,IAAIh/D,OAAO,IAAM8+D,GAAW,QAAS;;;;;;;OAU7D,SAASG,GAAY90E,GAEjB,OAAOA,EAAMirB,QAAQ,IAAIpV,OAAOvE,EAAc,KAAM,KAgBxD,IAgDIyjE,GAhDAC,GAAmC,WACnC,SAASA,KAuBT,OArBAA,EAAkBn2E,UAAUi7D,aAAe,SAAU/jD,EAASmJ,GAC1D,OAAIw1D,GAAkBx2C,IAAInoB,EAAQ9C,OA/B1C,SAASgiE,EAA2Bh/D,GAChC,OAAOA,EAAM4Z,KAAK,SAAUqlD,GAAQ,MARZ,0BAQmBA,EAAKjiE,OA8BDgiE,CAA2Bl/D,EAAQE,OAGnE,IAAIqzD,GAAUvzD,EAAQ9C,KAAMw2D,GAAWzrE,KAAM+X,EAAQE,OAAQF,EAAQ4xB,SAAU5xB,EAAQkL,WAAYlL,EAAQ6jD,gBAAiB7jD,EAAQ8jD,cAAe9jD,EAAQ2tB,MAE/J,IAAI4lC,GAAUvzD,EAAQ9C,KAAM8C,EAAQE,MAAOwzD,GAAWzrE,KAAM+X,EAAQ4xB,UAAW5xB,EAAQkL,WAAYlL,EAAQ6jD,gBAAiB7jD,EAAQ8jD,cAAe9jD,EAAQ2tB,OAEtKsxC,EAAkBn2E,UAAUwqE,eAAiB,SAAU8L,EAAWj2D,GAC9D,MA9CoB,0BA8Cbi2D,EAAUliE,KAAiCkiE,EAAY,MAElEH,EAAkBn2E,UAAU4oC,UAAY,SAAUxZ,EAAM/O,GAEpD,OADiB+O,EAAKjuB,MAAMqW,MAAMu+D,IAEvB,IAAIhM,GAAOkM,GAAY7mD,EAAKjuB,OAAOirB,QAAQ4pD,GAAmB,KAAM5mD,EAAKhN,WAAYgN,EAAKyV,MAE9F,MAEXsxC,EAAkBn2E,UAAU2qE,aAAe,SAAUn/C,EAASnL,GAAW,OAAOmL,GAChF2qD,EAAkBn2E,UAAUmqE,eAAiB,SAAUoM,EAAWl2D,GAAW,OAAOk2D,GACpFJ,EAAkBn2E,UAAUuqE,mBAAqB,SAAUiM,EAAen2D,GAAW,OAAOm2D,GACrFL,EAxB2B,GA0BtC,SAASM,GAAkBC,GACvB,OAAO,IAAI7D,GAAgBjI,GAAW,IAAIuL,GAAqBO,EAAkB5D,WAAY4D,EAAkB/uB;;;;;;;OAsBnH,SAASgvB,KAiCL,OAhCKT,KACDA,MAEAU,GAAgB75D,EAAgB85D,MAC5B,gBACA,cACA,gBAEJD,GAAgB75D,EAAgB+5D,OAAQ,YAExCF,GAAgB75D,EAAgBg6D,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEH,GAAgB75D,EAAgBi6D,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,gBAGDd,GAEX,SAASU,GAAgBniD,EAAKwiD,GAC1B,IAAIlrD,EAAKlZ,EACT,IACI,IAAK,IAAIqkE,EAAUr2E,EAASo2E,GAAQE,EAAYD,EAAQh2E,QAASi2E,EAAU/1E,KAAM+1E,EAAYD,EAAQh2E,OAEjGg1E,GADWiB,EAAUh2E,MACC+S,eAAiBugB,EAG/C,MAAOpI,GAASN,GAAQrqB,MAAO2qB,GAC/B,QACI,IACQ8qD,IAAcA,EAAU/1E,OAASyR,EAAKqkE,EAAQ5qD,SAASzZ,EAAGlS,KAAKu2E,GAEvE,QAAU,GAAInrD,EAAK,MAAMA,EAAIrqB;;;;;;;OAWrC,IAAI01E,GAaAC,GAAU,UACVC,GAAS,SACTC,GAAS,SACTC,GAAS,SAuDTC,IACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.1+12.sha-9f9024b\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (TagContentType) {\n        TagContentType[TagContentType[\"RAW_TEXT\"] = 0] = \"RAW_TEXT\";\n        TagContentType[TagContentType[\"ESCAPABLE_RAW_TEXT\"] = 1] = \"ESCAPABLE_RAW_TEXT\";\n        TagContentType[TagContentType[\"PARSABLE_DATA\"] = 2] = \"PARSABLE_DATA\";\n    })(exports.TagContentType || (exports.TagContentType = {}));\n    function splitNsName(elementName) {\n        if (elementName[0] != ':') {\n            return [null, elementName];\n        }\n        var colonIndex = elementName.indexOf(':', 1);\n        if (colonIndex == -1) {\n            throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n        }\n        return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n    }\n    // `<ng-container>` tags work the same regardless the namespace\n    function isNgContainer(tagName) {\n        return splitNsName(tagName)[1] === 'ng-container';\n    }\n    // `<ng-content>` tags work the same regardless the namespace\n    function isNgContent(tagName) {\n        return splitNsName(tagName)[1] === 'ng-content';\n    }\n    // `<ng-template>` tags work the same regardless the namespace\n    function isNgTemplate(tagName) {\n        return splitNsName(tagName)[1] === 'ng-template';\n    }\n    function getNsPrefix(fullName) {\n        return fullName === null ? null : splitNsName(fullName)[0];\n    }\n    function mergeNsAndName(prefix, localName) {\n        return prefix ? \":\" + prefix + \":\" + localName : localName;\n    }\n    // see http://www.w3.org/TR/html51/syntax.html#named-character-references\n    // see https://html.spec.whatwg.org/multipage/entities.json\n    // This list is not exhaustive to keep the compiler footprint low.\n    // The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n    // exist.\n    var NAMED_ENTITIES = {\n        'Aacute': '\\u00C1',\n        'aacute': '\\u00E1',\n        'Acirc': '\\u00C2',\n        'acirc': '\\u00E2',\n        'acute': '\\u00B4',\n        'AElig': '\\u00C6',\n        'aelig': '\\u00E6',\n        'Agrave': '\\u00C0',\n        'agrave': '\\u00E0',\n        'alefsym': '\\u2135',\n        'Alpha': '\\u0391',\n        'alpha': '\\u03B1',\n        'amp': '&',\n        'and': '\\u2227',\n        'ang': '\\u2220',\n        'apos': '\\u0027',\n        'Aring': '\\u00C5',\n        'aring': '\\u00E5',\n        'asymp': '\\u2248',\n        'Atilde': '\\u00C3',\n        'atilde': '\\u00E3',\n        'Auml': '\\u00C4',\n        'auml': '\\u00E4',\n        'bdquo': '\\u201E',\n        'Beta': '\\u0392',\n        'beta': '\\u03B2',\n        'brvbar': '\\u00A6',\n        'bull': '\\u2022',\n        'cap': '\\u2229',\n        'Ccedil': '\\u00C7',\n        'ccedil': '\\u00E7',\n        'cedil': '\\u00B8',\n        'cent': '\\u00A2',\n        'Chi': '\\u03A7',\n        'chi': '\\u03C7',\n        'circ': '\\u02C6',\n        'clubs': '\\u2663',\n        'cong': '\\u2245',\n        'copy': '\\u00A9',\n        'crarr': '\\u21B5',\n        'cup': '\\u222A',\n        'curren': '\\u00A4',\n        'dagger': '\\u2020',\n        'Dagger': '\\u2021',\n        'darr': '\\u2193',\n        'dArr': '\\u21D3',\n        'deg': '\\u00B0',\n        'Delta': '\\u0394',\n        'delta': '\\u03B4',\n        'diams': '\\u2666',\n        'divide': '\\u00F7',\n        'Eacute': '\\u00C9',\n        'eacute': '\\u00E9',\n        'Ecirc': '\\u00CA',\n        'ecirc': '\\u00EA',\n        'Egrave': '\\u00C8',\n        'egrave': '\\u00E8',\n        'empty': '\\u2205',\n        'emsp': '\\u2003',\n        'ensp': '\\u2002',\n        'Epsilon': '\\u0395',\n        'epsilon': '\\u03B5',\n        'equiv': '\\u2261',\n        'Eta': '\\u0397',\n        'eta': '\\u03B7',\n        'ETH': '\\u00D0',\n        'eth': '\\u00F0',\n        'Euml': '\\u00CB',\n        'euml': '\\u00EB',\n        'euro': '\\u20AC',\n        'exist': '\\u2203',\n        'fnof': '\\u0192',\n        'forall': '\\u2200',\n        'frac12': '\\u00BD',\n        'frac14': '\\u00BC',\n        'frac34': '\\u00BE',\n        'frasl': '\\u2044',\n        'Gamma': '\\u0393',\n        'gamma': '\\u03B3',\n        'ge': '\\u2265',\n        'gt': '>',\n        'harr': '\\u2194',\n        'hArr': '\\u21D4',\n        'hearts': '\\u2665',\n        'hellip': '\\u2026',\n        'Iacute': '\\u00CD',\n        'iacute': '\\u00ED',\n        'Icirc': '\\u00CE',\n        'icirc': '\\u00EE',\n        'iexcl': '\\u00A1',\n        'Igrave': '\\u00CC',\n        'igrave': '\\u00EC',\n        'image': '\\u2111',\n        'infin': '\\u221E',\n        'int': '\\u222B',\n        'Iota': '\\u0399',\n        'iota': '\\u03B9',\n        'iquest': '\\u00BF',\n        'isin': '\\u2208',\n        'Iuml': '\\u00CF',\n        'iuml': '\\u00EF',\n        'Kappa': '\\u039A',\n        'kappa': '\\u03BA',\n        'Lambda': '\\u039B',\n        'lambda': '\\u03BB',\n        'lang': '\\u27E8',\n        'laquo': '\\u00AB',\n        'larr': '\\u2190',\n        'lArr': '\\u21D0',\n        'lceil': '\\u2308',\n        'ldquo': '\\u201C',\n        'le': '\\u2264',\n        'lfloor': '\\u230A',\n        'lowast': '\\u2217',\n        'loz': '\\u25CA',\n        'lrm': '\\u200E',\n        'lsaquo': '\\u2039',\n        'lsquo': '\\u2018',\n        'lt': '<',\n        'macr': '\\u00AF',\n        'mdash': '\\u2014',\n        'micro': '\\u00B5',\n        'middot': '\\u00B7',\n        'minus': '\\u2212',\n        'Mu': '\\u039C',\n        'mu': '\\u03BC',\n        'nabla': '\\u2207',\n        'nbsp': '\\u00A0',\n        'ndash': '\\u2013',\n        'ne': '\\u2260',\n        'ni': '\\u220B',\n        'not': '\\u00AC',\n        'notin': '\\u2209',\n        'nsub': '\\u2284',\n        'Ntilde': '\\u00D1',\n        'ntilde': '\\u00F1',\n        'Nu': '\\u039D',\n        'nu': '\\u03BD',\n        'Oacute': '\\u00D3',\n        'oacute': '\\u00F3',\n        'Ocirc': '\\u00D4',\n        'ocirc': '\\u00F4',\n        'OElig': '\\u0152',\n        'oelig': '\\u0153',\n        'Ograve': '\\u00D2',\n        'ograve': '\\u00F2',\n        'oline': '\\u203E',\n        'Omega': '\\u03A9',\n        'omega': '\\u03C9',\n        'Omicron': '\\u039F',\n        'omicron': '\\u03BF',\n        'oplus': '\\u2295',\n        'or': '\\u2228',\n        'ordf': '\\u00AA',\n        'ordm': '\\u00BA',\n        'Oslash': '\\u00D8',\n        'oslash': '\\u00F8',\n        'Otilde': '\\u00D5',\n        'otilde': '\\u00F5',\n        'otimes': '\\u2297',\n        'Ouml': '\\u00D6',\n        'ouml': '\\u00F6',\n        'para': '\\u00B6',\n        'permil': '\\u2030',\n        'perp': '\\u22A5',\n        'Phi': '\\u03A6',\n        'phi': '\\u03C6',\n        'Pi': '\\u03A0',\n        'pi': '\\u03C0',\n        'piv': '\\u03D6',\n        'plusmn': '\\u00B1',\n        'pound': '\\u00A3',\n        'prime': '\\u2032',\n        'Prime': '\\u2033',\n        'prod': '\\u220F',\n        'prop': '\\u221D',\n        'Psi': '\\u03A8',\n        'psi': '\\u03C8',\n        'quot': '\\u0022',\n        'radic': '\\u221A',\n        'rang': '\\u27E9',\n        'raquo': '\\u00BB',\n        'rarr': '\\u2192',\n        'rArr': '\\u21D2',\n        'rceil': '\\u2309',\n        'rdquo': '\\u201D',\n        'real': '\\u211C',\n        'reg': '\\u00AE',\n        'rfloor': '\\u230B',\n        'Rho': '\\u03A1',\n        'rho': '\\u03C1',\n        'rlm': '\\u200F',\n        'rsaquo': '\\u203A',\n        'rsquo': '\\u2019',\n        'sbquo': '\\u201A',\n        'Scaron': '\\u0160',\n        'scaron': '\\u0161',\n        'sdot': '\\u22C5',\n        'sect': '\\u00A7',\n        'shy': '\\u00AD',\n        'Sigma': '\\u03A3',\n        'sigma': '\\u03C3',\n        'sigmaf': '\\u03C2',\n        'sim': '\\u223C',\n        'spades': '\\u2660',\n        'sub': '\\u2282',\n        'sube': '\\u2286',\n        'sum': '\\u2211',\n        'sup': '\\u2283',\n        'sup1': '\\u00B9',\n        'sup2': '\\u00B2',\n        'sup3': '\\u00B3',\n        'supe': '\\u2287',\n        'szlig': '\\u00DF',\n        'Tau': '\\u03A4',\n        'tau': '\\u03C4',\n        'there4': '\\u2234',\n        'Theta': '\\u0398',\n        'theta': '\\u03B8',\n        'thetasym': '\\u03D1',\n        'thinsp': '\\u2009',\n        'THORN': '\\u00DE',\n        'thorn': '\\u00FE',\n        'tilde': '\\u02DC',\n        'times': '\\u00D7',\n        'trade': '\\u2122',\n        'Uacute': '\\u00DA',\n        'uacute': '\\u00FA',\n        'uarr': '\\u2191',\n        'uArr': '\\u21D1',\n        'Ucirc': '\\u00DB',\n        'ucirc': '\\u00FB',\n        'Ugrave': '\\u00D9',\n        'ugrave': '\\u00F9',\n        'uml': '\\u00A8',\n        'upsih': '\\u03D2',\n        'Upsilon': '\\u03A5',\n        'upsilon': '\\u03C5',\n        'Uuml': '\\u00DC',\n        'uuml': '\\u00FC',\n        'weierp': '\\u2118',\n        'Xi': '\\u039E',\n        'xi': '\\u03BE',\n        'Yacute': '\\u00DD',\n        'yacute': '\\u00FD',\n        'yen': '\\u00A5',\n        'yuml': '\\u00FF',\n        'Yuml': '\\u0178',\n        'Zeta': '\\u0396',\n        'zeta': '\\u03B6',\n        'zwj': '\\u200D',\n        'zwnj': '\\u200C',\n    };\n    // The &ngsp; pseudo-entity is denoting a space. see:\n    // https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\n    var NGSP_UNICODE = '\\uE500';\n    NAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var HtmlTagDefinition = /** @class */ (function () {\n        function HtmlTagDefinition(_a) {\n            var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? exports.TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n            var _this = this;\n            this.closedByChildren = {};\n            this.closedByParent = false;\n            this.canSelfClose = false;\n            if (closedByChildren && closedByChildren.length > 0) {\n                closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n            }\n            this.isVoid = isVoid;\n            this.closedByParent = closedByParent || isVoid;\n            if (requiredParents && requiredParents.length > 0) {\n                this.requiredParents = {};\n                // The first parent is the list is automatically when none of the listed parents are present\n                this.parentToAdd = requiredParents[0];\n                requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n            }\n            this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n            this.contentType = contentType;\n            this.ignoreFirstLf = ignoreFirstLf;\n        }\n        HtmlTagDefinition.prototype.requireExtraParent = function (currentParent) {\n            if (!this.requiredParents) {\n                return false;\n            }\n            if (!currentParent) {\n                return true;\n            }\n            var lcParent = currentParent.toLowerCase();\n            var isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n            return !isParentTemplate && this.requiredParents[lcParent] != true;\n        };\n        HtmlTagDefinition.prototype.isClosedByChild = function (name) {\n            return this.isVoid || name.toLowerCase() in this.closedByChildren;\n        };\n        return HtmlTagDefinition;\n    }());\n    var _DEFAULT_TAG_DEFINITION;\n    // see http://www.w3.org/TR/html51/syntax.html#optional-tags\n    // This implementation does not fully conform to the HTML5 spec.\n    var TAG_DEFINITIONS;\n    function getHtmlTagDefinition(tagName) {\n        if (!TAG_DEFINITIONS) {\n            _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n            TAG_DEFINITIONS = {\n                'base': new HtmlTagDefinition({ isVoid: true }),\n                'meta': new HtmlTagDefinition({ isVoid: true }),\n                'area': new HtmlTagDefinition({ isVoid: true }),\n                'embed': new HtmlTagDefinition({ isVoid: true }),\n                'link': new HtmlTagDefinition({ isVoid: true }),\n                'img': new HtmlTagDefinition({ isVoid: true }),\n                'input': new HtmlTagDefinition({ isVoid: true }),\n                'param': new HtmlTagDefinition({ isVoid: true }),\n                'hr': new HtmlTagDefinition({ isVoid: true }),\n                'br': new HtmlTagDefinition({ isVoid: true }),\n                'source': new HtmlTagDefinition({ isVoid: true }),\n                'track': new HtmlTagDefinition({ isVoid: true }),\n                'wbr': new HtmlTagDefinition({ isVoid: true }),\n                'p': new HtmlTagDefinition({\n                    closedByChildren: [\n                        'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset',\n                        'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5',\n                        'h6', 'header', 'hgroup', 'hr', 'main', 'nav', 'ol',\n                        'p', 'pre', 'section', 'table', 'ul'\n                    ],\n                    closedByParent: true\n                }),\n                'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n                'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n                'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n                'tr': new HtmlTagDefinition({\n                    closedByChildren: ['tr'],\n                    requiredParents: ['tbody', 'tfoot', 'thead'],\n                    closedByParent: true\n                }),\n                'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n                'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n                'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n                'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n                'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n                'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n                'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n                'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n                'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n                'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n                'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n                'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n                'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n                'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n                'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n                'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n                'style': new HtmlTagDefinition({ contentType: exports.TagContentType.RAW_TEXT }),\n                'script': new HtmlTagDefinition({ contentType: exports.TagContentType.RAW_TEXT }),\n                'title': new HtmlTagDefinition({ contentType: exports.TagContentType.ESCAPABLE_RAW_TEXT }),\n                'textarea': new HtmlTagDefinition({ contentType: exports.TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n            };\n        }\n        return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n        '([-\\\\w]+)|' + // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n        // \"[name=\"value\"]\",\n        // \"[name='value']\"\n        '(\\\\))|' + // \")\"\n        '(\\\\s*,\\\\s*)', // \",\"\n    'g');\n    /**\n     * A css selector contains an element name,\n     * css classes and attribute/value pairs with the purpose\n     * of selecting subsets out of them.\n     */\n    var CssSelector = /** @class */ (function () {\n        function CssSelector() {\n            this.element = null;\n            this.classNames = [];\n            /**\n             * The selectors are encoded in pairs where:\n             * - even locations are attribute names\n             * - odd locations are attribute values.\n             *\n             * Example:\n             * Selector: `[key1=value1][key2]` would parse to:\n             * ```\n             * ['key1', 'value1', 'key2', '']\n             * ```\n             */\n            this.attrs = [];\n            this.notSelectors = [];\n        }\n        CssSelector.parse = function (selector) {\n            var results = [];\n            var _addResult = function (res, cssSel) {\n                if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                    cssSel.attrs.length == 0) {\n                    cssSel.element = '*';\n                }\n                res.push(cssSel);\n            };\n            var cssSelector = new CssSelector();\n            var match;\n            var current = cssSelector;\n            var inNot = false;\n            _SELECTOR_REGEXP.lastIndex = 0;\n            while (match = _SELECTOR_REGEXP.exec(selector)) {\n                if (match[1]) {\n                    if (inNot) {\n                        throw new Error('Nesting :not is not allowed in a selector');\n                    }\n                    inNot = true;\n                    current = new CssSelector();\n                    cssSelector.notSelectors.push(current);\n                }\n                if (match[2]) {\n                    current.setElement(match[2]);\n                }\n                if (match[3]) {\n                    current.addClassName(match[3]);\n                }\n                if (match[4]) {\n                    current.addAttribute(match[4], match[6]);\n                }\n                if (match[7]) {\n                    inNot = false;\n                    current = cssSelector;\n                }\n                if (match[8]) {\n                    if (inNot) {\n                        throw new Error('Multiple selectors in :not are not supported');\n                    }\n                    _addResult(results, cssSelector);\n                    cssSelector = current = new CssSelector();\n                }\n            }\n            _addResult(results, cssSelector);\n            return results;\n        };\n        CssSelector.prototype.isElementSelector = function () {\n            return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n                this.notSelectors.length === 0;\n        };\n        CssSelector.prototype.hasElementSelector = function () { return !!this.element; };\n        CssSelector.prototype.setElement = function (element) {\n            if (element === void 0) { element = null; }\n            this.element = element;\n        };\n        /** Gets a template string for an element that matches the selector. */\n        CssSelector.prototype.getMatchingElementTemplate = function () {\n            var tagName = this.element || 'div';\n            var classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n            var attrs = '';\n            for (var i = 0; i < this.attrs.length; i += 2) {\n                var attrName = this.attrs[i];\n                var attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n                attrs += \" \" + attrName + attrValue;\n            }\n            return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n                \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n        };\n        CssSelector.prototype.getAttrs = function () {\n            var result = [];\n            if (this.classNames.length > 0) {\n                result.push('class', this.classNames.join(' '));\n            }\n            return result.concat(this.attrs);\n        };\n        CssSelector.prototype.addAttribute = function (name, value) {\n            if (value === void 0) { value = ''; }\n            this.attrs.push(name, value && value.toLowerCase() || '');\n        };\n        CssSelector.prototype.addClassName = function (name) { this.classNames.push(name.toLowerCase()); };\n        CssSelector.prototype.toString = function () {\n            var res = this.element || '';\n            if (this.classNames) {\n                this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n            }\n            if (this.attrs) {\n                for (var i = 0; i < this.attrs.length; i += 2) {\n                    var name_1 = this.attrs[i];\n                    var value = this.attrs[i + 1];\n                    res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n                }\n            }\n            this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n            return res;\n        };\n        return CssSelector;\n    }());\n    /**\n     * Reads a list of CssSelectors and allows to calculate which ones\n     * are contained in a given CssSelector.\n     */\n    var SelectorMatcher = /** @class */ (function () {\n        function SelectorMatcher() {\n            this._elementMap = new Map();\n            this._elementPartialMap = new Map();\n            this._classMap = new Map();\n            this._classPartialMap = new Map();\n            this._attrValueMap = new Map();\n            this._attrValuePartialMap = new Map();\n            this._listContexts = [];\n        }\n        SelectorMatcher.createNotMatcher = function (notSelectors) {\n            var notMatcher = new SelectorMatcher();\n            notMatcher.addSelectables(notSelectors, null);\n            return notMatcher;\n        };\n        SelectorMatcher.prototype.addSelectables = function (cssSelectors, callbackCtxt) {\n            var listContext = null;\n            if (cssSelectors.length > 1) {\n                listContext = new SelectorListContext(cssSelectors);\n                this._listContexts.push(listContext);\n            }\n            for (var i = 0; i < cssSelectors.length; i++) {\n                this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n            }\n        };\n        /**\n         * Add an object that can be found later on by calling `match`.\n         * @param cssSelector A css selector\n         * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n         */\n        SelectorMatcher.prototype._addSelectable = function (cssSelector, callbackCtxt, listContext) {\n            var matcher = this;\n            var element = cssSelector.element;\n            var classNames = cssSelector.classNames;\n            var attrs = cssSelector.attrs;\n            var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n            if (element) {\n                var isTerminal = attrs.length === 0 && classNames.length === 0;\n                if (isTerminal) {\n                    this._addTerminal(matcher._elementMap, element, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._elementPartialMap, element);\n                }\n            }\n            if (classNames) {\n                for (var i = 0; i < classNames.length; i++) {\n                    var isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                    var className = classNames[i];\n                    if (isTerminal) {\n                        this._addTerminal(matcher._classMap, className, selectable);\n                    }\n                    else {\n                        matcher = this._addPartial(matcher._classPartialMap, className);\n                    }\n                }\n            }\n            if (attrs) {\n                for (var i = 0; i < attrs.length; i += 2) {\n                    var isTerminal = i === attrs.length - 2;\n                    var name_2 = attrs[i];\n                    var value = attrs[i + 1];\n                    if (isTerminal) {\n                        var terminalMap = matcher._attrValueMap;\n                        var terminalValuesMap = terminalMap.get(name_2);\n                        if (!terminalValuesMap) {\n                            terminalValuesMap = new Map();\n                            terminalMap.set(name_2, terminalValuesMap);\n                        }\n                        this._addTerminal(terminalValuesMap, value, selectable);\n                    }\n                    else {\n                        var partialMap = matcher._attrValuePartialMap;\n                        var partialValuesMap = partialMap.get(name_2);\n                        if (!partialValuesMap) {\n                            partialValuesMap = new Map();\n                            partialMap.set(name_2, partialValuesMap);\n                        }\n                        matcher = this._addPartial(partialValuesMap, value);\n                    }\n                }\n            }\n        };\n        SelectorMatcher.prototype._addTerminal = function (map, name, selectable) {\n            var terminalList = map.get(name);\n            if (!terminalList) {\n                terminalList = [];\n                map.set(name, terminalList);\n            }\n            terminalList.push(selectable);\n        };\n        SelectorMatcher.prototype._addPartial = function (map, name) {\n            var matcher = map.get(name);\n            if (!matcher) {\n                matcher = new SelectorMatcher();\n                map.set(name, matcher);\n            }\n            return matcher;\n        };\n        /**\n         * Find the objects that have been added via `addSelectable`\n         * whose css selector is contained in the given css selector.\n         * @param cssSelector A css selector\n         * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n         * @return boolean true if a match was found\n        */\n        SelectorMatcher.prototype.match = function (cssSelector, matchedCallback) {\n            var result = false;\n            var element = cssSelector.element;\n            var classNames = cssSelector.classNames;\n            var attrs = cssSelector.attrs;\n            for (var i = 0; i < this._listContexts.length; i++) {\n                this._listContexts[i].alreadyMatched = false;\n            }\n            result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n            result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n                result;\n            if (classNames) {\n                for (var i = 0; i < classNames.length; i++) {\n                    var className = classNames[i];\n                    result =\n                        this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                    result =\n                        this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                            result;\n                }\n            }\n            if (attrs) {\n                for (var i = 0; i < attrs.length; i += 2) {\n                    var name_3 = attrs[i];\n                    var value = attrs[i + 1];\n                    var terminalValuesMap = this._attrValueMap.get(name_3);\n                    if (value) {\n                        result =\n                            this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                    }\n                    result =\n                        this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                    var partialValuesMap = this._attrValuePartialMap.get(name_3);\n                    if (value) {\n                        result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                    }\n                    result =\n                        this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n                }\n            }\n            return result;\n        };\n        /** @internal */\n        SelectorMatcher.prototype._matchTerminal = function (map, name, cssSelector, matchedCallback) {\n            if (!map || typeof name !== 'string') {\n                return false;\n            }\n            var selectables = map.get(name) || [];\n            var starSelectables = map.get('*');\n            if (starSelectables) {\n                selectables = selectables.concat(starSelectables);\n            }\n            if (selectables.length === 0) {\n                return false;\n            }\n            var selectable;\n            var result = false;\n            for (var i = 0; i < selectables.length; i++) {\n                selectable = selectables[i];\n                result = selectable.finalize(cssSelector, matchedCallback) || result;\n            }\n            return result;\n        };\n        /** @internal */\n        SelectorMatcher.prototype._matchPartial = function (map, name, cssSelector, matchedCallback) {\n            if (!map || typeof name !== 'string') {\n                return false;\n            }\n            var nestedSelector = map.get(name);\n            if (!nestedSelector) {\n                return false;\n            }\n            // TODO(perf): get rid of recursion and measure again\n            // TODO(perf): don't pass the whole selector into the recursion,\n            // but only the not processed parts\n            return nestedSelector.match(cssSelector, matchedCallback);\n        };\n        return SelectorMatcher;\n    }());\n    var SelectorListContext = /** @class */ (function () {\n        function SelectorListContext(selectors) {\n            this.selectors = selectors;\n            this.alreadyMatched = false;\n        }\n        return SelectorListContext;\n    }());\n    // Store context to pass back selector and context when a selector is matched\n    var SelectorContext = /** @class */ (function () {\n        function SelectorContext(selector, cbContext, listContext) {\n            this.selector = selector;\n            this.cbContext = cbContext;\n            this.listContext = listContext;\n            this.notSelectors = selector.notSelectors;\n        }\n        SelectorContext.prototype.finalize = function (cssSelector, callback) {\n            var result = true;\n            if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n                var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n                result = !notMatcher.match(cssSelector, null);\n            }\n            if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n                if (this.listContext) {\n                    this.listContext.alreadyMatched = true;\n                }\n                callback(this.selector, this.cbContext);\n            }\n            return result;\n        };\n        return SelectorContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\n    var createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\n    var createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    var createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    });\n    var createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    });\n    var createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    });\n    var createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    });\n    var createDirective = makeMetadataFactory('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    });\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n    var ChangeDetectionStrategy;\n    (function (ChangeDetectionStrategy) {\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(ChangeDetectionStrategy || (ChangeDetectionStrategy = {}));\n    var createComponent = makeMetadataFactory('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n    });\n    var createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n    var createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    var createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    var createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    var createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n    var createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n        if (injectable === void 0) { injectable = {}; }\n        return injectable;\n    });\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    var createOptional = makeMetadataFactory('Optional');\n    var createSelf = makeMetadataFactory('Self');\n    var createSkipSelf = makeMetadataFactory('SkipSelf');\n    var createHost = makeMetadataFactory('Host');\n    var Type = Function;\n    var SecurityContext;\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(SecurityContext || (SecurityContext = {}));\n    var MissingTranslationStrategy;\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(MissingTranslationStrategy || (MissingTranslationStrategy = {}));\n    function makeMetadataFactory(name, props) {\n        var factory = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var values = props ? props.apply(void 0, __spread(args)) : {};\n            return __assign({ ngMetadataName: name }, values);\n        };\n        factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n        factory.ngMetadataName = name;\n        return factory;\n    }\n    function parserSelectorToSimpleSelector(selector) {\n        var classes = selector.classNames && selector.classNames.length ? __spread([8 /* CLASS */], selector.classNames) :\n            [];\n        var elementName = selector.element && selector.element !== '*' ? selector.element : '';\n        return __spread([elementName], selector.attrs, classes);\n    }\n    function parserSelectorToNegativeSelector(selector) {\n        var classes = selector.classNames && selector.classNames.length ? __spread([8 /* CLASS */], selector.classNames) :\n            [];\n        if (selector.element) {\n            return __spread([\n                1 /* NOT */ | 4 /* ELEMENT */, selector.element\n            ], selector.attrs, classes);\n        }\n        else if (selector.attrs.length) {\n            return __spread([1 /* NOT */ | 2 /* ATTRIBUTE */], selector.attrs, classes);\n        }\n        else {\n            return selector.classNames && selector.classNames.length ? __spread([1 /* NOT */ | 8 /* CLASS */], selector.classNames) :\n                [];\n        }\n    }\n    function parserSelectorToR3Selector(selector) {\n        var positive = parserSelectorToSimpleSelector(selector);\n        var negative = selector.notSelectors && selector.notSelectors.length ?\n            selector.notSelectors.map(function (notSelector) { return parserSelectorToNegativeSelector(notSelector); }) :\n            [];\n        return positive.concat.apply(positive, __spread(negative));\n    }\n    function parseSelectorToR3Selector(selector) {\n        return selector ? CssSelector.parse(selector).map(parserSelectorToR3Selector) : [];\n    }\n\n    var core = /*#__PURE__*/Object.freeze({\n        createInject: createInject,\n        createInjectionToken: createInjectionToken,\n        createAttribute: createAttribute,\n        createContentChildren: createContentChildren,\n        createContentChild: createContentChild,\n        createViewChildren: createViewChildren,\n        createViewChild: createViewChild,\n        createDirective: createDirective,\n        get ViewEncapsulation () { return ViewEncapsulation; },\n        get ChangeDetectionStrategy () { return ChangeDetectionStrategy; },\n        createComponent: createComponent,\n        createPipe: createPipe,\n        createInput: createInput,\n        createOutput: createOutput,\n        createHostBinding: createHostBinding,\n        createHostListener: createHostListener,\n        createNgModule: createNgModule,\n        createInjectable: createInjectable,\n        CUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n        NO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n        createOptional: createOptional,\n        createSelf: createSelf,\n        createSkipSelf: createSkipSelf,\n        createHost: createHost,\n        Type: Type,\n        get SecurityContext () { return SecurityContext; },\n        get MissingTranslationStrategy () { return MissingTranslationStrategy; },\n        parseSelectorToR3Selector: parseSelectorToR3Selector\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    //// Types\n    var TypeModifier;\n    (function (TypeModifier) {\n        TypeModifier[TypeModifier[\"Const\"] = 0] = \"Const\";\n    })(TypeModifier || (TypeModifier = {}));\n    var Type$1 = /** @class */ (function () {\n        function Type(modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            this.modifiers = modifiers;\n            if (!modifiers) {\n                this.modifiers = [];\n            }\n        }\n        Type.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n        return Type;\n    }());\n    (function (BuiltinTypeName) {\n        BuiltinTypeName[BuiltinTypeName[\"Dynamic\"] = 0] = \"Dynamic\";\n        BuiltinTypeName[BuiltinTypeName[\"Bool\"] = 1] = \"Bool\";\n        BuiltinTypeName[BuiltinTypeName[\"String\"] = 2] = \"String\";\n        BuiltinTypeName[BuiltinTypeName[\"Int\"] = 3] = \"Int\";\n        BuiltinTypeName[BuiltinTypeName[\"Number\"] = 4] = \"Number\";\n        BuiltinTypeName[BuiltinTypeName[\"Function\"] = 5] = \"Function\";\n        BuiltinTypeName[BuiltinTypeName[\"Inferred\"] = 6] = \"Inferred\";\n        BuiltinTypeName[BuiltinTypeName[\"None\"] = 7] = \"None\";\n    })(exports.BuiltinTypeName || (exports.BuiltinTypeName = {}));\n    var BuiltinType = /** @class */ (function (_super) {\n        __extends(BuiltinType, _super);\n        function BuiltinType(name, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.name = name;\n            return _this;\n        }\n        BuiltinType.prototype.visitType = function (visitor, context) {\n            return visitor.visitBuiltinType(this, context);\n        };\n        return BuiltinType;\n    }(Type$1));\n    var ExpressionType = /** @class */ (function (_super) {\n        __extends(ExpressionType, _super);\n        function ExpressionType(value, modifiers, typeParams) {\n            if (modifiers === void 0) { modifiers = null; }\n            if (typeParams === void 0) { typeParams = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.value = value;\n            _this.typeParams = typeParams;\n            return _this;\n        }\n        ExpressionType.prototype.visitType = function (visitor, context) {\n            return visitor.visitExpressionType(this, context);\n        };\n        return ExpressionType;\n    }(Type$1));\n    var ArrayType = /** @class */ (function (_super) {\n        __extends(ArrayType, _super);\n        function ArrayType(of, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.of = of;\n            return _this;\n        }\n        ArrayType.prototype.visitType = function (visitor, context) {\n            return visitor.visitArrayType(this, context);\n        };\n        return ArrayType;\n    }(Type$1));\n    var MapType = /** @class */ (function (_super) {\n        __extends(MapType, _super);\n        function MapType(valueType, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers) || this;\n            _this.valueType = valueType || null;\n            return _this;\n        }\n        MapType.prototype.visitType = function (visitor, context) { return visitor.visitMapType(this, context); };\n        return MapType;\n    }(Type$1));\n    var DYNAMIC_TYPE = new BuiltinType(exports.BuiltinTypeName.Dynamic);\n    var INFERRED_TYPE = new BuiltinType(exports.BuiltinTypeName.Inferred);\n    var BOOL_TYPE = new BuiltinType(exports.BuiltinTypeName.Bool);\n    var INT_TYPE = new BuiltinType(exports.BuiltinTypeName.Int);\n    var NUMBER_TYPE = new BuiltinType(exports.BuiltinTypeName.Number);\n    var STRING_TYPE = new BuiltinType(exports.BuiltinTypeName.String);\n    var FUNCTION_TYPE = new BuiltinType(exports.BuiltinTypeName.Function);\n    var NONE_TYPE = new BuiltinType(exports.BuiltinTypeName.None);\n    (function (BinaryOperator) {\n        BinaryOperator[BinaryOperator[\"Equals\"] = 0] = \"Equals\";\n        BinaryOperator[BinaryOperator[\"NotEquals\"] = 1] = \"NotEquals\";\n        BinaryOperator[BinaryOperator[\"Identical\"] = 2] = \"Identical\";\n        BinaryOperator[BinaryOperator[\"NotIdentical\"] = 3] = \"NotIdentical\";\n        BinaryOperator[BinaryOperator[\"Minus\"] = 4] = \"Minus\";\n        BinaryOperator[BinaryOperator[\"Plus\"] = 5] = \"Plus\";\n        BinaryOperator[BinaryOperator[\"Divide\"] = 6] = \"Divide\";\n        BinaryOperator[BinaryOperator[\"Multiply\"] = 7] = \"Multiply\";\n        BinaryOperator[BinaryOperator[\"Modulo\"] = 8] = \"Modulo\";\n        BinaryOperator[BinaryOperator[\"And\"] = 9] = \"And\";\n        BinaryOperator[BinaryOperator[\"Or\"] = 10] = \"Or\";\n        BinaryOperator[BinaryOperator[\"BitwiseAnd\"] = 11] = \"BitwiseAnd\";\n        BinaryOperator[BinaryOperator[\"Lower\"] = 12] = \"Lower\";\n        BinaryOperator[BinaryOperator[\"LowerEquals\"] = 13] = \"LowerEquals\";\n        BinaryOperator[BinaryOperator[\"Bigger\"] = 14] = \"Bigger\";\n        BinaryOperator[BinaryOperator[\"BiggerEquals\"] = 15] = \"BiggerEquals\";\n    })(exports.BinaryOperator || (exports.BinaryOperator = {}));\n    function nullSafeIsEquivalent(base, other) {\n        if (base == null || other == null) {\n            return base == other;\n        }\n        return base.isEquivalent(other);\n    }\n    function areAllEquivalent(base, other) {\n        var len = base.length;\n        if (len !== other.length) {\n            return false;\n        }\n        for (var i = 0; i < len; i++) {\n            if (!base[i].isEquivalent(other[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    var Expression = /** @class */ (function () {\n        function Expression(type, sourceSpan) {\n            this.type = type || null;\n            this.sourceSpan = sourceSpan || null;\n        }\n        Expression.prototype.prop = function (name, sourceSpan) {\n            return new ReadPropExpr(this, name, null, sourceSpan);\n        };\n        Expression.prototype.key = function (index, type, sourceSpan) {\n            return new ReadKeyExpr(this, index, type, sourceSpan);\n        };\n        Expression.prototype.callMethod = function (name, params, sourceSpan) {\n            return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n        };\n        Expression.prototype.callFn = function (params, sourceSpan) {\n            return new InvokeFunctionExpr(this, params, null, sourceSpan);\n        };\n        Expression.prototype.instantiate = function (params, type, sourceSpan) {\n            return new InstantiateExpr(this, params, type, sourceSpan);\n        };\n        Expression.prototype.conditional = function (trueCase, falseCase, sourceSpan) {\n            if (falseCase === void 0) { falseCase = null; }\n            return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n        };\n        Expression.prototype.equals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Equals, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.notEquals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.identical = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Identical, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.notIdentical = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.minus = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Minus, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.plus = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Plus, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.divide = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Divide, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.multiply = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.modulo = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.and = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.And, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.bitwiseAnd = function (rhs, sourceSpan, parens) {\n            if (parens === void 0) { parens = true; }\n            return new BinaryOperatorExpr(exports.BinaryOperator.BitwiseAnd, this, rhs, null, sourceSpan, parens);\n        };\n        Expression.prototype.or = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Or, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.lower = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Lower, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.lowerEquals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.bigger = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.biggerEquals = function (rhs, sourceSpan) {\n            return new BinaryOperatorExpr(exports.BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n        };\n        Expression.prototype.isBlank = function (sourceSpan) {\n            // Note: We use equals by purpose here to compare to null and undefined in JS.\n            // We use the typed null to allow strictNullChecks to narrow types.\n            return this.equals(TYPED_NULL_EXPR, sourceSpan);\n        };\n        Expression.prototype.cast = function (type, sourceSpan) {\n            return new CastExpr(this, type, sourceSpan);\n        };\n        Expression.prototype.toStmt = function () { return new ExpressionStatement(this, null); };\n        return Expression;\n    }());\n    (function (BuiltinVar) {\n        BuiltinVar[BuiltinVar[\"This\"] = 0] = \"This\";\n        BuiltinVar[BuiltinVar[\"Super\"] = 1] = \"Super\";\n        BuiltinVar[BuiltinVar[\"CatchError\"] = 2] = \"CatchError\";\n        BuiltinVar[BuiltinVar[\"CatchStack\"] = 3] = \"CatchStack\";\n    })(exports.BuiltinVar || (exports.BuiltinVar = {}));\n    var ReadVarExpr = /** @class */ (function (_super) {\n        __extends(ReadVarExpr, _super);\n        function ReadVarExpr(name, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            if (typeof name === 'string') {\n                _this.name = name;\n                _this.builtin = null;\n            }\n            else {\n                _this.name = null;\n                _this.builtin = name;\n            }\n            return _this;\n        }\n        ReadVarExpr.prototype.isEquivalent = function (e) {\n            return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n        };\n        ReadVarExpr.prototype.isConstant = function () { return false; };\n        ReadVarExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitReadVarExpr(this, context);\n        };\n        ReadVarExpr.prototype.set = function (value) {\n            if (!this.name) {\n                throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n            }\n            return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n        };\n        return ReadVarExpr;\n    }(Expression));\n    var TypeofExpr = /** @class */ (function (_super) {\n        __extends(TypeofExpr, _super);\n        function TypeofExpr(expr, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.expr = expr;\n            return _this;\n        }\n        TypeofExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitTypeofExpr(this, context);\n        };\n        TypeofExpr.prototype.isEquivalent = function (e) {\n            return e instanceof TypeofExpr && e.expr.isEquivalent(this.expr);\n        };\n        TypeofExpr.prototype.isConstant = function () { return this.expr.isConstant(); };\n        return TypeofExpr;\n    }(Expression));\n    var WrappedNodeExpr = /** @class */ (function (_super) {\n        __extends(WrappedNodeExpr, _super);\n        function WrappedNodeExpr(node, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.node = node;\n            return _this;\n        }\n        WrappedNodeExpr.prototype.isEquivalent = function (e) {\n            return e instanceof WrappedNodeExpr && this.node === e.node;\n        };\n        WrappedNodeExpr.prototype.isConstant = function () { return false; };\n        WrappedNodeExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWrappedNodeExpr(this, context);\n        };\n        return WrappedNodeExpr;\n    }(Expression));\n    var WriteVarExpr = /** @class */ (function (_super) {\n        __extends(WriteVarExpr, _super);\n        function WriteVarExpr(name, value, type, sourceSpan) {\n            var _this = _super.call(this, type || value.type, sourceSpan) || this;\n            _this.name = name;\n            _this.value = value;\n            return _this;\n        }\n        WriteVarExpr.prototype.isEquivalent = function (e) {\n            return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n        };\n        WriteVarExpr.prototype.isConstant = function () { return false; };\n        WriteVarExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWriteVarExpr(this, context);\n        };\n        WriteVarExpr.prototype.toDeclStmt = function (type, modifiers) {\n            return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n        };\n        WriteVarExpr.prototype.toConstDecl = function () { return this.toDeclStmt(INFERRED_TYPE, [exports.StmtModifier.Final]); };\n        return WriteVarExpr;\n    }(Expression));\n    var WriteKeyExpr = /** @class */ (function (_super) {\n        __extends(WriteKeyExpr, _super);\n        function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n            var _this = _super.call(this, type || value.type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.index = index;\n            _this.value = value;\n            return _this;\n        }\n        WriteKeyExpr.prototype.isEquivalent = function (e) {\n            return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n                this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n        };\n        WriteKeyExpr.prototype.isConstant = function () { return false; };\n        WriteKeyExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWriteKeyExpr(this, context);\n        };\n        return WriteKeyExpr;\n    }(Expression));\n    var WritePropExpr = /** @class */ (function (_super) {\n        __extends(WritePropExpr, _super);\n        function WritePropExpr(receiver, name, value, type, sourceSpan) {\n            var _this = _super.call(this, type || value.type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.value = value;\n            return _this;\n        }\n        WritePropExpr.prototype.isEquivalent = function (e) {\n            return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n                this.name === e.name && this.value.isEquivalent(e.value);\n        };\n        WritePropExpr.prototype.isConstant = function () { return false; };\n        WritePropExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitWritePropExpr(this, context);\n        };\n        return WritePropExpr;\n    }(Expression));\n    (function (BuiltinMethod) {\n        BuiltinMethod[BuiltinMethod[\"ConcatArray\"] = 0] = \"ConcatArray\";\n        BuiltinMethod[BuiltinMethod[\"SubscribeObservable\"] = 1] = \"SubscribeObservable\";\n        BuiltinMethod[BuiltinMethod[\"Bind\"] = 2] = \"Bind\";\n    })(exports.BuiltinMethod || (exports.BuiltinMethod = {}));\n    var InvokeMethodExpr = /** @class */ (function (_super) {\n        __extends(InvokeMethodExpr, _super);\n        function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.args = args;\n            if (typeof method === 'string') {\n                _this.name = method;\n                _this.builtin = null;\n            }\n            else {\n                _this.name = null;\n                _this.builtin = method;\n            }\n            return _this;\n        }\n        InvokeMethodExpr.prototype.isEquivalent = function (e) {\n            return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n                this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n        };\n        InvokeMethodExpr.prototype.isConstant = function () { return false; };\n        InvokeMethodExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitInvokeMethodExpr(this, context);\n        };\n        return InvokeMethodExpr;\n    }(Expression));\n    var InvokeFunctionExpr = /** @class */ (function (_super) {\n        __extends(InvokeFunctionExpr, _super);\n        function InvokeFunctionExpr(fn, args, type, sourceSpan, pure) {\n            if (pure === void 0) { pure = false; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.fn = fn;\n            _this.args = args;\n            _this.pure = pure;\n            return _this;\n        }\n        InvokeFunctionExpr.prototype.isEquivalent = function (e) {\n            return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n                areAllEquivalent(this.args, e.args) && this.pure === e.pure;\n        };\n        InvokeFunctionExpr.prototype.isConstant = function () { return false; };\n        InvokeFunctionExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitInvokeFunctionExpr(this, context);\n        };\n        return InvokeFunctionExpr;\n    }(Expression));\n    var InstantiateExpr = /** @class */ (function (_super) {\n        __extends(InstantiateExpr, _super);\n        function InstantiateExpr(classExpr, args, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.classExpr = classExpr;\n            _this.args = args;\n            return _this;\n        }\n        InstantiateExpr.prototype.isEquivalent = function (e) {\n            return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n                areAllEquivalent(this.args, e.args);\n        };\n        InstantiateExpr.prototype.isConstant = function () { return false; };\n        InstantiateExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitInstantiateExpr(this, context);\n        };\n        return InstantiateExpr;\n    }(Expression));\n    var LiteralExpr = /** @class */ (function (_super) {\n        __extends(LiteralExpr, _super);\n        function LiteralExpr(value, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.value = value;\n            return _this;\n        }\n        LiteralExpr.prototype.isEquivalent = function (e) {\n            return e instanceof LiteralExpr && this.value === e.value;\n        };\n        LiteralExpr.prototype.isConstant = function () { return true; };\n        LiteralExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitLiteralExpr(this, context);\n        };\n        return LiteralExpr;\n    }(Expression));\n    var ExternalExpr = /** @class */ (function (_super) {\n        __extends(ExternalExpr, _super);\n        function ExternalExpr(value, type, typeParams, sourceSpan) {\n            if (typeParams === void 0) { typeParams = null; }\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.value = value;\n            _this.typeParams = typeParams;\n            return _this;\n        }\n        ExternalExpr.prototype.isEquivalent = function (e) {\n            return e instanceof ExternalExpr && this.value.name === e.value.name &&\n                this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n        };\n        ExternalExpr.prototype.isConstant = function () { return false; };\n        ExternalExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitExternalExpr(this, context);\n        };\n        return ExternalExpr;\n    }(Expression));\n    var ExternalReference = /** @class */ (function () {\n        function ExternalReference(moduleName, name, runtime) {\n            this.moduleName = moduleName;\n            this.name = name;\n            this.runtime = runtime;\n        }\n        return ExternalReference;\n    }());\n    var ConditionalExpr = /** @class */ (function (_super) {\n        __extends(ConditionalExpr, _super);\n        function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n            if (falseCase === void 0) { falseCase = null; }\n            var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n            _this.condition = condition;\n            _this.falseCase = falseCase;\n            _this.trueCase = trueCase;\n            return _this;\n        }\n        ConditionalExpr.prototype.isEquivalent = function (e) {\n            return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n                this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n        };\n        ConditionalExpr.prototype.isConstant = function () { return false; };\n        ConditionalExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitConditionalExpr(this, context);\n        };\n        return ConditionalExpr;\n    }(Expression));\n    var NotExpr = /** @class */ (function (_super) {\n        __extends(NotExpr, _super);\n        function NotExpr(condition, sourceSpan) {\n            var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n            _this.condition = condition;\n            return _this;\n        }\n        NotExpr.prototype.isEquivalent = function (e) {\n            return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n        };\n        NotExpr.prototype.isConstant = function () { return false; };\n        NotExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitNotExpr(this, context);\n        };\n        return NotExpr;\n    }(Expression));\n    var AssertNotNull = /** @class */ (function (_super) {\n        __extends(AssertNotNull, _super);\n        function AssertNotNull(condition, sourceSpan) {\n            var _this = _super.call(this, condition.type, sourceSpan) || this;\n            _this.condition = condition;\n            return _this;\n        }\n        AssertNotNull.prototype.isEquivalent = function (e) {\n            return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n        };\n        AssertNotNull.prototype.isConstant = function () { return false; };\n        AssertNotNull.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitAssertNotNullExpr(this, context);\n        };\n        return AssertNotNull;\n    }(Expression));\n    var CastExpr = /** @class */ (function (_super) {\n        __extends(CastExpr, _super);\n        function CastExpr(value, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.value = value;\n            return _this;\n        }\n        CastExpr.prototype.isEquivalent = function (e) {\n            return e instanceof CastExpr && this.value.isEquivalent(e.value);\n        };\n        CastExpr.prototype.isConstant = function () { return false; };\n        CastExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitCastExpr(this, context);\n        };\n        return CastExpr;\n    }(Expression));\n    var FnParam = /** @class */ (function () {\n        function FnParam(name, type) {\n            if (type === void 0) { type = null; }\n            this.name = name;\n            this.type = type;\n        }\n        FnParam.prototype.isEquivalent = function (param) { return this.name === param.name; };\n        return FnParam;\n    }());\n    var FunctionExpr = /** @class */ (function (_super) {\n        __extends(FunctionExpr, _super);\n        function FunctionExpr(params, statements, type, sourceSpan, name) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.params = params;\n            _this.statements = statements;\n            _this.name = name;\n            return _this;\n        }\n        FunctionExpr.prototype.isEquivalent = function (e) {\n            return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n                areAllEquivalent(this.statements, e.statements);\n        };\n        FunctionExpr.prototype.isConstant = function () { return false; };\n        FunctionExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitFunctionExpr(this, context);\n        };\n        FunctionExpr.prototype.toDeclStmt = function (name, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n        };\n        return FunctionExpr;\n    }(Expression));\n    var BinaryOperatorExpr = /** @class */ (function (_super) {\n        __extends(BinaryOperatorExpr, _super);\n        function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan, parens) {\n            if (parens === void 0) { parens = true; }\n            var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n            _this.operator = operator;\n            _this.rhs = rhs;\n            _this.parens = parens;\n            _this.lhs = lhs;\n            return _this;\n        }\n        BinaryOperatorExpr.prototype.isEquivalent = function (e) {\n            return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n                this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n        };\n        BinaryOperatorExpr.prototype.isConstant = function () { return false; };\n        BinaryOperatorExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitBinaryOperatorExpr(this, context);\n        };\n        return BinaryOperatorExpr;\n    }(Expression));\n    var ReadPropExpr = /** @class */ (function (_super) {\n        __extends(ReadPropExpr, _super);\n        function ReadPropExpr(receiver, name, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            return _this;\n        }\n        ReadPropExpr.prototype.isEquivalent = function (e) {\n            return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n                this.name === e.name;\n        };\n        ReadPropExpr.prototype.isConstant = function () { return false; };\n        ReadPropExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitReadPropExpr(this, context);\n        };\n        ReadPropExpr.prototype.set = function (value) {\n            return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n        };\n        return ReadPropExpr;\n    }(Expression));\n    var ReadKeyExpr = /** @class */ (function (_super) {\n        __extends(ReadKeyExpr, _super);\n        function ReadKeyExpr(receiver, index, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.receiver = receiver;\n            _this.index = index;\n            return _this;\n        }\n        ReadKeyExpr.prototype.isEquivalent = function (e) {\n            return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n                this.index.isEquivalent(e.index);\n        };\n        ReadKeyExpr.prototype.isConstant = function () { return false; };\n        ReadKeyExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitReadKeyExpr(this, context);\n        };\n        ReadKeyExpr.prototype.set = function (value) {\n            return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n        };\n        return ReadKeyExpr;\n    }(Expression));\n    var LiteralArrayExpr = /** @class */ (function (_super) {\n        __extends(LiteralArrayExpr, _super);\n        function LiteralArrayExpr(entries, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.entries = entries;\n            return _this;\n        }\n        LiteralArrayExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.isConstant(); }); };\n        LiteralArrayExpr.prototype.isEquivalent = function (e) {\n            return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n        };\n        LiteralArrayExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitLiteralArrayExpr(this, context);\n        };\n        return LiteralArrayExpr;\n    }(Expression));\n    var LiteralMapEntry = /** @class */ (function () {\n        function LiteralMapEntry(key, value, quoted) {\n            this.key = key;\n            this.value = value;\n            this.quoted = quoted;\n        }\n        LiteralMapEntry.prototype.isEquivalent = function (e) {\n            return this.key === e.key && this.value.isEquivalent(e.value);\n        };\n        return LiteralMapEntry;\n    }());\n    var LiteralMapExpr = /** @class */ (function (_super) {\n        __extends(LiteralMapExpr, _super);\n        function LiteralMapExpr(entries, type, sourceSpan) {\n            var _this = _super.call(this, type, sourceSpan) || this;\n            _this.entries = entries;\n            _this.valueType = null;\n            if (type) {\n                _this.valueType = type.valueType;\n            }\n            return _this;\n        }\n        LiteralMapExpr.prototype.isEquivalent = function (e) {\n            return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n        };\n        LiteralMapExpr.prototype.isConstant = function () { return this.entries.every(function (e) { return e.value.isConstant(); }); };\n        LiteralMapExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitLiteralMapExpr(this, context);\n        };\n        return LiteralMapExpr;\n    }(Expression));\n    var CommaExpr = /** @class */ (function (_super) {\n        __extends(CommaExpr, _super);\n        function CommaExpr(parts, sourceSpan) {\n            var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n            _this.parts = parts;\n            return _this;\n        }\n        CommaExpr.prototype.isEquivalent = function (e) {\n            return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n        };\n        CommaExpr.prototype.isConstant = function () { return false; };\n        CommaExpr.prototype.visitExpression = function (visitor, context) {\n            return visitor.visitCommaExpr(this, context);\n        };\n        return CommaExpr;\n    }(Expression));\n    var THIS_EXPR = new ReadVarExpr(exports.BuiltinVar.This, null, null);\n    var SUPER_EXPR = new ReadVarExpr(exports.BuiltinVar.Super, null, null);\n    var CATCH_ERROR_VAR = new ReadVarExpr(exports.BuiltinVar.CatchError, null, null);\n    var CATCH_STACK_VAR = new ReadVarExpr(exports.BuiltinVar.CatchStack, null, null);\n    var NULL_EXPR = new LiteralExpr(null, null, null);\n    var TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n    (function (StmtModifier) {\n        StmtModifier[StmtModifier[\"Final\"] = 0] = \"Final\";\n        StmtModifier[StmtModifier[\"Private\"] = 1] = \"Private\";\n        StmtModifier[StmtModifier[\"Exported\"] = 2] = \"Exported\";\n        StmtModifier[StmtModifier[\"Static\"] = 3] = \"Static\";\n    })(exports.StmtModifier || (exports.StmtModifier = {}));\n    var Statement = /** @class */ (function () {\n        function Statement(modifiers, sourceSpan) {\n            this.modifiers = modifiers || [];\n            this.sourceSpan = sourceSpan || null;\n        }\n        Statement.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n        return Statement;\n    }());\n    var DeclareVarStmt = /** @class */ (function (_super) {\n        __extends(DeclareVarStmt, _super);\n        function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers, sourceSpan) || this;\n            _this.name = name;\n            _this.value = value;\n            _this.type = type || (value && value.type) || null;\n            return _this;\n        }\n        DeclareVarStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n                (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n        };\n        DeclareVarStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitDeclareVarStmt(this, context);\n        };\n        return DeclareVarStmt;\n    }(Statement));\n    var DeclareFunctionStmt = /** @class */ (function (_super) {\n        __extends(DeclareFunctionStmt, _super);\n        function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers, sourceSpan) || this;\n            _this.name = name;\n            _this.params = params;\n            _this.statements = statements;\n            _this.type = type || null;\n            return _this;\n        }\n        DeclareFunctionStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n                areAllEquivalent(this.statements, stmt.statements);\n        };\n        DeclareFunctionStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitDeclareFunctionStmt(this, context);\n        };\n        return DeclareFunctionStmt;\n    }(Statement));\n    var ExpressionStatement = /** @class */ (function (_super) {\n        __extends(ExpressionStatement, _super);\n        function ExpressionStatement(expr, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.expr = expr;\n            return _this;\n        }\n        ExpressionStatement.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n        };\n        ExpressionStatement.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitExpressionStmt(this, context);\n        };\n        return ExpressionStatement;\n    }(Statement));\n    var ReturnStatement = /** @class */ (function (_super) {\n        __extends(ReturnStatement, _super);\n        function ReturnStatement(value, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.value = value;\n            return _this;\n        }\n        ReturnStatement.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n        };\n        ReturnStatement.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitReturnStmt(this, context);\n        };\n        return ReturnStatement;\n    }(Statement));\n    var AbstractClassPart = /** @class */ (function () {\n        function AbstractClassPart(type, modifiers) {\n            this.modifiers = modifiers;\n            if (!modifiers) {\n                this.modifiers = [];\n            }\n            this.type = type || null;\n        }\n        AbstractClassPart.prototype.hasModifier = function (modifier) { return this.modifiers.indexOf(modifier) !== -1; };\n        return AbstractClassPart;\n    }());\n    var ClassField = /** @class */ (function (_super) {\n        __extends(ClassField, _super);\n        function ClassField(name, type, modifiers, initializer) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, type, modifiers) || this;\n            _this.name = name;\n            _this.initializer = initializer;\n            return _this;\n        }\n        ClassField.prototype.isEquivalent = function (f) { return this.name === f.name; };\n        return ClassField;\n    }(AbstractClassPart));\n    var ClassMethod = /** @class */ (function (_super) {\n        __extends(ClassMethod, _super);\n        function ClassMethod(name, params, body, type, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, type, modifiers) || this;\n            _this.name = name;\n            _this.params = params;\n            _this.body = body;\n            return _this;\n        }\n        ClassMethod.prototype.isEquivalent = function (m) {\n            return this.name === m.name && areAllEquivalent(this.body, m.body);\n        };\n        return ClassMethod;\n    }(AbstractClassPart));\n    var ClassGetter = /** @class */ (function (_super) {\n        __extends(ClassGetter, _super);\n        function ClassGetter(name, body, type, modifiers) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, type, modifiers) || this;\n            _this.name = name;\n            _this.body = body;\n            return _this;\n        }\n        ClassGetter.prototype.isEquivalent = function (m) {\n            return this.name === m.name && areAllEquivalent(this.body, m.body);\n        };\n        return ClassGetter;\n    }(AbstractClassPart));\n    var ClassStmt = /** @class */ (function (_super) {\n        __extends(ClassStmt, _super);\n        function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n            if (modifiers === void 0) { modifiers = null; }\n            var _this = _super.call(this, modifiers, sourceSpan) || this;\n            _this.name = name;\n            _this.parent = parent;\n            _this.fields = fields;\n            _this.getters = getters;\n            _this.constructorMethod = constructorMethod;\n            _this.methods = methods;\n            return _this;\n        }\n        ClassStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof ClassStmt && this.name === stmt.name &&\n                nullSafeIsEquivalent(this.parent, stmt.parent) &&\n                areAllEquivalent(this.fields, stmt.fields) &&\n                areAllEquivalent(this.getters, stmt.getters) &&\n                this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n                areAllEquivalent(this.methods, stmt.methods);\n        };\n        ClassStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitDeclareClassStmt(this, context);\n        };\n        return ClassStmt;\n    }(Statement));\n    var IfStmt = /** @class */ (function (_super) {\n        __extends(IfStmt, _super);\n        function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n            if (falseCase === void 0) { falseCase = []; }\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.condition = condition;\n            _this.trueCase = trueCase;\n            _this.falseCase = falseCase;\n            return _this;\n        }\n        IfStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n                areAllEquivalent(this.trueCase, stmt.trueCase) &&\n                areAllEquivalent(this.falseCase, stmt.falseCase);\n        };\n        IfStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitIfStmt(this, context);\n        };\n        return IfStmt;\n    }(Statement));\n    var CommentStmt = /** @class */ (function (_super) {\n        __extends(CommentStmt, _super);\n        function CommentStmt(comment, multiline, sourceSpan) {\n            if (multiline === void 0) { multiline = false; }\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.comment = comment;\n            _this.multiline = multiline;\n            return _this;\n        }\n        CommentStmt.prototype.isEquivalent = function (stmt) { return stmt instanceof CommentStmt; };\n        CommentStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitCommentStmt(this, context);\n        };\n        return CommentStmt;\n    }(Statement));\n    var JSDocCommentStmt = /** @class */ (function (_super) {\n        __extends(JSDocCommentStmt, _super);\n        function JSDocCommentStmt(tags, sourceSpan) {\n            if (tags === void 0) { tags = []; }\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.tags = tags;\n            return _this;\n        }\n        JSDocCommentStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof JSDocCommentStmt && this.toString() === stmt.toString();\n        };\n        JSDocCommentStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitJSDocCommentStmt(this, context);\n        };\n        JSDocCommentStmt.prototype.toString = function () { return serializeTags(this.tags); };\n        return JSDocCommentStmt;\n    }(Statement));\n    var TryCatchStmt = /** @class */ (function (_super) {\n        __extends(TryCatchStmt, _super);\n        function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.bodyStmts = bodyStmts;\n            _this.catchStmts = catchStmts;\n            return _this;\n        }\n        TryCatchStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n                areAllEquivalent(this.catchStmts, stmt.catchStmts);\n        };\n        TryCatchStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitTryCatchStmt(this, context);\n        };\n        return TryCatchStmt;\n    }(Statement));\n    var ThrowStmt = /** @class */ (function (_super) {\n        __extends(ThrowStmt, _super);\n        function ThrowStmt(error, sourceSpan) {\n            var _this = _super.call(this, null, sourceSpan) || this;\n            _this.error = error;\n            return _this;\n        }\n        ThrowStmt.prototype.isEquivalent = function (stmt) {\n            return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n        };\n        ThrowStmt.prototype.visitStatement = function (visitor, context) {\n            return visitor.visitThrowStmt(this, context);\n        };\n        return ThrowStmt;\n    }(Statement));\n    var AstTransformer = /** @class */ (function () {\n        function AstTransformer() {\n        }\n        AstTransformer.prototype.transformExpr = function (expr, context) { return expr; };\n        AstTransformer.prototype.transformStmt = function (stmt, context) { return stmt; };\n        AstTransformer.prototype.visitReadVarExpr = function (ast, context) { return this.transformExpr(ast, context); };\n        AstTransformer.prototype.visitWrappedNodeExpr = function (ast, context) {\n            return this.transformExpr(ast, context);\n        };\n        AstTransformer.prototype.visitTypeofExpr = function (expr, context) {\n            return this.transformExpr(new TypeofExpr(expr.expr.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitWriteVarExpr = function (expr, context) {\n            return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitWriteKeyExpr = function (expr, context) {\n            return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitWritePropExpr = function (expr, context) {\n            return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitInvokeMethodExpr = function (ast, context) {\n            var method = ast.builtin || ast.name;\n            return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), method, this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitInvokeFunctionExpr = function (ast, context) {\n            return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitInstantiateExpr = function (ast, context) {\n            return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitLiteralExpr = function (ast, context) { return this.transformExpr(ast, context); };\n        AstTransformer.prototype.visitExternalExpr = function (ast, context) {\n            return this.transformExpr(ast, context);\n        };\n        AstTransformer.prototype.visitConditionalExpr = function (ast, context) {\n            return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), ast.falseCase.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitNotExpr = function (ast, context) {\n            return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitAssertNotNullExpr = function (ast, context) {\n            return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitCastExpr = function (ast, context) {\n            return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitFunctionExpr = function (ast, context) {\n            return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitBinaryOperatorExpr = function (ast, context) {\n            return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitReadPropExpr = function (ast, context) {\n            return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitReadKeyExpr = function (ast, context) {\n            return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitLiteralArrayExpr = function (ast, context) {\n            return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitLiteralMapExpr = function (ast, context) {\n            var _this = this;\n            var entries = ast.entries.map(function (entry) { return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted); });\n            var mapType = new MapType(ast.valueType, null);\n            return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitCommaExpr = function (ast, context) {\n            return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitAllExpressions = function (exprs, context) {\n            var _this = this;\n            return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n        };\n        AstTransformer.prototype.visitDeclareVarStmt = function (stmt, context) {\n            var value = stmt.value && stmt.value.visitExpression(this, context);\n            return this.transformStmt(new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n            return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitExpressionStmt = function (stmt, context) {\n            return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitReturnStmt = function (stmt, context) {\n            return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitDeclareClassStmt = function (stmt, context) {\n            var _this = this;\n            var parent = stmt.parent.visitExpression(this, context);\n            var getters = stmt.getters.map(function (getter) { return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers); });\n            var ctorMethod = stmt.constructorMethod &&\n                new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n            var methods = stmt.methods.map(function (method) { return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers); });\n            return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitIfStmt = function (stmt, context) {\n            return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitTryCatchStmt = function (stmt, context) {\n            return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitThrowStmt = function (stmt, context) {\n            return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n        };\n        AstTransformer.prototype.visitCommentStmt = function (stmt, context) {\n            return this.transformStmt(stmt, context);\n        };\n        AstTransformer.prototype.visitJSDocCommentStmt = function (stmt, context) {\n            return this.transformStmt(stmt, context);\n        };\n        AstTransformer.prototype.visitAllStatements = function (stmts, context) {\n            var _this = this;\n            return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n        };\n        return AstTransformer;\n    }());\n    var RecursiveAstVisitor = /** @class */ (function () {\n        function RecursiveAstVisitor() {\n        }\n        RecursiveAstVisitor.prototype.visitType = function (ast, context) { return ast; };\n        RecursiveAstVisitor.prototype.visitExpression = function (ast, context) {\n            if (ast.type) {\n                ast.type.visitType(this, context);\n            }\n            return ast;\n        };\n        RecursiveAstVisitor.prototype.visitBuiltinType = function (type, context) { return this.visitType(type, context); };\n        RecursiveAstVisitor.prototype.visitExpressionType = function (type, context) {\n            var _this = this;\n            type.value.visitExpression(this, context);\n            if (type.typeParams !== null) {\n                type.typeParams.forEach(function (param) { return _this.visitType(param, context); });\n            }\n            return this.visitType(type, context);\n        };\n        RecursiveAstVisitor.prototype.visitArrayType = function (type, context) { return this.visitType(type, context); };\n        RecursiveAstVisitor.prototype.visitMapType = function (type, context) { return this.visitType(type, context); };\n        RecursiveAstVisitor.prototype.visitWrappedNodeExpr = function (ast, context) { return ast; };\n        RecursiveAstVisitor.prototype.visitTypeofExpr = function (ast, context) { return this.visitExpression(ast, context); };\n        RecursiveAstVisitor.prototype.visitReadVarExpr = function (ast, context) {\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitWriteVarExpr = function (ast, context) {\n            ast.value.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitWriteKeyExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            ast.index.visitExpression(this, context);\n            ast.value.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitWritePropExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            ast.value.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitInvokeMethodExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            this.visitAllExpressions(ast.args, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = function (ast, context) {\n            ast.fn.visitExpression(this, context);\n            this.visitAllExpressions(ast.args, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitInstantiateExpr = function (ast, context) {\n            ast.classExpr.visitExpression(this, context);\n            this.visitAllExpressions(ast.args, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitLiteralExpr = function (ast, context) {\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitExternalExpr = function (ast, context) {\n            var _this = this;\n            if (ast.typeParams) {\n                ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n            }\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitConditionalExpr = function (ast, context) {\n            ast.condition.visitExpression(this, context);\n            ast.trueCase.visitExpression(this, context);\n            ast.falseCase.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitNotExpr = function (ast, context) {\n            ast.condition.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitAssertNotNullExpr = function (ast, context) {\n            ast.condition.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitCastExpr = function (ast, context) {\n            ast.value.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitFunctionExpr = function (ast, context) {\n            this.visitAllStatements(ast.statements, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = function (ast, context) {\n            ast.lhs.visitExpression(this, context);\n            ast.rhs.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitReadPropExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitReadKeyExpr = function (ast, context) {\n            ast.receiver.visitExpression(this, context);\n            ast.index.visitExpression(this, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n            this.visitAllExpressions(ast.entries, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n            var _this = this;\n            ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitCommaExpr = function (ast, context) {\n            this.visitAllExpressions(ast.parts, context);\n            return this.visitExpression(ast, context);\n        };\n        RecursiveAstVisitor.prototype.visitAllExpressions = function (exprs, context) {\n            var _this = this;\n            exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n        };\n        RecursiveAstVisitor.prototype.visitDeclareVarStmt = function (stmt, context) {\n            if (stmt.value) {\n                stmt.value.visitExpression(this, context);\n            }\n            if (stmt.type) {\n                stmt.type.visitType(this, context);\n            }\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n            this.visitAllStatements(stmt.statements, context);\n            if (stmt.type) {\n                stmt.type.visitType(this, context);\n            }\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitExpressionStmt = function (stmt, context) {\n            stmt.expr.visitExpression(this, context);\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitReturnStmt = function (stmt, context) {\n            stmt.value.visitExpression(this, context);\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n            var _this = this;\n            stmt.parent.visitExpression(this, context);\n            stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n            if (stmt.constructorMethod) {\n                this.visitAllStatements(stmt.constructorMethod.body, context);\n            }\n            stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitIfStmt = function (stmt, context) {\n            stmt.condition.visitExpression(this, context);\n            this.visitAllStatements(stmt.trueCase, context);\n            this.visitAllStatements(stmt.falseCase, context);\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitTryCatchStmt = function (stmt, context) {\n            this.visitAllStatements(stmt.bodyStmts, context);\n            this.visitAllStatements(stmt.catchStmts, context);\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitThrowStmt = function (stmt, context) {\n            stmt.error.visitExpression(this, context);\n            return stmt;\n        };\n        RecursiveAstVisitor.prototype.visitCommentStmt = function (stmt, context) { return stmt; };\n        RecursiveAstVisitor.prototype.visitJSDocCommentStmt = function (stmt, context) { return stmt; };\n        RecursiveAstVisitor.prototype.visitAllStatements = function (stmts, context) {\n            var _this = this;\n            stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n        };\n        return RecursiveAstVisitor;\n    }());\n    function findReadVarNames(stmts) {\n        var visitor = new _ReadVarVisitor();\n        visitor.visitAllStatements(stmts, null);\n        return visitor.varNames;\n    }\n    var _ReadVarVisitor = /** @class */ (function (_super) {\n        __extends(_ReadVarVisitor, _super);\n        function _ReadVarVisitor() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.varNames = new Set();\n            return _this;\n        }\n        _ReadVarVisitor.prototype.visitDeclareFunctionStmt = function (stmt, context) {\n            // Don't descend into nested functions\n            return stmt;\n        };\n        _ReadVarVisitor.prototype.visitDeclareClassStmt = function (stmt, context) {\n            // Don't descend into nested classes\n            return stmt;\n        };\n        _ReadVarVisitor.prototype.visitReadVarExpr = function (ast, context) {\n            if (ast.name) {\n                this.varNames.add(ast.name);\n            }\n            return null;\n        };\n        return _ReadVarVisitor;\n    }(RecursiveAstVisitor));\n    function collectExternalReferences(stmts) {\n        var visitor = new _FindExternalReferencesVisitor();\n        visitor.visitAllStatements(stmts, null);\n        return visitor.externalReferences;\n    }\n    var _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n        __extends(_FindExternalReferencesVisitor, _super);\n        function _FindExternalReferencesVisitor() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.externalReferences = [];\n            return _this;\n        }\n        _FindExternalReferencesVisitor.prototype.visitExternalExpr = function (e, context) {\n            this.externalReferences.push(e.value);\n            return _super.prototype.visitExternalExpr.call(this, e, context);\n        };\n        return _FindExternalReferencesVisitor;\n    }(RecursiveAstVisitor));\n    function applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n        if (!sourceSpan) {\n            return stmt;\n        }\n        var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n        return stmt.visitStatement(transformer, null);\n    }\n    function applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n        if (!sourceSpan) {\n            return expr;\n        }\n        var transformer = new _ApplySourceSpanTransformer(sourceSpan);\n        return expr.visitExpression(transformer, null);\n    }\n    var _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n        __extends(_ApplySourceSpanTransformer, _super);\n        function _ApplySourceSpanTransformer(sourceSpan) {\n            var _this = _super.call(this) || this;\n            _this.sourceSpan = sourceSpan;\n            return _this;\n        }\n        _ApplySourceSpanTransformer.prototype._clone = function (obj) {\n            var clone = Object.create(obj.constructor.prototype);\n            for (var prop in obj) {\n                clone[prop] = obj[prop];\n            }\n            return clone;\n        };\n        _ApplySourceSpanTransformer.prototype.transformExpr = function (expr, context) {\n            if (!expr.sourceSpan) {\n                expr = this._clone(expr);\n                expr.sourceSpan = this.sourceSpan;\n            }\n            return expr;\n        };\n        _ApplySourceSpanTransformer.prototype.transformStmt = function (stmt, context) {\n            if (!stmt.sourceSpan) {\n                stmt = this._clone(stmt);\n                stmt.sourceSpan = this.sourceSpan;\n            }\n            return stmt;\n        };\n        return _ApplySourceSpanTransformer;\n    }(AstTransformer));\n    function variable(name, type, sourceSpan) {\n        return new ReadVarExpr(name, type, sourceSpan);\n    }\n    function importExpr(id, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        return new ExternalExpr(id, null, typeParams, sourceSpan);\n    }\n    function importType(id, typeParams, typeModifiers) {\n        if (typeParams === void 0) { typeParams = null; }\n        if (typeModifiers === void 0) { typeModifiers = null; }\n        return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n    }\n    function expressionType(expr, typeModifiers, typeParams) {\n        if (typeModifiers === void 0) { typeModifiers = null; }\n        if (typeParams === void 0) { typeParams = null; }\n        return new ExpressionType(expr, typeModifiers, typeParams);\n    }\n    function typeofExpr(expr) {\n        return new TypeofExpr(expr);\n    }\n    function literalArr(values, type, sourceSpan) {\n        return new LiteralArrayExpr(values, type, sourceSpan);\n    }\n    function literalMap(values, type) {\n        if (type === void 0) { type = null; }\n        return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n    }\n    function not(expr, sourceSpan) {\n        return new NotExpr(expr, sourceSpan);\n    }\n    function assertNotNull(expr, sourceSpan) {\n        return new AssertNotNull(expr, sourceSpan);\n    }\n    function fn(params, body, type, sourceSpan, name) {\n        return new FunctionExpr(params, body, type, sourceSpan, name);\n    }\n    function ifStmt(condition, thenClause, elseClause) {\n        return new IfStmt(condition, thenClause, elseClause);\n    }\n    function literal(value, type, sourceSpan) {\n        return new LiteralExpr(value, type, sourceSpan);\n    }\n    function isNull(exp) {\n        return exp instanceof LiteralExpr && exp.value === null;\n    }\n    /*\n     * Serializes a `Tag` into a string.\n     * Returns a string like \" @foo {bar} baz\" (note the leading whitespace before `@foo`).\n     */\n    function tagToString(tag) {\n        var out = '';\n        if (tag.tagName) {\n            out += \" @\" + tag.tagName;\n        }\n        if (tag.text) {\n            if (tag.text.match(/\\/\\*|\\*\\//)) {\n                throw new Error('JSDoc text cannot contain \"/*\" and \"*/\"');\n            }\n            out += ' ' + tag.text.replace(/@/g, '\\\\@');\n        }\n        return out;\n    }\n    function serializeTags(tags) {\n        var e_1, _a;\n        if (tags.length === 0)\n            return '';\n        var out = '*\\n';\n        try {\n            for (var tags_1 = __values(tags), tags_1_1 = tags_1.next(); !tags_1_1.done; tags_1_1 = tags_1.next()) {\n                var tag = tags_1_1.value;\n                out += ' *';\n                // If the tagToString is multi-line, insert \" * \" prefixes on subsequent lines.\n                out += tagToString(tag).replace(/\\n/g, '\\n * ');\n                out += '\\n';\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (tags_1_1 && !tags_1_1.done && (_a = tags_1.return)) _a.call(tags_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        out += ' ';\n        return out;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n    function dashCaseToCamelCase(input) {\n        return input.replace(DASH_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[1].toUpperCase();\n        });\n    }\n    function splitAtColon(input, defaultValues) {\n        return _splitAt(input, ':', defaultValues);\n    }\n    function splitAtPeriod(input, defaultValues) {\n        return _splitAt(input, '.', defaultValues);\n    }\n    function _splitAt(input, character, defaultValues) {\n        var characterIndex = input.indexOf(character);\n        if (characterIndex == -1)\n            return defaultValues;\n        return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n    }\n    function visitValue(value, visitor, context) {\n        if (Array.isArray(value)) {\n            return visitor.visitArray(value, context);\n        }\n        if (isStrictStringMap(value)) {\n            return visitor.visitStringMap(value, context);\n        }\n        if (value == null || typeof value == 'string' || typeof value == 'number' ||\n            typeof value == 'boolean') {\n            return visitor.visitPrimitive(value, context);\n        }\n        return visitor.visitOther(value, context);\n    }\n    function isDefined(val) {\n        return val !== null && val !== undefined;\n    }\n    function noUndefined(val) {\n        return val === undefined ? null : val;\n    }\n    var ValueTransformer = /** @class */ (function () {\n        function ValueTransformer() {\n        }\n        ValueTransformer.prototype.visitArray = function (arr, context) {\n            var _this = this;\n            return arr.map(function (value) { return visitValue(value, _this, context); });\n        };\n        ValueTransformer.prototype.visitStringMap = function (map, context) {\n            var _this = this;\n            var result = {};\n            Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n            return result;\n        };\n        ValueTransformer.prototype.visitPrimitive = function (value, context) { return value; };\n        ValueTransformer.prototype.visitOther = function (value, context) { return value; };\n        return ValueTransformer;\n    }());\n    var SyncAsync = {\n        assertSync: function (value) {\n            if (isPromise(value)) {\n                throw new Error(\"Illegal state: value cannot be a promise\");\n            }\n            return value;\n        },\n        then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n        all: function (syncAsyncValues) {\n            return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : syncAsyncValues;\n        }\n    };\n    function error(msg) {\n        throw new Error(\"Internal Error: \" + msg);\n    }\n    function syntaxError(msg, parseErrors) {\n        var error = Error(msg);\n        error[ERROR_SYNTAX_ERROR] = true;\n        if (parseErrors)\n            error[ERROR_PARSE_ERRORS] = parseErrors;\n        return error;\n    }\n    var ERROR_SYNTAX_ERROR = 'ngSyntaxError';\n    var ERROR_PARSE_ERRORS = 'ngParseErrors';\n    function isSyntaxError(error) {\n        return error[ERROR_SYNTAX_ERROR];\n    }\n    function getParseErrors(error) {\n        return error[ERROR_PARSE_ERRORS] || [];\n    }\n    // Escape characters that have a special meaning in Regular Expressions\n    function escapeRegExp(s) {\n        return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n    }\n    var STRING_MAP_PROTO = Object.getPrototypeOf({});\n    function isStrictStringMap(obj) {\n        return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n    }\n    function utf8Encode(str) {\n        var encoded = '';\n        for (var index = 0; index < str.length; index++) {\n            var codePoint = str.charCodeAt(index);\n            // decode surrogate\n            // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n                var low = str.charCodeAt(index + 1);\n                if (low >= 0xdc00 && low <= 0xdfff) {\n                    index++;\n                    codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n                }\n            }\n            if (codePoint <= 0x7f) {\n                encoded += String.fromCharCode(codePoint);\n            }\n            else if (codePoint <= 0x7ff) {\n                encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n            }\n            else if (codePoint <= 0xffff) {\n                encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n            }\n            else if (codePoint <= 0x1fffff) {\n                encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n            }\n        }\n        return encoded;\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        // WARNING: do not try to `JSON.stringify(token)` here\n        // see https://github.com/angular/angular/issues/23440\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            var splits = full.split('.');\n            this.major = splits[0];\n            this.minor = splits[1];\n            this.patch = splits.slice(2).join('.');\n        }\n        return Version;\n    }());\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CONSTANT_PREFIX = '_c';\n    /**\n     * Context to use when producing a key.\n     *\n     * This ensures we see the constant not the reference variable when producing\n     * a key.\n     */\n    var KEY_CONTEXT = {};\n    /**\n     * A node that is a place-holder that allows the node to be replaced when the actual\n     * node is known.\n     *\n     * This allows the constant pool to change an expression from a direct reference to\n     * a constant to a shared constant. It returns a fix-up node that is later allowed to\n     * change the referenced expression.\n     */\n    var FixupExpression = /** @class */ (function (_super) {\n        __extends(FixupExpression, _super);\n        function FixupExpression(resolved) {\n            var _this = _super.call(this, resolved.type) || this;\n            _this.resolved = resolved;\n            _this.original = resolved;\n            return _this;\n        }\n        FixupExpression.prototype.visitExpression = function (visitor, context) {\n            if (context === KEY_CONTEXT) {\n                // When producing a key we want to traverse the constant not the\n                // variable used to refer to it.\n                return this.original.visitExpression(visitor, context);\n            }\n            else {\n                return this.resolved.visitExpression(visitor, context);\n            }\n        };\n        FixupExpression.prototype.isEquivalent = function (e) {\n            return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n        };\n        FixupExpression.prototype.isConstant = function () { return true; };\n        FixupExpression.prototype.fixup = function (expression) {\n            this.resolved = expression;\n            this.shared = true;\n        };\n        return FixupExpression;\n    }(Expression));\n    /**\n     * A constant pool allows a code emitter to share constant in an output context.\n     *\n     * The constant pool also supports sharing access to ivy definitions references.\n     */\n    var ConstantPool = /** @class */ (function () {\n        function ConstantPool() {\n            this.statements = [];\n            this.literals = new Map();\n            this.literalFactories = new Map();\n            this.injectorDefinitions = new Map();\n            this.directiveDefinitions = new Map();\n            this.componentDefinitions = new Map();\n            this.pipeDefinitions = new Map();\n            this.nextNameIndex = 0;\n        }\n        ConstantPool.prototype.getConstLiteral = function (literal$$1, forceShared) {\n            if (literal$$1 instanceof LiteralExpr || literal$$1 instanceof FixupExpression) {\n                // Do no put simple literals into the constant pool or try to produce a constant for a\n                // reference to a constant.\n                return literal$$1;\n            }\n            var key = this.keyOf(literal$$1);\n            var fixup = this.literals.get(key);\n            var newValue = false;\n            if (!fixup) {\n                fixup = new FixupExpression(literal$$1);\n                this.literals.set(key, fixup);\n                newValue = true;\n            }\n            if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n                // Replace the expression with a variable\n                var name_1 = this.freshName();\n                this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [exports.StmtModifier.Final]));\n                fixup.fixup(variable(name_1));\n            }\n            return fixup;\n        };\n        ConstantPool.prototype.getDefinition = function (type, kind, ctx, forceShared) {\n            if (forceShared === void 0) { forceShared = false; }\n            var definitions = this.definitionsOf(kind);\n            var fixup = definitions.get(type);\n            var newValue = false;\n            if (!fixup) {\n                var property = this.propertyNameOf(kind);\n                fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n                definitions.set(type, fixup);\n                newValue = true;\n            }\n            if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n                var name_2 = this.freshName();\n                this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [exports.StmtModifier.Final]));\n                fixup.fixup(variable(name_2));\n            }\n            return fixup;\n        };\n        ConstantPool.prototype.getLiteralFactory = function (literal$$1) {\n            // Create a pure function that builds an array of a mix of constant  and variable expressions\n            if (literal$$1 instanceof LiteralArrayExpr) {\n                var argumentsForKey = literal$$1.entries.map(function (e) { return e.isConstant() ? e : literal(null); });\n                var key = this.keyOf(literalArr(argumentsForKey));\n                return this._getLiteralFactory(key, literal$$1.entries, function (entries) { return literalArr(entries); });\n            }\n            else {\n                var expressionForKey = literalMap(literal$$1.entries.map(function (e) { return ({\n                    key: e.key,\n                    value: e.value.isConstant() ? e.value : literal(null),\n                    quoted: e.quoted\n                }); }));\n                var key = this.keyOf(expressionForKey);\n                return this._getLiteralFactory(key, literal$$1.entries.map(function (e) { return e.value; }), function (entries) { return literalMap(entries.map(function (value, index) { return ({\n                    key: literal$$1.entries[index].key,\n                    value: value,\n                    quoted: literal$$1.entries[index].quoted\n                }); })); });\n            }\n        };\n        ConstantPool.prototype._getLiteralFactory = function (key, values, resultMap) {\n            var _this = this;\n            var literalFactory = this.literalFactories.get(key);\n            var literalFactoryArguments = values.filter((function (e) { return !e.isConstant(); }));\n            if (!literalFactory) {\n                var resultExpressions = values.map(function (e, index) { return e.isConstant() ? _this.getConstLiteral(e, true) : variable(\"a\" + index); });\n                var parameters = resultExpressions.filter(isVariable).map(function (e) { return new FnParam(e.name, DYNAMIC_TYPE); });\n                var pureFunctionDeclaration = fn(parameters, [new ReturnStatement(resultMap(resultExpressions))], INFERRED_TYPE);\n                var name_3 = this.freshName();\n                this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE, [\n                    exports.StmtModifier.Final\n                ]));\n                literalFactory = variable(name_3);\n                this.literalFactories.set(key, literalFactory);\n            }\n            return { literalFactory: literalFactory, literalFactoryArguments: literalFactoryArguments };\n        };\n        /**\n         * Produce a unique name.\n         *\n         * The name might be unique among different prefixes if any of the prefixes end in\n         * a digit so the prefix should be a constant string (not based on user input) and\n         * must not end in a digit.\n         */\n        ConstantPool.prototype.uniqueName = function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n        ConstantPool.prototype.definitionsOf = function (kind) {\n            switch (kind) {\n                case 2 /* Component */:\n                    return this.componentDefinitions;\n                case 1 /* Directive */:\n                    return this.directiveDefinitions;\n                case 0 /* Injector */:\n                    return this.injectorDefinitions;\n                case 3 /* Pipe */:\n                    return this.pipeDefinitions;\n            }\n            error(\"Unknown definition kind \" + kind);\n            return this.componentDefinitions;\n        };\n        ConstantPool.prototype.propertyNameOf = function (kind) {\n            switch (kind) {\n                case 2 /* Component */:\n                    return 'ngComponentDef';\n                case 1 /* Directive */:\n                    return 'ngDirectiveDef';\n                case 0 /* Injector */:\n                    return 'ngInjectorDef';\n                case 3 /* Pipe */:\n                    return 'ngPipeDef';\n            }\n            error(\"Unknown definition kind \" + kind);\n            return '<unknown>';\n        };\n        ConstantPool.prototype.freshName = function () { return this.uniqueName(CONSTANT_PREFIX); };\n        ConstantPool.prototype.keyOf = function (expression) {\n            return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n        };\n        return ConstantPool;\n    }());\n    /**\n     * Visitor used to determine if 2 expressions are equivalent and can be shared in the\n     * `ConstantPool`.\n     *\n     * When the id (string) generated by the visitor is equal, expressions are considered equivalent.\n     */\n    var KeyVisitor = /** @class */ (function () {\n        function KeyVisitor() {\n            this.visitWrappedNodeExpr = invalid;\n            this.visitWriteVarExpr = invalid;\n            this.visitWriteKeyExpr = invalid;\n            this.visitWritePropExpr = invalid;\n            this.visitInvokeMethodExpr = invalid;\n            this.visitInvokeFunctionExpr = invalid;\n            this.visitInstantiateExpr = invalid;\n            this.visitConditionalExpr = invalid;\n            this.visitNotExpr = invalid;\n            this.visitAssertNotNullExpr = invalid;\n            this.visitCastExpr = invalid;\n            this.visitFunctionExpr = invalid;\n            this.visitBinaryOperatorExpr = invalid;\n            this.visitReadPropExpr = invalid;\n            this.visitReadKeyExpr = invalid;\n            this.visitCommaExpr = invalid;\n        }\n        KeyVisitor.prototype.visitLiteralExpr = function (ast) {\n            return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n        };\n        KeyVisitor.prototype.visitLiteralArrayExpr = function (ast, context) {\n            var _this = this;\n            return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, context); }).join(',') + \"]\";\n        };\n        KeyVisitor.prototype.visitLiteralMapExpr = function (ast, context) {\n            var _this = this;\n            var mapKey = function (entry) {\n                var quote = entry.quoted ? '\"' : '';\n                return \"\" + quote + entry.key + quote;\n            };\n            var mapEntry = function (entry) {\n                return mapKey(entry) + \":\" + entry.value.visitExpression(_this, context);\n            };\n            return \"{\" + ast.entries.map(mapEntry).join(',');\n        };\n        KeyVisitor.prototype.visitExternalExpr = function (ast) {\n            return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n                \"EX:\" + ast.value.runtime.name;\n        };\n        KeyVisitor.prototype.visitReadVarExpr = function (node) { return \"VAR:\" + node.name; };\n        KeyVisitor.prototype.visitTypeofExpr = function (node, context) {\n            return \"TYPEOF:\" + node.expr.visitExpression(this, context);\n        };\n        return KeyVisitor;\n    }());\n    function invalid(arg) {\n        throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + arg.constructor.name);\n    }\n    function isVariable(e) {\n        return e instanceof ReadVarExpr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CORE = '@angular/core';\n    var Identifiers = /** @class */ (function () {\n        function Identifiers() {\n        }\n        Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n            name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n            moduleName: CORE,\n        };\n        Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n        Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n        Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n        Identifiers.ChangeDetectorRef = {\n            name: 'ChangeDetectorRef',\n            moduleName: CORE,\n        };\n        Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n        Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n        Identifiers.Renderer2 = { name: 'Renderer2', moduleName: CORE };\n        Identifiers.CodegenComponentFactoryResolver = {\n            name: 'ɵCodegenComponentFactoryResolver',\n            moduleName: CORE,\n        };\n        Identifiers.ComponentFactoryResolver = {\n            name: 'ComponentFactoryResolver',\n            moduleName: CORE,\n        };\n        Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n        Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n        Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n        Identifiers.createModuleFactory = {\n            name: 'ɵcmf',\n            moduleName: CORE,\n        };\n        Identifiers.moduleDef = {\n            name: 'ɵmod',\n            moduleName: CORE,\n        };\n        Identifiers.moduleProviderDef = {\n            name: 'ɵmpd',\n            moduleName: CORE,\n        };\n        Identifiers.RegisterModuleFactoryFn = {\n            name: 'ɵregisterModuleFactory',\n            moduleName: CORE,\n        };\n        Identifiers.inject = { name: 'inject', moduleName: CORE };\n        Identifiers.INJECTOR = { name: 'INJECTOR', moduleName: CORE };\n        Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n        Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n        Identifiers.InjectableDef = { name: 'ɵInjectableDef', moduleName: CORE };\n        Identifiers.ViewEncapsulation = {\n            name: 'ViewEncapsulation',\n            moduleName: CORE,\n        };\n        Identifiers.ChangeDetectionStrategy = {\n            name: 'ChangeDetectionStrategy',\n            moduleName: CORE,\n        };\n        Identifiers.SecurityContext = {\n            name: 'SecurityContext',\n            moduleName: CORE,\n        };\n        Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n        Identifiers.TRANSLATIONS_FORMAT = {\n            name: 'TRANSLATIONS_FORMAT',\n            moduleName: CORE,\n        };\n        Identifiers.inlineInterpolate = {\n            name: 'ɵinlineInterpolate',\n            moduleName: CORE,\n        };\n        Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n        Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n        Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n        Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n        Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n        Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n        Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n        Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n        Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n        Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n        Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n        Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n        Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n        Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n        Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n        Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n        Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n        Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n        Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n        // type only\n        Identifiers.RendererType2 = {\n            name: 'RendererType2',\n            moduleName: CORE,\n        };\n        // type only\n        Identifiers.ViewDefinition = {\n            name: 'ɵViewDefinition',\n            moduleName: CORE,\n        };\n        Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n        Identifiers.setClassMetadata = { name: 'ɵsetClassMetadata', moduleName: CORE };\n        return Identifiers;\n    }());\n    function createTokenForReference(reference) {\n        return { identifier: { reference: reference } };\n    }\n    function createTokenForExternalReference(reflector, reference) {\n        return createTokenForReference(reflector.resolveExternalReference(reference));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A token representing the a reference to a static type.\n     *\n     * This token is unique for a filePath and name and can be used as a hash table key.\n     */\n    var StaticSymbol = /** @class */ (function () {\n        function StaticSymbol(filePath, name, members) {\n            this.filePath = filePath;\n            this.name = name;\n            this.members = members;\n        }\n        StaticSymbol.prototype.assertNoMembers = function () {\n            if (this.members.length) {\n                throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n            }\n        };\n        return StaticSymbol;\n    }());\n    /**\n     * A cache of static symbol used by the StaticReflector to return the same symbol for the\n     * same symbol values.\n     */\n    var StaticSymbolCache = /** @class */ (function () {\n        function StaticSymbolCache() {\n            this.cache = new Map();\n        }\n        StaticSymbolCache.prototype.get = function (declarationFile, name, members) {\n            members = members || [];\n            var memberSuffix = members.length ? \".\" + members.join('.') : '';\n            var key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n            var result = this.cache.get(key);\n            if (!result) {\n                result = new StaticSymbol(declarationFile, name, members);\n                this.cache.set(key, result);\n            }\n            return result;\n        };\n        return StaticSymbolCache;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // group 0: \"[prop] or (event) or @trigger\"\n    // group 1: \"prop\" from \"[prop]\"\n    // group 2: \"event\" from \"(event)\"\n    // group 3: \"@trigger\" from \"@trigger\"\n    var HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n    function sanitizeIdentifier(name) {\n        return name.replace(/\\W/g, '_');\n    }\n    var _anonymousTypeIndex = 0;\n    function identifierName(compileIdentifier) {\n        if (!compileIdentifier || !compileIdentifier.reference) {\n            return null;\n        }\n        var ref = compileIdentifier.reference;\n        if (ref instanceof StaticSymbol) {\n            return ref.name;\n        }\n        if (ref['__anonymousType']) {\n            return ref['__anonymousType'];\n        }\n        var identifier = stringify(ref);\n        if (identifier.indexOf('(') >= 0) {\n            // case: anonymous functions!\n            identifier = \"anonymous_\" + _anonymousTypeIndex++;\n            ref['__anonymousType'] = identifier;\n        }\n        else {\n            identifier = sanitizeIdentifier(identifier);\n        }\n        return identifier;\n    }\n    function identifierModuleUrl(compileIdentifier) {\n        var ref = compileIdentifier.reference;\n        if (ref instanceof StaticSymbol) {\n            return ref.filePath;\n        }\n        // Runtime type\n        return \"./\" + stringify(ref);\n    }\n    function viewClassName(compType, embeddedTemplateIndex) {\n        return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n    }\n    function rendererTypeName(compType) {\n        return \"RenderType_\" + identifierName({ reference: compType });\n    }\n    function hostViewClassName(compType) {\n        return \"HostView_\" + identifierName({ reference: compType });\n    }\n    function componentFactoryName(compType) {\n        return identifierName({ reference: compType }) + \"NgFactory\";\n    }\n    (function (CompileSummaryKind) {\n        CompileSummaryKind[CompileSummaryKind[\"Pipe\"] = 0] = \"Pipe\";\n        CompileSummaryKind[CompileSummaryKind[\"Directive\"] = 1] = \"Directive\";\n        CompileSummaryKind[CompileSummaryKind[\"NgModule\"] = 2] = \"NgModule\";\n        CompileSummaryKind[CompileSummaryKind[\"Injectable\"] = 3] = \"Injectable\";\n    })(exports.CompileSummaryKind || (exports.CompileSummaryKind = {}));\n    function tokenName(token) {\n        return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n    }\n    function tokenReference(token) {\n        if (token.identifier != null) {\n            return token.identifier.reference;\n        }\n        else {\n            return token.value;\n        }\n    }\n    /**\n     * Metadata about a stylesheet\n     */\n    var CompileStylesheetMetadata = /** @class */ (function () {\n        function CompileStylesheetMetadata(_a) {\n            var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n            this.moduleUrl = moduleUrl || null;\n            this.styles = _normalizeArray(styles);\n            this.styleUrls = _normalizeArray(styleUrls);\n        }\n        return CompileStylesheetMetadata;\n    }());\n    /**\n     * Metadata regarding compilation of a template.\n     */\n    var CompileTemplateMetadata = /** @class */ (function () {\n        function CompileTemplateMetadata(_a) {\n            var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n            this.encapsulation = encapsulation;\n            this.template = template;\n            this.templateUrl = templateUrl;\n            this.htmlAst = htmlAst;\n            this.styles = _normalizeArray(styles);\n            this.styleUrls = _normalizeArray(styleUrls);\n            this.externalStylesheets = _normalizeArray(externalStylesheets);\n            this.animations = animations ? flatten(animations) : [];\n            this.ngContentSelectors = ngContentSelectors || [];\n            if (interpolation && interpolation.length != 2) {\n                throw new Error(\"'interpolation' should have a start and an end symbol.\");\n            }\n            this.interpolation = interpolation;\n            this.isInline = isInline;\n            this.preserveWhitespaces = preserveWhitespaces;\n        }\n        CompileTemplateMetadata.prototype.toSummary = function () {\n            return {\n                ngContentSelectors: this.ngContentSelectors,\n                encapsulation: this.encapsulation,\n                styles: this.styles,\n                animations: this.animations\n            };\n        };\n        return CompileTemplateMetadata;\n    }());\n    /**\n     * Metadata regarding compilation of a directive.\n     */\n    var CompileDirectiveMetadata = /** @class */ (function () {\n        function CompileDirectiveMetadata(_a) {\n            var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n            this.isHost = !!isHost;\n            this.type = type;\n            this.isComponent = isComponent;\n            this.selector = selector;\n            this.exportAs = exportAs;\n            this.changeDetection = changeDetection;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.hostListeners = hostListeners;\n            this.hostProperties = hostProperties;\n            this.hostAttributes = hostAttributes;\n            this.providers = _normalizeArray(providers);\n            this.viewProviders = _normalizeArray(viewProviders);\n            this.queries = _normalizeArray(queries);\n            this.guards = guards;\n            this.viewQueries = _normalizeArray(viewQueries);\n            this.entryComponents = _normalizeArray(entryComponents);\n            this.template = template;\n            this.componentViewType = componentViewType;\n            this.rendererType = rendererType;\n            this.componentFactory = componentFactory;\n        }\n        CompileDirectiveMetadata.create = function (_a) {\n            var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n            var hostListeners = {};\n            var hostProperties = {};\n            var hostAttributes = {};\n            if (host != null) {\n                Object.keys(host).forEach(function (key) {\n                    var value = host[key];\n                    var matches = key.match(HOST_REG_EXP);\n                    if (matches === null) {\n                        hostAttributes[key] = value;\n                    }\n                    else if (matches[1] != null) {\n                        hostProperties[matches[1]] = value;\n                    }\n                    else if (matches[2] != null) {\n                        hostListeners[matches[2]] = value;\n                    }\n                });\n            }\n            var inputsMap = {};\n            if (inputs != null) {\n                inputs.forEach(function (bindConfig) {\n                    // canonical syntax: `dirProp: elProp`\n                    // if there is no `:`, use dirProp = elProp\n                    var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                    inputsMap[parts[0]] = parts[1];\n                });\n            }\n            var outputsMap = {};\n            if (outputs != null) {\n                outputs.forEach(function (bindConfig) {\n                    // canonical syntax: `dirProp: elProp`\n                    // if there is no `:`, use dirProp = elProp\n                    var parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                    outputsMap[parts[0]] = parts[1];\n                });\n            }\n            return new CompileDirectiveMetadata({\n                isHost: isHost,\n                type: type,\n                isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n                inputs: inputsMap,\n                outputs: outputsMap,\n                hostListeners: hostListeners,\n                hostProperties: hostProperties,\n                hostAttributes: hostAttributes,\n                providers: providers,\n                viewProviders: viewProviders,\n                queries: queries,\n                guards: guards,\n                viewQueries: viewQueries,\n                entryComponents: entryComponents,\n                template: template,\n                componentViewType: componentViewType,\n                rendererType: rendererType,\n                componentFactory: componentFactory,\n            });\n        };\n        CompileDirectiveMetadata.prototype.toSummary = function () {\n            return {\n                summaryKind: exports.CompileSummaryKind.Directive,\n                type: this.type,\n                isComponent: this.isComponent,\n                selector: this.selector,\n                exportAs: this.exportAs,\n                inputs: this.inputs,\n                outputs: this.outputs,\n                hostListeners: this.hostListeners,\n                hostProperties: this.hostProperties,\n                hostAttributes: this.hostAttributes,\n                providers: this.providers,\n                viewProviders: this.viewProviders,\n                queries: this.queries,\n                guards: this.guards,\n                viewQueries: this.viewQueries,\n                entryComponents: this.entryComponents,\n                changeDetection: this.changeDetection,\n                template: this.template && this.template.toSummary(),\n                componentViewType: this.componentViewType,\n                rendererType: this.rendererType,\n                componentFactory: this.componentFactory\n            };\n        };\n        return CompileDirectiveMetadata;\n    }());\n    var CompilePipeMetadata = /** @class */ (function () {\n        function CompilePipeMetadata(_a) {\n            var type = _a.type, name = _a.name, pure = _a.pure;\n            this.type = type;\n            this.name = name;\n            this.pure = !!pure;\n        }\n        CompilePipeMetadata.prototype.toSummary = function () {\n            return {\n                summaryKind: exports.CompileSummaryKind.Pipe,\n                type: this.type,\n                name: this.name,\n                pure: this.pure\n            };\n        };\n        return CompilePipeMetadata;\n    }());\n    var CompileShallowModuleMetadata = /** @class */ (function () {\n        function CompileShallowModuleMetadata() {\n        }\n        return CompileShallowModuleMetadata;\n    }());\n    /**\n     * Metadata regarding compilation of a module.\n     */\n    var CompileNgModuleMetadata = /** @class */ (function () {\n        function CompileNgModuleMetadata(_a) {\n            var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n            this.type = type || null;\n            this.declaredDirectives = _normalizeArray(declaredDirectives);\n            this.exportedDirectives = _normalizeArray(exportedDirectives);\n            this.declaredPipes = _normalizeArray(declaredPipes);\n            this.exportedPipes = _normalizeArray(exportedPipes);\n            this.providers = _normalizeArray(providers);\n            this.entryComponents = _normalizeArray(entryComponents);\n            this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n            this.importedModules = _normalizeArray(importedModules);\n            this.exportedModules = _normalizeArray(exportedModules);\n            this.schemas = _normalizeArray(schemas);\n            this.id = id || null;\n            this.transitiveModule = transitiveModule || null;\n        }\n        CompileNgModuleMetadata.prototype.toSummary = function () {\n            var module = this.transitiveModule;\n            return {\n                summaryKind: exports.CompileSummaryKind.NgModule,\n                type: this.type,\n                entryComponents: module.entryComponents,\n                providers: module.providers,\n                modules: module.modules,\n                exportedDirectives: module.exportedDirectives,\n                exportedPipes: module.exportedPipes\n            };\n        };\n        return CompileNgModuleMetadata;\n    }());\n    var TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n        function TransitiveCompileNgModuleMetadata() {\n            this.directivesSet = new Set();\n            this.directives = [];\n            this.exportedDirectivesSet = new Set();\n            this.exportedDirectives = [];\n            this.pipesSet = new Set();\n            this.pipes = [];\n            this.exportedPipesSet = new Set();\n            this.exportedPipes = [];\n            this.modulesSet = new Set();\n            this.modules = [];\n            this.entryComponentsSet = new Set();\n            this.entryComponents = [];\n            this.providers = [];\n        }\n        TransitiveCompileNgModuleMetadata.prototype.addProvider = function (provider, module) {\n            this.providers.push({ provider: provider, module: module });\n        };\n        TransitiveCompileNgModuleMetadata.prototype.addDirective = function (id) {\n            if (!this.directivesSet.has(id.reference)) {\n                this.directivesSet.add(id.reference);\n                this.directives.push(id);\n            }\n        };\n        TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = function (id) {\n            if (!this.exportedDirectivesSet.has(id.reference)) {\n                this.exportedDirectivesSet.add(id.reference);\n                this.exportedDirectives.push(id);\n            }\n        };\n        TransitiveCompileNgModuleMetadata.prototype.addPipe = function (id) {\n            if (!this.pipesSet.has(id.reference)) {\n                this.pipesSet.add(id.reference);\n                this.pipes.push(id);\n            }\n        };\n        TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = function (id) {\n            if (!this.exportedPipesSet.has(id.reference)) {\n                this.exportedPipesSet.add(id.reference);\n                this.exportedPipes.push(id);\n            }\n        };\n        TransitiveCompileNgModuleMetadata.prototype.addModule = function (id) {\n            if (!this.modulesSet.has(id.reference)) {\n                this.modulesSet.add(id.reference);\n                this.modules.push(id);\n            }\n        };\n        TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = function (ec) {\n            if (!this.entryComponentsSet.has(ec.componentType)) {\n                this.entryComponentsSet.add(ec.componentType);\n                this.entryComponents.push(ec);\n            }\n        };\n        return TransitiveCompileNgModuleMetadata;\n    }());\n    function _normalizeArray(obj) {\n        return obj || [];\n    }\n    var ProviderMeta = /** @class */ (function () {\n        function ProviderMeta(token, _a) {\n            var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n            this.token = token;\n            this.useClass = useClass || null;\n            this.useValue = useValue;\n            this.useExisting = useExisting;\n            this.useFactory = useFactory || null;\n            this.dependencies = deps || null;\n            this.multi = !!multi;\n        }\n        return ProviderMeta;\n    }());\n    function flatten(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n    function jitSourceUrl(url) {\n        // Note: We need 3 \"/\" so that ng shows up as a separate domain\n        // in the chrome dev tools.\n        return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n    }\n    function templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n        var url;\n        if (templateMeta.isInline) {\n            if (compMeta.type.reference instanceof StaticSymbol) {\n                // Note: a .ts file might contain multiple components with inline templates,\n                // so we need to give them unique urls, as these will be used for sourcemaps.\n                url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n            }\n            else {\n                url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n            }\n        }\n        else {\n            url = templateMeta.templateUrl;\n        }\n        return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n    }\n    function sharedStylesheetJitUrl(meta, id) {\n        var pathParts = meta.moduleUrl.split(/\\/\\\\/g);\n        var baseName = pathParts[pathParts.length - 1];\n        return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n    }\n    function ngModuleJitUrl(moduleMeta) {\n        return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n    }\n    function templateJitUrl(ngModuleType, compMeta) {\n        return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CORE$1 = '@angular/core';\n    var Identifiers$1 = /** @class */ (function () {\n        function Identifiers() {\n        }\n        /* Methods */\n        Identifiers.NEW_METHOD = 'factory';\n        Identifiers.TRANSFORM_METHOD = 'transform';\n        Identifiers.PATCH_DEPS = 'patchedDeps';\n        /* Instructions */\n        Identifiers.namespaceHTML = { name: 'ɵnamespaceHTML', moduleName: CORE$1 };\n        Identifiers.namespaceMathML = { name: 'ɵnamespaceMathML', moduleName: CORE$1 };\n        Identifiers.namespaceSVG = { name: 'ɵnamespaceSVG', moduleName: CORE$1 };\n        Identifiers.element = { name: 'ɵelement', moduleName: CORE$1 };\n        Identifiers.elementStart = { name: 'ɵelementStart', moduleName: CORE$1 };\n        Identifiers.elementEnd = { name: 'ɵelementEnd', moduleName: CORE$1 };\n        Identifiers.elementProperty = { name: 'ɵelementProperty', moduleName: CORE$1 };\n        Identifiers.componentHostSyntheticProperty = { name: 'ɵcomponentHostSyntheticProperty', moduleName: CORE$1 };\n        Identifiers.componentHostSyntheticListener = { name: 'ɵcomponentHostSyntheticListener', moduleName: CORE$1 };\n        Identifiers.elementAttribute = { name: 'ɵelementAttribute', moduleName: CORE$1 };\n        Identifiers.elementClassProp = { name: 'ɵelementClassProp', moduleName: CORE$1 };\n        Identifiers.elementContainerStart = { name: 'ɵelementContainerStart', moduleName: CORE$1 };\n        Identifiers.elementContainerEnd = { name: 'ɵelementContainerEnd', moduleName: CORE$1 };\n        Identifiers.elementStyling = { name: 'ɵelementStyling', moduleName: CORE$1 };\n        Identifiers.elementHostAttrs = { name: 'ɵelementHostAttrs', moduleName: CORE$1 };\n        Identifiers.elementStylingMap = { name: 'ɵelementStylingMap', moduleName: CORE$1 };\n        Identifiers.elementStyleProp = { name: 'ɵelementStyleProp', moduleName: CORE$1 };\n        Identifiers.elementStylingApply = { name: 'ɵelementStylingApply', moduleName: CORE$1 };\n        Identifiers.containerCreate = { name: 'ɵcontainer', moduleName: CORE$1 };\n        Identifiers.nextContext = { name: 'ɵnextContext', moduleName: CORE$1 };\n        Identifiers.templateCreate = { name: 'ɵtemplate', moduleName: CORE$1 };\n        Identifiers.text = { name: 'ɵtext', moduleName: CORE$1 };\n        Identifiers.textBinding = { name: 'ɵtextBinding', moduleName: CORE$1 };\n        Identifiers.bind = { name: 'ɵbind', moduleName: CORE$1 };\n        Identifiers.enableBindings = { name: 'ɵenableBindings', moduleName: CORE$1 };\n        Identifiers.disableBindings = { name: 'ɵdisableBindings', moduleName: CORE$1 };\n        Identifiers.allocHostVars = { name: 'ɵallocHostVars', moduleName: CORE$1 };\n        Identifiers.getCurrentView = { name: 'ɵgetCurrentView', moduleName: CORE$1 };\n        Identifiers.restoreView = { name: 'ɵrestoreView', moduleName: CORE$1 };\n        Identifiers.interpolation1 = { name: 'ɵinterpolation1', moduleName: CORE$1 };\n        Identifiers.interpolation2 = { name: 'ɵinterpolation2', moduleName: CORE$1 };\n        Identifiers.interpolation3 = { name: 'ɵinterpolation3', moduleName: CORE$1 };\n        Identifiers.interpolation4 = { name: 'ɵinterpolation4', moduleName: CORE$1 };\n        Identifiers.interpolation5 = { name: 'ɵinterpolation5', moduleName: CORE$1 };\n        Identifiers.interpolation6 = { name: 'ɵinterpolation6', moduleName: CORE$1 };\n        Identifiers.interpolation7 = { name: 'ɵinterpolation7', moduleName: CORE$1 };\n        Identifiers.interpolation8 = { name: 'ɵinterpolation8', moduleName: CORE$1 };\n        Identifiers.interpolationV = { name: 'ɵinterpolationV', moduleName: CORE$1 };\n        Identifiers.pureFunction0 = { name: 'ɵpureFunction0', moduleName: CORE$1 };\n        Identifiers.pureFunction1 = { name: 'ɵpureFunction1', moduleName: CORE$1 };\n        Identifiers.pureFunction2 = { name: 'ɵpureFunction2', moduleName: CORE$1 };\n        Identifiers.pureFunction3 = { name: 'ɵpureFunction3', moduleName: CORE$1 };\n        Identifiers.pureFunction4 = { name: 'ɵpureFunction4', moduleName: CORE$1 };\n        Identifiers.pureFunction5 = { name: 'ɵpureFunction5', moduleName: CORE$1 };\n        Identifiers.pureFunction6 = { name: 'ɵpureFunction6', moduleName: CORE$1 };\n        Identifiers.pureFunction7 = { name: 'ɵpureFunction7', moduleName: CORE$1 };\n        Identifiers.pureFunction8 = { name: 'ɵpureFunction8', moduleName: CORE$1 };\n        Identifiers.pureFunctionV = { name: 'ɵpureFunctionV', moduleName: CORE$1 };\n        Identifiers.pipeBind1 = { name: 'ɵpipeBind1', moduleName: CORE$1 };\n        Identifiers.pipeBind2 = { name: 'ɵpipeBind2', moduleName: CORE$1 };\n        Identifiers.pipeBind3 = { name: 'ɵpipeBind3', moduleName: CORE$1 };\n        Identifiers.pipeBind4 = { name: 'ɵpipeBind4', moduleName: CORE$1 };\n        Identifiers.pipeBindV = { name: 'ɵpipeBindV', moduleName: CORE$1 };\n        Identifiers.i18n = { name: 'ɵi18n', moduleName: CORE$1 };\n        Identifiers.i18nAttributes = { name: 'ɵi18nAttributes', moduleName: CORE$1 };\n        Identifiers.i18nExp = { name: 'ɵi18nExp', moduleName: CORE$1 };\n        Identifiers.i18nStart = { name: 'ɵi18nStart', moduleName: CORE$1 };\n        Identifiers.i18nEnd = { name: 'ɵi18nEnd', moduleName: CORE$1 };\n        Identifiers.i18nApply = { name: 'ɵi18nApply', moduleName: CORE$1 };\n        Identifiers.i18nPostprocess = { name: 'ɵi18nPostprocess', moduleName: CORE$1 };\n        Identifiers.load = { name: 'ɵload', moduleName: CORE$1 };\n        Identifiers.loadQueryList = { name: 'ɵloadQueryList', moduleName: CORE$1 };\n        Identifiers.pipe = { name: 'ɵpipe', moduleName: CORE$1 };\n        Identifiers.projection = { name: 'ɵprojection', moduleName: CORE$1 };\n        Identifiers.projectionDef = { name: 'ɵprojectionDef', moduleName: CORE$1 };\n        Identifiers.reference = { name: 'ɵreference', moduleName: CORE$1 };\n        Identifiers.inject = { name: 'inject', moduleName: CORE$1 };\n        Identifiers.injectAttribute = { name: 'ɵinjectAttribute', moduleName: CORE$1 };\n        Identifiers.directiveInject = { name: 'ɵdirectiveInject', moduleName: CORE$1 };\n        Identifiers.templateRefExtractor = { name: 'ɵtemplateRefExtractor', moduleName: CORE$1 };\n        Identifiers.resolveWindow = { name: 'ɵresolveWindow', moduleName: CORE$1 };\n        Identifiers.resolveDocument = { name: 'ɵresolveDocument', moduleName: CORE$1 };\n        Identifiers.resolveBody = { name: 'ɵresolveBody', moduleName: CORE$1 };\n        Identifiers.defineBase = { name: 'ɵdefineBase', moduleName: CORE$1 };\n        Identifiers.BaseDef = {\n            name: 'ɵBaseDef',\n            moduleName: CORE$1,\n        };\n        Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n        Identifiers.ComponentDefWithMeta = {\n            name: 'ɵComponentDefWithMeta',\n            moduleName: CORE$1,\n        };\n        Identifiers.defineDirective = {\n            name: 'ɵdefineDirective',\n            moduleName: CORE$1,\n        };\n        Identifiers.DirectiveDefWithMeta = {\n            name: 'ɵDirectiveDefWithMeta',\n            moduleName: CORE$1,\n        };\n        Identifiers.InjectorDef = {\n            name: 'ɵInjectorDef',\n            moduleName: CORE$1,\n        };\n        Identifiers.defineInjector = {\n            name: 'defineInjector',\n            moduleName: CORE$1,\n        };\n        Identifiers.NgModuleDefWithMeta = {\n            name: 'ɵNgModuleDefWithMeta',\n            moduleName: CORE$1,\n        };\n        Identifiers.defineNgModule = { name: 'ɵdefineNgModule', moduleName: CORE$1 };\n        Identifiers.PipeDefWithMeta = { name: 'ɵPipeDefWithMeta', moduleName: CORE$1 };\n        Identifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE$1 };\n        Identifiers.query = { name: 'ɵquery', moduleName: CORE$1 };\n        Identifiers.queryRefresh = { name: 'ɵqueryRefresh', moduleName: CORE$1 };\n        Identifiers.registerContentQuery = { name: 'ɵregisterContentQuery', moduleName: CORE$1 };\n        Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n        Identifiers.InheritDefinitionFeature = { name: 'ɵInheritDefinitionFeature', moduleName: CORE$1 };\n        Identifiers.ProvidersFeature = { name: 'ɵProvidersFeature', moduleName: CORE$1 };\n        Identifiers.listener = { name: 'ɵlistener', moduleName: CORE$1 };\n        Identifiers.getFactoryOf = {\n            name: 'ɵgetFactoryOf',\n            moduleName: CORE$1,\n        };\n        Identifiers.getInheritedFactory = {\n            name: 'ɵgetInheritedFactory',\n            moduleName: CORE$1,\n        };\n        // sanitization-related functions\n        Identifiers.sanitizeHtml = { name: 'ɵsanitizeHtml', moduleName: CORE$1 };\n        Identifiers.sanitizeStyle = { name: 'ɵsanitizeStyle', moduleName: CORE$1 };\n        Identifiers.defaultStyleSanitizer = { name: 'ɵdefaultStyleSanitizer', moduleName: CORE$1 };\n        Identifiers.sanitizeResourceUrl = { name: 'ɵsanitizeResourceUrl', moduleName: CORE$1 };\n        Identifiers.sanitizeScript = { name: 'ɵsanitizeScript', moduleName: CORE$1 };\n        Identifiers.sanitizeUrl = { name: 'ɵsanitizeUrl', moduleName: CORE$1 };\n        Identifiers.sanitizeUrlOrResourceUrl = { name: 'ɵsanitizeUrlOrResourceUrl', moduleName: CORE$1 };\n        return Identifiers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Message = /** @class */ (function () {\n        /**\n         * @param nodes message AST\n         * @param placeholders maps placeholder names to static content\n         * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n         * @param meaning\n         * @param description\n         * @param id\n         */\n        function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n            this.nodes = nodes;\n            this.placeholders = placeholders;\n            this.placeholderToMessage = placeholderToMessage;\n            this.meaning = meaning;\n            this.description = description;\n            this.id = id;\n            if (nodes.length) {\n                this.sources = [{\n                        filePath: nodes[0].sourceSpan.start.file.url,\n                        startLine: nodes[0].sourceSpan.start.line + 1,\n                        startCol: nodes[0].sourceSpan.start.col + 1,\n                        endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                        endCol: nodes[0].sourceSpan.start.col + 1\n                    }];\n            }\n            else {\n                this.sources = [];\n            }\n        }\n        return Message;\n    }());\n    var Text = /** @class */ (function () {\n        function Text(value, sourceSpan) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n        return Text;\n    }());\n    // TODO(vicb): do we really need this node (vs an array) ?\n    var Container = /** @class */ (function () {\n        function Container(children, sourceSpan) {\n            this.children = children;\n            this.sourceSpan = sourceSpan;\n        }\n        Container.prototype.visit = function (visitor, context) { return visitor.visitContainer(this, context); };\n        return Container;\n    }());\n    var Icu = /** @class */ (function () {\n        function Icu(expression, type, cases, sourceSpan) {\n            this.expression = expression;\n            this.type = type;\n            this.cases = cases;\n            this.sourceSpan = sourceSpan;\n        }\n        Icu.prototype.visit = function (visitor, context) { return visitor.visitIcu(this, context); };\n        return Icu;\n    }());\n    var TagPlaceholder = /** @class */ (function () {\n        function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n            this.tag = tag;\n            this.attrs = attrs;\n            this.startName = startName;\n            this.closeName = closeName;\n            this.children = children;\n            this.isVoid = isVoid;\n            this.sourceSpan = sourceSpan;\n        }\n        TagPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n        return TagPlaceholder;\n    }());\n    var Placeholder = /** @class */ (function () {\n        function Placeholder(value, name, sourceSpan) {\n            this.value = value;\n            this.name = name;\n            this.sourceSpan = sourceSpan;\n        }\n        Placeholder.prototype.visit = function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n        return Placeholder;\n    }());\n    var IcuPlaceholder = /** @class */ (function () {\n        function IcuPlaceholder(value, name, sourceSpan) {\n            this.value = value;\n            this.name = name;\n            this.sourceSpan = sourceSpan;\n        }\n        IcuPlaceholder.prototype.visit = function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n        return IcuPlaceholder;\n    }());\n    // Clone the AST\n    var CloneVisitor = /** @class */ (function () {\n        function CloneVisitor() {\n        }\n        CloneVisitor.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n        CloneVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var children = container.children.map(function (n) { return n.visit(_this, context); });\n            return new Container(children, container.sourceSpan);\n        };\n        CloneVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var cases = {};\n            Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n            var msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n            msg.expressionPlaceholder = icu.expressionPlaceholder;\n            return msg;\n        };\n        CloneVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            var children = ph.children.map(function (n) { return n.visit(_this, context); });\n            return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n        };\n        CloneVisitor.prototype.visitPlaceholder = function (ph, context) {\n            return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n        };\n        CloneVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n        };\n        return CloneVisitor;\n    }());\n    // Visit all the nodes recursively\n    var RecurseVisitor = /** @class */ (function () {\n        function RecurseVisitor() {\n        }\n        RecurseVisitor.prototype.visitText = function (text, context) { };\n        RecurseVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            container.children.forEach(function (child) { return child.visit(_this); });\n        };\n        RecurseVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n        };\n        RecurseVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            ph.children.forEach(function (child) { return child.visit(_this); });\n        };\n        RecurseVisitor.prototype.visitPlaceholder = function (ph, context) { };\n        RecurseVisitor.prototype.visitIcuPlaceholder = function (ph, context) { };\n        return RecurseVisitor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function digest(message) {\n        return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n    }\n    function decimalDigest(message) {\n        if (message.id) {\n            return message.id;\n        }\n        var visitor = new _SerializerIgnoreIcuExpVisitor();\n        var parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n        return computeMsgId(parts.join(''), message.meaning);\n    }\n    /**\n     * Serialize the i18n ast to something xml-like in order to generate an UID.\n     *\n     * The visitor is also used in the i18n parser tests\n     *\n     * @internal\n     */\n    var _SerializerVisitor = /** @class */ (function () {\n        function _SerializerVisitor() {\n        }\n        _SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n        _SerializerVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n        };\n        _SerializerVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n        };\n        _SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            return ph.isVoid ?\n                \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n                \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n        };\n        _SerializerVisitor.prototype.visitPlaceholder = function (ph, context) {\n            return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n        };\n        _SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n        };\n        return _SerializerVisitor;\n    }());\n    var serializerVisitor = new _SerializerVisitor();\n    function serializeNodes(nodes) {\n        return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n    }\n    /**\n     * Serialize the i18n ast to something xml-like in order to generate an UID.\n     *\n     * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n     *\n     * @internal\n     */\n    var _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n        __extends(_SerializerIgnoreIcuExpVisitor, _super);\n        function _SerializerIgnoreIcuExpVisitor() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            // Do not take the expression into account\n            return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n        };\n        return _SerializerIgnoreIcuExpVisitor;\n    }(_SerializerVisitor));\n    /**\n     * Compute the SHA1 of the given string\n     *\n     * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n     *\n     * WARNING: this function has not been designed not tested with security in mind.\n     *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n     */\n    function sha1(str) {\n        var _a, _b;\n        var utf8 = utf8Encode(str);\n        var words32 = stringToWords32(utf8, Endian.Big);\n        var len = utf8.length * 8;\n        var w = new Array(80);\n        var _c = __read([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], 5), a = _c[0], b = _c[1], c = _c[2], d = _c[3], e = _c[4];\n        words32[len >> 5] |= 0x80 << (24 - len % 32);\n        words32[((len + 64 >> 9) << 4) + 15] = len;\n        for (var i = 0; i < words32.length; i += 16) {\n            var _d = __read([a, b, c, d, e], 5), h0 = _d[0], h1 = _d[1], h2 = _d[2], h3 = _d[3], h4 = _d[4];\n            for (var j = 0; j < 80; j++) {\n                if (j < 16) {\n                    w[j] = words32[i + j];\n                }\n                else {\n                    w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n                }\n                var _e = __read(fk(j, b, c, d), 2), f = _e[0], k = _e[1];\n                var temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n                _a = __read([d, c, rol32(b, 30), a, temp], 5), e = _a[0], d = _a[1], c = _a[2], b = _a[3], a = _a[4];\n            }\n            _b = __read([add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], 5), a = _b[0], b = _b[1], c = _b[2], d = _b[3], e = _b[4];\n        }\n        return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    }\n    function fk(index, b, c, d) {\n        if (index < 20) {\n            return [(b & c) | (~b & d), 0x5a827999];\n        }\n        if (index < 40) {\n            return [b ^ c ^ d, 0x6ed9eba1];\n        }\n        if (index < 60) {\n            return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n        }\n        return [b ^ c ^ d, 0xca62c1d6];\n    }\n    /**\n     * Compute the fingerprint of the given string\n     *\n     * The output is 64 bit number encoded as a decimal string\n     *\n     * based on:\n     * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n     */\n    function fingerprint(str) {\n        var utf8 = utf8Encode(str);\n        var _a = __read([hash32(utf8, 0), hash32(utf8, 102072)], 2), hi = _a[0], lo = _a[1];\n        if (hi == 0 && (lo == 0 || lo == 1)) {\n            hi = hi ^ 0x130f9bef;\n            lo = lo ^ -0x6b5f56d8;\n        }\n        return [hi, lo];\n    }\n    function computeMsgId(msg, meaning) {\n        var _a;\n        var _b = __read(fingerprint(msg), 2), hi = _b[0], lo = _b[1];\n        if (meaning) {\n            var _c = __read(fingerprint(meaning), 2), him = _c[0], lom = _c[1];\n            _a = __read(add64(rol64([hi, lo], 1), [him, lom]), 2), hi = _a[0], lo = _a[1];\n        }\n        return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    }\n    function hash32(str, c) {\n        var _a;\n        var _b = __read([0x9e3779b9, 0x9e3779b9], 2), a = _b[0], b = _b[1];\n        var i;\n        var len = str.length;\n        for (i = 0; i + 12 <= len; i += 12) {\n            a = add32(a, wordAt(str, i, Endian.Little));\n            b = add32(b, wordAt(str, i + 4, Endian.Little));\n            c = add32(c, wordAt(str, i + 8, Endian.Little));\n            _a = __read(mix([a, b, c]), 3), a = _a[0], b = _a[1], c = _a[2];\n        }\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        // the first byte of c is reserved for the length\n        c = add32(c, len);\n        c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n        return mix([a, b, c])[2];\n    }\n    // clang-format off\n    function mix(_a) {\n        var _b = __read(_a, 3), a = _b[0], b = _b[1], c = _b[2];\n        a = sub32(a, b);\n        a = sub32(a, c);\n        a ^= c >>> 13;\n        b = sub32(b, c);\n        b = sub32(b, a);\n        b ^= a << 8;\n        c = sub32(c, a);\n        c = sub32(c, b);\n        c ^= b >>> 13;\n        a = sub32(a, b);\n        a = sub32(a, c);\n        a ^= c >>> 12;\n        b = sub32(b, c);\n        b = sub32(b, a);\n        b ^= a << 16;\n        c = sub32(c, a);\n        c = sub32(c, b);\n        c ^= b >>> 5;\n        a = sub32(a, b);\n        a = sub32(a, c);\n        a ^= c >>> 3;\n        b = sub32(b, c);\n        b = sub32(b, a);\n        b ^= a << 10;\n        c = sub32(c, a);\n        c = sub32(c, b);\n        c ^= b >>> 15;\n        return [a, b, c];\n    }\n    // clang-format on\n    // Utils\n    var Endian;\n    (function (Endian) {\n        Endian[Endian[\"Little\"] = 0] = \"Little\";\n        Endian[Endian[\"Big\"] = 1] = \"Big\";\n    })(Endian || (Endian = {}));\n    function add32(a, b) {\n        return add32to64(a, b)[1];\n    }\n    function add32to64(a, b) {\n        var low = (a & 0xffff) + (b & 0xffff);\n        var high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n        return [high >>> 16, (high << 16) | (low & 0xffff)];\n    }\n    function add64(_a, _b) {\n        var _c = __read(_a, 2), ah = _c[0], al = _c[1];\n        var _d = __read(_b, 2), bh = _d[0], bl = _d[1];\n        var _e = __read(add32to64(al, bl), 2), carry = _e[0], l = _e[1];\n        var h = add32(add32(ah, bh), carry);\n        return [h, l];\n    }\n    function sub32(a, b) {\n        var low = (a & 0xffff) - (b & 0xffff);\n        var high = (a >> 16) - (b >> 16) + (low >> 16);\n        return (high << 16) | (low & 0xffff);\n    }\n    // Rotate a 32b number left `count` position\n    function rol32(a, count) {\n        return (a << count) | (a >>> (32 - count));\n    }\n    // Rotate a 64b number left `count` position\n    function rol64(_a, count) {\n        var _b = __read(_a, 2), hi = _b[0], lo = _b[1];\n        var h = (hi << count) | (lo >>> (32 - count));\n        var l = (lo << count) | (hi >>> (32 - count));\n        return [h, l];\n    }\n    function stringToWords32(str, endian) {\n        var words32 = Array((str.length + 3) >>> 2);\n        for (var i = 0; i < words32.length; i++) {\n            words32[i] = wordAt(str, i * 4, endian);\n        }\n        return words32;\n    }\n    function byteAt(str, index) {\n        return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n    }\n    function wordAt(str, index, endian) {\n        var word = 0;\n        if (endian === Endian.Big) {\n            for (var i = 0; i < 4; i++) {\n                word += byteAt(str, index + i) << (24 - 8 * i);\n            }\n        }\n        else {\n            for (var i = 0; i < 4; i++) {\n                word += byteAt(str, index + i) << 8 * i;\n            }\n        }\n        return word;\n    }\n    function words32ToByteString(words32) {\n        return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n    }\n    function word32ToByteString(word) {\n        var str = '';\n        for (var i = 0; i < 4; i++) {\n            str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n        }\n        return str;\n    }\n    function byteStringToHexString(str) {\n        var hex = '';\n        for (var i = 0; i < str.length; i++) {\n            var b = byteAt(str, i);\n            hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n        }\n        return hex.toLowerCase();\n    }\n    // based on http://www.danvk.org/hex2dec.html (JS can not handle more than 56b)\n    function byteStringToDecString(str) {\n        var decimal = '';\n        var toThePower = '1';\n        for (var i = str.length - 1; i >= 0; i--) {\n            decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n            toThePower = numberTimesBigInt(256, toThePower);\n        }\n        return decimal.split('').reverse().join('');\n    }\n    // x and y decimal, lowest significant digit first\n    function addBigInt(x, y) {\n        var sum = '';\n        var len = Math.max(x.length, y.length);\n        for (var i = 0, carry = 0; i < len || carry; i++) {\n            var tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n            if (tmpSum >= 10) {\n                carry = 1;\n                sum += tmpSum - 10;\n            }\n            else {\n                carry = 0;\n                sum += tmpSum;\n            }\n        }\n        return sum;\n    }\n    function numberTimesBigInt(num, b) {\n        var product = '';\n        var bToThePower = b;\n        for (; num !== 0; num = num >>> 1) {\n            if (num & 1)\n                product = addBigInt(product, bToThePower);\n            bToThePower = addBigInt(bToThePower, bToThePower);\n        }\n        return product;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Serializer = /** @class */ (function () {\n        function Serializer() {\n        }\n        // Creates a name mapper, see `PlaceholderMapper`\n        // Returning `null` means that no name mapping is used.\n        Serializer.prototype.createNameMapper = function (message) { return null; };\n        return Serializer;\n    }());\n    /**\n     * A simple mapper that take a function to transform an internal name to a public name\n     */\n    var SimplePlaceholderMapper = /** @class */ (function (_super) {\n        __extends(SimplePlaceholderMapper, _super);\n        // create a mapping from the message\n        function SimplePlaceholderMapper(message, mapName) {\n            var _this = _super.call(this) || this;\n            _this.mapName = mapName;\n            _this.internalToPublic = {};\n            _this.publicToNextId = {};\n            _this.publicToInternal = {};\n            message.nodes.forEach(function (node) { return node.visit(_this); });\n            return _this;\n        }\n        SimplePlaceholderMapper.prototype.toPublicName = function (internalName) {\n            return this.internalToPublic.hasOwnProperty(internalName) ?\n                this.internalToPublic[internalName] :\n                null;\n        };\n        SimplePlaceholderMapper.prototype.toInternalName = function (publicName) {\n            return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n                null;\n        };\n        SimplePlaceholderMapper.prototype.visitText = function (text, context) { return null; };\n        SimplePlaceholderMapper.prototype.visitTagPlaceholder = function (ph, context) {\n            this.visitPlaceholderName(ph.startName);\n            _super.prototype.visitTagPlaceholder.call(this, ph, context);\n            this.visitPlaceholderName(ph.closeName);\n        };\n        SimplePlaceholderMapper.prototype.visitPlaceholder = function (ph, context) { this.visitPlaceholderName(ph.name); };\n        SimplePlaceholderMapper.prototype.visitIcuPlaceholder = function (ph, context) {\n            this.visitPlaceholderName(ph.name);\n        };\n        // XMB placeholders could only contains A-Z, 0-9 and _\n        SimplePlaceholderMapper.prototype.visitPlaceholderName = function (internalName) {\n            if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n                return;\n            }\n            var publicName = this.mapName(internalName);\n            if (this.publicToInternal.hasOwnProperty(publicName)) {\n                // Create a new XMB when it has already been used\n                var nextId = this.publicToNextId[publicName];\n                this.publicToNextId[publicName] = nextId + 1;\n                publicName = publicName + \"_\" + nextId;\n            }\n            else {\n                this.publicToNextId[publicName] = 1;\n            }\n            this.internalToPublic[internalName] = publicName;\n            this.publicToInternal[publicName] = internalName;\n        };\n        return SimplePlaceholderMapper;\n    }(RecurseVisitor));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _Visitor = /** @class */ (function () {\n        function _Visitor() {\n        }\n        _Visitor.prototype.visitTag = function (tag) {\n            var _this = this;\n            var strAttrs = this._serializeAttributes(tag.attrs);\n            if (tag.children.length == 0) {\n                return \"<\" + tag.name + strAttrs + \"/>\";\n            }\n            var strChildren = tag.children.map(function (node) { return node.visit(_this); });\n            return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n        };\n        _Visitor.prototype.visitText = function (text) { return text.value; };\n        _Visitor.prototype.visitDeclaration = function (decl) {\n            return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n        };\n        _Visitor.prototype._serializeAttributes = function (attrs) {\n            var strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n            return strAttrs.length > 0 ? ' ' + strAttrs : '';\n        };\n        _Visitor.prototype.visitDoctype = function (doctype) {\n            return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n        };\n        return _Visitor;\n    }());\n    var _visitor = new _Visitor();\n    function serialize(nodes) {\n        return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n    }\n    var Declaration = /** @class */ (function () {\n        function Declaration(unescapedAttrs) {\n            var _this = this;\n            this.attrs = {};\n            Object.keys(unescapedAttrs).forEach(function (k) {\n                _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n            });\n        }\n        Declaration.prototype.visit = function (visitor) { return visitor.visitDeclaration(this); };\n        return Declaration;\n    }());\n    var Doctype = /** @class */ (function () {\n        function Doctype(rootTag, dtd) {\n            this.rootTag = rootTag;\n            this.dtd = dtd;\n        }\n        Doctype.prototype.visit = function (visitor) { return visitor.visitDoctype(this); };\n        return Doctype;\n    }());\n    var Tag = /** @class */ (function () {\n        function Tag(name, unescapedAttrs, children) {\n            if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n            if (children === void 0) { children = []; }\n            var _this = this;\n            this.name = name;\n            this.children = children;\n            this.attrs = {};\n            Object.keys(unescapedAttrs).forEach(function (k) {\n                _this.attrs[k] = escapeXml(unescapedAttrs[k]);\n            });\n        }\n        Tag.prototype.visit = function (visitor) { return visitor.visitTag(this); };\n        return Tag;\n    }());\n    var Text$1 = /** @class */ (function () {\n        function Text(unescapedValue) {\n            this.value = escapeXml(unescapedValue);\n        }\n        Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n        return Text;\n    }());\n    var CR = /** @class */ (function (_super) {\n        __extends(CR, _super);\n        function CR(ws) {\n            if (ws === void 0) { ws = 0; }\n            return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n        }\n        return CR;\n    }(Text$1));\n    var _ESCAPED_CHARS = [\n        [/&/g, '&amp;'],\n        [/\"/g, '&quot;'],\n        [/'/g, '&apos;'],\n        [/</g, '&lt;'],\n        [/>/g, '&gt;'],\n    ];\n    // Escape `_ESCAPED_CHARS` characters in the given text with encoded entities\n    function escapeXml(text) {\n        return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _MESSAGES_TAG = 'messagebundle';\n    var _MESSAGE_TAG = 'msg';\n    var _PLACEHOLDER_TAG = 'ph';\n    var _EXAMPLE_TAG = 'ex';\n    var _SOURCE_TAG = 'source';\n    var _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\n    var Xmb = /** @class */ (function (_super) {\n        __extends(Xmb, _super);\n        function Xmb() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Xmb.prototype.write = function (messages, locale) {\n            var exampleVisitor = new ExampleVisitor();\n            var visitor = new _Visitor$1();\n            var rootNode = new Tag(_MESSAGES_TAG);\n            messages.forEach(function (message) {\n                var attrs = { id: message.id };\n                if (message.description) {\n                    attrs['desc'] = message.description;\n                }\n                if (message.meaning) {\n                    attrs['meaning'] = message.meaning;\n                }\n                var sourceTags = [];\n                message.sources.forEach(function (source) {\n                    sourceTags.push(new Tag(_SOURCE_TAG, {}, [\n                        new Text$1(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                    ]));\n                });\n                rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, __spread(sourceTags, visitor.serialize(message.nodes))));\n            });\n            rootNode.children.push(new CR());\n            return serialize([\n                new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n                new CR(),\n                new Doctype(_MESSAGES_TAG, _DOCTYPE),\n                new CR(),\n                exampleVisitor.addDefaultExamples(rootNode),\n                new CR(),\n            ]);\n        };\n        Xmb.prototype.load = function (content, url) {\n            throw new Error('Unsupported');\n        };\n        Xmb.prototype.digest = function (message) { return digest$1(message); };\n        Xmb.prototype.createNameMapper = function (message) {\n            return new SimplePlaceholderMapper(message, toPublicName);\n        };\n        return Xmb;\n    }(Serializer));\n    var _Visitor$1 = /** @class */ (function () {\n        function _Visitor() {\n        }\n        _Visitor.prototype.visitText = function (text, context) { return [new Text$1(text.value)]; };\n        _Visitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var nodes = [];\n            container.children.forEach(function (node) { return nodes.push.apply(nodes, __spread(node.visit(_this))); });\n            return nodes;\n        };\n        _Visitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var nodes = [new Text$1(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n            Object.keys(icu.cases).forEach(function (c) {\n                nodes.push.apply(nodes, __spread([new Text$1(c + \" {\")], icu.cases[c].visit(_this), [new Text$1(\"} \")]));\n            });\n            nodes.push(new Text$1(\"}\"));\n            return nodes;\n        };\n        _Visitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var startTagAsText = new Text$1(\"<\" + ph.tag + \">\");\n            var startEx = new Tag(_EXAMPLE_TAG, {}, [startTagAsText]);\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            var startTagPh = new Tag(_PLACEHOLDER_TAG, { name: ph.startName }, [startEx, startTagAsText]);\n            if (ph.isVoid) {\n                // void tags have no children nor closing tags\n                return [startTagPh];\n            }\n            var closeTagAsText = new Text$1(\"</\" + ph.tag + \">\");\n            var closeEx = new Tag(_EXAMPLE_TAG, {}, [closeTagAsText]);\n            // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n            var closeTagPh = new Tag(_PLACEHOLDER_TAG, { name: ph.closeName }, [closeEx, closeTagAsText]);\n            return __spread([startTagPh], this.serialize(ph.children), [closeTagPh]);\n        };\n        _Visitor.prototype.visitPlaceholder = function (ph, context) {\n            var interpolationAsText = new Text$1(\"{{\" + ph.value + \"}}\");\n            // Example tag needs to be not-empty for TC.\n            var exTag = new Tag(_EXAMPLE_TAG, {}, [interpolationAsText]);\n            return [\n                // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n                new Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, interpolationAsText])\n            ];\n        };\n        _Visitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            var icuExpression = ph.value.expression;\n            var icuType = ph.value.type;\n            var icuCases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n            var icuAsText = new Text$1(\"{\" + icuExpression + \", \" + icuType + \", \" + icuCases + \"}\");\n            var exTag = new Tag(_EXAMPLE_TAG, {}, [icuAsText]);\n            return [\n                // TC requires PH to have a non empty EX, and uses the text node to show the \"original\" value.\n                new Tag(_PLACEHOLDER_TAG, { name: ph.name }, [exTag, icuAsText])\n            ];\n        };\n        _Visitor.prototype.serialize = function (nodes) {\n            var _this = this;\n            return [].concat.apply([], __spread(nodes.map(function (node) { return node.visit(_this); })));\n        };\n        return _Visitor;\n    }());\n    function digest$1(message) {\n        return decimalDigest(message);\n    }\n    // TC requires at least one non-empty example on placeholders\n    var ExampleVisitor = /** @class */ (function () {\n        function ExampleVisitor() {\n        }\n        ExampleVisitor.prototype.addDefaultExamples = function (node) {\n            node.visit(this);\n            return node;\n        };\n        ExampleVisitor.prototype.visitTag = function (tag) {\n            var _this = this;\n            if (tag.name === _PLACEHOLDER_TAG) {\n                if (!tag.children || tag.children.length == 0) {\n                    var exText = new Text$1(tag.attrs['name'] || '...');\n                    tag.children = [new Tag(_EXAMPLE_TAG, {}, [exText])];\n                }\n            }\n            else if (tag.children) {\n                tag.children.forEach(function (node) { return node.visit(_this); });\n            }\n        };\n        ExampleVisitor.prototype.visitText = function (text) { };\n        ExampleVisitor.prototype.visitDeclaration = function (decl) { };\n        ExampleVisitor.prototype.visitDoctype = function (doctype) { };\n        return ExampleVisitor;\n    }());\n    // XMB/XTB placeholders can only contain A-Z, 0-9 and _\n    function toPublicName(internalName) {\n        return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function mapLiteral(obj, quoted) {\n        if (quoted === void 0) { quoted = false; }\n        return literalMap(Object.keys(obj).map(function (key) { return ({\n            key: key,\n            quoted: quoted,\n            value: obj[key],\n        }); }));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /* Closure variables holding messages must be named `MSG_[A-Z0-9]+` */\n    var CLOSURE_TRANSLATION_PREFIX = 'MSG_';\n    var CLOSURE_TRANSLATION_MATCHER_REGEXP = new RegExp(\"^\" + CLOSURE_TRANSLATION_PREFIX);\n    /* Prefix for non-`goog.getMsg` i18n-related vars */\n    var TRANSLATION_PREFIX = 'I18N_';\n    /** Closure uses `goog.getMsg(message)` to lookup translations */\n    var GOOG_GET_MSG = 'goog.getMsg';\n    /** I18n separators for metadata **/\n    var I18N_MEANING_SEPARATOR = '|';\n    var I18N_ID_SEPARATOR = '@@';\n    /** Name of the i18n attributes **/\n    var I18N_ATTR = 'i18n';\n    var I18N_ATTR_PREFIX = 'i18n-';\n    /** Prefix of var expressions used in ICUs */\n    var I18N_ICU_VAR_PREFIX = 'VAR_';\n    /** Prefix of ICU expressions for post processing */\n    var I18N_ICU_MAPPING_PREFIX = 'I18N_EXP_';\n    /** Placeholder wrapper for i18n expressions **/\n    var I18N_PLACEHOLDER_SYMBOL = '�';\n    function i18nTranslationToDeclStmt(variable$$1, message, params) {\n        var args = [literal(message)];\n        if (params && Object.keys(params).length) {\n            args.push(mapLiteral(params, true));\n        }\n        var fnCall = variable(GOOG_GET_MSG).callFn(args);\n        return variable$$1.set(fnCall).toDeclStmt(INFERRED_TYPE, [exports.StmtModifier.Final]);\n    }\n    // Converts i18n meta informations for a message (id, description, meaning)\n    // to a JsDoc statement formatted as expected by the Closure compiler.\n    function i18nMetaToDocStmt(meta) {\n        var tags = [];\n        if (meta.description) {\n            tags.push({ tagName: \"desc\" /* Desc */, text: meta.description });\n        }\n        if (meta.meaning) {\n            tags.push({ tagName: \"meaning\" /* Meaning */, text: meta.meaning });\n        }\n        return tags.length == 0 ? null : new JSDocCommentStmt(tags);\n    }\n    function isI18nAttribute(name) {\n        return name === I18N_ATTR || name.startsWith(I18N_ATTR_PREFIX);\n    }\n    function isI18nRootNode(meta) {\n        return meta instanceof Message;\n    }\n    function isSingleI18nIcu(meta) {\n        return isI18nRootNode(meta) && meta.nodes.length === 1 && meta.nodes[0] instanceof Icu;\n    }\n    function hasI18nAttrs(element) {\n        return element.attrs.some(function (attr) { return isI18nAttribute(attr.name); });\n    }\n    function metaFromI18nMessage(message, id) {\n        if (id === void 0) { id = null; }\n        return {\n            id: typeof id === 'string' ? id : message.id || '',\n            meaning: message.meaning || '',\n            description: message.description || ''\n        };\n    }\n    function icuFromI18nMessage(message) {\n        return message.nodes[0];\n    }\n    function wrapI18nPlaceholder(content, contextId) {\n        if (contextId === void 0) { contextId = 0; }\n        var blockId = contextId > 0 ? \":\" + contextId : '';\n        return \"\" + I18N_PLACEHOLDER_SYMBOL + content + blockId + I18N_PLACEHOLDER_SYMBOL;\n    }\n    function assembleI18nBoundString(strings, bindingStartIndex, contextId) {\n        if (bindingStartIndex === void 0) { bindingStartIndex = 0; }\n        if (contextId === void 0) { contextId = 0; }\n        if (!strings.length)\n            return '';\n        var acc = '';\n        var lastIdx = strings.length - 1;\n        for (var i = 0; i < lastIdx; i++) {\n            acc += \"\" + strings[i] + wrapI18nPlaceholder(bindingStartIndex + i, contextId);\n        }\n        acc += strings[lastIdx];\n        return acc;\n    }\n    function getSeqNumberGenerator(startsAt) {\n        if (startsAt === void 0) { startsAt = 0; }\n        var current = startsAt;\n        return function () { return current++; };\n    }\n    function placeholdersToParams(placeholders) {\n        var params = {};\n        placeholders.forEach(function (values, key) {\n            params[key] = literal(values.length > 1 ? \"[\" + values.join('|') + \"]\" : values[0]);\n        });\n        return params;\n    }\n    function updatePlaceholderMap(map, name) {\n        var values = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            values[_i - 2] = arguments[_i];\n        }\n        var current = map.get(name) || [];\n        current.push.apply(current, __spread(values));\n        map.set(name, current);\n    }\n    function assembleBoundTextPlaceholders(meta, bindingStartIndex, contextId) {\n        if (bindingStartIndex === void 0) { bindingStartIndex = 0; }\n        if (contextId === void 0) { contextId = 0; }\n        var startIdx = bindingStartIndex;\n        var placeholders = new Map();\n        var node = meta instanceof Message ? meta.nodes.find(function (node) { return node instanceof Container; }) : meta;\n        if (node) {\n            node\n                .children.filter(function (child) { return child instanceof Placeholder; })\n                .forEach(function (child, idx) {\n                var content = wrapI18nPlaceholder(startIdx + idx, contextId);\n                updatePlaceholderMap(placeholders, child.name, content);\n            });\n        }\n        return placeholders;\n    }\n    function findIndex(items, callback) {\n        for (var i = 0; i < items.length; i++) {\n            if (callback(items[i])) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Parses i18n metas like:\n     *  - \"@@id\",\n     *  - \"description[@@id]\",\n     *  - \"meaning|description[@@id]\"\n     * and returns an object with parsed output.\n     *\n     * @param meta String that represents i18n meta\n     * @returns Object with id, meaning and description fields\n     */\n    function parseI18nMeta(meta) {\n        var _a, _b;\n        var id;\n        var meaning;\n        var description;\n        if (meta) {\n            var idIndex = meta.indexOf(I18N_ID_SEPARATOR);\n            var descIndex = meta.indexOf(I18N_MEANING_SEPARATOR);\n            var meaningAndDesc = void 0;\n            _a = __read((idIndex > -1) ? [meta.slice(0, idIndex), meta.slice(idIndex + 2)] : [meta, ''], 2), meaningAndDesc = _a[0], id = _a[1];\n            _b = __read((descIndex > -1) ?\n                [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n                ['', meaningAndDesc], 2), meaning = _b[0], description = _b[1];\n        }\n        return { id: id, meaning: meaning, description: description };\n    }\n    /**\n     * Converts internal placeholder names to public-facing format\n     * (for example to use in goog.getMsg call).\n     * Example: `START_TAG_DIV_1` is converted to `startTagDiv_1`.\n     *\n     * @param name The placeholder name that should be formatted\n     * @returns Formatted placeholder name\n     */\n    function formatI18nPlaceholderName(name) {\n        var chunks = toPublicName(name).split('_');\n        if (chunks.length === 1) {\n            // if no \"_\" found - just lowercase the value\n            return name.toLowerCase();\n        }\n        var postfix;\n        // eject last element if it's a number\n        if (/^\\d+$/.test(chunks[chunks.length - 1])) {\n            postfix = chunks.pop();\n        }\n        var raw = chunks.shift().toLowerCase();\n        if (chunks.length) {\n            raw += chunks.map(function (c) { return c.charAt(0).toUpperCase() + c.slice(1).toLowerCase(); }).join('');\n        }\n        return postfix ? raw + \"_\" + postfix : raw;\n    }\n    /**\n     * Generates a prefix for translation const name.\n     *\n     * @param extra Additional local prefix that should be injected into translation var name\n     * @returns Complete translation const prefix\n     */\n    function getTranslationConstPrefix(extra) {\n        return (\"\" + CLOSURE_TRANSLATION_PREFIX + extra).toUpperCase();\n    }\n    /**\n     * Generates translation declaration statements.\n     *\n     * @param variable Translation value reference\n     * @param message Text message to be translated\n     * @param meta Object that contains meta information (id, meaning and description)\n     * @param params Object with placeholders key-value pairs\n     * @param transformFn Optional transformation (post processing) function reference\n     * @returns Array of Statements that represent a given translation\n     */\n    function getTranslationDeclStmts(variable$$1, message, meta, params, transformFn) {\n        if (params === void 0) { params = {}; }\n        var statements = [];\n        var docStatements = i18nMetaToDocStmt(meta);\n        if (docStatements) {\n            statements.push(docStatements);\n        }\n        if (transformFn) {\n            statements.push(i18nTranslationToDeclStmt(variable$$1, message, params));\n            // Closure Compiler doesn't allow non-goo.getMsg const names to start with `MSG_`,\n            // so we update variable name prefix in case post processing is required, so we can\n            // assign the result of post-processing function to the var that starts with `I18N_`\n            var raw = variable(variable$$1.name);\n            variable$$1.name = variable$$1.name.replace(CLOSURE_TRANSLATION_MATCHER_REGEXP, TRANSLATION_PREFIX);\n            statements.push(variable$$1.set(transformFn(raw)).toDeclStmt(INFERRED_TYPE, [exports.StmtModifier.Final]));\n        }\n        else {\n            statements.push(i18nTranslationToDeclStmt(variable$$1, message, params));\n        }\n        return statements;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Name of the temporary to use during data binding */\n    var TEMPORARY_NAME = '_t';\n    /** Name of the context parameter passed into a template function */\n    var CONTEXT_NAME = 'ctx';\n    /** Name of the RenderFlag passed into a template function */\n    var RENDER_FLAGS = 'rf';\n    /** The prefix reference variables */\n    var REFERENCE_PREFIX = '_r';\n    /** The name of the implicit context reference */\n    var IMPLICIT_REFERENCE = '$implicit';\n    /** Non bindable attribute name **/\n    var NON_BINDABLE_ATTR = 'ngNonBindable';\n    /**\n     * Creates an allocator for a temporary variable.\n     *\n     * A variable declaration is added to the statements the first time the allocator is invoked.\n     */\n    function temporaryAllocator(statements, name) {\n        var temp = null;\n        return function () {\n            if (!temp) {\n                statements.push(new DeclareVarStmt(TEMPORARY_NAME, undefined, DYNAMIC_TYPE));\n                temp = variable(name);\n            }\n            return temp;\n        };\n    }\n    function unsupported(feature) {\n        if (this) {\n            throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n        }\n        throw new Error(\"Feature \" + feature + \" is not supported yet\");\n    }\n    function invalid$1(arg) {\n        throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n    }\n    function asLiteral(value) {\n        if (Array.isArray(value)) {\n            return literalArr(value.map(asLiteral));\n        }\n        return literal(value, INFERRED_TYPE);\n    }\n    function conditionallyCreateMapObjectLiteral(keys, keepDeclared) {\n        if (Object.getOwnPropertyNames(keys).length > 0) {\n            return mapToExpression(keys, keepDeclared);\n        }\n        return null;\n    }\n    function mapToExpression(map, keepDeclared) {\n        return literalMap(Object.getOwnPropertyNames(map).map(function (key) {\n            var _a, _b;\n            // canonical syntax: `dirProp: publicProp`\n            // if there is no `:`, use dirProp = elProp\n            var value = map[key];\n            var declaredName;\n            var publicName;\n            var minifiedName;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), publicName = _a[0], declaredName = _a[1];\n            }\n            else {\n                _b = __read(splitAtColon(key, [key, value]), 2), declaredName = _b[0], publicName = _b[1];\n            }\n            minifiedName = declaredName;\n            return {\n                key: minifiedName,\n                quoted: false,\n                value: (keepDeclared && publicName !== declaredName) ?\n                    literalArr([asLiteral(publicName), asLiteral(declaredName)]) :\n                    asLiteral(publicName)\n            };\n        }));\n    }\n    /**\n     *  Remove trailing null nodes as they are implied.\n     */\n    function trimTrailingNulls(parameters) {\n        while (isNull(parameters[parameters.length - 1])) {\n            parameters.pop();\n        }\n        return parameters;\n    }\n    function getQueryPredicate(query, constantPool) {\n        if (Array.isArray(query.predicate)) {\n            var predicate_1 = [];\n            query.predicate.forEach(function (selector) {\n                // Each item in predicates array may contain strings with comma-separated refs\n                // (for ex. 'ref, ref1, ..., refN'), thus we extract individual refs and store them\n                // as separate array entities\n                var selectors = selector.split(',').map(function (token) { return literal(token.trim()); });\n                predicate_1.push.apply(predicate_1, __spread(selectors));\n            });\n            return constantPool.getConstLiteral(literalArr(predicate_1), true);\n        }\n        else {\n            return query.predicate;\n        }\n    }\n    var DefinitionMap = /** @class */ (function () {\n        function DefinitionMap() {\n            this.values = [];\n        }\n        DefinitionMap.prototype.set = function (key, value) {\n            if (value) {\n                this.values.push({ key: key, value: value, quoted: false });\n            }\n        };\n        DefinitionMap.prototype.toLiteralMap = function () { return literalMap(this.values); };\n        return DefinitionMap;\n    }());\n    /**\n     * Extract a map of properties to values for a given element or template node, which can be used\n     * by the directive matching machinery.\n     *\n     * @param elOrTpl the element or template in question\n     * @return an object set up for directive matching. For attributes on the element/template, this\n     * object maps a property name to its (static) value. For any bindings, this map simply maps the\n     * property name to an empty string.\n     */\n    function getAttrsForDirectiveMatching(elOrTpl) {\n        var attributesMap = {};\n        elOrTpl.attributes.forEach(function (a) {\n            if (!isI18nAttribute(a.name)) {\n                attributesMap[a.name] = a.value;\n            }\n        });\n        elOrTpl.inputs.forEach(function (i) { attributesMap[i.name] = ''; });\n        elOrTpl.outputs.forEach(function (o) { attributesMap[o.name] = ''; });\n        return attributesMap;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3FactoryDelegateType;\n    (function (R3FactoryDelegateType) {\n        R3FactoryDelegateType[R3FactoryDelegateType[\"Class\"] = 0] = \"Class\";\n        R3FactoryDelegateType[R3FactoryDelegateType[\"Function\"] = 1] = \"Function\";\n        R3FactoryDelegateType[R3FactoryDelegateType[\"Factory\"] = 2] = \"Factory\";\n    })(R3FactoryDelegateType || (R3FactoryDelegateType = {}));\n    (function (R3ResolvedDependencyType) {\n        /**\n         * A normal token dependency.\n         */\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        /**\n         * The dependency is for an attribute.\n         *\n         * The token expression is a string representing the attribute name.\n         */\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(exports.R3ResolvedDependencyType || (exports.R3ResolvedDependencyType = {}));\n    /**\n     * Construct a factory function expression for the given `R3FactoryMetadata`.\n     */\n    function compileFactoryFunction(meta) {\n        var t = variable('t');\n        var statements = [];\n        // The type to instantiate via constructor invocation. If there is no delegated factory, meaning\n        // this type is always created by constructor invocation, then this is the type-to-create\n        // parameter provided by the user (t) if specified, or the current type if not. If there is a\n        // delegated factory (which is used to create the current type) then this is only the type-to-\n        // create parameter (t).\n        var typeForCtor = !isDelegatedMetadata(meta) ? new BinaryOperatorExpr(exports.BinaryOperator.Or, t, meta.type) : t;\n        var ctorExpr = null;\n        if (meta.deps !== null) {\n            // There is a constructor (either explicitly or implicitly defined).\n            ctorExpr = new InstantiateExpr(typeForCtor, injectDependencies(meta.deps, meta.injectFn));\n        }\n        else {\n            var baseFactory = variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n            var getInheritedFactory = importExpr(Identifiers$1.getInheritedFactory);\n            var baseFactoryStmt = baseFactory.set(getInheritedFactory.callFn([meta.type])).toDeclStmt(INFERRED_TYPE, [\n                exports.StmtModifier.Exported, exports.StmtModifier.Final\n            ]);\n            statements.push(baseFactoryStmt);\n            // There is no constructor, use the base class' factory to construct typeForCtor.\n            ctorExpr = baseFactory.callFn([typeForCtor]);\n        }\n        var ctorExprFinal = ctorExpr;\n        var body = [];\n        var retExpr = null;\n        function makeConditionalFactory(nonCtorExpr) {\n            var r = variable('r');\n            body.push(r.set(NULL_EXPR).toDeclStmt());\n            body.push(ifStmt(t, [r.set(ctorExprFinal).toStmt()], [r.set(nonCtorExpr).toStmt()]));\n            return r;\n        }\n        if (isDelegatedMetadata(meta) && meta.delegateType === R3FactoryDelegateType.Factory) {\n            var delegateFactory = variable(\"\\u0275\" + meta.name + \"_BaseFactory\");\n            var getFactoryOf = importExpr(Identifiers$1.getFactoryOf);\n            if (meta.delegate.isEquivalent(meta.type)) {\n                throw new Error(\"Illegal state: compiling factory that delegates to itself\");\n            }\n            var delegateFactoryStmt = delegateFactory.set(getFactoryOf.callFn([meta.delegate])).toDeclStmt(INFERRED_TYPE, [\n                exports.StmtModifier.Exported, exports.StmtModifier.Final\n            ]);\n            statements.push(delegateFactoryStmt);\n            retExpr = makeConditionalFactory(delegateFactory.callFn([]));\n        }\n        else if (isDelegatedMetadata(meta)) {\n            // This type is created with a delegated factory. If a type parameter is not specified, call\n            // the factory instead.\n            var delegateArgs = injectDependencies(meta.delegateDeps, meta.injectFn);\n            // Either call `new delegate(...)` or `delegate(...)` depending on meta.useNewForDelegate.\n            var factoryExpr = new (meta.delegateType === R3FactoryDelegateType.Class ?\n                InstantiateExpr :\n                InvokeFunctionExpr)(meta.delegate, delegateArgs);\n            retExpr = makeConditionalFactory(factoryExpr);\n        }\n        else if (isExpressionFactoryMetadata(meta)) {\n            // TODO(alxhub): decide whether to lower the value here or in the caller\n            retExpr = makeConditionalFactory(meta.expression);\n        }\n        else {\n            retExpr = ctorExpr;\n        }\n        return {\n            factory: fn([new FnParam('t', DYNAMIC_TYPE)], __spread(body, [new ReturnStatement(retExpr)]), INFERRED_TYPE, undefined, meta.name + \"_Factory\"),\n            statements: statements,\n        };\n    }\n    function injectDependencies(deps, injectFn) {\n        return deps.map(function (dep) { return compileInjectDependency(dep, injectFn); });\n    }\n    function compileInjectDependency(dep, injectFn) {\n        // Interpret the dependency according to its resolved type.\n        switch (dep.resolved) {\n            case exports.R3ResolvedDependencyType.Token: {\n                // Build up the injection flags according to the metadata.\n                var flags = 0 /* Default */ | (dep.self ? 2 /* Self */ : 0) |\n                    (dep.skipSelf ? 4 /* SkipSelf */ : 0) | (dep.host ? 1 /* Host */ : 0) |\n                    (dep.optional ? 8 /* Optional */ : 0);\n                // Build up the arguments to the injectFn call.\n                var injectArgs = [dep.token];\n                // If this dependency is optional or otherwise has non-default flags, then additional\n                // parameters describing how to inject the dependency must be passed to the inject function\n                // that's being used.\n                if (flags !== 0 /* Default */ || dep.optional) {\n                    injectArgs.push(literal(flags));\n                }\n                return importExpr(injectFn).callFn(injectArgs);\n            }\n            case exports.R3ResolvedDependencyType.Attribute:\n                // In the case of attributes, the attribute name in question is given as the token.\n                return importExpr(Identifiers$1.injectAttribute).callFn([dep.token]);\n            default:\n                return unsupported(\"Unknown R3ResolvedDependencyType: \" + exports.R3ResolvedDependencyType[dep.resolved]);\n        }\n    }\n    /**\n     * A helper function useful for extracting `R3DependencyMetadata` from a Render2\n     * `CompileTypeMetadata` instance.\n     */\n    function dependenciesFromGlobalMetadata(type, outputCtx, reflector) {\n        var e_1, _a;\n        // Use the `CompileReflector` to look up references to some well-known Angular types. These will\n        // be compared with the token to statically determine whether the token has significance to\n        // Angular, and set the correct `R3ResolvedDependencyType` as a result.\n        var injectorRef = reflector.resolveExternalReference(Identifiers.Injector);\n        // Iterate through the type's DI dependencies and produce `R3DependencyMetadata` for each of them.\n        var deps = [];\n        try {\n            for (var _b = __values(type.diDeps), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var dependency = _c.value;\n                if (dependency.token) {\n                    var tokenRef = tokenReference(dependency.token);\n                    var resolved = dependency.isAttribute ?\n                        exports.R3ResolvedDependencyType.Attribute :\n                        exports.R3ResolvedDependencyType.Token;\n                    // In the case of most dependencies, the token will be a reference to a type. Sometimes,\n                    // however, it can be a string, in the case of older Angular code or @Attribute injection.\n                    var token = tokenRef instanceof StaticSymbol ? outputCtx.importExpr(tokenRef) : literal(tokenRef);\n                    // Construct the dependency.\n                    deps.push({\n                        token: token,\n                        resolved: resolved,\n                        host: !!dependency.isHost,\n                        optional: !!dependency.isOptional,\n                        self: !!dependency.isSelf,\n                        skipSelf: !!dependency.isSkipSelf,\n                    });\n                }\n                else {\n                    unsupported('dependency without a token');\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return deps;\n    }\n    function isDelegatedMetadata(meta) {\n        return meta.delegateType !== undefined;\n    }\n    function isExpressionFactoryMetadata(meta) {\n        return meta.expression !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convert an object map with `Expression` values into a `LiteralMapExpr`.\n     */\n    function mapToMapExpression(map) {\n        var result = Object.keys(map).map(function (key) { return ({ key: key, value: map[key], quoted: false }); });\n        return literalMap(result);\n    }\n    /**\n     * Convert metadata into an `Expression` in the given `OutputContext`.\n     *\n     * This operation will handle arrays, references to symbols, or literal `null` or `undefined`.\n     */\n    function convertMetaToOutput(meta, ctx) {\n        if (Array.isArray(meta)) {\n            return literalArr(meta.map(function (entry) { return convertMetaToOutput(entry, ctx); }));\n        }\n        if (meta instanceof StaticSymbol) {\n            return ctx.importExpr(meta);\n        }\n        if (meta == null) {\n            return literal(meta);\n        }\n        throw new Error(\"Internal error: Unsupported or unknown metadata: \" + meta);\n    }\n    function typeWithParameters(type, numParams) {\n        var params = null;\n        if (numParams > 0) {\n            params = [];\n            for (var i = 0; i < numParams; i++) {\n                params.push(DYNAMIC_TYPE);\n            }\n        }\n        return expressionType(type, null, params);\n    }\n    var ANIMATE_SYMBOL_PREFIX = '@';\n    function prepareSyntheticPropertyName(name) {\n        return \"\" + ANIMATE_SYMBOL_PREFIX + name;\n    }\n    function prepareSyntheticListenerName(name, phase) {\n        return \"\" + ANIMATE_SYMBOL_PREFIX + name + \".\" + phase;\n    }\n    function prepareSyntheticListenerFunctionName(name, phase) {\n        return \"animation_\" + name + \"_\" + phase;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compileInjectable(meta) {\n        var result = null;\n        var factoryMeta = {\n            name: meta.name,\n            type: meta.type,\n            deps: meta.ctorDeps,\n            injectFn: Identifiers.inject,\n        };\n        if (meta.useClass !== undefined) {\n            // meta.useClass has two modes of operation. Either deps are specified, in which case `new` is\n            // used to instantiate the class with dependencies injected, or deps are not specified and\n            // the factory of the class is used to instantiate it.\n            //\n            // A special case exists for useClass: Type where Type is the injectable type itself, in which\n            // case omitting deps just uses the constructor dependencies instead.\n            var useClassOnSelf = meta.useClass.isEquivalent(meta.type);\n            var deps = meta.userDeps || (useClassOnSelf && meta.ctorDeps) || undefined;\n            if (deps !== undefined) {\n                // factory: () => new meta.useClass(...deps)\n                result = compileFactoryFunction(__assign({}, factoryMeta, { delegate: meta.useClass, delegateDeps: deps, delegateType: R3FactoryDelegateType.Class }));\n            }\n            else {\n                result = compileFactoryFunction(__assign({}, factoryMeta, { delegate: meta.useClass, delegateType: R3FactoryDelegateType.Factory }));\n            }\n        }\n        else if (meta.useFactory !== undefined) {\n            result = compileFactoryFunction(__assign({}, factoryMeta, { delegate: meta.useFactory, delegateDeps: meta.userDeps || [], delegateType: R3FactoryDelegateType.Function }));\n        }\n        else if (meta.useValue !== undefined) {\n            // Note: it's safe to use `meta.useValue` instead of the `USE_VALUE in meta` check used for\n            // client code because meta.useValue is an Expression which will be defined even if the actual\n            // value is undefined.\n            result = compileFactoryFunction(__assign({}, factoryMeta, { expression: meta.useValue }));\n        }\n        else if (meta.useExisting !== undefined) {\n            // useExisting is an `inject` call on the existing token.\n            result = compileFactoryFunction(__assign({}, factoryMeta, { expression: importExpr(Identifiers.inject).callFn([meta.useExisting]) }));\n        }\n        else {\n            result = compileFactoryFunction(factoryMeta);\n        }\n        var token = meta.type;\n        var providedIn = meta.providedIn;\n        var expression = importExpr(Identifiers.defineInjectable).callFn([mapToMapExpression({ token: token, factory: result.factory, providedIn: providedIn })]);\n        var type = new ExpressionType(importExpr(Identifiers.InjectableDef, [typeWithParameters(meta.type, meta.typeArgumentCount)]));\n        return {\n            expression: expression,\n            type: type,\n            statements: result.statements,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertArrayOfStrings(identifier, value) {\n        if (value == null) {\n            return;\n        }\n        if (!Array.isArray(value)) {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n        for (var i = 0; i < value.length; i += 1) {\n            if (typeof value[i] !== 'string') {\n                throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n            }\n        }\n    }\n    var INTERPOLATION_BLACKLIST_REGEXPS = [\n        /^\\s*$/,\n        /[<>]/,\n        /^[{}]$/,\n        /&(#|[a-z])/i,\n        /^\\/\\//,\n    ];\n    function assertInterpolationSymbols(identifier, value) {\n        if (value != null && !(Array.isArray(value) && value.length == 2)) {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n        }\n        else if (value != null) {\n            var start_1 = value[0];\n            var end_1 = value[1];\n            // black list checking\n            INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n                if (regexp.test(start_1) || regexp.test(end_1)) {\n                    throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n                }\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var InterpolationConfig = /** @class */ (function () {\n        function InterpolationConfig(start, end) {\n            this.start = start;\n            this.end = end;\n        }\n        InterpolationConfig.fromArray = function (markers) {\n            if (!markers) {\n                return DEFAULT_INTERPOLATION_CONFIG;\n            }\n            assertInterpolationSymbols('interpolation', markers);\n            return new InterpolationConfig(markers[0], markers[1]);\n        };\n        return InterpolationConfig;\n    }());\n    var DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n    var VERSION = 3;\n    var JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\n    var SourceMapGenerator = /** @class */ (function () {\n        function SourceMapGenerator(file) {\n            if (file === void 0) { file = null; }\n            this.file = file;\n            this.sourcesContent = new Map();\n            this.lines = [];\n            this.lastCol0 = 0;\n            this.hasMappings = false;\n        }\n        // The content is `null` when the content is expected to be loaded using the URL\n        SourceMapGenerator.prototype.addSource = function (url, content) {\n            if (content === void 0) { content = null; }\n            if (!this.sourcesContent.has(url)) {\n                this.sourcesContent.set(url, content);\n            }\n            return this;\n        };\n        SourceMapGenerator.prototype.addLine = function () {\n            this.lines.push([]);\n            this.lastCol0 = 0;\n            return this;\n        };\n        SourceMapGenerator.prototype.addMapping = function (col0, sourceUrl, sourceLine0, sourceCol0) {\n            if (!this.currentLine) {\n                throw new Error(\"A line must be added before mappings can be added\");\n            }\n            if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n                throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n            }\n            if (col0 == null) {\n                throw new Error(\"The column in the generated code must be provided\");\n            }\n            if (col0 < this.lastCol0) {\n                throw new Error(\"Mapping should be added in output order\");\n            }\n            if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n                throw new Error(\"The source location must be provided when a source url is provided\");\n            }\n            this.hasMappings = true;\n            this.lastCol0 = col0;\n            this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n            return this;\n        };\n        Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n            get: function () { return this.lines.slice(-1)[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        SourceMapGenerator.prototype.toJSON = function () {\n            var _this = this;\n            if (!this.hasMappings) {\n                return null;\n            }\n            var sourcesIndex = new Map();\n            var sources = [];\n            var sourcesContent = [];\n            Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n                sourcesIndex.set(url, i);\n                sources.push(url);\n                sourcesContent.push(_this.sourcesContent.get(url) || null);\n            });\n            var mappings = '';\n            var lastCol0 = 0;\n            var lastSourceIndex = 0;\n            var lastSourceLine0 = 0;\n            var lastSourceCol0 = 0;\n            this.lines.forEach(function (segments) {\n                lastCol0 = 0;\n                mappings += segments\n                    .map(function (segment) {\n                    // zero-based starting column of the line in the generated code\n                    var segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                    lastCol0 = segment.col0;\n                    if (segment.sourceUrl != null) {\n                        // zero-based index into the “sources” list\n                        segAsStr +=\n                            toBase64VLQ(sourcesIndex.get(segment.sourceUrl) - lastSourceIndex);\n                        lastSourceIndex = sourcesIndex.get(segment.sourceUrl);\n                        // the zero-based starting line in the original source\n                        segAsStr += toBase64VLQ(segment.sourceLine0 - lastSourceLine0);\n                        lastSourceLine0 = segment.sourceLine0;\n                        // the zero-based starting column in the original source\n                        segAsStr += toBase64VLQ(segment.sourceCol0 - lastSourceCol0);\n                        lastSourceCol0 = segment.sourceCol0;\n                    }\n                    return segAsStr;\n                })\n                    .join(',');\n                mappings += ';';\n            });\n            mappings = mappings.slice(0, -1);\n            return {\n                'file': this.file || '',\n                'version': VERSION,\n                'sourceRoot': '',\n                'sources': sources,\n                'sourcesContent': sourcesContent,\n                'mappings': mappings,\n            };\n        };\n        SourceMapGenerator.prototype.toJsComment = function () {\n            return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n                '';\n        };\n        return SourceMapGenerator;\n    }());\n    function toBase64String(value) {\n        var b64 = '';\n        value = utf8Encode(value);\n        for (var i = 0; i < value.length;) {\n            var i1 = value.charCodeAt(i++);\n            var i2 = value.charCodeAt(i++);\n            var i3 = value.charCodeAt(i++);\n            b64 += toBase64Digit(i1 >> 2);\n            b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n            b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n            b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n        }\n        return b64;\n    }\n    function toBase64VLQ(value) {\n        value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n        var out = '';\n        do {\n            var digit = value & 31;\n            value = value >> 5;\n            if (value > 0) {\n                digit = digit | 32;\n            }\n            out += toBase64Digit(digit);\n        } while (value > 0);\n        return out;\n    }\n    var B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    function toBase64Digit(value) {\n        if (value < 0 || value >= 64) {\n            throw new Error(\"Can only encode value in the range [0, 63]\");\n        }\n        return B64_DIGITS[value];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\n    var _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\n    var _INDENT_WITH = '  ';\n    var CATCH_ERROR_VAR$1 = variable('error', null, null);\n    var CATCH_STACK_VAR$1 = variable('stack', null, null);\n    var _EmittedLine = /** @class */ (function () {\n        function _EmittedLine(indent) {\n            this.indent = indent;\n            this.partsLength = 0;\n            this.parts = [];\n            this.srcSpans = [];\n        }\n        return _EmittedLine;\n    }());\n    var EmitterVisitorContext = /** @class */ (function () {\n        function EmitterVisitorContext(_indent) {\n            this._indent = _indent;\n            this._classes = [];\n            this._preambleLineCount = 0;\n            this._lines = [new _EmittedLine(_indent)];\n        }\n        EmitterVisitorContext.createRoot = function () { return new EmitterVisitorContext(0); };\n        Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n            get: function () { return this._lines[this._lines.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        EmitterVisitorContext.prototype.println = function (from, lastPart) {\n            if (lastPart === void 0) { lastPart = ''; }\n            this.print(from || null, lastPart, true);\n        };\n        EmitterVisitorContext.prototype.lineIsEmpty = function () { return this._currentLine.parts.length === 0; };\n        EmitterVisitorContext.prototype.lineLength = function () {\n            return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n        };\n        EmitterVisitorContext.prototype.print = function (from, part, newLine) {\n            if (newLine === void 0) { newLine = false; }\n            if (part.length > 0) {\n                this._currentLine.parts.push(part);\n                this._currentLine.partsLength += part.length;\n                this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n            }\n            if (newLine) {\n                this._lines.push(new _EmittedLine(this._indent));\n            }\n        };\n        EmitterVisitorContext.prototype.removeEmptyLastLine = function () {\n            if (this.lineIsEmpty()) {\n                this._lines.pop();\n            }\n        };\n        EmitterVisitorContext.prototype.incIndent = function () {\n            this._indent++;\n            if (this.lineIsEmpty()) {\n                this._currentLine.indent = this._indent;\n            }\n        };\n        EmitterVisitorContext.prototype.decIndent = function () {\n            this._indent--;\n            if (this.lineIsEmpty()) {\n                this._currentLine.indent = this._indent;\n            }\n        };\n        EmitterVisitorContext.prototype.pushClass = function (clazz) { this._classes.push(clazz); };\n        EmitterVisitorContext.prototype.popClass = function () { return this._classes.pop(); };\n        Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n            get: function () {\n                return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        EmitterVisitorContext.prototype.toSource = function () {\n            return this.sourceLines\n                .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n                .join('\\n');\n        };\n        EmitterVisitorContext.prototype.toSourceMapGenerator = function (genFilePath, startsAtLine) {\n            if (startsAtLine === void 0) { startsAtLine = 0; }\n            var map = new SourceMapGenerator(genFilePath);\n            var firstOffsetMapped = false;\n            var mapFirstOffsetIfNeeded = function () {\n                if (!firstOffsetMapped) {\n                    // Add a single space so that tools won't try to load the file from disk.\n                    // Note: We are using virtual urls like `ng:///`, so we have to\n                    // provide a content here.\n                    map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                    firstOffsetMapped = true;\n                }\n            };\n            for (var i = 0; i < startsAtLine; i++) {\n                map.addLine();\n                mapFirstOffsetIfNeeded();\n            }\n            this.sourceLines.forEach(function (line, lineIdx) {\n                map.addLine();\n                var spans = line.srcSpans;\n                var parts = line.parts;\n                var col0 = line.indent * _INDENT_WITH.length;\n                var spanIdx = 0;\n                // skip leading parts without source spans\n                while (spanIdx < spans.length && !spans[spanIdx]) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n                if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                    firstOffsetMapped = true;\n                }\n                else {\n                    mapFirstOffsetIfNeeded();\n                }\n                while (spanIdx < spans.length) {\n                    var span = spans[spanIdx];\n                    var source = span.start.file;\n                    var sourceLine = span.start.line;\n                    var sourceCol = span.start.col;\n                    map.addSource(source.url, source.content)\n                        .addMapping(col0, source.url, sourceLine, sourceCol);\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                    // assign parts without span or the same span to the previous segment\n                    while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                        col0 += parts[spanIdx].length;\n                        spanIdx++;\n                    }\n                }\n            });\n            return map;\n        };\n        EmitterVisitorContext.prototype.setPreambleLineCount = function (count) { return this._preambleLineCount = count; };\n        EmitterVisitorContext.prototype.spanOf = function (line, column) {\n            var emittedLine = this._lines[line - this._preambleLineCount];\n            if (emittedLine) {\n                var columnsLeft = column - _createIndent(emittedLine.indent).length;\n                for (var partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                    var part = emittedLine.parts[partIndex];\n                    if (part.length > columnsLeft) {\n                        return emittedLine.srcSpans[partIndex];\n                    }\n                    columnsLeft -= part.length;\n                }\n            }\n            return null;\n        };\n        Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n            get: function () {\n                if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                    return this._lines.slice(0, -1);\n                }\n                return this._lines;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return EmitterVisitorContext;\n    }());\n    var AbstractEmitterVisitor = /** @class */ (function () {\n        function AbstractEmitterVisitor(_escapeDollarInStrings) {\n            this._escapeDollarInStrings = _escapeDollarInStrings;\n        }\n        AbstractEmitterVisitor.prototype.visitExpressionStmt = function (stmt, ctx) {\n            stmt.expr.visitExpression(this, ctx);\n            ctx.println(stmt, ';');\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitReturnStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"return \");\n            stmt.value.visitExpression(this, ctx);\n            ctx.println(stmt, ';');\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitIfStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"if (\");\n            stmt.condition.visitExpression(this, ctx);\n            ctx.print(stmt, \") {\");\n            var hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n            if (stmt.trueCase.length <= 1 && !hasElseCase) {\n                ctx.print(stmt, \" \");\n                this.visitAllStatements(stmt.trueCase, ctx);\n                ctx.removeEmptyLastLine();\n                ctx.print(stmt, \" \");\n            }\n            else {\n                ctx.println();\n                ctx.incIndent();\n                this.visitAllStatements(stmt.trueCase, ctx);\n                ctx.decIndent();\n                if (hasElseCase) {\n                    ctx.println(stmt, \"} else {\");\n                    ctx.incIndent();\n                    this.visitAllStatements(stmt.falseCase, ctx);\n                    ctx.decIndent();\n                }\n            }\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitThrowStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"throw \");\n            stmt.error.visitExpression(this, ctx);\n            ctx.println(stmt, \";\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitCommentStmt = function (stmt, ctx) {\n            if (stmt.multiline) {\n                ctx.println(stmt, \"/* \" + stmt.comment + \" */\");\n            }\n            else {\n                stmt.comment.split('\\n').forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n            }\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitJSDocCommentStmt = function (stmt, ctx) {\n            ctx.println(stmt, \"/*\" + stmt.toString() + \"*/\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitWriteVarExpr = function (expr, ctx) {\n            var lineWasEmpty = ctx.lineIsEmpty();\n            if (!lineWasEmpty) {\n                ctx.print(expr, '(');\n            }\n            ctx.print(expr, expr.name + \" = \");\n            expr.value.visitExpression(this, ctx);\n            if (!lineWasEmpty) {\n                ctx.print(expr, ')');\n            }\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitWriteKeyExpr = function (expr, ctx) {\n            var lineWasEmpty = ctx.lineIsEmpty();\n            if (!lineWasEmpty) {\n                ctx.print(expr, '(');\n            }\n            expr.receiver.visitExpression(this, ctx);\n            ctx.print(expr, \"[\");\n            expr.index.visitExpression(this, ctx);\n            ctx.print(expr, \"] = \");\n            expr.value.visitExpression(this, ctx);\n            if (!lineWasEmpty) {\n                ctx.print(expr, ')');\n            }\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitWritePropExpr = function (expr, ctx) {\n            var lineWasEmpty = ctx.lineIsEmpty();\n            if (!lineWasEmpty) {\n                ctx.print(expr, '(');\n            }\n            expr.receiver.visitExpression(this, ctx);\n            ctx.print(expr, \".\" + expr.name + \" = \");\n            expr.value.visitExpression(this, ctx);\n            if (!lineWasEmpty) {\n                ctx.print(expr, ')');\n            }\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n            expr.receiver.visitExpression(this, ctx);\n            var name = expr.name;\n            if (expr.builtin != null) {\n                name = this.getBuiltinMethodName(expr.builtin);\n                if (name == null) {\n                    // some builtins just mean to skip the call.\n                    return null;\n                }\n            }\n            ctx.print(expr, \".\" + name + \"(\");\n            this.visitAllExpressions(expr.args, ctx, \",\");\n            ctx.print(expr, \")\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n            expr.fn.visitExpression(this, ctx);\n            ctx.print(expr, \"(\");\n            this.visitAllExpressions(expr.args, ctx, ',');\n            ctx.print(expr, \")\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n            throw new Error('Abstract emitter cannot visit WrappedNodeExpr.');\n        };\n        AbstractEmitterVisitor.prototype.visitTypeofExpr = function (expr, ctx) {\n            ctx.print(expr, 'typeof ');\n            expr.expr.visitExpression(this, ctx);\n        };\n        AbstractEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n            var varName = ast.name;\n            if (ast.builtin != null) {\n                switch (ast.builtin) {\n                    case exports.BuiltinVar.Super:\n                        varName = 'super';\n                        break;\n                    case exports.BuiltinVar.This:\n                        varName = 'this';\n                        break;\n                    case exports.BuiltinVar.CatchError:\n                        varName = CATCH_ERROR_VAR$1.name;\n                        break;\n                    case exports.BuiltinVar.CatchStack:\n                        varName = CATCH_STACK_VAR$1.name;\n                        break;\n                    default:\n                        throw new Error(\"Unknown builtin variable \" + ast.builtin);\n                }\n            }\n            ctx.print(ast, varName);\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n            ctx.print(ast, \"new \");\n            ast.classExpr.visitExpression(this, ctx);\n            ctx.print(ast, \"(\");\n            this.visitAllExpressions(ast.args, ctx, ',');\n            ctx.print(ast, \")\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n            var value = ast.value;\n            if (typeof value === 'string') {\n                ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n            }\n            else {\n                ctx.print(ast, \"\" + value);\n            }\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitConditionalExpr = function (ast, ctx) {\n            ctx.print(ast, \"(\");\n            ast.condition.visitExpression(this, ctx);\n            ctx.print(ast, '? ');\n            ast.trueCase.visitExpression(this, ctx);\n            ctx.print(ast, ': ');\n            ast.falseCase.visitExpression(this, ctx);\n            ctx.print(ast, \")\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitNotExpr = function (ast, ctx) {\n            ctx.print(ast, '!');\n            ast.condition.visitExpression(this, ctx);\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n            ast.condition.visitExpression(this, ctx);\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n            var opStr;\n            switch (ast.operator) {\n                case exports.BinaryOperator.Equals:\n                    opStr = '==';\n                    break;\n                case exports.BinaryOperator.Identical:\n                    opStr = '===';\n                    break;\n                case exports.BinaryOperator.NotEquals:\n                    opStr = '!=';\n                    break;\n                case exports.BinaryOperator.NotIdentical:\n                    opStr = '!==';\n                    break;\n                case exports.BinaryOperator.And:\n                    opStr = '&&';\n                    break;\n                case exports.BinaryOperator.BitwiseAnd:\n                    opStr = '&';\n                    break;\n                case exports.BinaryOperator.Or:\n                    opStr = '||';\n                    break;\n                case exports.BinaryOperator.Plus:\n                    opStr = '+';\n                    break;\n                case exports.BinaryOperator.Minus:\n                    opStr = '-';\n                    break;\n                case exports.BinaryOperator.Divide:\n                    opStr = '/';\n                    break;\n                case exports.BinaryOperator.Multiply:\n                    opStr = '*';\n                    break;\n                case exports.BinaryOperator.Modulo:\n                    opStr = '%';\n                    break;\n                case exports.BinaryOperator.Lower:\n                    opStr = '<';\n                    break;\n                case exports.BinaryOperator.LowerEquals:\n                    opStr = '<=';\n                    break;\n                case exports.BinaryOperator.Bigger:\n                    opStr = '>';\n                    break;\n                case exports.BinaryOperator.BiggerEquals:\n                    opStr = '>=';\n                    break;\n                default:\n                    throw new Error(\"Unknown operator \" + ast.operator);\n            }\n            if (ast.parens)\n                ctx.print(ast, \"(\");\n            ast.lhs.visitExpression(this, ctx);\n            ctx.print(ast, \" \" + opStr + \" \");\n            ast.rhs.visitExpression(this, ctx);\n            if (ast.parens)\n                ctx.print(ast, \")\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitReadPropExpr = function (ast, ctx) {\n            ast.receiver.visitExpression(this, ctx);\n            ctx.print(ast, \".\");\n            ctx.print(ast, ast.name);\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitReadKeyExpr = function (ast, ctx) {\n            ast.receiver.visitExpression(this, ctx);\n            ctx.print(ast, \"[\");\n            ast.index.visitExpression(this, ctx);\n            ctx.print(ast, \"]\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n            ctx.print(ast, \"[\");\n            this.visitAllExpressions(ast.entries, ctx, ',');\n            ctx.print(ast, \"]\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitLiteralMapExpr = function (ast, ctx) {\n            var _this = this;\n            ctx.print(ast, \"{\");\n            this.visitAllObjects(function (entry) {\n                ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n                entry.value.visitExpression(_this, ctx);\n            }, ast.entries, ctx, ',');\n            ctx.print(ast, \"}\");\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitCommaExpr = function (ast, ctx) {\n            ctx.print(ast, '(');\n            this.visitAllExpressions(ast.parts, ctx, ',');\n            ctx.print(ast, ')');\n            return null;\n        };\n        AbstractEmitterVisitor.prototype.visitAllExpressions = function (expressions, ctx, separator) {\n            var _this = this;\n            this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n        };\n        AbstractEmitterVisitor.prototype.visitAllObjects = function (handler, expressions, ctx, separator) {\n            var incrementedIndent = false;\n            for (var i = 0; i < expressions.length; i++) {\n                if (i > 0) {\n                    if (ctx.lineLength() > 80) {\n                        ctx.print(null, separator, true);\n                        if (!incrementedIndent) {\n                            // continuation are marked with double indent.\n                            ctx.incIndent();\n                            ctx.incIndent();\n                            incrementedIndent = true;\n                        }\n                    }\n                    else {\n                        ctx.print(null, separator, false);\n                    }\n                }\n                handler(expressions[i]);\n            }\n            if (incrementedIndent) {\n                // continuation are marked with double indent.\n                ctx.decIndent();\n                ctx.decIndent();\n            }\n        };\n        AbstractEmitterVisitor.prototype.visitAllStatements = function (statements, ctx) {\n            var _this = this;\n            statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n        };\n        return AbstractEmitterVisitor;\n    }());\n    function escapeIdentifier(input, escapeDollar, alwaysQuote) {\n        if (alwaysQuote === void 0) { alwaysQuote = true; }\n        if (input == null) {\n            return null;\n        }\n        var body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n            var match = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                match[_i] = arguments[_i];\n            }\n            if (match[0] == '$') {\n                return escapeDollar ? '\\\\$' : '$';\n            }\n            else if (match[0] == '\\n') {\n                return '\\\\n';\n            }\n            else if (match[0] == '\\r') {\n                return '\\\\r';\n            }\n            else {\n                return \"\\\\\" + match[0];\n            }\n        });\n        var requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n        return requiresQuotes ? \"'\" + body + \"'\" : body;\n    }\n    function _createIndent(count) {\n        var res = '';\n        for (var i = 0; i < count; i++) {\n            res += _INDENT_WITH;\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n        __extends(AbstractJsEmitterVisitor, _super);\n        function AbstractJsEmitterVisitor() {\n            return _super.call(this, false) || this;\n        }\n        AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            var _this = this;\n            ctx.pushClass(stmt);\n            this._visitClassConstructor(stmt, ctx);\n            if (stmt.parent != null) {\n                ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n                stmt.parent.visitExpression(this, ctx);\n                ctx.println(stmt, \".prototype);\");\n            }\n            stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n            stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n            ctx.popClass();\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n            ctx.print(stmt, \"function \" + stmt.name + \"(\");\n            if (stmt.constructorMethod != null) {\n                this._visitParams(stmt.constructorMethod.params, ctx);\n            }\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            if (stmt.constructorMethod != null) {\n                if (stmt.constructorMethod.body.length > 0) {\n                    ctx.println(stmt, \"var self = this;\");\n                    this.visitAllStatements(stmt.constructorMethod.body, ctx);\n                }\n            }\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n        };\n        AbstractJsEmitterVisitor.prototype._visitClassGetter = function (stmt, getter, ctx) {\n            ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n            ctx.incIndent();\n            if (getter.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(getter.body, ctx);\n            }\n            ctx.decIndent();\n            ctx.println(stmt, \"}});\");\n        };\n        AbstractJsEmitterVisitor.prototype._visitClassMethod = function (stmt, method, ctx) {\n            ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n            this._visitParams(method.params, ctx);\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            if (method.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(method.body, ctx);\n            }\n            ctx.decIndent();\n            ctx.println(stmt, \"};\");\n        };\n        AbstractJsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n            throw new Error('Cannot emit a WrappedNodeExpr in Javascript.');\n        };\n        AbstractJsEmitterVisitor.prototype.visitReadVarExpr = function (ast, ctx) {\n            if (ast.builtin === exports.BuiltinVar.This) {\n                ctx.print(ast, 'self');\n            }\n            else if (ast.builtin === exports.BuiltinVar.Super) {\n                throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n            }\n            else {\n                _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n            }\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"var \" + stmt.name);\n            if (stmt.value) {\n                ctx.print(stmt, ' = ');\n                stmt.value.visitExpression(this, ctx);\n            }\n            ctx.println(stmt, \";\");\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n            ast.value.visitExpression(this, ctx);\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = function (expr, ctx) {\n            var fnExpr = expr.fn;\n            if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === exports.BuiltinVar.Super) {\n                ctx.currentClass.parent.visitExpression(this, ctx);\n                ctx.print(expr, \".call(this\");\n                if (expr.args.length > 0) {\n                    ctx.print(expr, \", \");\n                    this.visitAllExpressions(expr.args, ctx, ',');\n                }\n                ctx.print(expr, \")\");\n            }\n            else {\n                _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n            }\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n            ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n            this._visitParams(ast.params, ctx);\n            ctx.println(ast, \") {\");\n            ctx.incIndent();\n            this.visitAllStatements(ast.statements, ctx);\n            ctx.decIndent();\n            ctx.print(ast, \"}\");\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            ctx.print(stmt, \"function \" + stmt.name + \"(\");\n            this._visitParams(stmt.params, ctx);\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.statements, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n            ctx.println(stmt, \"try {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.bodyStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n            ctx.incIndent();\n            var catchStmts = [CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                    exports.StmtModifier.Final\n                ])].concat(stmt.catchStmts);\n            this.visitAllStatements(catchStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        AbstractJsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n            this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n        };\n        AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n            var name;\n            switch (method) {\n                case exports.BuiltinMethod.ConcatArray:\n                    name = 'concat';\n                    break;\n                case exports.BuiltinMethod.SubscribeObservable:\n                    name = 'subscribe';\n                    break;\n                case exports.BuiltinMethod.Bind:\n                    name = 'bind';\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method: \" + method);\n            }\n            return name;\n        };\n        return AbstractJsEmitterVisitor;\n    }(AbstractEmitterVisitor));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n        var fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n        var fnArgNames = [];\n        var fnArgValues = [];\n        for (var argName in vars) {\n            fnArgNames.push(argName);\n            fnArgValues.push(vars[argName]);\n        }\n        if (createSourceMap) {\n            // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n            // E.g. ```\n            // function anonymous(a,b,c\n            // /**/) { ... }```\n            // We don't want to hard code this fact, so we auto detect it via an empty function first.\n            var emptyFn = new (Function.bind.apply(Function, __spread([void 0], fnArgNames.concat('return null;'))))().toString();\n            var headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n            fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n        }\n        return new (Function.bind.apply(Function, __spread([void 0], fnArgNames.concat(fnBody))))().apply(void 0, __spread(fnArgValues));\n    }\n    function jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n        var converter = new JitEmitterVisitor(reflector);\n        var ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(statements, ctx);\n        converter.createReturnStmt(ctx);\n        return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n    }\n    var JitEmitterVisitor = /** @class */ (function (_super) {\n        __extends(JitEmitterVisitor, _super);\n        function JitEmitterVisitor(reflector) {\n            var _this = _super.call(this) || this;\n            _this.reflector = reflector;\n            _this._evalArgNames = [];\n            _this._evalArgValues = [];\n            _this._evalExportedVars = [];\n            return _this;\n        }\n        JitEmitterVisitor.prototype.createReturnStmt = function (ctx) {\n            var stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n            stmt.visitStatement(this, ctx);\n        };\n        JitEmitterVisitor.prototype.getArgs = function () {\n            var result = {};\n            for (var i = 0; i < this._evalArgNames.length; i++) {\n                result[this._evalArgNames[i]] = this._evalArgValues[i];\n            }\n            return result;\n        };\n        JitEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n            this._emitReferenceToExternal(ast, this.reflector.resolveExternalReference(ast.value), ctx);\n            return null;\n        };\n        JitEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n            this._emitReferenceToExternal(ast, ast.node, ctx);\n            return null;\n        };\n        JitEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                this._evalExportedVars.push(stmt.name);\n            }\n            return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n        };\n        JitEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                this._evalExportedVars.push(stmt.name);\n            }\n            return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n        };\n        JitEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                this._evalExportedVars.push(stmt.name);\n            }\n            return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n        };\n        JitEmitterVisitor.prototype._emitReferenceToExternal = function (ast, value, ctx) {\n            var id = this._evalArgValues.indexOf(value);\n            if (id === -1) {\n                id = this._evalArgValues.length;\n                this._evalArgValues.push(value);\n                var name_1 = identifierName({ reference: value }) || 'val';\n                this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n            }\n            ctx.print(ast, this._evalArgNames[id]);\n        };\n        return JitEmitterVisitor;\n    }(AbstractJsEmitterVisitor));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implementation of `CompileReflector` which resolves references to @angular/core\n     * symbols at runtime, according to a consumer-provided mapping.\n     *\n     * Only supports `resolveExternalReference`, all other methods throw.\n     */\n    var R3JitReflector = /** @class */ (function () {\n        function R3JitReflector(context) {\n            this.context = context;\n        }\n        R3JitReflector.prototype.resolveExternalReference = function (ref) {\n            // This reflector only handles @angular/core imports.\n            if (ref.moduleName !== '@angular/core') {\n                throw new Error(\"Cannot resolve external reference to \" + ref.moduleName + \", only references to @angular/core are supported.\");\n            }\n            if (!this.context.hasOwnProperty(ref.name)) {\n                throw new Error(\"No value provided for @angular/core symbol '\" + ref.name + \"'.\");\n            }\n            return this.context[ref.name];\n        };\n        R3JitReflector.prototype.parameters = function (typeOrFunc) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.annotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.shallowAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.tryAnnotations = function (typeOrFunc) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.propMetadata = function (typeOrFunc) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.hasLifecycleHook = function (type, lcProperty) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.guards = function (typeOrFunc) { throw new Error('Not implemented.'); };\n        R3JitReflector.prototype.componentModuleUrl = function (type, cmpMetadata) { throw new Error('Not implemented.'); };\n        return R3JitReflector;\n    }());\n    /**\n     * JIT compiles an expression and returns the result of executing that expression.\n     *\n     * @param def the definition which will be compiled and executed to get the value to patch\n     * @param context an object map of @angular/core symbol names to symbols which will be available in\n     * the context of the compiled expression\n     * @param sourceUrl a URL to use for the source map of the compiled expression\n     * @param constantPool an optional `ConstantPool` which contains constants used in the expression\n     */\n    function jitExpression(def, context, sourceUrl, preStatements) {\n        // The ConstantPool may contain Statements which declare variables used in the final expression.\n        // Therefore, its statements need to precede the actual JIT operation. The final statement is a\n        // declaration of $def which is set to the expression being compiled.\n        var statements = __spread(preStatements, [\n            new DeclareVarStmt('$def', def, undefined, [exports.StmtModifier.Exported]),\n        ]);\n        var res = jitStatements(sourceUrl, statements, new R3JitReflector(context), false);\n        return res['$def'];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `R3NgModuleDef` for the given `R3NgModuleMetadata`.\n     */\n    function compileNgModule(meta) {\n        var moduleType = meta.type, bootstrap = meta.bootstrap, declarations = meta.declarations, imports = meta.imports, exports = meta.exports;\n        var expression = importExpr(Identifiers$1.defineNgModule).callFn([mapToMapExpression({\n                type: moduleType,\n                bootstrap: literalArr(bootstrap.map(function (ref) { return ref.value; })),\n                declarations: literalArr(declarations.map(function (ref) { return ref.value; })),\n                imports: literalArr(imports.map(function (ref) { return ref.value; })),\n                exports: literalArr(exports.map(function (ref) { return ref.value; })),\n            })]);\n        var type = new ExpressionType(importExpr(Identifiers$1.NgModuleDefWithMeta, [\n            new ExpressionType(moduleType), tupleTypeOf(declarations), tupleTypeOf(imports),\n            tupleTypeOf(exports)\n        ]));\n        var additionalStatements = [];\n        return { expression: expression, type: type, additionalStatements: additionalStatements };\n    }\n    function compileInjector(meta) {\n        var result = compileFactoryFunction({\n            name: meta.name,\n            type: meta.type,\n            deps: meta.deps,\n            injectFn: Identifiers$1.inject,\n        });\n        var expression = importExpr(Identifiers$1.defineInjector).callFn([mapToMapExpression({\n                factory: result.factory,\n                providers: meta.providers,\n                imports: meta.imports,\n            })]);\n        var type = new ExpressionType(importExpr(Identifiers$1.InjectorDef, [new ExpressionType(meta.type)]));\n        return { expression: expression, type: type, statements: result.statements };\n    }\n    // TODO(alxhub): integrate this with `compileNgModule`. Currently the two are separate operations.\n    function compileNgModuleFromRender2(ctx, ngModule, injectableCompiler) {\n        var className = identifierName(ngModule.type);\n        var rawImports = ngModule.rawImports ? [ngModule.rawImports] : [];\n        var rawExports = ngModule.rawExports ? [ngModule.rawExports] : [];\n        var injectorDefArg = mapLiteral({\n            'factory': injectableCompiler.factoryFor({ type: ngModule.type, symbol: ngModule.type.reference }, ctx),\n            'providers': convertMetaToOutput(ngModule.rawProviders, ctx),\n            'imports': convertMetaToOutput(__spread(rawImports, rawExports), ctx),\n        });\n        var injectorDef = importExpr(Identifiers$1.defineInjector).callFn([injectorDefArg]);\n        ctx.statements.push(new ClassStmt(\n        /* name */ className, \n        /* parent */ null, \n        /* fields */ [new ClassField(\n            /* name */ 'ngInjectorDef', \n            /* type */ INFERRED_TYPE, \n            /* modifiers */ [exports.StmtModifier.Static], \n            /* initializer */ injectorDef)], \n        /* getters */ [], \n        /* constructorMethod */ new ClassMethod(null, [], []), \n        /* methods */ []));\n    }\n    function tupleTypeOf(exp) {\n        var types = exp.map(function (ref) { return typeofExpr(ref.type); });\n        return exp.length > 0 ? expressionType(literalArr(types)) : NONE_TYPE;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipeFromMetadata(metadata) {\n        var definitionMapValues = [];\n        // e.g. `name: 'myPipe'`\n        definitionMapValues.push({ key: 'name', value: literal(metadata.pipeName), quoted: false });\n        // e.g. `type: MyPipe`\n        definitionMapValues.push({ key: 'type', value: metadata.type, quoted: false });\n        var templateFactory = compileFactoryFunction({\n            name: metadata.name,\n            type: metadata.type,\n            deps: metadata.deps,\n            injectFn: Identifiers$1.directiveInject,\n        });\n        definitionMapValues.push({ key: 'factory', value: templateFactory.factory, quoted: false });\n        // e.g. `pure: true`\n        definitionMapValues.push({ key: 'pure', value: literal(metadata.pure), quoted: false });\n        var expression = importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]);\n        var type = new ExpressionType(importExpr(Identifiers$1.PipeDefWithMeta, [\n            new ExpressionType(metadata.type),\n            new ExpressionType(new LiteralExpr(metadata.pipeName)),\n        ]));\n        return { expression: expression, type: type, statements: templateFactory.statements };\n    }\n    /**\n     * Write a pipe definition to the output context.\n     */\n    function compilePipeFromRender2(outputCtx, pipe, reflector) {\n        var name = identifierName(pipe.type);\n        if (!name) {\n            return error(\"Cannot resolve the name of \" + pipe.type);\n        }\n        var metadata = {\n            name: name,\n            pipeName: pipe.name,\n            type: outputCtx.importExpr(pipe.type.reference),\n            deps: dependenciesFromGlobalMetadata(pipe.type, outputCtx, reflector),\n            pure: pipe.pure,\n        };\n        var res = compilePipeFromMetadata(metadata);\n        var definitionField = outputCtx.constantPool.propertyNameOf(3 /* Pipe */);\n        outputCtx.statements.push(new ClassStmt(\n        /* name */ name, \n        /* parent */ null, \n        /* fields */ [new ClassField(\n            /* name */ definitionField, \n            /* type */ INFERRED_TYPE, \n            /* modifiers */ [exports.StmtModifier.Static], \n            /* initializer */ res.expression)], \n        /* getters */ [], \n        /* constructorMethod */ new ClassMethod(null, [], []), \n        /* methods */ []));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ParserError = /** @class */ (function () {\n        function ParserError(message, input, errLocation, ctxLocation) {\n            this.input = input;\n            this.errLocation = errLocation;\n            this.ctxLocation = ctxLocation;\n            this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n        }\n        return ParserError;\n    }());\n    var ParseSpan = /** @class */ (function () {\n        function ParseSpan(start, end) {\n            this.start = start;\n            this.end = end;\n        }\n        return ParseSpan;\n    }());\n    var AST = /** @class */ (function () {\n        function AST(span) {\n            this.span = span;\n        }\n        AST.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return null;\n        };\n        AST.prototype.toString = function () { return 'AST'; };\n        return AST;\n    }());\n    /**\n     * Represents a quoted expression of the form:\n     *\n     * quote = prefix `:` uninterpretedExpression\n     * prefix = identifier\n     * uninterpretedExpression = arbitrary string\n     *\n     * A quoted expression is meant to be pre-processed by an AST transformer that\n     * converts it into another AST that no longer contains quoted expressions.\n     * It is meant to allow third-party developers to extend Angular template\n     * expression language. The `uninterpretedExpression` part of the quote is\n     * therefore not interpreted by the Angular's own expression parser.\n     */\n    var Quote = /** @class */ (function (_super) {\n        __extends(Quote, _super);\n        function Quote(span, prefix, uninterpretedExpression, location) {\n            var _this = _super.call(this, span) || this;\n            _this.prefix = prefix;\n            _this.uninterpretedExpression = uninterpretedExpression;\n            _this.location = location;\n            return _this;\n        }\n        Quote.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitQuote(this, context);\n        };\n        Quote.prototype.toString = function () { return 'Quote'; };\n        return Quote;\n    }(AST));\n    var EmptyExpr = /** @class */ (function (_super) {\n        __extends(EmptyExpr, _super);\n        function EmptyExpr() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        EmptyExpr.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            // do nothing\n        };\n        return EmptyExpr;\n    }(AST));\n    var ImplicitReceiver = /** @class */ (function (_super) {\n        __extends(ImplicitReceiver, _super);\n        function ImplicitReceiver() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ImplicitReceiver.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitImplicitReceiver(this, context);\n        };\n        return ImplicitReceiver;\n    }(AST));\n    /**\n     * Multiple expressions separated by a semicolon.\n     */\n    var Chain = /** @class */ (function (_super) {\n        __extends(Chain, _super);\n        function Chain(span, expressions) {\n            var _this = _super.call(this, span) || this;\n            _this.expressions = expressions;\n            return _this;\n        }\n        Chain.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitChain(this, context);\n        };\n        return Chain;\n    }(AST));\n    var Conditional = /** @class */ (function (_super) {\n        __extends(Conditional, _super);\n        function Conditional(span, condition, trueExp, falseExp) {\n            var _this = _super.call(this, span) || this;\n            _this.condition = condition;\n            _this.trueExp = trueExp;\n            _this.falseExp = falseExp;\n            return _this;\n        }\n        Conditional.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitConditional(this, context);\n        };\n        return Conditional;\n    }(AST));\n    var PropertyRead = /** @class */ (function (_super) {\n        __extends(PropertyRead, _super);\n        function PropertyRead(span, receiver, name) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            return _this;\n        }\n        PropertyRead.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPropertyRead(this, context);\n        };\n        return PropertyRead;\n    }(AST));\n    var PropertyWrite = /** @class */ (function (_super) {\n        __extends(PropertyWrite, _super);\n        function PropertyWrite(span, receiver, name, value) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.value = value;\n            return _this;\n        }\n        PropertyWrite.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPropertyWrite(this, context);\n        };\n        return PropertyWrite;\n    }(AST));\n    var SafePropertyRead = /** @class */ (function (_super) {\n        __extends(SafePropertyRead, _super);\n        function SafePropertyRead(span, receiver, name) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            return _this;\n        }\n        SafePropertyRead.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitSafePropertyRead(this, context);\n        };\n        return SafePropertyRead;\n    }(AST));\n    var KeyedRead = /** @class */ (function (_super) {\n        __extends(KeyedRead, _super);\n        function KeyedRead(span, obj, key) {\n            var _this = _super.call(this, span) || this;\n            _this.obj = obj;\n            _this.key = key;\n            return _this;\n        }\n        KeyedRead.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitKeyedRead(this, context);\n        };\n        return KeyedRead;\n    }(AST));\n    var KeyedWrite = /** @class */ (function (_super) {\n        __extends(KeyedWrite, _super);\n        function KeyedWrite(span, obj, key, value) {\n            var _this = _super.call(this, span) || this;\n            _this.obj = obj;\n            _this.key = key;\n            _this.value = value;\n            return _this;\n        }\n        KeyedWrite.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitKeyedWrite(this, context);\n        };\n        return KeyedWrite;\n    }(AST));\n    var BindingPipe = /** @class */ (function (_super) {\n        __extends(BindingPipe, _super);\n        function BindingPipe(span, exp, name, args) {\n            var _this = _super.call(this, span) || this;\n            _this.exp = exp;\n            _this.name = name;\n            _this.args = args;\n            return _this;\n        }\n        BindingPipe.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPipe(this, context);\n        };\n        return BindingPipe;\n    }(AST));\n    var LiteralPrimitive = /** @class */ (function (_super) {\n        __extends(LiteralPrimitive, _super);\n        function LiteralPrimitive(span, value) {\n            var _this = _super.call(this, span) || this;\n            _this.value = value;\n            return _this;\n        }\n        LiteralPrimitive.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitLiteralPrimitive(this, context);\n        };\n        return LiteralPrimitive;\n    }(AST));\n    var LiteralArray = /** @class */ (function (_super) {\n        __extends(LiteralArray, _super);\n        function LiteralArray(span, expressions) {\n            var _this = _super.call(this, span) || this;\n            _this.expressions = expressions;\n            return _this;\n        }\n        LiteralArray.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitLiteralArray(this, context);\n        };\n        return LiteralArray;\n    }(AST));\n    var LiteralMap = /** @class */ (function (_super) {\n        __extends(LiteralMap, _super);\n        function LiteralMap(span, keys, values) {\n            var _this = _super.call(this, span) || this;\n            _this.keys = keys;\n            _this.values = values;\n            return _this;\n        }\n        LiteralMap.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitLiteralMap(this, context);\n        };\n        return LiteralMap;\n    }(AST));\n    var Interpolation = /** @class */ (function (_super) {\n        __extends(Interpolation, _super);\n        function Interpolation(span, strings, expressions) {\n            var _this = _super.call(this, span) || this;\n            _this.strings = strings;\n            _this.expressions = expressions;\n            return _this;\n        }\n        Interpolation.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitInterpolation(this, context);\n        };\n        return Interpolation;\n    }(AST));\n    var Binary = /** @class */ (function (_super) {\n        __extends(Binary, _super);\n        function Binary(span, operation, left, right) {\n            var _this = _super.call(this, span) || this;\n            _this.operation = operation;\n            _this.left = left;\n            _this.right = right;\n            return _this;\n        }\n        Binary.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitBinary(this, context);\n        };\n        return Binary;\n    }(AST));\n    var PrefixNot = /** @class */ (function (_super) {\n        __extends(PrefixNot, _super);\n        function PrefixNot(span, expression) {\n            var _this = _super.call(this, span) || this;\n            _this.expression = expression;\n            return _this;\n        }\n        PrefixNot.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitPrefixNot(this, context);\n        };\n        return PrefixNot;\n    }(AST));\n    var NonNullAssert = /** @class */ (function (_super) {\n        __extends(NonNullAssert, _super);\n        function NonNullAssert(span, expression) {\n            var _this = _super.call(this, span) || this;\n            _this.expression = expression;\n            return _this;\n        }\n        NonNullAssert.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitNonNullAssert(this, context);\n        };\n        return NonNullAssert;\n    }(AST));\n    var MethodCall = /** @class */ (function (_super) {\n        __extends(MethodCall, _super);\n        function MethodCall(span, receiver, name, args) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.args = args;\n            return _this;\n        }\n        MethodCall.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitMethodCall(this, context);\n        };\n        return MethodCall;\n    }(AST));\n    var SafeMethodCall = /** @class */ (function (_super) {\n        __extends(SafeMethodCall, _super);\n        function SafeMethodCall(span, receiver, name, args) {\n            var _this = _super.call(this, span) || this;\n            _this.receiver = receiver;\n            _this.name = name;\n            _this.args = args;\n            return _this;\n        }\n        SafeMethodCall.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitSafeMethodCall(this, context);\n        };\n        return SafeMethodCall;\n    }(AST));\n    var FunctionCall = /** @class */ (function (_super) {\n        __extends(FunctionCall, _super);\n        function FunctionCall(span, target, args) {\n            var _this = _super.call(this, span) || this;\n            _this.target = target;\n            _this.args = args;\n            return _this;\n        }\n        FunctionCall.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return visitor.visitFunctionCall(this, context);\n        };\n        return FunctionCall;\n    }(AST));\n    var ASTWithSource = /** @class */ (function (_super) {\n        __extends(ASTWithSource, _super);\n        function ASTWithSource(ast, source, location, errors) {\n            var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n            _this.ast = ast;\n            _this.source = source;\n            _this.location = location;\n            _this.errors = errors;\n            return _this;\n        }\n        ASTWithSource.prototype.visit = function (visitor, context) {\n            if (context === void 0) { context = null; }\n            return this.ast.visit(visitor, context);\n        };\n        ASTWithSource.prototype.toString = function () { return this.source + \" in \" + this.location; };\n        return ASTWithSource;\n    }(AST));\n    var TemplateBinding = /** @class */ (function () {\n        function TemplateBinding(span, key, keyIsVar, name, expression) {\n            this.span = span;\n            this.key = key;\n            this.keyIsVar = keyIsVar;\n            this.name = name;\n            this.expression = expression;\n        }\n        return TemplateBinding;\n    }());\n    var NullAstVisitor = /** @class */ (function () {\n        function NullAstVisitor() {\n        }\n        NullAstVisitor.prototype.visitBinary = function (ast, context) { };\n        NullAstVisitor.prototype.visitChain = function (ast, context) { };\n        NullAstVisitor.prototype.visitConditional = function (ast, context) { };\n        NullAstVisitor.prototype.visitFunctionCall = function (ast, context) { };\n        NullAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { };\n        NullAstVisitor.prototype.visitInterpolation = function (ast, context) { };\n        NullAstVisitor.prototype.visitKeyedRead = function (ast, context) { };\n        NullAstVisitor.prototype.visitKeyedWrite = function (ast, context) { };\n        NullAstVisitor.prototype.visitLiteralArray = function (ast, context) { };\n        NullAstVisitor.prototype.visitLiteralMap = function (ast, context) { };\n        NullAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { };\n        NullAstVisitor.prototype.visitMethodCall = function (ast, context) { };\n        NullAstVisitor.prototype.visitPipe = function (ast, context) { };\n        NullAstVisitor.prototype.visitPrefixNot = function (ast, context) { };\n        NullAstVisitor.prototype.visitNonNullAssert = function (ast, context) { };\n        NullAstVisitor.prototype.visitPropertyRead = function (ast, context) { };\n        NullAstVisitor.prototype.visitPropertyWrite = function (ast, context) { };\n        NullAstVisitor.prototype.visitQuote = function (ast, context) { };\n        NullAstVisitor.prototype.visitSafeMethodCall = function (ast, context) { };\n        NullAstVisitor.prototype.visitSafePropertyRead = function (ast, context) { };\n        return NullAstVisitor;\n    }());\n    var RecursiveAstVisitor$1 = /** @class */ (function () {\n        function RecursiveAstVisitor() {\n        }\n        RecursiveAstVisitor.prototype.visitBinary = function (ast, context) {\n            ast.left.visit(this);\n            ast.right.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitChain = function (ast, context) { return this.visitAll(ast.expressions, context); };\n        RecursiveAstVisitor.prototype.visitConditional = function (ast, context) {\n            ast.condition.visit(this);\n            ast.trueExp.visit(this);\n            ast.falseExp.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitPipe = function (ast, context) {\n            ast.exp.visit(this);\n            this.visitAll(ast.args, context);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitFunctionCall = function (ast, context) {\n            ast.target.visit(this);\n            this.visitAll(ast.args, context);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitImplicitReceiver = function (ast, context) { return null; };\n        RecursiveAstVisitor.prototype.visitInterpolation = function (ast, context) {\n            return this.visitAll(ast.expressions, context);\n        };\n        RecursiveAstVisitor.prototype.visitKeyedRead = function (ast, context) {\n            ast.obj.visit(this);\n            ast.key.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitKeyedWrite = function (ast, context) {\n            ast.obj.visit(this);\n            ast.key.visit(this);\n            ast.value.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitLiteralArray = function (ast, context) {\n            return this.visitAll(ast.expressions, context);\n        };\n        RecursiveAstVisitor.prototype.visitLiteralMap = function (ast, context) { return this.visitAll(ast.values, context); };\n        RecursiveAstVisitor.prototype.visitLiteralPrimitive = function (ast, context) { return null; };\n        RecursiveAstVisitor.prototype.visitMethodCall = function (ast, context) {\n            ast.receiver.visit(this);\n            return this.visitAll(ast.args, context);\n        };\n        RecursiveAstVisitor.prototype.visitPrefixNot = function (ast, context) {\n            ast.expression.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitNonNullAssert = function (ast, context) {\n            ast.expression.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitPropertyRead = function (ast, context) {\n            ast.receiver.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitPropertyWrite = function (ast, context) {\n            ast.receiver.visit(this);\n            ast.value.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitSafePropertyRead = function (ast, context) {\n            ast.receiver.visit(this);\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitSafeMethodCall = function (ast, context) {\n            ast.receiver.visit(this);\n            return this.visitAll(ast.args, context);\n        };\n        RecursiveAstVisitor.prototype.visitAll = function (asts, context) {\n            var _this = this;\n            asts.forEach(function (ast) { return ast.visit(_this, context); });\n            return null;\n        };\n        RecursiveAstVisitor.prototype.visitQuote = function (ast, context) { return null; };\n        return RecursiveAstVisitor;\n    }());\n    var AstTransformer$1 = /** @class */ (function () {\n        function AstTransformer() {\n        }\n        AstTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n        AstTransformer.prototype.visitInterpolation = function (ast, context) {\n            return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n        };\n        AstTransformer.prototype.visitLiteralPrimitive = function (ast, context) {\n            return new LiteralPrimitive(ast.span, ast.value);\n        };\n        AstTransformer.prototype.visitPropertyRead = function (ast, context) {\n            return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n        };\n        AstTransformer.prototype.visitPropertyWrite = function (ast, context) {\n            return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n        };\n        AstTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n            return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n        };\n        AstTransformer.prototype.visitMethodCall = function (ast, context) {\n            return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n        };\n        AstTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n            return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n        };\n        AstTransformer.prototype.visitFunctionCall = function (ast, context) {\n            return new FunctionCall(ast.span, ast.target.visit(this), this.visitAll(ast.args));\n        };\n        AstTransformer.prototype.visitLiteralArray = function (ast, context) {\n            return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n        };\n        AstTransformer.prototype.visitLiteralMap = function (ast, context) {\n            return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n        };\n        AstTransformer.prototype.visitBinary = function (ast, context) {\n            return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n        };\n        AstTransformer.prototype.visitPrefixNot = function (ast, context) {\n            return new PrefixNot(ast.span, ast.expression.visit(this));\n        };\n        AstTransformer.prototype.visitNonNullAssert = function (ast, context) {\n            return new NonNullAssert(ast.span, ast.expression.visit(this));\n        };\n        AstTransformer.prototype.visitConditional = function (ast, context) {\n            return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n        };\n        AstTransformer.prototype.visitPipe = function (ast, context) {\n            return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n        };\n        AstTransformer.prototype.visitKeyedRead = function (ast, context) {\n            return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n        };\n        AstTransformer.prototype.visitKeyedWrite = function (ast, context) {\n            return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n        };\n        AstTransformer.prototype.visitAll = function (asts) {\n            var res = new Array(asts.length);\n            for (var i = 0; i < asts.length; ++i) {\n                res[i] = asts[i].visit(this);\n            }\n            return res;\n        };\n        AstTransformer.prototype.visitChain = function (ast, context) {\n            return new Chain(ast.span, this.visitAll(ast.expressions));\n        };\n        AstTransformer.prototype.visitQuote = function (ast, context) {\n            return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n        };\n        return AstTransformer;\n    }());\n    // A transformer that only creates new nodes if the transformer makes a change or\n    // a change is made a child node.\n    var AstMemoryEfficientTransformer = /** @class */ (function () {\n        function AstMemoryEfficientTransformer() {\n        }\n        AstMemoryEfficientTransformer.prototype.visitImplicitReceiver = function (ast, context) { return ast; };\n        AstMemoryEfficientTransformer.prototype.visitInterpolation = function (ast, context) {\n            var expressions = this.visitAll(ast.expressions);\n            if (expressions !== ast.expressions)\n                return new Interpolation(ast.span, ast.strings, expressions);\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive = function (ast, context) { return ast; };\n        AstMemoryEfficientTransformer.prototype.visitPropertyRead = function (ast, context) {\n            var receiver = ast.receiver.visit(this);\n            if (receiver !== ast.receiver) {\n                return new PropertyRead(ast.span, receiver, ast.name);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitPropertyWrite = function (ast, context) {\n            var receiver = ast.receiver.visit(this);\n            var value = ast.value.visit(this);\n            if (receiver !== ast.receiver || value !== ast.value) {\n                return new PropertyWrite(ast.span, receiver, ast.name, value);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitSafePropertyRead = function (ast, context) {\n            var receiver = ast.receiver.visit(this);\n            if (receiver !== ast.receiver) {\n                return new SafePropertyRead(ast.span, receiver, ast.name);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitMethodCall = function (ast, context) {\n            var receiver = ast.receiver.visit(this);\n            if (receiver !== ast.receiver) {\n                return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitSafeMethodCall = function (ast, context) {\n            var receiver = ast.receiver.visit(this);\n            var args = this.visitAll(ast.args);\n            if (receiver !== ast.receiver || args !== ast.args) {\n                return new SafeMethodCall(ast.span, receiver, ast.name, args);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitFunctionCall = function (ast, context) {\n            var target = ast.target && ast.target.visit(this);\n            var args = this.visitAll(ast.args);\n            if (target !== ast.target || args !== ast.args) {\n                return new FunctionCall(ast.span, target, args);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitLiteralArray = function (ast, context) {\n            var expressions = this.visitAll(ast.expressions);\n            if (expressions !== ast.expressions) {\n                return new LiteralArray(ast.span, expressions);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitLiteralMap = function (ast, context) {\n            var values = this.visitAll(ast.values);\n            if (values !== ast.values) {\n                return new LiteralMap(ast.span, ast.keys, values);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitBinary = function (ast, context) {\n            var left = ast.left.visit(this);\n            var right = ast.right.visit(this);\n            if (left !== ast.left || right !== ast.right) {\n                return new Binary(ast.span, ast.operation, left, right);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitPrefixNot = function (ast, context) {\n            var expression = ast.expression.visit(this);\n            if (expression !== ast.expression) {\n                return new PrefixNot(ast.span, expression);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitNonNullAssert = function (ast, context) {\n            var expression = ast.expression.visit(this);\n            if (expression !== ast.expression) {\n                return new NonNullAssert(ast.span, expression);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitConditional = function (ast, context) {\n            var condition = ast.condition.visit(this);\n            var trueExp = ast.trueExp.visit(this);\n            var falseExp = ast.falseExp.visit(this);\n            if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n                return new Conditional(ast.span, condition, trueExp, falseExp);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitPipe = function (ast, context) {\n            var exp = ast.exp.visit(this);\n            var args = this.visitAll(ast.args);\n            if (exp !== ast.exp || args !== ast.args) {\n                return new BindingPipe(ast.span, exp, ast.name, args);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitKeyedRead = function (ast, context) {\n            var obj = ast.obj.visit(this);\n            var key = ast.key.visit(this);\n            if (obj !== ast.obj || key !== ast.key) {\n                return new KeyedRead(ast.span, obj, key);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitKeyedWrite = function (ast, context) {\n            var obj = ast.obj.visit(this);\n            var key = ast.key.visit(this);\n            var value = ast.value.visit(this);\n            if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n                return new KeyedWrite(ast.span, obj, key, value);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitAll = function (asts) {\n            var res = new Array(asts.length);\n            var modified = false;\n            for (var i = 0; i < asts.length; ++i) {\n                var original = asts[i];\n                var value = original.visit(this);\n                res[i] = value;\n                modified = modified || value !== original;\n            }\n            return modified ? res : asts;\n        };\n        AstMemoryEfficientTransformer.prototype.visitChain = function (ast, context) {\n            var expressions = this.visitAll(ast.expressions);\n            if (expressions !== ast.expressions) {\n                return new Chain(ast.span, expressions);\n            }\n            return ast;\n        };\n        AstMemoryEfficientTransformer.prototype.visitQuote = function (ast, context) { return ast; };\n        return AstMemoryEfficientTransformer;\n    }());\n    function visitAstChildren(ast, visitor, context) {\n        function visit(ast) {\n            visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n        }\n        function visitAll(asts) { asts.forEach(visit); }\n        ast.visit({\n            visitBinary: function (ast) {\n                visit(ast.left);\n                visit(ast.right);\n            },\n            visitChain: function (ast) { visitAll(ast.expressions); },\n            visitConditional: function (ast) {\n                visit(ast.condition);\n                visit(ast.trueExp);\n                visit(ast.falseExp);\n            },\n            visitFunctionCall: function (ast) {\n                if (ast.target) {\n                    visit(ast.target);\n                }\n                visitAll(ast.args);\n            },\n            visitImplicitReceiver: function (ast) { },\n            visitInterpolation: function (ast) { visitAll(ast.expressions); },\n            visitKeyedRead: function (ast) {\n                visit(ast.obj);\n                visit(ast.key);\n            },\n            visitKeyedWrite: function (ast) {\n                visit(ast.obj);\n                visit(ast.key);\n                visit(ast.obj);\n            },\n            visitLiteralArray: function (ast) { visitAll(ast.expressions); },\n            visitLiteralMap: function (ast) { },\n            visitLiteralPrimitive: function (ast) { },\n            visitMethodCall: function (ast) {\n                visit(ast.receiver);\n                visitAll(ast.args);\n            },\n            visitPipe: function (ast) {\n                visit(ast.exp);\n                visitAll(ast.args);\n            },\n            visitPrefixNot: function (ast) { visit(ast.expression); },\n            visitNonNullAssert: function (ast) { visit(ast.expression); },\n            visitPropertyRead: function (ast) { visit(ast.receiver); },\n            visitPropertyWrite: function (ast) {\n                visit(ast.receiver);\n                visit(ast.value);\n            },\n            visitQuote: function (ast) { },\n            visitSafeMethodCall: function (ast) {\n                visit(ast.receiver);\n                visitAll(ast.args);\n            },\n            visitSafePropertyRead: function (ast) { visit(ast.receiver); },\n        });\n    }\n    // Bindings\n    var ParsedProperty = /** @class */ (function () {\n        function ParsedProperty(name, expression, type, sourceSpan) {\n            this.name = name;\n            this.expression = expression;\n            this.type = type;\n            this.sourceSpan = sourceSpan;\n            this.isLiteral = this.type === exports.ParsedPropertyType.LITERAL_ATTR;\n            this.isAnimation = this.type === exports.ParsedPropertyType.ANIMATION;\n        }\n        return ParsedProperty;\n    }());\n    (function (ParsedPropertyType) {\n        ParsedPropertyType[ParsedPropertyType[\"DEFAULT\"] = 0] = \"DEFAULT\";\n        ParsedPropertyType[ParsedPropertyType[\"LITERAL_ATTR\"] = 1] = \"LITERAL_ATTR\";\n        ParsedPropertyType[ParsedPropertyType[\"ANIMATION\"] = 2] = \"ANIMATION\";\n    })(exports.ParsedPropertyType || (exports.ParsedPropertyType = {}));\n    var ParsedEvent = /** @class */ (function () {\n        // Regular events have a target\n        // Animation events have a phase\n        function ParsedEvent(name, targetOrPhase, type, handler, sourceSpan) {\n            this.name = name;\n            this.targetOrPhase = targetOrPhase;\n            this.type = type;\n            this.handler = handler;\n            this.sourceSpan = sourceSpan;\n        }\n        return ParsedEvent;\n    }());\n    var ParsedVariable = /** @class */ (function () {\n        function ParsedVariable(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        return ParsedVariable;\n    }());\n    var BoundElementProperty = /** @class */ (function () {\n        function BoundElementProperty(name, type, securityContext, value, unit, sourceSpan) {\n            this.name = name;\n            this.type = type;\n            this.securityContext = securityContext;\n            this.value = value;\n            this.unit = unit;\n            this.sourceSpan = sourceSpan;\n        }\n        return BoundElementProperty;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventHandlerVars = /** @class */ (function () {\n        function EventHandlerVars() {\n        }\n        EventHandlerVars.event = variable('$event');\n        return EventHandlerVars;\n    }());\n    var ConvertActionBindingResult = /** @class */ (function () {\n        function ConvertActionBindingResult(\n        /**\n         * Render2 compatible statements,\n         */\n        stmts, \n        /**\n         * Variable name used with render2 compatible statements.\n         */\n        allowDefault) {\n            this.stmts = stmts;\n            this.allowDefault = allowDefault;\n            /**\n             * This is bit of a hack. It converts statements which render2 expects to statements which are\n             * expected by render3.\n             *\n             * Example: `<div click=\"doSomething($event)\">` will generate:\n             *\n             * Render3:\n             * ```\n             * const pd_b:any = ((<any>ctx.doSomething($event)) !== false);\n             * return pd_b;\n             * ```\n             *\n             * but render2 expects:\n             * ```\n             * return ctx.doSomething($event);\n             * ```\n             */\n            // TODO(misko): remove this hack once we no longer support ViewEngine.\n            this.render3Stmts = stmts.map(function (statement) {\n                if (statement instanceof DeclareVarStmt && statement.name == allowDefault.name &&\n                    statement.value instanceof BinaryOperatorExpr) {\n                    var lhs = statement.value.lhs;\n                    return new ReturnStatement(lhs.value);\n                }\n                return statement;\n            });\n        }\n        return ConvertActionBindingResult;\n    }());\n    /**\n     * Converts the given expression AST into an executable output AST, assuming the expression is\n     * used in an action binding (e.g. an event handler).\n     */\n    function convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n        if (!localResolver) {\n            localResolver = new DefaultLocalResolver();\n        }\n        var actionWithoutBuiltins = convertPropertyBindingBuiltins({\n            createLiteralArrayConverter: function (argCount) {\n                // Note: no caching for literal arrays in actions.\n                return function (args) { return literalArr(args); };\n            },\n            createLiteralMapConverter: function (keys) {\n                // Note: no caching for literal maps in actions.\n                return function (values) {\n                    var entries = keys.map(function (k, i) { return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    }); });\n                    return literalMap(entries);\n                };\n            },\n            createPipeConverter: function (name) {\n                throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n            }\n        }, action);\n        var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n        var actionStmts = [];\n        flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n        prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n        var lastIndex = actionStmts.length - 1;\n        var preventDefaultVar = null;\n        if (lastIndex >= 0) {\n            var lastStatement = actionStmts[lastIndex];\n            var returnExpr = convertStmtIntoExpression(lastStatement);\n            if (returnExpr) {\n                // Note: We need to cast the result of the method call to dynamic,\n                // as it might be a void method!\n                preventDefaultVar = createPreventDefaultVar(bindingId);\n                actionStmts[lastIndex] =\n                    preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                        .toDeclStmt(null, [exports.StmtModifier.Final]);\n            }\n        }\n        return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n    }\n    function convertPropertyBindingBuiltins(converterFactory, ast) {\n        return convertBuiltins(converterFactory, ast);\n    }\n    var ConvertPropertyBindingResult = /** @class */ (function () {\n        function ConvertPropertyBindingResult(stmts, currValExpr) {\n            this.stmts = stmts;\n            this.currValExpr = currValExpr;\n        }\n        return ConvertPropertyBindingResult;\n    }());\n    var BindingForm;\n    (function (BindingForm) {\n        // The general form of binding expression, supports all expressions.\n        BindingForm[BindingForm[\"General\"] = 0] = \"General\";\n        // Try to generate a simple binding (no temporaries or statements)\n        // otherwise generate a general binding\n        BindingForm[BindingForm[\"TrySimple\"] = 1] = \"TrySimple\";\n    })(BindingForm || (BindingForm = {}));\n    /**\n     * Converts the given expression AST into an executable output AST, assuming the expression\n     * is used in property binding. The expression has to be preprocessed via\n     * `convertPropertyBindingBuiltins`.\n     */\n    function convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n        if (!localResolver) {\n            localResolver = new DefaultLocalResolver();\n        }\n        var currValExpr = createCurrValueExpr(bindingId);\n        var stmts = [];\n        var visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n        var outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n        if (visitor.temporaryCount) {\n            for (var i = 0; i < visitor.temporaryCount; i++) {\n                stmts.push(temporaryDeclaration(bindingId, i));\n            }\n        }\n        else if (form == BindingForm.TrySimple) {\n            return new ConvertPropertyBindingResult([], outputExpr);\n        }\n        stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [exports.StmtModifier.Final]));\n        return new ConvertPropertyBindingResult(stmts, currValExpr);\n    }\n    function convertBuiltins(converterFactory, ast) {\n        var visitor = new _BuiltinAstConverter(converterFactory);\n        return ast.visit(visitor);\n    }\n    function temporaryName(bindingId, temporaryNumber) {\n        return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n    }\n    function temporaryDeclaration(bindingId, temporaryNumber) {\n        return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n    }\n    function prependTemporaryDecls(temporaryCount, bindingId, statements) {\n        for (var i = temporaryCount - 1; i >= 0; i--) {\n            statements.unshift(temporaryDeclaration(bindingId, i));\n        }\n    }\n    var _Mode;\n    (function (_Mode) {\n        _Mode[_Mode[\"Statement\"] = 0] = \"Statement\";\n        _Mode[_Mode[\"Expression\"] = 1] = \"Expression\";\n    })(_Mode || (_Mode = {}));\n    function ensureStatementMode(mode, ast) {\n        if (mode !== _Mode.Statement) {\n            throw new Error(\"Expected a statement, but saw \" + ast);\n        }\n    }\n    function ensureExpressionMode(mode, ast) {\n        if (mode !== _Mode.Expression) {\n            throw new Error(\"Expected an expression, but saw \" + ast);\n        }\n    }\n    function convertToStatementIfNeeded(mode, expr) {\n        if (mode === _Mode.Statement) {\n            return expr.toStmt();\n        }\n        else {\n            return expr;\n        }\n    }\n    var _BuiltinAstConverter = /** @class */ (function (_super) {\n        __extends(_BuiltinAstConverter, _super);\n        function _BuiltinAstConverter(_converterFactory) {\n            var _this = _super.call(this) || this;\n            _this._converterFactory = _converterFactory;\n            return _this;\n        }\n        _BuiltinAstConverter.prototype.visitPipe = function (ast, context) {\n            var _this = this;\n            var args = __spread([ast.exp], ast.args).map(function (ast) { return ast.visit(_this, context); });\n            return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n        };\n        _BuiltinAstConverter.prototype.visitLiteralArray = function (ast, context) {\n            var _this = this;\n            var args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n            return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n        };\n        _BuiltinAstConverter.prototype.visitLiteralMap = function (ast, context) {\n            var _this = this;\n            var args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n            return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n        };\n        return _BuiltinAstConverter;\n    }(AstTransformer$1));\n    var _AstToIrVisitor = /** @class */ (function () {\n        function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n            this._localResolver = _localResolver;\n            this._implicitReceiver = _implicitReceiver;\n            this.bindingId = bindingId;\n            this.interpolationFunction = interpolationFunction;\n            this._nodeMap = new Map();\n            this._resultMap = new Map();\n            this._currentTemporary = 0;\n            this.temporaryCount = 0;\n        }\n        _AstToIrVisitor.prototype.visitBinary = function (ast, mode) {\n            var op;\n            switch (ast.operation) {\n                case '+':\n                    op = exports.BinaryOperator.Plus;\n                    break;\n                case '-':\n                    op = exports.BinaryOperator.Minus;\n                    break;\n                case '*':\n                    op = exports.BinaryOperator.Multiply;\n                    break;\n                case '/':\n                    op = exports.BinaryOperator.Divide;\n                    break;\n                case '%':\n                    op = exports.BinaryOperator.Modulo;\n                    break;\n                case '&&':\n                    op = exports.BinaryOperator.And;\n                    break;\n                case '||':\n                    op = exports.BinaryOperator.Or;\n                    break;\n                case '==':\n                    op = exports.BinaryOperator.Equals;\n                    break;\n                case '!=':\n                    op = exports.BinaryOperator.NotEquals;\n                    break;\n                case '===':\n                    op = exports.BinaryOperator.Identical;\n                    break;\n                case '!==':\n                    op = exports.BinaryOperator.NotIdentical;\n                    break;\n                case '<':\n                    op = exports.BinaryOperator.Lower;\n                    break;\n                case '>':\n                    op = exports.BinaryOperator.Bigger;\n                    break;\n                case '<=':\n                    op = exports.BinaryOperator.LowerEquals;\n                    break;\n                case '>=':\n                    op = exports.BinaryOperator.BiggerEquals;\n                    break;\n                default:\n                    throw new Error(\"Unsupported operation \" + ast.operation);\n            }\n            return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n        };\n        _AstToIrVisitor.prototype.visitChain = function (ast, mode) {\n            ensureStatementMode(mode, ast);\n            return this.visitAll(ast.expressions, mode);\n        };\n        _AstToIrVisitor.prototype.visitConditional = function (ast, mode) {\n            var value = this._visit(ast.condition, _Mode.Expression);\n            return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n        };\n        _AstToIrVisitor.prototype.visitPipe = function (ast, mode) {\n            throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n        };\n        _AstToIrVisitor.prototype.visitFunctionCall = function (ast, mode) {\n            var convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n            var fnResult;\n            if (ast instanceof BuiltinFunctionCall) {\n                fnResult = ast.converter(convertedArgs);\n            }\n            else {\n                fnResult = this._visit(ast.target, _Mode.Expression).callFn(convertedArgs);\n            }\n            return convertToStatementIfNeeded(mode, fnResult);\n        };\n        _AstToIrVisitor.prototype.visitImplicitReceiver = function (ast, mode) {\n            ensureExpressionMode(mode, ast);\n            return this._implicitReceiver;\n        };\n        _AstToIrVisitor.prototype.visitInterpolation = function (ast, mode) {\n            ensureExpressionMode(mode, ast);\n            var args = [literal(ast.expressions.length)];\n            for (var i = 0; i < ast.strings.length - 1; i++) {\n                args.push(literal(ast.strings[i]));\n                args.push(this._visit(ast.expressions[i], _Mode.Expression));\n            }\n            args.push(literal(ast.strings[ast.strings.length - 1]));\n            if (this.interpolationFunction) {\n                return this.interpolationFunction(args);\n            }\n            return ast.expressions.length <= 9 ?\n                importExpr(Identifiers.inlineInterpolate).callFn(args) :\n                importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n        };\n        _AstToIrVisitor.prototype.visitKeyedRead = function (ast, mode) {\n            var leftMostSafe = this.leftMostSafeNode(ast);\n            if (leftMostSafe) {\n                return this.convertSafeAccess(ast, leftMostSafe, mode);\n            }\n            else {\n                return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n            }\n        };\n        _AstToIrVisitor.prototype.visitKeyedWrite = function (ast, mode) {\n            var obj = this._visit(ast.obj, _Mode.Expression);\n            var key = this._visit(ast.key, _Mode.Expression);\n            var value = this._visit(ast.value, _Mode.Expression);\n            return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n        };\n        _AstToIrVisitor.prototype.visitLiteralArray = function (ast, mode) {\n            throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n        };\n        _AstToIrVisitor.prototype.visitLiteralMap = function (ast, mode) {\n            throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n        };\n        _AstToIrVisitor.prototype.visitLiteralPrimitive = function (ast, mode) {\n            // For literal values of null, undefined, true, or false allow type interference\n            // to infer the type.\n            var type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n                INFERRED_TYPE :\n                undefined;\n            return convertToStatementIfNeeded(mode, literal(ast.value, type));\n        };\n        _AstToIrVisitor.prototype._getLocal = function (name) { return this._localResolver.getLocal(name); };\n        _AstToIrVisitor.prototype.visitMethodCall = function (ast, mode) {\n            if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n                var args = this.visitAll(ast.args, _Mode.Expression);\n                if (args.length != 1) {\n                    throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n                }\n                return args[0].cast(DYNAMIC_TYPE);\n            }\n            var leftMostSafe = this.leftMostSafeNode(ast);\n            if (leftMostSafe) {\n                return this.convertSafeAccess(ast, leftMostSafe, mode);\n            }\n            else {\n                var args = this.visitAll(ast.args, _Mode.Expression);\n                var result = null;\n                var receiver = this._visit(ast.receiver, _Mode.Expression);\n                if (receiver === this._implicitReceiver) {\n                    var varExpr = this._getLocal(ast.name);\n                    if (varExpr) {\n                        result = varExpr.callFn(args);\n                    }\n                }\n                if (result == null) {\n                    result = receiver.callMethod(ast.name, args);\n                }\n                return convertToStatementIfNeeded(mode, result);\n            }\n        };\n        _AstToIrVisitor.prototype.visitPrefixNot = function (ast, mode) {\n            return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n        };\n        _AstToIrVisitor.prototype.visitNonNullAssert = function (ast, mode) {\n            return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n        };\n        _AstToIrVisitor.prototype.visitPropertyRead = function (ast, mode) {\n            var leftMostSafe = this.leftMostSafeNode(ast);\n            if (leftMostSafe) {\n                return this.convertSafeAccess(ast, leftMostSafe, mode);\n            }\n            else {\n                var result = null;\n                var receiver = this._visit(ast.receiver, _Mode.Expression);\n                if (receiver === this._implicitReceiver) {\n                    result = this._getLocal(ast.name);\n                }\n                if (result == null) {\n                    result = receiver.prop(ast.name);\n                }\n                return convertToStatementIfNeeded(mode, result);\n            }\n        };\n        _AstToIrVisitor.prototype.visitPropertyWrite = function (ast, mode) {\n            var receiver = this._visit(ast.receiver, _Mode.Expression);\n            var varExpr = null;\n            if (receiver === this._implicitReceiver) {\n                var localExpr = this._getLocal(ast.name);\n                if (localExpr) {\n                    if (localExpr instanceof ReadPropExpr) {\n                        // If the local variable is a property read expression, it's a reference\n                        // to a 'context.property' value and will be used as the target of the\n                        // write expression.\n                        varExpr = localExpr;\n                    }\n                    else {\n                        // Otherwise it's an error.\n                        throw new Error('Cannot assign to a reference or variable!');\n                    }\n                }\n            }\n            // If no local expression could be produced, use the original receiver's\n            // property as the target.\n            if (varExpr === null) {\n                varExpr = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, varExpr.set(this._visit(ast.value, _Mode.Expression)));\n        };\n        _AstToIrVisitor.prototype.visitSafePropertyRead = function (ast, mode) {\n            return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n        };\n        _AstToIrVisitor.prototype.visitSafeMethodCall = function (ast, mode) {\n            return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n        };\n        _AstToIrVisitor.prototype.visitAll = function (asts, mode) {\n            var _this = this;\n            return asts.map(function (ast) { return _this._visit(ast, mode); });\n        };\n        _AstToIrVisitor.prototype.visitQuote = function (ast, mode) {\n            throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n        };\n        _AstToIrVisitor.prototype._visit = function (ast, mode) {\n            var result = this._resultMap.get(ast);\n            if (result)\n                return result;\n            return (this._nodeMap.get(ast) || ast).visit(this, mode);\n        };\n        _AstToIrVisitor.prototype.convertSafeAccess = function (ast, leftMostSafe, mode) {\n            // If the expression contains a safe access node on the left it needs to be converted to\n            // an expression that guards the access to the member by checking the receiver for blank. As\n            // execution proceeds from left to right, the left most part of the expression must be guarded\n            // first but, because member access is left associative, the right side of the expression is at\n            // the top of the AST. The desired result requires lifting a copy of the the left part of the\n            // expression up to test it for blank before generating the unguarded version.\n            // Consider, for example the following expression: a?.b.c?.d.e\n            // This results in the ast:\n            //         .\n            //        / \\\n            //       ?.   e\n            //      /  \\\n            //     .    d\n            //    / \\\n            //   ?.  c\n            //  /  \\\n            // a    b\n            // The following tree should be generated:\n            //\n            //        /---- ? ----\\\n            //       /      |      \\\n            //     a   /--- ? ---\\  null\n            //        /     |     \\\n            //       .      .     null\n            //      / \\    / \\\n            //     .  c   .   e\n            //    / \\    / \\\n            //   a   b  ,   d\n            //         / \\\n            //        .   c\n            //       / \\\n            //      a   b\n            //\n            // Notice that the first guard condition is the left hand of the left most safe access node\n            // which comes in as leftMostSafe to this routine.\n            var guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n            var temporary = undefined;\n            if (this.needsTemporary(leftMostSafe.receiver)) {\n                // If the expression has method calls or pipes then we need to save the result into a\n                // temporary variable to avoid calling stateful or impure code more than once.\n                temporary = this.allocateTemporary();\n                // Preserve the result in the temporary variable\n                guardedExpression = temporary.set(guardedExpression);\n                // Ensure all further references to the guarded expression refer to the temporary instead.\n                this._resultMap.set(leftMostSafe.receiver, temporary);\n            }\n            var condition = guardedExpression.isBlank();\n            // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n            // leftMostNode with its unguarded version in the call to `this.visit()`.\n            if (leftMostSafe instanceof SafeMethodCall) {\n                this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n            }\n            else {\n                this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n            }\n            // Recursively convert the node now without the guarded member access.\n            var access = this._visit(ast, _Mode.Expression);\n            // Remove the mapping. This is not strictly required as the converter only traverses each node\n            // once but is safer if the conversion is changed to traverse the nodes more than once.\n            this._nodeMap.delete(leftMostSafe);\n            // If we allocated a temporary, release it.\n            if (temporary) {\n                this.releaseTemporary(temporary);\n            }\n            // Produce the conditional\n            return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n        };\n        // Given a expression of the form a?.b.c?.d.e the the left most safe node is\n        // the (a?.b). The . and ?. are left associative thus can be rewritten as:\n        // ((((a?.c).b).c)?.d).e. This returns the most deeply nested safe read or\n        // safe method call as this needs be transform initially to:\n        //   a == null ? null : a.c.b.c?.d.e\n        // then to:\n        //   a == null ? null : a.b.c == null ? null : a.b.c.d.e\n        _AstToIrVisitor.prototype.leftMostSafeNode = function (ast) {\n            var _this = this;\n            var visit = function (visitor, ast) {\n                return (_this._nodeMap.get(ast) || ast).visit(visitor);\n            };\n            return ast.visit({\n                visitBinary: function (ast) { return null; },\n                visitChain: function (ast) { return null; },\n                visitConditional: function (ast) { return null; },\n                visitFunctionCall: function (ast) { return null; },\n                visitImplicitReceiver: function (ast) { return null; },\n                visitInterpolation: function (ast) { return null; },\n                visitKeyedRead: function (ast) { return visit(this, ast.obj); },\n                visitKeyedWrite: function (ast) { return null; },\n                visitLiteralArray: function (ast) { return null; },\n                visitLiteralMap: function (ast) { return null; },\n                visitLiteralPrimitive: function (ast) { return null; },\n                visitMethodCall: function (ast) { return visit(this, ast.receiver); },\n                visitPipe: function (ast) { return null; },\n                visitPrefixNot: function (ast) { return null; },\n                visitNonNullAssert: function (ast) { return null; },\n                visitPropertyRead: function (ast) { return visit(this, ast.receiver); },\n                visitPropertyWrite: function (ast) { return null; },\n                visitQuote: function (ast) { return null; },\n                visitSafeMethodCall: function (ast) { return visit(this, ast.receiver) || ast; },\n                visitSafePropertyRead: function (ast) {\n                    return visit(this, ast.receiver) || ast;\n                }\n            });\n        };\n        // Returns true of the AST includes a method or a pipe indicating that, if the\n        // expression is used as the target of a safe property or method access then\n        // the expression should be stored into a temporary variable.\n        _AstToIrVisitor.prototype.needsTemporary = function (ast) {\n            var _this = this;\n            var visit = function (visitor, ast) {\n                return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n            };\n            var visitSome = function (visitor, ast) {\n                return ast.some(function (ast) { return visit(visitor, ast); });\n            };\n            return ast.visit({\n                visitBinary: function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n                visitChain: function (ast) { return false; },\n                visitConditional: function (ast) {\n                    return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                        visit(this, ast.falseExp);\n                },\n                visitFunctionCall: function (ast) { return true; },\n                visitImplicitReceiver: function (ast) { return false; },\n                visitInterpolation: function (ast) { return visitSome(this, ast.expressions); },\n                visitKeyedRead: function (ast) { return false; },\n                visitKeyedWrite: function (ast) { return false; },\n                visitLiteralArray: function (ast) { return true; },\n                visitLiteralMap: function (ast) { return true; },\n                visitLiteralPrimitive: function (ast) { return false; },\n                visitMethodCall: function (ast) { return true; },\n                visitPipe: function (ast) { return true; },\n                visitPrefixNot: function (ast) { return visit(this, ast.expression); },\n                visitNonNullAssert: function (ast) { return visit(this, ast.expression); },\n                visitPropertyRead: function (ast) { return false; },\n                visitPropertyWrite: function (ast) { return false; },\n                visitQuote: function (ast) { return false; },\n                visitSafeMethodCall: function (ast) { return true; },\n                visitSafePropertyRead: function (ast) { return false; }\n            });\n        };\n        _AstToIrVisitor.prototype.allocateTemporary = function () {\n            var tempNumber = this._currentTemporary++;\n            this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n            return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n        };\n        _AstToIrVisitor.prototype.releaseTemporary = function (temporary) {\n            this._currentTemporary--;\n            if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n                throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n            }\n        };\n        return _AstToIrVisitor;\n    }());\n    function flattenStatements(arg, output) {\n        if (Array.isArray(arg)) {\n            arg.forEach(function (entry) { return flattenStatements(entry, output); });\n        }\n        else {\n            output.push(arg);\n        }\n    }\n    var DefaultLocalResolver = /** @class */ (function () {\n        function DefaultLocalResolver() {\n        }\n        DefaultLocalResolver.prototype.getLocal = function (name) {\n            if (name === EventHandlerVars.event.name) {\n                return EventHandlerVars.event;\n            }\n            return null;\n        };\n        return DefaultLocalResolver;\n    }());\n    function createCurrValueExpr(bindingId) {\n        return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n    }\n    function createPreventDefaultVar(bindingId) {\n        return variable(\"pd_\" + bindingId);\n    }\n    function convertStmtIntoExpression(stmt) {\n        if (stmt instanceof ExpressionStatement) {\n            return stmt.expr;\n        }\n        else if (stmt instanceof ReturnStatement) {\n            return stmt.value;\n        }\n        return null;\n    }\n    var BuiltinFunctionCall = /** @class */ (function (_super) {\n        __extends(BuiltinFunctionCall, _super);\n        function BuiltinFunctionCall(span, args, converter) {\n            var _this = _super.call(this, span, null, args) || this;\n            _this.args = args;\n            _this.converter = converter;\n            return _this;\n        }\n        return BuiltinFunctionCall;\n    }(FunctionCall));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LifecycleHooks;\n    (function (LifecycleHooks) {\n        LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n        LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n        LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n        LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n        LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n    })(LifecycleHooks || (LifecycleHooks = {}));\n    var LIFECYCLE_HOOKS_VALUES = [\n        LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n        LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n        LifecycleHooks.AfterViewChecked\n    ];\n    function hasLifecycleHook(reflector, hook, token) {\n        return reflector.hasLifecycleHook(token, getHookName(hook));\n    }\n    function getAllLifecycleHooks(reflector, token) {\n        return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n    }\n    function getHookName(hook) {\n        switch (hook) {\n            case LifecycleHooks.OnInit:\n                return 'ngOnInit';\n            case LifecycleHooks.OnDestroy:\n                return 'ngOnDestroy';\n            case LifecycleHooks.DoCheck:\n                return 'ngDoCheck';\n            case LifecycleHooks.OnChanges:\n                return 'ngOnChanges';\n            case LifecycleHooks.AfterContentInit:\n                return 'ngAfterContentInit';\n            case LifecycleHooks.AfterContentChecked:\n                return 'ngAfterContentChecked';\n            case LifecycleHooks.AfterViewInit:\n                return 'ngAfterViewInit';\n            case LifecycleHooks.AfterViewChecked:\n                return 'ngAfterViewChecked';\n            default:\n                // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n                // However Closure Compiler does not understand that and reports an error in typed mode.\n                // The `throw new Error` below works around the problem, and the unexpected: never variable\n                // makes sure tsc still checks this code is unreachable.\n                var unexpected = hook;\n                throw new Error(\"unexpected \" + unexpected);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var $EOF = 0;\n    var $TAB = 9;\n    var $LF = 10;\n    var $VTAB = 11;\n    var $FF = 12;\n    var $CR = 13;\n    var $SPACE = 32;\n    var $BANG = 33;\n    var $DQ = 34;\n    var $HASH = 35;\n    var $$ = 36;\n    var $PERCENT = 37;\n    var $AMPERSAND = 38;\n    var $SQ = 39;\n    var $LPAREN = 40;\n    var $RPAREN = 41;\n    var $STAR = 42;\n    var $PLUS = 43;\n    var $COMMA = 44;\n    var $MINUS = 45;\n    var $PERIOD = 46;\n    var $SLASH = 47;\n    var $COLON = 58;\n    var $SEMICOLON = 59;\n    var $LT = 60;\n    var $EQ = 61;\n    var $GT = 62;\n    var $QUESTION = 63;\n    var $0 = 48;\n    var $9 = 57;\n    var $A = 65;\n    var $E = 69;\n    var $F = 70;\n    var $X = 88;\n    var $Z = 90;\n    var $LBRACKET = 91;\n    var $BACKSLASH = 92;\n    var $RBRACKET = 93;\n    var $CARET = 94;\n    var $_ = 95;\n    var $a = 97;\n    var $e = 101;\n    var $f = 102;\n    var $n = 110;\n    var $r = 114;\n    var $t = 116;\n    var $u = 117;\n    var $v = 118;\n    var $x = 120;\n    var $z = 122;\n    var $LBRACE = 123;\n    var $BAR = 124;\n    var $RBRACE = 125;\n    var $NBSP = 160;\n    var $BT = 96;\n    function isWhitespace(code) {\n        return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n    }\n    function isDigit(code) {\n        return $0 <= code && code <= $9;\n    }\n    function isAsciiLetter(code) {\n        return code >= $a && code <= $z || code >= $A && code <= $Z;\n    }\n    function isAsciiHexDigit(code) {\n        return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ParseLocation = /** @class */ (function () {\n        function ParseLocation(file, offset, line, col) {\n            this.file = file;\n            this.offset = offset;\n            this.line = line;\n            this.col = col;\n        }\n        ParseLocation.prototype.toString = function () {\n            return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n        };\n        ParseLocation.prototype.moveBy = function (delta) {\n            var source = this.file.content;\n            var len = source.length;\n            var offset = this.offset;\n            var line = this.line;\n            var col = this.col;\n            while (offset > 0 && delta < 0) {\n                offset--;\n                delta++;\n                var ch = source.charCodeAt(offset);\n                if (ch == $LF) {\n                    line--;\n                    var priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                    col = priorLine > 0 ? offset - priorLine : offset;\n                }\n                else {\n                    col--;\n                }\n            }\n            while (offset < len && delta > 0) {\n                var ch = source.charCodeAt(offset);\n                offset++;\n                delta--;\n                if (ch == $LF) {\n                    line++;\n                    col = 0;\n                }\n                else {\n                    col++;\n                }\n            }\n            return new ParseLocation(this.file, offset, line, col);\n        };\n        // Return the source around the location\n        // Up to `maxChars` or `maxLines` on each side of the location\n        ParseLocation.prototype.getContext = function (maxChars, maxLines) {\n            var content = this.file.content;\n            var startOffset = this.offset;\n            if (startOffset != null) {\n                if (startOffset > content.length - 1) {\n                    startOffset = content.length - 1;\n                }\n                var endOffset = startOffset;\n                var ctxChars = 0;\n                var ctxLines = 0;\n                while (ctxChars < maxChars && startOffset > 0) {\n                    startOffset--;\n                    ctxChars++;\n                    if (content[startOffset] == '\\n') {\n                        if (++ctxLines == maxLines) {\n                            break;\n                        }\n                    }\n                }\n                ctxChars = 0;\n                ctxLines = 0;\n                while (ctxChars < maxChars && endOffset < content.length - 1) {\n                    endOffset++;\n                    ctxChars++;\n                    if (content[endOffset] == '\\n') {\n                        if (++ctxLines == maxLines) {\n                            break;\n                        }\n                    }\n                }\n                return {\n                    before: content.substring(startOffset, this.offset),\n                    after: content.substring(this.offset, endOffset + 1),\n                };\n            }\n            return null;\n        };\n        return ParseLocation;\n    }());\n    var ParseSourceFile = /** @class */ (function () {\n        function ParseSourceFile(content, url) {\n            this.content = content;\n            this.url = url;\n        }\n        return ParseSourceFile;\n    }());\n    var ParseSourceSpan = /** @class */ (function () {\n        function ParseSourceSpan(start, end, details) {\n            if (details === void 0) { details = null; }\n            this.start = start;\n            this.end = end;\n            this.details = details;\n        }\n        ParseSourceSpan.prototype.toString = function () {\n            return this.start.file.content.substring(this.start.offset, this.end.offset);\n        };\n        return ParseSourceSpan;\n    }());\n    (function (ParseErrorLevel) {\n        ParseErrorLevel[ParseErrorLevel[\"WARNING\"] = 0] = \"WARNING\";\n        ParseErrorLevel[ParseErrorLevel[\"ERROR\"] = 1] = \"ERROR\";\n    })(exports.ParseErrorLevel || (exports.ParseErrorLevel = {}));\n    var ParseError = /** @class */ (function () {\n        function ParseError(span, msg, level) {\n            if (level === void 0) { level = exports.ParseErrorLevel.ERROR; }\n            this.span = span;\n            this.msg = msg;\n            this.level = level;\n        }\n        ParseError.prototype.contextualMessage = function () {\n            var ctx = this.span.start.getContext(100, 3);\n            return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + exports.ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n                this.msg;\n        };\n        ParseError.prototype.toString = function () {\n            var details = this.span.details ? \", \" + this.span.details : '';\n            return this.contextualMessage() + \": \" + this.span.start + details;\n        };\n        return ParseError;\n    }());\n    function typeSourceSpan(kind, type) {\n        var moduleUrl = identifierModuleUrl(type);\n        var sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n            \"in \" + kind + \" \" + identifierName(type);\n        var sourceFile = new ParseSourceFile('', sourceFileName);\n        return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n     *\n     * Please make sure to keep to edits in sync with the source file.\n     *\n     * Source:\n     * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n     *\n     * The original file level comment is reproduced below\n     */\n    /*\n      This is a limited shim for ShadowDOM css styling.\n      https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n      The intention here is to support only the styling features which can be\n      relatively simply implemented. The goal is to allow users to avoid the\n      most obvious pitfalls and do so without compromising performance significantly.\n      For ShadowDOM styling that's not covered here, a set of best practices\n      can be provided that should allow users to accomplish more complex styling.\n\n      The following is a list of specific ShadowDOM styling features and a brief\n      discussion of the approach used to shim.\n\n      Shimmed features:\n\n      * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n      element using the :host rule. To shim this feature, the :host styles are\n      reformatted and prefixed with a given scope name and promoted to a\n      document level stylesheet.\n      For example, given a scope name of .foo, a rule like this:\n\n        :host {\n            background: red;\n          }\n        }\n\n      becomes:\n\n        .foo {\n          background: red;\n        }\n\n      * encapsulation: Styles defined within ShadowDOM, apply only to\n      dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n      this feature.\n\n      By default, rules are prefixed with the host element tag name\n      as a descendant selector. This ensures styling does not leak out of the 'top'\n      of the element's ShadowDOM. For example,\n\n      div {\n          font-weight: bold;\n        }\n\n      becomes:\n\n      x-foo div {\n          font-weight: bold;\n        }\n\n      becomes:\n\n\n      Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n      selectors are scoped by adding an attribute selector suffix to each\n      simple selector that contains the host element tag name. Each element\n      in the element's ShadowDOM template is also given the scope attribute.\n      Thus, these rules match only elements that have the scope attribute.\n      For example, given a scope name of x-foo, a rule like this:\n\n        div {\n          font-weight: bold;\n        }\n\n      becomes:\n\n        div[x-foo] {\n          font-weight: bold;\n        }\n\n      Note that elements that are dynamically added to a scope must have the scope\n      selector added to them manually.\n\n      * upper/lower bound encapsulation: Styles which are defined outside a\n      shadowRoot should not cross the ShadowDOM boundary and should not apply\n      inside a shadowRoot.\n\n      This styling behavior is not emulated. Some possible ways to do this that\n      were rejected due to complexity and/or performance concerns include: (1) reset\n      every possible property for every possible selector for a given scope name;\n      (2) re-implement css in javascript.\n\n      As an alternative, users should make sure to use selectors\n      specific to the scope in which they are working.\n\n      * ::distributed: This behavior is not emulated. It's often not necessary\n      to style the contents of a specific insertion point and instead, descendants\n      of the host element can be styled selectively. Users can also create an\n      extra node around an insertion point and style that node's contents\n      via descendent selectors. For example, with a shadowRoot like this:\n\n        <style>\n          ::content(div) {\n            background: red;\n          }\n        </style>\n        <content></content>\n\n      could become:\n\n        <style>\n          / *@polyfill .content-container div * /\n          ::content(div) {\n            background: red;\n          }\n        </style>\n        <div class=\"content-container\">\n          <content></content>\n        </div>\n\n      Note the use of @polyfill in the comment above a ShadowDOM specific style\n      declaration. This is a directive to the styling shim to use the selector\n      in comments in lieu of the next selector when running under polyfill.\n    */\n    var ShadowCss = /** @class */ (function () {\n        function ShadowCss() {\n            this.strictStyling = true;\n        }\n        /*\n        * Shim some cssText with the given selector. Returns cssText that can\n        * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n        *\n        * When strictStyling is true:\n        * - selector is the attribute added to all elements inside the host,\n        * - hostSelector is the attribute added to the host itself.\n        */\n        ShadowCss.prototype.shimCssText = function (cssText, selector, hostSelector) {\n            if (hostSelector === void 0) { hostSelector = ''; }\n            var commentsWithHash = extractCommentsWithHash(cssText);\n            cssText = stripComments(cssText);\n            cssText = this._insertDirectives(cssText);\n            var scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n            return __spread([scopedCssText], commentsWithHash).join('\\n');\n        };\n        ShadowCss.prototype._insertDirectives = function (cssText) {\n            cssText = this._insertPolyfillDirectivesInCssText(cssText);\n            return this._insertPolyfillRulesInCssText(cssText);\n        };\n        /*\n         * Process styles to convert native ShadowDOM rules that will trip\n         * up the css parser; we rely on decorating the stylesheet with inert rules.\n         *\n         * For example, we convert this rule:\n         *\n         * polyfill-next-selector { content: ':host menu-item'; }\n         * ::content menu-item {\n         *\n         * to this:\n         *\n         * scopeName menu-item {\n         *\n        **/\n        ShadowCss.prototype._insertPolyfillDirectivesInCssText = function (cssText) {\n            // Difference with webcomponents.js: does not handle comments\n            return cssText.replace(_cssContentNextSelectorRe, function () {\n                var m = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    m[_i] = arguments[_i];\n                }\n                return m[2] + '{';\n            });\n        };\n        /*\n         * Process styles to add rules which will only apply under the polyfill\n         *\n         * For example, we convert this rule:\n         *\n         * polyfill-rule {\n         *   content: ':host menu-item';\n         * ...\n         * }\n         *\n         * to this:\n         *\n         * scopeName menu-item {...}\n         *\n        **/\n        ShadowCss.prototype._insertPolyfillRulesInCssText = function (cssText) {\n            // Difference with webcomponents.js: does not handle comments\n            return cssText.replace(_cssContentRuleRe, function () {\n                var m = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    m[_i] = arguments[_i];\n                }\n                var rule = m[0].replace(m[1], '').replace(m[2], '');\n                return m[4] + rule;\n            });\n        };\n        /* Ensure styles are scoped. Pseudo-scoping takes a rule like:\n         *\n         *  .foo {... }\n         *\n         *  and converts this to\n         *\n         *  scopeName .foo { ... }\n        */\n        ShadowCss.prototype._scopeCssText = function (cssText, scopeSelector, hostSelector) {\n            var unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n            // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n            cssText = this._insertPolyfillHostInCssText(cssText);\n            cssText = this._convertColonHost(cssText);\n            cssText = this._convertColonHostContext(cssText);\n            cssText = this._convertShadowDOMSelectors(cssText);\n            if (scopeSelector) {\n                cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n            }\n            cssText = cssText + '\\n' + unscopedRules;\n            return cssText.trim();\n        };\n        /*\n         * Process styles to add rules which will only apply under the polyfill\n         * and do not process via CSSOM. (CSSOM is destructive to rules on rare\n         * occasions, e.g. -webkit-calc on Safari.)\n         * For example, we convert this rule:\n         *\n         * @polyfill-unscoped-rule {\n         *   content: 'menu-item';\n         * ... }\n         *\n         * to this:\n         *\n         * menu-item {...}\n         *\n        **/\n        ShadowCss.prototype._extractUnscopedRulesFromCssText = function (cssText) {\n            // Difference with webcomponents.js: does not handle comments\n            var r = '';\n            var m;\n            _cssContentUnscopedRuleRe.lastIndex = 0;\n            while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n                var rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n                r += rule + '\\n\\n';\n            }\n            return r;\n        };\n        /*\n         * convert a rule like :host(.foo) > .bar { }\n         *\n         * to\n         *\n         * .foo<scopeName> > .bar\n        */\n        ShadowCss.prototype._convertColonHost = function (cssText) {\n            return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n        };\n        /*\n         * convert a rule like :host-context(.foo) > .bar { }\n         *\n         * to\n         *\n         * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n         *\n         * and\n         *\n         * :host-context(.foo:host) .bar { ... }\n         *\n         * to\n         *\n         * .foo<scopeName> .bar { ... }\n        */\n        ShadowCss.prototype._convertColonHostContext = function (cssText) {\n            return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n        };\n        ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n            // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n            return cssText.replace(regExp, function () {\n                var m = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    m[_i] = arguments[_i];\n                }\n                if (m[2]) {\n                    var parts = m[2].split(',');\n                    var r = [];\n                    for (var i = 0; i < parts.length; i++) {\n                        var p = parts[i].trim();\n                        if (!p)\n                            break;\n                        r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                    }\n                    return r.join(',');\n                }\n                else {\n                    return _polyfillHostNoCombinator + m[3];\n                }\n            });\n        };\n        ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n            if (part.indexOf(_polyfillHost) > -1) {\n                return this._colonHostPartReplacer(host, part, suffix);\n            }\n            else {\n                return host + part + suffix + ', ' + part + ' ' + host + suffix;\n            }\n        };\n        ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n            return host + part.replace(_polyfillHost, '') + suffix;\n        };\n        /*\n         * Convert combinators like ::shadow and pseudo-elements like ::content\n         * by replacing with space.\n        */\n        ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n            return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n        };\n        // change a selector like 'div' to 'name div'\n        ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector) {\n            var _this = this;\n            return processRules(cssText, function (rule) {\n                var selector = rule.selector;\n                var content = rule.content;\n                if (rule.selector[0] != '@') {\n                    selector =\n                        _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n                }\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                    content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n                }\n                return new CssRule(selector, content);\n            });\n        };\n        ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, strict) {\n            var _this = this;\n            return selector.split(',')\n                .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n                .map(function (deepParts) {\n                var _a = __read(deepParts), shallowPart = _a[0], otherParts = _a.slice(1);\n                var applyScope = function (shallowPart) {\n                    if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                        return strict ?\n                            _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                            _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                    }\n                    else {\n                        return shallowPart;\n                    }\n                };\n                return __spread([applyScope(shallowPart)], otherParts).join(' ');\n            })\n                .join(', ');\n        };\n        ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n            var re = this._makeScopeMatcher(scopeSelector);\n            return !re.test(selector);\n        };\n        ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n            var lre = /\\[/g;\n            var rre = /\\]/g;\n            scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n            return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n        };\n        ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n            // Difference from webcomponents.js: scopeSelector could not be an array\n            return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n        };\n        // scope via name and [is=name]\n        ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n            // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n            _polyfillHostRe.lastIndex = 0;\n            if (_polyfillHostRe.test(selector)) {\n                var replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n                return selector\n                    .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                    return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                        return before + replaceBy_1 + colon + after;\n                    });\n                })\n                    .replace(_polyfillHostRe, replaceBy_1 + ' ');\n            }\n            return scopeSelector + ' ' + selector;\n        };\n        // return a selector with [name] suffix on each simple selector\n        // e.g. .foo.bar > .zot becomes .foo[name].bar[name] > .zot[name]  /** @internal */\n        ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n            var _this = this;\n            var isRe = /\\[is=([^\\]]*)\\]/g;\n            scopeSelector = scopeSelector.replace(isRe, function (_) {\n                var parts = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    parts[_i - 1] = arguments[_i];\n                }\n                return parts[0];\n            });\n            var attrName = '[' + scopeSelector + ']';\n            var _scopeSelectorPart = function (p) {\n                var scopedP = p.trim();\n                if (!scopedP) {\n                    return '';\n                }\n                if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                    scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n                }\n                else {\n                    // remove :host since it should be unnecessary\n                    var t = p.replace(_polyfillHostRe, '');\n                    if (t.length > 0) {\n                        var matches = t.match(/([^:]*)(:*)(.*)/);\n                        if (matches) {\n                            scopedP = matches[1] + attrName + matches[2] + matches[3];\n                        }\n                    }\n                }\n                return scopedP;\n            };\n            var safeContent = new SafeSelector(selector);\n            selector = safeContent.content();\n            var scopedSelector = '';\n            var startIndex = 0;\n            var res;\n            var sep = /( |>|\\+|~(?!=))\\s*/g;\n            // If a selector appears before :host it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            // `:host-context(div)` is transformed to\n            // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n            // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n            // Historically `component-tag:host` was matching the component so we also want to preserve\n            // this behavior to avoid breaking legacy apps (it should not match).\n            // The behavior should be:\n            // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n            // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n            //   `:host-context(tag)`)\n            var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n            // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n            var shouldScope = !hasHost;\n            while ((res = sep.exec(selector)) !== null) {\n                var separator = res[1];\n                var part_1 = selector.slice(startIndex, res.index).trim();\n                shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n                var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n                scopedSelector += scopedPart + \" \" + separator + \" \";\n                startIndex = sep.lastIndex;\n            }\n            var part = selector.substring(startIndex);\n            shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n            scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n            // replace the placeholders with their original values\n            return safeContent.restore(scopedSelector);\n        };\n        ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n            return selector.replace(_colonHostContextRe, _polyfillHostContext)\n                .replace(_colonHostRe, _polyfillHost);\n        };\n        return ShadowCss;\n    }());\n    var SafeSelector = /** @class */ (function () {\n        function SafeSelector(selector) {\n            var _this = this;\n            this.placeholders = [];\n            this.index = 0;\n            // Replaces attribute selectors with placeholders.\n            // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n            selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n                var replaceBy = \"__ph-\" + _this.index + \"__\";\n                _this.placeholders.push(keep);\n                _this.index++;\n                return replaceBy;\n            });\n            // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n            // WS and \"+\" would otherwise be interpreted as selector separators.\n            this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n                var replaceBy = \"__ph-\" + _this.index + \"__\";\n                _this.placeholders.push(exp);\n                _this.index++;\n                return pseudo + replaceBy;\n            });\n        }\n        SafeSelector.prototype.restore = function (content) {\n            var _this = this;\n            return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n        };\n        SafeSelector.prototype.content = function () { return this._content; };\n        return SafeSelector;\n    }());\n    var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\n    var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n    var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\n    var _polyfillHost = '-shadowcsshost';\n    // note: :host-context pre-processed to -shadowcsshostcontext.\n    var _polyfillHostContext = '-shadowcsscontext';\n    var _parenSuffix = ')(?:\\\\((' +\n        '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n        ')\\\\))?([^,{]*)';\n    var _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n    var _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n    var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n    var _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\n    var _shadowDOMSelectorsRe = [\n        /::shadow/g,\n        /::content/g,\n        // Deprecated selectors\n        /\\/shadow-deep\\//g,\n        /\\/shadow\\//g,\n    ];\n    // The deep combinator is deprecated in the CSS spec\n    // Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n    // see https://github.com/angular/angular/pull/17677\n    var _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\n    var _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\n    var _polyfillHostRe = /-shadowcsshost/gim;\n    var _colonHostRe = /:host/gim;\n    var _colonHostContextRe = /:host-context/gim;\n    var _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n    function stripComments(input) {\n        return input.replace(_commentRe, '');\n    }\n    var _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n    function extractCommentsWithHash(input) {\n        return input.match(_commentWithHashRe) || [];\n    }\n    var _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\n    var _curlyRe = /([{}])/g;\n    var OPEN_CURLY = '{';\n    var CLOSE_CURLY = '}';\n    var BLOCK_PLACEHOLDER = '%BLOCK%';\n    var CssRule = /** @class */ (function () {\n        function CssRule(selector, content) {\n            this.selector = selector;\n            this.content = content;\n        }\n        return CssRule;\n    }());\n    function processRules(input, ruleCallback) {\n        var inputWithEscapedBlocks = escapeBlocks(input);\n        var nextBlockIndex = 0;\n        return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var selector = m[2];\n            var content = '';\n            var suffix = m[4];\n            var contentPrefix = '';\n            if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n                content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n                suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n                contentPrefix = '{';\n            }\n            var rule = ruleCallback(new CssRule(selector, content));\n            return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n        });\n    }\n    var StringWithEscapedBlocks = /** @class */ (function () {\n        function StringWithEscapedBlocks(escapedString, blocks) {\n            this.escapedString = escapedString;\n            this.blocks = blocks;\n        }\n        return StringWithEscapedBlocks;\n    }());\n    function escapeBlocks(input) {\n        var inputParts = input.split(_curlyRe);\n        var resultParts = [];\n        var escapedBlocks = [];\n        var bracketCount = 0;\n        var currentBlockParts = [];\n        for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n            var part = inputParts[partIndex];\n            if (part == CLOSE_CURLY) {\n                bracketCount--;\n            }\n            if (bracketCount > 0) {\n                currentBlockParts.push(part);\n            }\n            else {\n                if (currentBlockParts.length > 0) {\n                    escapedBlocks.push(currentBlockParts.join(''));\n                    resultParts.push(BLOCK_PLACEHOLDER);\n                    currentBlockParts = [];\n                }\n                resultParts.push(part);\n            }\n            if (part == OPEN_CURLY) {\n                bracketCount++;\n            }\n        }\n        if (currentBlockParts.length > 0) {\n            escapedBlocks.push(currentBlockParts.join(''));\n            resultParts.push(BLOCK_PLACEHOLDER);\n        }\n        return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_VARIABLE = '%COMP%';\n    var HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\n    var CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n    var StylesCompileDependency = /** @class */ (function () {\n        function StylesCompileDependency(name, moduleUrl, setValue) {\n            this.name = name;\n            this.moduleUrl = moduleUrl;\n            this.setValue = setValue;\n        }\n        return StylesCompileDependency;\n    }());\n    var CompiledStylesheet = /** @class */ (function () {\n        function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n            this.outputCtx = outputCtx;\n            this.stylesVar = stylesVar;\n            this.dependencies = dependencies;\n            this.isShimmed = isShimmed;\n            this.meta = meta;\n        }\n        return CompiledStylesheet;\n    }());\n    var StyleCompiler = /** @class */ (function () {\n        function StyleCompiler(_urlResolver) {\n            this._urlResolver = _urlResolver;\n            this._shadowCss = new ShadowCss();\n        }\n        StyleCompiler.prototype.compileComponent = function (outputCtx, comp) {\n            var template = comp.template;\n            return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                moduleUrl: identifierModuleUrl(comp.type)\n            }), this.needsStyleShim(comp), true);\n        };\n        StyleCompiler.prototype.compileStyles = function (outputCtx, comp, stylesheet, shim) {\n            if (shim === void 0) { shim = this.needsStyleShim(comp); }\n            return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n        };\n        StyleCompiler.prototype.needsStyleShim = function (comp) {\n            return comp.template.encapsulation === ViewEncapsulation.Emulated;\n        };\n        StyleCompiler.prototype._compileStyles = function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n            var _this = this;\n            var styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n            var dependencies = [];\n            stylesheet.styleUrls.forEach(function (styleUrl) {\n                var exprIndex = styleExpressions.length;\n                // Note: This placeholder will be filled later.\n                styleExpressions.push(null);\n                dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n            });\n            // styles variable contains plain strings and arrays of other styles arrays (recursive),\n            // so we set its type to dynamic.\n            var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n            var stmt = variable(stylesVar)\n                .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n                .toDeclStmt(null, isComponentStylesheet ? [exports.StmtModifier.Final] : [\n                exports.StmtModifier.Final, exports.StmtModifier.Exported\n            ]);\n            outputCtx.statements.push(stmt);\n            return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n        };\n        StyleCompiler.prototype._shimIfNeeded = function (style, shim) {\n            return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n        };\n        return StyleCompiler;\n    }());\n    function getStylesVarName(component) {\n        var result = \"styles\";\n        if (component) {\n            result += \"_\" + identifierName(component.type);\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Text$2 = /** @class */ (function () {\n        function Text(value, sourceSpan) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        Text.prototype.visit = function (visitor) { return visitor.visitText(this); };\n        return Text;\n    }());\n    var BoundText = /** @class */ (function () {\n        function BoundText(value, sourceSpan, i18n) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n            this.i18n = i18n;\n        }\n        BoundText.prototype.visit = function (visitor) { return visitor.visitBoundText(this); };\n        return BoundText;\n    }());\n    var TextAttribute = /** @class */ (function () {\n        function TextAttribute(name, value, sourceSpan, valueSpan, i18n) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n            this.valueSpan = valueSpan;\n            this.i18n = i18n;\n        }\n        TextAttribute.prototype.visit = function (visitor) { return visitor.visitTextAttribute(this); };\n        return TextAttribute;\n    }());\n    var BoundAttribute = /** @class */ (function () {\n        function BoundAttribute(name, type, securityContext, value, unit, sourceSpan, i18n) {\n            this.name = name;\n            this.type = type;\n            this.securityContext = securityContext;\n            this.value = value;\n            this.unit = unit;\n            this.sourceSpan = sourceSpan;\n            this.i18n = i18n;\n        }\n        BoundAttribute.fromBoundElementProperty = function (prop, i18n) {\n            return new BoundAttribute(prop.name, prop.type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan, i18n);\n        };\n        BoundAttribute.prototype.visit = function (visitor) { return visitor.visitBoundAttribute(this); };\n        return BoundAttribute;\n    }());\n    var BoundEvent = /** @class */ (function () {\n        function BoundEvent(name, type, handler, target, phase, sourceSpan) {\n            this.name = name;\n            this.type = type;\n            this.handler = handler;\n            this.target = target;\n            this.phase = phase;\n            this.sourceSpan = sourceSpan;\n        }\n        BoundEvent.fromParsedEvent = function (event) {\n            var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n            var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n            return new BoundEvent(event.name, event.type, event.handler, target, phase, event.sourceSpan);\n        };\n        BoundEvent.prototype.visit = function (visitor) { return visitor.visitBoundEvent(this); };\n        return BoundEvent;\n    }());\n    var Element = /** @class */ (function () {\n        function Element(name, attributes, inputs, outputs, children, references, sourceSpan, startSourceSpan, endSourceSpan, i18n) {\n            this.name = name;\n            this.attributes = attributes;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.children = children;\n            this.references = references;\n            this.sourceSpan = sourceSpan;\n            this.startSourceSpan = startSourceSpan;\n            this.endSourceSpan = endSourceSpan;\n            this.i18n = i18n;\n        }\n        Element.prototype.visit = function (visitor) { return visitor.visitElement(this); };\n        return Element;\n    }());\n    var Template = /** @class */ (function () {\n        function Template(tagName, attributes, inputs, outputs, children, references, variables, sourceSpan, startSourceSpan, endSourceSpan, i18n) {\n            this.tagName = tagName;\n            this.attributes = attributes;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.children = children;\n            this.references = references;\n            this.variables = variables;\n            this.sourceSpan = sourceSpan;\n            this.startSourceSpan = startSourceSpan;\n            this.endSourceSpan = endSourceSpan;\n            this.i18n = i18n;\n        }\n        Template.prototype.visit = function (visitor) { return visitor.visitTemplate(this); };\n        return Template;\n    }());\n    var Content = /** @class */ (function () {\n        function Content(selector, attributes, sourceSpan, i18n) {\n            this.selector = selector;\n            this.attributes = attributes;\n            this.sourceSpan = sourceSpan;\n            this.i18n = i18n;\n        }\n        Content.prototype.visit = function (visitor) { return visitor.visitContent(this); };\n        return Content;\n    }());\n    var Variable = /** @class */ (function () {\n        function Variable(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        Variable.prototype.visit = function (visitor) { return visitor.visitVariable(this); };\n        return Variable;\n    }());\n    var Reference = /** @class */ (function () {\n        function Reference(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        Reference.prototype.visit = function (visitor) { return visitor.visitReference(this); };\n        return Reference;\n    }());\n    var Icu$1 = /** @class */ (function () {\n        function Icu(vars, placeholders, sourceSpan, i18n) {\n            this.vars = vars;\n            this.placeholders = placeholders;\n            this.sourceSpan = sourceSpan;\n            this.i18n = i18n;\n        }\n        Icu.prototype.visit = function (visitor) { return visitor.visitIcu(this); };\n        return Icu;\n    }());\n    function visitAll(visitor, nodes) {\n        var e_1, _a, e_2, _b;\n        var result = [];\n        if (visitor.visit) {\n            try {\n                for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {\n                    var node = nodes_1_1.value;\n                    var newNode = visitor.visit(node) || node.visit(visitor);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        else {\n            try {\n                for (var nodes_2 = __values(nodes), nodes_2_1 = nodes_2.next(); !nodes_2_1.done; nodes_2_1 = nodes_2.next()) {\n                    var node = nodes_2_1.value;\n                    var newNode = node.visit(visitor);\n                    if (newNode) {\n                        result.push(newNode);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (nodes_2_1 && !nodes_2_1.done && (_b = nodes_2.return)) _b.call(nodes_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Parses string representation of a style and converts it into object literal.\n     *\n     * @param value string representation of style as used in the `style` attribute in HTML.\n     *   Example: `color: red; height: auto`.\n     * @returns An array of style property name and value pairs, e.g. `['color', 'red', 'height',\n     * 'auto']`\n     */\n    function parse(value) {\n        // we use a string array here instead of a string map\n        // because a string-map is not guaranteed to retain the\n        // order of the entries whereas a string array can be\n        // construted in a [key, value, key, value] format.\n        var styles = [];\n        var i = 0;\n        var parenDepth = 0;\n        var quote = 0 /* QuoteNone */;\n        var valueStart = 0;\n        var propStart = 0;\n        var currentProp = null;\n        var valueHasQuotes = false;\n        while (i < value.length) {\n            var token = value.charCodeAt(i++);\n            switch (token) {\n                case 40 /* OpenParen */:\n                    parenDepth++;\n                    break;\n                case 41 /* CloseParen */:\n                    parenDepth--;\n                    break;\n                case 39 /* QuoteSingle */:\n                    // valueStart needs to be there since prop values don't\n                    // have quotes in CSS\n                    valueHasQuotes = valueHasQuotes || valueStart > 0;\n                    if (quote === 0 /* QuoteNone */) {\n                        quote = 39 /* QuoteSingle */;\n                    }\n                    else if (quote === 39 /* QuoteSingle */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                        quote = 0 /* QuoteNone */;\n                    }\n                    break;\n                case 34 /* QuoteDouble */:\n                    // same logic as above\n                    valueHasQuotes = valueHasQuotes || valueStart > 0;\n                    if (quote === 0 /* QuoteNone */) {\n                        quote = 34 /* QuoteDouble */;\n                    }\n                    else if (quote === 34 /* QuoteDouble */ && value.charCodeAt(i - 1) !== 92 /* BackSlash */) {\n                        quote = 0 /* QuoteNone */;\n                    }\n                    break;\n                case 58 /* Colon */:\n                    if (!currentProp && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                        currentProp = hyphenate(value.substring(propStart, i - 1).trim());\n                        valueStart = i;\n                    }\n                    break;\n                case 59 /* Semicolon */:\n                    if (currentProp && valueStart > 0 && parenDepth === 0 && quote === 0 /* QuoteNone */) {\n                        var styleVal = value.substring(valueStart, i - 1).trim();\n                        styles.push(currentProp, valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal);\n                        propStart = i;\n                        valueStart = 0;\n                        currentProp = null;\n                        valueHasQuotes = false;\n                    }\n                    break;\n            }\n        }\n        if (currentProp && valueStart) {\n            var styleVal = value.substr(valueStart).trim();\n            styles.push(currentProp, valueHasQuotes ? stripUnnecessaryQuotes(styleVal) : styleVal);\n        }\n        return styles;\n    }\n    function stripUnnecessaryQuotes(value) {\n        var qS = value.charCodeAt(0);\n        var qE = value.charCodeAt(value.length - 1);\n        if (qS == qE && (qS == 39 /* QuoteSingle */ || qS == 34 /* QuoteDouble */)) {\n            var tempValue = value.substring(1, value.length - 1);\n            // special case to avoid using a multi-quoted string that was just chomped\n            // (e.g. `font-family: \"Verdana\", \"sans-serif\"`)\n            if (tempValue.indexOf('\\'') == -1 && tempValue.indexOf('\"') == -1) {\n                value = tempValue;\n            }\n        }\n        return value;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) {\n            return v.charAt(0) + '-' + v.charAt(1);\n        }).toLowerCase();\n    }\n\n    /**\n     * Produces creation/update instructions for all styling bindings (class and style)\n     *\n     * It also produces the creation instruction to register all initial styling values\n     * (which are all the static class=\"...\" and style=\"...\" attribute values that exist\n     * on an element within a template).\n     *\n     * The builder class below handles producing instructions for the following cases:\n     *\n     * - Static style/class attributes (style=\"...\" and class=\"...\")\n     * - Dynamic style/class map bindings ([style]=\"map\" and [class]=\"map|string\")\n     * - Dynamic style/class property bindings ([style.prop]=\"exp\" and [class.name]=\"exp\")\n     *\n     * Due to the complex relationship of all of these cases, the instructions generated\n     * for these attributes/properties/bindings must be done so in the correct order. The\n     * order which these must be generated is as follows:\n     *\n     * if (createMode) {\n     *   elementStyling(...)\n     * }\n     * if (updateMode) {\n     *   elementStylingMap(...)\n     *   elementStyleProp(...)\n     *   elementClassProp(...)\n     *   elementStylingApp(...)\n     * }\n     *\n     * The creation/update methods within the builder class produce these instructions.\n     */\n    var StylingBuilder = /** @class */ (function () {\n        function StylingBuilder(_elementIndexExpr, _directiveExpr) {\n            this._elementIndexExpr = _elementIndexExpr;\n            this._directiveExpr = _directiveExpr;\n            /** Whether or not there are any static styling values present */\n            this._hasInitialValues = false;\n            /**\n             *  Whether or not there are any styling bindings present\n             *  (i.e. `[style]`, `[class]`, `[style.prop]` or `[class.name]`)\n             */\n            this.hasBindings = false;\n            /** the input for [class] (if it exists) */\n            this._classMapInput = null;\n            /** the input for [style] (if it exists) */\n            this._styleMapInput = null;\n            /** an array of each [style.prop] input */\n            this._singleStyleInputs = null;\n            /** an array of each [class.name] input */\n            this._singleClassInputs = null;\n            this._lastStylingInput = null;\n            // maps are used instead of hash maps because a Map will\n            // retain the ordering of the keys\n            /**\n             * Represents the location of each style binding in the template\n             * (e.g. `<div [style.width]=\"w\" [style.height]=\"h\">` implies\n             * that `width=0` and `height=1`)\n             */\n            this._stylesIndex = new Map();\n            /**\n             * Represents the location of each class binding in the template\n             * (e.g. `<div [class.big]=\"b\" [class.hidden]=\"h\">` implies\n             * that `big=0` and `hidden=1`)\n             */\n            this._classesIndex = new Map();\n            this._initialStyleValues = [];\n            this._initialClassValues = [];\n            // certain style properties ALWAYS need sanitization\n            // this is checked each time new styles are encountered\n            this._useDefaultSanitizer = false;\n        }\n        /**\n         * Registers a given input to the styling builder to be later used when producing AOT code.\n         *\n         * The code below will only accept the input if it is somehow tied to styling (whether it be\n         * style/class bindings or static style/class attributes).\n         */\n        StylingBuilder.prototype.registerBoundInput = function (input) {\n            // [attr.style] or [attr.class] are skipped in the code below,\n            // they should not be treated as styling-based bindings since\n            // they are intended to be written directly to the attr and\n            // will therefore skip all style/class resolution that is present\n            // with style=\"\", [style]=\"\" and [style.prop]=\"\", class=\"\",\n            // [class.prop]=\"\". [class]=\"\" assignments\n            var name = input.name;\n            var binding = null;\n            switch (input.type) {\n                case 0 /* Property */:\n                    if (name == 'style') {\n                        binding = this.registerStyleInput(null, input.value, '', input.sourceSpan);\n                    }\n                    else if (isClassBinding(input.name)) {\n                        binding = this.registerClassInput(null, input.value, input.sourceSpan);\n                    }\n                    break;\n                case 3 /* Style */:\n                    binding = this.registerStyleInput(input.name, input.value, input.unit, input.sourceSpan);\n                    break;\n                case 2 /* Class */:\n                    binding = this.registerClassInput(input.name, input.value, input.sourceSpan);\n                    break;\n            }\n            return binding ? true : false;\n        };\n        StylingBuilder.prototype.registerStyleInput = function (propertyName, value, unit, sourceSpan) {\n            var entry = { name: propertyName, unit: unit, value: value, sourceSpan: sourceSpan };\n            if (propertyName) {\n                (this._singleStyleInputs = this._singleStyleInputs || []).push(entry);\n                this._useDefaultSanitizer = this._useDefaultSanitizer || isStyleSanitizable(propertyName);\n                registerIntoMap(this._stylesIndex, propertyName);\n            }\n            else {\n                this._useDefaultSanitizer = true;\n                this._styleMapInput = entry;\n            }\n            this._lastStylingInput = entry;\n            this.hasBindings = true;\n            return entry;\n        };\n        StylingBuilder.prototype.registerClassInput = function (className, value, sourceSpan) {\n            var entry = { name: className, value: value, sourceSpan: sourceSpan };\n            if (className) {\n                (this._singleClassInputs = this._singleClassInputs || []).push(entry);\n                registerIntoMap(this._classesIndex, className);\n            }\n            else {\n                this._classMapInput = entry;\n            }\n            this._lastStylingInput = entry;\n            this.hasBindings = true;\n            return entry;\n        };\n        /**\n         * Registers the element's static style string value to the builder.\n         *\n         * @param value the style string (e.g. `width:100px; height:200px;`)\n         */\n        StylingBuilder.prototype.registerStyleAttr = function (value) {\n            this._initialStyleValues = parse(value);\n            this._hasInitialValues = true;\n        };\n        /**\n         * Registers the element's static class string value to the builder.\n         *\n         * @param value the className string (e.g. `disabled gold zoom`)\n         */\n        StylingBuilder.prototype.registerClassAttr = function (value) {\n            this._initialClassValues = value.trim().split(/\\s+/g);\n            this._hasInitialValues = true;\n        };\n        /**\n         * Appends all styling-related expressions to the provided attrs array.\n         *\n         * @param attrs an existing array where each of the styling expressions\n         * will be inserted into.\n         */\n        StylingBuilder.prototype.populateInitialStylingAttrs = function (attrs) {\n            // [CLASS_MARKER, 'foo', 'bar', 'baz' ...]\n            if (this._initialClassValues.length) {\n                attrs.push(literal(1 /* Classes */));\n                for (var i = 0; i < this._initialClassValues.length; i++) {\n                    attrs.push(literal(this._initialClassValues[i]));\n                }\n            }\n            // [STYLE_MARKER, 'width', '200px', 'height', '100px', ...]\n            if (this._initialStyleValues.length) {\n                attrs.push(literal(2 /* Styles */));\n                for (var i = 0; i < this._initialStyleValues.length; i += 2) {\n                    attrs.push(literal(this._initialStyleValues[i]), literal(this._initialStyleValues[i + 1]));\n                }\n            }\n        };\n        /**\n         * Builds an instruction with all the expressions and parameters for `elementHostAttrs`.\n         *\n         * The instruction generation code below is used for producing the AOT statement code which is\n         * responsible for registering initial styles (within a directive hostBindings' creation block),\n         * as well as any of the provided attribute values, to the directive host element.\n         */\n        StylingBuilder.prototype.buildHostAttrsInstruction = function (sourceSpan, attrs, constantPool) {\n            var _this = this;\n            if (this._directiveExpr && (attrs.length || this._hasInitialValues)) {\n                return {\n                    sourceSpan: sourceSpan,\n                    reference: Identifiers$1.elementHostAttrs,\n                    allocateBindingSlots: 0,\n                    buildParams: function () {\n                        _this.populateInitialStylingAttrs(attrs);\n                        return [_this._directiveExpr, getConstantLiteralFromArray(constantPool, attrs)];\n                    }\n                };\n            }\n            return null;\n        };\n        /**\n         * Builds an instruction with all the expressions and parameters for `elementStyling`.\n         *\n         * The instruction generation code below is used for producing the AOT statement code which is\n         * responsible for registering style/class bindings to an element.\n         */\n        StylingBuilder.prototype.buildElementStylingInstruction = function (sourceSpan, constantPool) {\n            var _this = this;\n            if (this.hasBindings) {\n                return {\n                    sourceSpan: sourceSpan,\n                    allocateBindingSlots: 0,\n                    reference: Identifiers$1.elementStyling,\n                    buildParams: function () {\n                        // a string array of every style-based binding\n                        var styleBindingProps = _this._singleStyleInputs ? _this._singleStyleInputs.map(function (i) { return literal(i.name); }) : [];\n                        // a string array of every class-based binding\n                        var classBindingNames = _this._singleClassInputs ? _this._singleClassInputs.map(function (i) { return literal(i.name); }) : [];\n                        // to salvage space in the AOT generated code, there is no point in passing\n                        // in `null` into a param if any follow-up params are not used. Therefore,\n                        // only when a trailing param is used then it will be filled with nulls in between\n                        // (otherwise a shorter amount of params will be filled). The code below helps\n                        // determine how many params are required in the expression code.\n                        //\n                        // min params => elementStyling()\n                        // max params => elementStyling(classBindings, styleBindings, sanitizer, directive)\n                        var expectedNumberOfArgs = 0;\n                        if (_this._directiveExpr) {\n                            expectedNumberOfArgs = 4;\n                        }\n                        else if (_this._useDefaultSanitizer) {\n                            expectedNumberOfArgs = 3;\n                        }\n                        else if (styleBindingProps.length) {\n                            expectedNumberOfArgs = 2;\n                        }\n                        else if (classBindingNames.length) {\n                            expectedNumberOfArgs = 1;\n                        }\n                        var params = [];\n                        addParam(params, classBindingNames.length > 0, getConstantLiteralFromArray(constantPool, classBindingNames), 1, expectedNumberOfArgs);\n                        addParam(params, styleBindingProps.length > 0, getConstantLiteralFromArray(constantPool, styleBindingProps), 2, expectedNumberOfArgs);\n                        addParam(params, _this._useDefaultSanitizer, importExpr(Identifiers$1.defaultStyleSanitizer), 3, expectedNumberOfArgs);\n                        if (_this._directiveExpr) {\n                            params.push(_this._directiveExpr);\n                        }\n                        return params;\n                    }\n                };\n            }\n            return null;\n        };\n        /**\n         * Builds an instruction with all the expressions and parameters for `elementStylingMap`.\n         *\n         * The instruction data will contain all expressions for `elementStylingMap` to function\n         * which include the `[style]` and `[class]` expression params (if they exist) as well as\n         * the sanitizer and directive reference expression.\n         */\n        StylingBuilder.prototype.buildElementStylingMapInstruction = function (valueConverter) {\n            var _this = this;\n            if (this._classMapInput || this._styleMapInput) {\n                var stylingInput = this._classMapInput || this._styleMapInput;\n                var totalBindingSlotsRequired = 0;\n                // these values must be outside of the update block so that they can\n                // be evaluted (the AST visit call) during creation time so that any\n                // pipes can be picked up in time before the template is built\n                var mapBasedClassValue_1 = this._classMapInput ? this._classMapInput.value.visit(valueConverter) : null;\n                if (mapBasedClassValue_1 instanceof Interpolation) {\n                    totalBindingSlotsRequired += mapBasedClassValue_1.expressions.length;\n                }\n                var mapBasedStyleValue_1 = this._styleMapInput ? this._styleMapInput.value.visit(valueConverter) : null;\n                if (mapBasedStyleValue_1 instanceof Interpolation) {\n                    totalBindingSlotsRequired += mapBasedStyleValue_1.expressions.length;\n                }\n                return {\n                    sourceSpan: stylingInput.sourceSpan,\n                    reference: Identifiers$1.elementStylingMap,\n                    allocateBindingSlots: totalBindingSlotsRequired,\n                    buildParams: function (convertFn) {\n                        var params = [_this._elementIndexExpr];\n                        if (mapBasedClassValue_1) {\n                            params.push(convertFn(mapBasedClassValue_1));\n                        }\n                        else if (_this._styleMapInput) {\n                            params.push(NULL_EXPR);\n                        }\n                        if (mapBasedStyleValue_1) {\n                            params.push(convertFn(mapBasedStyleValue_1));\n                        }\n                        else if (_this._directiveExpr) {\n                            params.push(NULL_EXPR);\n                        }\n                        if (_this._directiveExpr) {\n                            params.push(_this._directiveExpr);\n                        }\n                        return params;\n                    }\n                };\n            }\n            return null;\n        };\n        StylingBuilder.prototype._buildSingleInputs = function (reference, inputs, mapIndex, allowUnits, valueConverter) {\n            var _this = this;\n            var totalBindingSlotsRequired = 0;\n            return inputs.map(function (input) {\n                var bindingIndex = mapIndex.get(input.name);\n                var value = input.value.visit(valueConverter);\n                totalBindingSlotsRequired += (value instanceof Interpolation) ? value.expressions.length : 0;\n                return {\n                    sourceSpan: input.sourceSpan,\n                    allocateBindingSlots: totalBindingSlotsRequired, reference: reference,\n                    buildParams: function (convertFn) {\n                        var params = [_this._elementIndexExpr, literal(bindingIndex), convertFn(value)];\n                        if (allowUnits) {\n                            if (input.unit) {\n                                params.push(literal(input.unit));\n                            }\n                            else if (_this._directiveExpr) {\n                                params.push(NULL_EXPR);\n                            }\n                        }\n                        if (_this._directiveExpr) {\n                            params.push(_this._directiveExpr);\n                        }\n                        return params;\n                    }\n                };\n            });\n        };\n        StylingBuilder.prototype._buildClassInputs = function (valueConverter) {\n            if (this._singleClassInputs) {\n                return this._buildSingleInputs(Identifiers$1.elementClassProp, this._singleClassInputs, this._classesIndex, false, valueConverter);\n            }\n            return [];\n        };\n        StylingBuilder.prototype._buildStyleInputs = function (valueConverter) {\n            if (this._singleStyleInputs) {\n                return this._buildSingleInputs(Identifiers$1.elementStyleProp, this._singleStyleInputs, this._stylesIndex, true, valueConverter);\n            }\n            return [];\n        };\n        StylingBuilder.prototype._buildApplyFn = function () {\n            var _this = this;\n            return {\n                sourceSpan: this._lastStylingInput ? this._lastStylingInput.sourceSpan : null,\n                reference: Identifiers$1.elementStylingApply,\n                allocateBindingSlots: 0,\n                buildParams: function () {\n                    var params = [_this._elementIndexExpr];\n                    if (_this._directiveExpr) {\n                        params.push(_this._directiveExpr);\n                    }\n                    return params;\n                }\n            };\n        };\n        /**\n         * Constructs all instructions which contain the expressions that will be placed\n         * into the update block of a template function or a directive hostBindings function.\n         */\n        StylingBuilder.prototype.buildUpdateLevelInstructions = function (valueConverter) {\n            var instructions = [];\n            if (this.hasBindings) {\n                var mapInstruction = this.buildElementStylingMapInstruction(valueConverter);\n                if (mapInstruction) {\n                    instructions.push(mapInstruction);\n                }\n                instructions.push.apply(instructions, __spread(this._buildStyleInputs(valueConverter)));\n                instructions.push.apply(instructions, __spread(this._buildClassInputs(valueConverter)));\n                instructions.push(this._buildApplyFn());\n            }\n            return instructions;\n        };\n        return StylingBuilder;\n    }());\n    function isClassBinding(name) {\n        return name == 'className' || name == 'class';\n    }\n    function registerIntoMap(map, key) {\n        if (!map.has(key)) {\n            map.set(key, map.size);\n        }\n    }\n    function isStyleSanitizable(prop) {\n        return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n            prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n    }\n    /**\n     * Simple helper function to either provide the constant literal that will house the value\n     * here or a null value if the provided values are empty.\n     */\n    function getConstantLiteralFromArray(constantPool, values) {\n        return values.length ? constantPool.getConstLiteral(literalArr(values), true) : NULL_EXPR;\n    }\n    /**\n     * Simple helper function that adds a parameter or does nothing at all depending on the provided\n     * predicate and totalExpectedArgs values\n     */\n    function addParam(params, predicate, value, argNumber, totalExpectedArgs) {\n        if (predicate) {\n            params.push(value);\n        }\n        else if (argNumber < totalExpectedArgs) {\n            params.push(NULL_EXPR);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (TokenType) {\n        TokenType[TokenType[\"Character\"] = 0] = \"Character\";\n        TokenType[TokenType[\"Identifier\"] = 1] = \"Identifier\";\n        TokenType[TokenType[\"Keyword\"] = 2] = \"Keyword\";\n        TokenType[TokenType[\"String\"] = 3] = \"String\";\n        TokenType[TokenType[\"Operator\"] = 4] = \"Operator\";\n        TokenType[TokenType[\"Number\"] = 5] = \"Number\";\n        TokenType[TokenType[\"Error\"] = 6] = \"Error\";\n    })(exports.TokenType || (exports.TokenType = {}));\n    var KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\n    var Lexer = /** @class */ (function () {\n        function Lexer() {\n        }\n        Lexer.prototype.tokenize = function (text) {\n            var scanner = new _Scanner(text);\n            var tokens = [];\n            var token = scanner.scanToken();\n            while (token != null) {\n                tokens.push(token);\n                token = scanner.scanToken();\n            }\n            return tokens;\n        };\n        return Lexer;\n    }());\n    var Token = /** @class */ (function () {\n        function Token(index, type, numValue, strValue) {\n            this.index = index;\n            this.type = type;\n            this.numValue = numValue;\n            this.strValue = strValue;\n        }\n        Token.prototype.isCharacter = function (code) {\n            return this.type == exports.TokenType.Character && this.numValue == code;\n        };\n        Token.prototype.isNumber = function () { return this.type == exports.TokenType.Number; };\n        Token.prototype.isString = function () { return this.type == exports.TokenType.String; };\n        Token.prototype.isOperator = function (operator) {\n            return this.type == exports.TokenType.Operator && this.strValue == operator;\n        };\n        Token.prototype.isIdentifier = function () { return this.type == exports.TokenType.Identifier; };\n        Token.prototype.isKeyword = function () { return this.type == exports.TokenType.Keyword; };\n        Token.prototype.isKeywordLet = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'let'; };\n        Token.prototype.isKeywordAs = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'as'; };\n        Token.prototype.isKeywordNull = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'null'; };\n        Token.prototype.isKeywordUndefined = function () {\n            return this.type == exports.TokenType.Keyword && this.strValue == 'undefined';\n        };\n        Token.prototype.isKeywordTrue = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'true'; };\n        Token.prototype.isKeywordFalse = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'false'; };\n        Token.prototype.isKeywordThis = function () { return this.type == exports.TokenType.Keyword && this.strValue == 'this'; };\n        Token.prototype.isError = function () { return this.type == exports.TokenType.Error; };\n        Token.prototype.toNumber = function () { return this.type == exports.TokenType.Number ? this.numValue : -1; };\n        Token.prototype.toString = function () {\n            switch (this.type) {\n                case exports.TokenType.Character:\n                case exports.TokenType.Identifier:\n                case exports.TokenType.Keyword:\n                case exports.TokenType.Operator:\n                case exports.TokenType.String:\n                case exports.TokenType.Error:\n                    return this.strValue;\n                case exports.TokenType.Number:\n                    return this.numValue.toString();\n                default:\n                    return null;\n            }\n        };\n        return Token;\n    }());\n    function newCharacterToken(index, code) {\n        return new Token(index, exports.TokenType.Character, code, String.fromCharCode(code));\n    }\n    function newIdentifierToken(index, text) {\n        return new Token(index, exports.TokenType.Identifier, 0, text);\n    }\n    function newKeywordToken(index, text) {\n        return new Token(index, exports.TokenType.Keyword, 0, text);\n    }\n    function newOperatorToken(index, text) {\n        return new Token(index, exports.TokenType.Operator, 0, text);\n    }\n    function newStringToken(index, text) {\n        return new Token(index, exports.TokenType.String, 0, text);\n    }\n    function newNumberToken(index, n) {\n        return new Token(index, exports.TokenType.Number, n, '');\n    }\n    function newErrorToken(index, message) {\n        return new Token(index, exports.TokenType.Error, 0, message);\n    }\n    var EOF = new Token(-1, exports.TokenType.Character, 0, '');\n    var _Scanner = /** @class */ (function () {\n        function _Scanner(input) {\n            this.input = input;\n            this.peek = 0;\n            this.index = -1;\n            this.length = input.length;\n            this.advance();\n        }\n        _Scanner.prototype.advance = function () {\n            this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n        };\n        _Scanner.prototype.scanToken = function () {\n            var input = this.input, length = this.length;\n            var peek = this.peek, index = this.index;\n            // Skip whitespace.\n            while (peek <= $SPACE) {\n                if (++index >= length) {\n                    peek = $EOF;\n                    break;\n                }\n                else {\n                    peek = input.charCodeAt(index);\n                }\n            }\n            this.peek = peek;\n            this.index = index;\n            if (index >= length) {\n                return null;\n            }\n            // Handle identifiers and numbers.\n            if (isIdentifierStart(peek))\n                return this.scanIdentifier();\n            if (isDigit(peek))\n                return this.scanNumber(index);\n            var start = index;\n            switch (peek) {\n                case $PERIOD:\n                    this.advance();\n                    return isDigit(this.peek) ? this.scanNumber(start) :\n                        newCharacterToken(start, $PERIOD);\n                case $LPAREN:\n                case $RPAREN:\n                case $LBRACE:\n                case $RBRACE:\n                case $LBRACKET:\n                case $RBRACKET:\n                case $COMMA:\n                case $COLON:\n                case $SEMICOLON:\n                    return this.scanCharacter(start, peek);\n                case $SQ:\n                case $DQ:\n                    return this.scanString();\n                case $HASH:\n                case $PLUS:\n                case $MINUS:\n                case $STAR:\n                case $SLASH:\n                case $PERCENT:\n                case $CARET:\n                    return this.scanOperator(start, String.fromCharCode(peek));\n                case $QUESTION:\n                    return this.scanComplexOperator(start, '?', $PERIOD, '.');\n                case $LT:\n                case $GT:\n                    return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n                case $BANG:\n                case $EQ:\n                    return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n                case $AMPERSAND:\n                    return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n                case $BAR:\n                    return this.scanComplexOperator(start, '|', $BAR, '|');\n                case $NBSP:\n                    while (isWhitespace(this.peek))\n                        this.advance();\n                    return this.scanToken();\n            }\n            this.advance();\n            return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n        };\n        _Scanner.prototype.scanCharacter = function (start, code) {\n            this.advance();\n            return newCharacterToken(start, code);\n        };\n        _Scanner.prototype.scanOperator = function (start, str) {\n            this.advance();\n            return newOperatorToken(start, str);\n        };\n        /**\n         * Tokenize a 2/3 char long operator\n         *\n         * @param start start index in the expression\n         * @param one first symbol (always part of the operator)\n         * @param twoCode code point for the second symbol\n         * @param two second symbol (part of the operator when the second code point matches)\n         * @param threeCode code point for the third symbol\n         * @param three third symbol (part of the operator when provided and matches source expression)\n         */\n        _Scanner.prototype.scanComplexOperator = function (start, one, twoCode, two, threeCode, three) {\n            this.advance();\n            var str = one;\n            if (this.peek == twoCode) {\n                this.advance();\n                str += two;\n            }\n            if (threeCode != null && this.peek == threeCode) {\n                this.advance();\n                str += three;\n            }\n            return newOperatorToken(start, str);\n        };\n        _Scanner.prototype.scanIdentifier = function () {\n            var start = this.index;\n            this.advance();\n            while (isIdentifierPart(this.peek))\n                this.advance();\n            var str = this.input.substring(start, this.index);\n            return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n                newIdentifierToken(start, str);\n        };\n        _Scanner.prototype.scanNumber = function (start) {\n            var simple = (this.index === start);\n            this.advance(); // Skip initial digit.\n            while (true) {\n                if (isDigit(this.peek)) ;\n                else if (this.peek == $PERIOD) {\n                    simple = false;\n                }\n                else if (isExponentStart(this.peek)) {\n                    this.advance();\n                    if (isExponentSign(this.peek))\n                        this.advance();\n                    if (!isDigit(this.peek))\n                        return this.error('Invalid exponent', -1);\n                    simple = false;\n                }\n                else {\n                    break;\n                }\n                this.advance();\n            }\n            var str = this.input.substring(start, this.index);\n            var value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n            return newNumberToken(start, value);\n        };\n        _Scanner.prototype.scanString = function () {\n            var start = this.index;\n            var quote = this.peek;\n            this.advance(); // Skip initial quote.\n            var buffer = '';\n            var marker = this.index;\n            var input = this.input;\n            while (this.peek != quote) {\n                if (this.peek == $BACKSLASH) {\n                    buffer += input.substring(marker, this.index);\n                    this.advance();\n                    var unescapedCode = void 0;\n                    // Workaround for TS2.1-introduced type strictness\n                    this.peek = this.peek;\n                    if (this.peek == $u) {\n                        // 4 character hex code for unicode character.\n                        var hex = input.substring(this.index + 1, this.index + 5);\n                        if (/^[0-9a-f]+$/i.test(hex)) {\n                            unescapedCode = parseInt(hex, 16);\n                        }\n                        else {\n                            return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                        }\n                        for (var i = 0; i < 5; i++) {\n                            this.advance();\n                        }\n                    }\n                    else {\n                        unescapedCode = unescape(this.peek);\n                        this.advance();\n                    }\n                    buffer += String.fromCharCode(unescapedCode);\n                    marker = this.index;\n                }\n                else if (this.peek == $EOF) {\n                    return this.error('Unterminated quote', 0);\n                }\n                else {\n                    this.advance();\n                }\n            }\n            var last = input.substring(marker, this.index);\n            this.advance(); // Skip terminating quote.\n            return newStringToken(start, buffer + last);\n        };\n        _Scanner.prototype.error = function (message, offset) {\n            var position = this.index + offset;\n            return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n        };\n        return _Scanner;\n    }());\n    function isIdentifierStart(code) {\n        return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n            (code == $_) || (code == $$);\n    }\n    function isIdentifier(input) {\n        if (input.length == 0)\n            return false;\n        var scanner = new _Scanner(input);\n        if (!isIdentifierStart(scanner.peek))\n            return false;\n        scanner.advance();\n        while (scanner.peek !== $EOF) {\n            if (!isIdentifierPart(scanner.peek))\n                return false;\n            scanner.advance();\n        }\n        return true;\n    }\n    function isIdentifierPart(code) {\n        return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n            (code == $$);\n    }\n    function isExponentStart(code) {\n        return code == $e || code == $E;\n    }\n    function isExponentSign(code) {\n        return code == $MINUS || code == $PLUS;\n    }\n    function isQuote(code) {\n        return code === $SQ || code === $DQ || code === $BT;\n    }\n    function unescape(code) {\n        switch (code) {\n            case $n:\n                return $LF;\n            case $f:\n                return $FF;\n            case $r:\n                return $CR;\n            case $t:\n                return $TAB;\n            case $v:\n                return $VTAB;\n            default:\n                return code;\n        }\n    }\n    function parseIntAutoRadix(text) {\n        var result = parseInt(text);\n        if (isNaN(result)) {\n            throw new Error('Invalid integer literal when parsing ' + text);\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SplitInterpolation = /** @class */ (function () {\n        function SplitInterpolation(strings, expressions, offsets) {\n            this.strings = strings;\n            this.expressions = expressions;\n            this.offsets = offsets;\n        }\n        return SplitInterpolation;\n    }());\n    var TemplateBindingParseResult = /** @class */ (function () {\n        function TemplateBindingParseResult(templateBindings, warnings, errors) {\n            this.templateBindings = templateBindings;\n            this.warnings = warnings;\n            this.errors = errors;\n        }\n        return TemplateBindingParseResult;\n    }());\n    function _createInterpolateRegExp(config) {\n        var pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n        return new RegExp(pattern, 'g');\n    }\n    var Parser = /** @class */ (function () {\n        function Parser(_lexer) {\n            this._lexer = _lexer;\n            this.errors = [];\n        }\n        Parser.prototype.parseAction = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            this._checkNoInterpolation(input, location, interpolationConfig);\n            var sourceToLex = this._stripComments(input);\n            var tokens = this._lexer.tokenize(this._stripComments(input));\n            var ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n                .parseChain();\n            return new ASTWithSource(ast, input, location, this.errors);\n        };\n        Parser.prototype.parseBinding = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var ast = this._parseBindingAst(input, location, interpolationConfig);\n            return new ASTWithSource(ast, input, location, this.errors);\n        };\n        Parser.prototype.parseSimpleBinding = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var ast = this._parseBindingAst(input, location, interpolationConfig);\n            var errors = SimpleExpressionChecker.check(ast);\n            if (errors.length > 0) {\n                this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n            }\n            return new ASTWithSource(ast, input, location, this.errors);\n        };\n        Parser.prototype._reportError = function (message, input, errLocation, ctxLocation) {\n            this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n        };\n        Parser.prototype._parseBindingAst = function (input, location, interpolationConfig) {\n            // Quotes expressions use 3rd-party expression language. We don't want to use\n            // our lexer or parser for that, so we check for that ahead of time.\n            var quote = this._parseQuote(input, location);\n            if (quote != null) {\n                return quote;\n            }\n            this._checkNoInterpolation(input, location, interpolationConfig);\n            var sourceToLex = this._stripComments(input);\n            var tokens = this._lexer.tokenize(sourceToLex);\n            return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n                .parseChain();\n        };\n        Parser.prototype._parseQuote = function (input, location) {\n            if (input == null)\n                return null;\n            var prefixSeparatorIndex = input.indexOf(':');\n            if (prefixSeparatorIndex == -1)\n                return null;\n            var prefix = input.substring(0, prefixSeparatorIndex).trim();\n            if (!isIdentifier(prefix))\n                return null;\n            var uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n            return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n        };\n        Parser.prototype.parseTemplateBindings = function (tplKey, tplValue, location) {\n            var tokens = this._lexer.tokenize(tplValue);\n            return new _ParseAST(tplValue, location, tokens, tplValue.length, false, this.errors, 0)\n                .parseTemplateBindings(tplKey);\n        };\n        Parser.prototype.parseInterpolation = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var split = this.splitInterpolation(input, location, interpolationConfig);\n            if (split == null)\n                return null;\n            var expressions = [];\n            for (var i = 0; i < split.expressions.length; ++i) {\n                var expressionText = split.expressions[i];\n                var sourceToLex = this._stripComments(expressionText);\n                var tokens = this._lexer.tokenize(sourceToLex);\n                var ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                    .parseChain();\n                expressions.push(ast);\n            }\n            return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n        };\n        Parser.prototype.splitInterpolation = function (input, location, interpolationConfig) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var regexp = _createInterpolateRegExp(interpolationConfig);\n            var parts = input.split(regexp);\n            if (parts.length <= 1) {\n                return null;\n            }\n            var strings = [];\n            var expressions = [];\n            var offsets = [];\n            var offset = 0;\n            for (var i = 0; i < parts.length; i++) {\n                var part = parts[i];\n                if (i % 2 === 0) {\n                    // fixed string\n                    strings.push(part);\n                    offset += part.length;\n                }\n                else if (part.trim().length > 0) {\n                    offset += interpolationConfig.start.length;\n                    expressions.push(part);\n                    offsets.push(offset);\n                    offset += part.length + interpolationConfig.end.length;\n                }\n                else {\n                    this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                    expressions.push('$implict');\n                    offsets.push(offset);\n                }\n            }\n            return new SplitInterpolation(strings, expressions, offsets);\n        };\n        Parser.prototype.wrapLiteralPrimitive = function (input, location) {\n            return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n        };\n        Parser.prototype._stripComments = function (input) {\n            var i = this._commentStart(input);\n            return i != null ? input.substring(0, i).trim() : input;\n        };\n        Parser.prototype._commentStart = function (input) {\n            var outerQuote = null;\n            for (var i = 0; i < input.length - 1; i++) {\n                var char = input.charCodeAt(i);\n                var nextChar = input.charCodeAt(i + 1);\n                if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                    return i;\n                if (outerQuote === char) {\n                    outerQuote = null;\n                }\n                else if (outerQuote == null && isQuote(char)) {\n                    outerQuote = char;\n                }\n            }\n            return null;\n        };\n        Parser.prototype._checkNoInterpolation = function (input, location, interpolationConfig) {\n            var regexp = _createInterpolateRegExp(interpolationConfig);\n            var parts = input.split(regexp);\n            if (parts.length > 1) {\n                this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n            }\n        };\n        Parser.prototype._findInterpolationErrorColumn = function (parts, partInErrIdx, interpolationConfig) {\n            var errLocation = '';\n            for (var j = 0; j < partInErrIdx; j++) {\n                errLocation += j % 2 === 0 ?\n                    parts[j] :\n                    \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n            }\n            return errLocation.length;\n        };\n        return Parser;\n    }());\n    var _ParseAST = /** @class */ (function () {\n        function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n            this.input = input;\n            this.location = location;\n            this.tokens = tokens;\n            this.inputLength = inputLength;\n            this.parseAction = parseAction;\n            this.errors = errors;\n            this.offset = offset;\n            this.rparensExpected = 0;\n            this.rbracketsExpected = 0;\n            this.rbracesExpected = 0;\n            this.index = 0;\n        }\n        _ParseAST.prototype.peek = function (offset) {\n            var i = this.index + offset;\n            return i < this.tokens.length ? this.tokens[i] : EOF;\n        };\n        Object.defineProperty(_ParseAST.prototype, \"next\", {\n            get: function () { return this.peek(0); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n            get: function () {\n                return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                    this.inputLength + this.offset;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        _ParseAST.prototype.span = function (start) { return new ParseSpan(start, this.inputIndex); };\n        _ParseAST.prototype.advance = function () { this.index++; };\n        _ParseAST.prototype.optionalCharacter = function (code) {\n            if (this.next.isCharacter(code)) {\n                this.advance();\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        _ParseAST.prototype.peekKeywordLet = function () { return this.next.isKeywordLet(); };\n        _ParseAST.prototype.peekKeywordAs = function () { return this.next.isKeywordAs(); };\n        _ParseAST.prototype.expectCharacter = function (code) {\n            if (this.optionalCharacter(code))\n                return;\n            this.error(\"Missing expected \" + String.fromCharCode(code));\n        };\n        _ParseAST.prototype.optionalOperator = function (op) {\n            if (this.next.isOperator(op)) {\n                this.advance();\n                return true;\n            }\n            else {\n                return false;\n            }\n        };\n        _ParseAST.prototype.expectOperator = function (operator) {\n            if (this.optionalOperator(operator))\n                return;\n            this.error(\"Missing expected operator \" + operator);\n        };\n        _ParseAST.prototype.expectIdentifierOrKeyword = function () {\n            var n = this.next;\n            if (!n.isIdentifier() && !n.isKeyword()) {\n                this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n                return '';\n            }\n            this.advance();\n            return n.toString();\n        };\n        _ParseAST.prototype.expectIdentifierOrKeywordOrString = function () {\n            var n = this.next;\n            if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n                this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n                return '';\n            }\n            this.advance();\n            return n.toString();\n        };\n        _ParseAST.prototype.parseChain = function () {\n            var exprs = [];\n            var start = this.inputIndex;\n            while (this.index < this.tokens.length) {\n                var expr = this.parsePipe();\n                exprs.push(expr);\n                if (this.optionalCharacter($SEMICOLON)) {\n                    if (!this.parseAction) {\n                        this.error('Binding expression cannot contain chained expression');\n                    }\n                    while (this.optionalCharacter($SEMICOLON)) {\n                    } // read all semicolons\n                }\n                else if (this.index < this.tokens.length) {\n                    this.error(\"Unexpected token '\" + this.next + \"'\");\n                }\n            }\n            if (exprs.length == 0)\n                return new EmptyExpr(this.span(start));\n            if (exprs.length == 1)\n                return exprs[0];\n            return new Chain(this.span(start), exprs);\n        };\n        _ParseAST.prototype.parsePipe = function () {\n            var result = this.parseExpression();\n            if (this.optionalOperator('|')) {\n                if (this.parseAction) {\n                    this.error('Cannot have a pipe in an action expression');\n                }\n                do {\n                    var name_1 = this.expectIdentifierOrKeyword();\n                    var args = [];\n                    while (this.optionalCharacter($COLON)) {\n                        args.push(this.parseExpression());\n                    }\n                    result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n                } while (this.optionalOperator('|'));\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseExpression = function () { return this.parseConditional(); };\n        _ParseAST.prototype.parseConditional = function () {\n            var start = this.inputIndex;\n            var result = this.parseLogicalOr();\n            if (this.optionalOperator('?')) {\n                var yes = this.parsePipe();\n                var no = void 0;\n                if (!this.optionalCharacter($COLON)) {\n                    var end = this.inputIndex;\n                    var expression = this.input.substring(start, end);\n                    this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                    no = new EmptyExpr(this.span(start));\n                }\n                else {\n                    no = this.parsePipe();\n                }\n                return new Conditional(this.span(start), result, yes, no);\n            }\n            else {\n                return result;\n            }\n        };\n        _ParseAST.prototype.parseLogicalOr = function () {\n            // '||'\n            var result = this.parseLogicalAnd();\n            while (this.optionalOperator('||')) {\n                var right = this.parseLogicalAnd();\n                result = new Binary(this.span(result.span.start), '||', result, right);\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseLogicalAnd = function () {\n            // '&&'\n            var result = this.parseEquality();\n            while (this.optionalOperator('&&')) {\n                var right = this.parseEquality();\n                result = new Binary(this.span(result.span.start), '&&', result, right);\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseEquality = function () {\n            // '==','!=','===','!=='\n            var result = this.parseRelational();\n            while (this.next.type == exports.TokenType.Operator) {\n                var operator = this.next.strValue;\n                switch (operator) {\n                    case '==':\n                    case '===':\n                    case '!=':\n                    case '!==':\n                        this.advance();\n                        var right = this.parseRelational();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseRelational = function () {\n            // '<', '>', '<=', '>='\n            var result = this.parseAdditive();\n            while (this.next.type == exports.TokenType.Operator) {\n                var operator = this.next.strValue;\n                switch (operator) {\n                    case '<':\n                    case '>':\n                    case '<=':\n                    case '>=':\n                        this.advance();\n                        var right = this.parseAdditive();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseAdditive = function () {\n            // '+', '-'\n            var result = this.parseMultiplicative();\n            while (this.next.type == exports.TokenType.Operator) {\n                var operator = this.next.strValue;\n                switch (operator) {\n                    case '+':\n                    case '-':\n                        this.advance();\n                        var right = this.parseMultiplicative();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseMultiplicative = function () {\n            // '*', '%', '/'\n            var result = this.parsePrefix();\n            while (this.next.type == exports.TokenType.Operator) {\n                var operator = this.next.strValue;\n                switch (operator) {\n                    case '*':\n                    case '%':\n                    case '/':\n                        this.advance();\n                        var right = this.parsePrefix();\n                        result = new Binary(this.span(result.span.start), operator, result, right);\n                        continue;\n                }\n                break;\n            }\n            return result;\n        };\n        _ParseAST.prototype.parsePrefix = function () {\n            if (this.next.type == exports.TokenType.Operator) {\n                var start = this.inputIndex;\n                var operator = this.next.strValue;\n                var result = void 0;\n                switch (operator) {\n                    case '+':\n                        this.advance();\n                        result = this.parsePrefix();\n                        return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                    case '-':\n                        this.advance();\n                        result = this.parsePrefix();\n                        return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                    case '!':\n                        this.advance();\n                        result = this.parsePrefix();\n                        return new PrefixNot(this.span(start), result);\n                }\n            }\n            return this.parseCallChain();\n        };\n        _ParseAST.prototype.parseCallChain = function () {\n            var result = this.parsePrimary();\n            while (true) {\n                if (this.optionalCharacter($PERIOD)) {\n                    result = this.parseAccessMemberOrMethodCall(result, false);\n                }\n                else if (this.optionalOperator('?.')) {\n                    result = this.parseAccessMemberOrMethodCall(result, true);\n                }\n                else if (this.optionalCharacter($LBRACKET)) {\n                    this.rbracketsExpected++;\n                    var key = this.parsePipe();\n                    this.rbracketsExpected--;\n                    this.expectCharacter($RBRACKET);\n                    if (this.optionalOperator('=')) {\n                        var value = this.parseConditional();\n                        result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                    }\n                    else {\n                        result = new KeyedRead(this.span(result.span.start), result, key);\n                    }\n                }\n                else if (this.optionalCharacter($LPAREN)) {\n                    this.rparensExpected++;\n                    var args = this.parseCallArguments();\n                    this.rparensExpected--;\n                    this.expectCharacter($RPAREN);\n                    result = new FunctionCall(this.span(result.span.start), result, args);\n                }\n                else if (this.optionalOperator('!')) {\n                    result = new NonNullAssert(this.span(result.span.start), result);\n                }\n                else {\n                    return result;\n                }\n            }\n        };\n        _ParseAST.prototype.parsePrimary = function () {\n            var start = this.inputIndex;\n            if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var result = this.parsePipe();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                return result;\n            }\n            else if (this.next.isKeywordNull()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), null);\n            }\n            else if (this.next.isKeywordUndefined()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), void 0);\n            }\n            else if (this.next.isKeywordTrue()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), true);\n            }\n            else if (this.next.isKeywordFalse()) {\n                this.advance();\n                return new LiteralPrimitive(this.span(start), false);\n            }\n            else if (this.next.isKeywordThis()) {\n                this.advance();\n                return new ImplicitReceiver(this.span(start));\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var elements = this.parseExpressionList($RBRACKET);\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                return new LiteralArray(this.span(start), elements);\n            }\n            else if (this.next.isCharacter($LBRACE)) {\n                return this.parseLiteralMap();\n            }\n            else if (this.next.isIdentifier()) {\n                return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n            }\n            else if (this.next.isNumber()) {\n                var value = this.next.toNumber();\n                this.advance();\n                return new LiteralPrimitive(this.span(start), value);\n            }\n            else if (this.next.isString()) {\n                var literalValue = this.next.toString();\n                this.advance();\n                return new LiteralPrimitive(this.span(start), literalValue);\n            }\n            else if (this.index >= this.tokens.length) {\n                this.error(\"Unexpected end of expression: \" + this.input);\n                return new EmptyExpr(this.span(start));\n            }\n            else {\n                this.error(\"Unexpected token \" + this.next);\n                return new EmptyExpr(this.span(start));\n            }\n        };\n        _ParseAST.prototype.parseExpressionList = function (terminator) {\n            var result = [];\n            if (!this.next.isCharacter(terminator)) {\n                do {\n                    result.push(this.parsePipe());\n                } while (this.optionalCharacter($COMMA));\n            }\n            return result;\n        };\n        _ParseAST.prototype.parseLiteralMap = function () {\n            var keys = [];\n            var values = [];\n            var start = this.inputIndex;\n            this.expectCharacter($LBRACE);\n            if (!this.optionalCharacter($RBRACE)) {\n                this.rbracesExpected++;\n                do {\n                    var quoted = this.next.isString();\n                    var key = this.expectIdentifierOrKeywordOrString();\n                    keys.push({ key: key, quoted: quoted });\n                    this.expectCharacter($COLON);\n                    values.push(this.parsePipe());\n                } while (this.optionalCharacter($COMMA));\n                this.rbracesExpected--;\n                this.expectCharacter($RBRACE);\n            }\n            return new LiteralMap(this.span(start), keys, values);\n        };\n        _ParseAST.prototype.parseAccessMemberOrMethodCall = function (receiver, isSafe) {\n            if (isSafe === void 0) { isSafe = false; }\n            var start = receiver.span.start;\n            var id = this.expectIdentifierOrKeyword();\n            if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var args = this.parseCallArguments();\n                this.expectCharacter($RPAREN);\n                this.rparensExpected--;\n                var span = this.span(start);\n                return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                    new MethodCall(span, receiver, id, args);\n            }\n            else {\n                if (isSafe) {\n                    if (this.optionalOperator('=')) {\n                        this.error('The \\'?.\\' operator cannot be used in the assignment');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    else {\n                        return new SafePropertyRead(this.span(start), receiver, id);\n                    }\n                }\n                else {\n                    if (this.optionalOperator('=')) {\n                        if (!this.parseAction) {\n                            this.error('Bindings cannot contain assignments');\n                            return new EmptyExpr(this.span(start));\n                        }\n                        var value = this.parseConditional();\n                        return new PropertyWrite(this.span(start), receiver, id, value);\n                    }\n                    else {\n                        return new PropertyRead(this.span(start), receiver, id);\n                    }\n                }\n            }\n        };\n        _ParseAST.prototype.parseCallArguments = function () {\n            if (this.next.isCharacter($RPAREN))\n                return [];\n            var positionals = [];\n            do {\n                positionals.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            return positionals;\n        };\n        /**\n         * An identifier, a keyword, a string with an optional `-` in between.\n         */\n        _ParseAST.prototype.expectTemplateBindingKey = function () {\n            var result = '';\n            var operatorFound = false;\n            do {\n                result += this.expectIdentifierOrKeywordOrString();\n                operatorFound = this.optionalOperator('-');\n                if (operatorFound) {\n                    result += '-';\n                }\n            } while (operatorFound);\n            return result.toString();\n        };\n        // Parses the AST for `<some-tag *tplKey=AST>`\n        _ParseAST.prototype.parseTemplateBindings = function (tplKey) {\n            var firstBinding = true;\n            var bindings = [];\n            var warnings = [];\n            do {\n                var start = this.inputIndex;\n                var rawKey = void 0;\n                var key = void 0;\n                var isVar = false;\n                if (firstBinding) {\n                    rawKey = key = tplKey;\n                    firstBinding = false;\n                }\n                else {\n                    isVar = this.peekKeywordLet();\n                    if (isVar)\n                        this.advance();\n                    rawKey = this.expectTemplateBindingKey();\n                    key = isVar ? rawKey : tplKey + rawKey[0].toUpperCase() + rawKey.substring(1);\n                    this.optionalCharacter($COLON);\n                }\n                var name_2 = null;\n                var expression = null;\n                if (isVar) {\n                    if (this.optionalOperator('=')) {\n                        name_2 = this.expectTemplateBindingKey();\n                    }\n                    else {\n                        name_2 = '\\$implicit';\n                    }\n                }\n                else if (this.peekKeywordAs()) {\n                    this.advance(); // consume `as`\n                    name_2 = rawKey;\n                    key = this.expectTemplateBindingKey(); // read local var name\n                    isVar = true;\n                }\n                else if (this.next !== EOF && !this.peekKeywordLet()) {\n                    var start_1 = this.inputIndex;\n                    var ast = this.parsePipe();\n                    var source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                    expression = new ASTWithSource(ast, source, this.location, this.errors);\n                }\n                bindings.push(new TemplateBinding(this.span(start), key, isVar, name_2, expression));\n                if (this.peekKeywordAs() && !isVar) {\n                    var letStart = this.inputIndex;\n                    this.advance(); // consume `as`\n                    var letName = this.expectTemplateBindingKey(); // read local var name\n                    bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, null));\n                }\n                if (!this.optionalCharacter($SEMICOLON)) {\n                    this.optionalCharacter($COMMA);\n                }\n            } while (this.index < this.tokens.length);\n            return new TemplateBindingParseResult(bindings, warnings, this.errors);\n        };\n        _ParseAST.prototype.error = function (message, index) {\n            if (index === void 0) { index = null; }\n            this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n            this.skip();\n        };\n        _ParseAST.prototype.locationText = function (index) {\n            if (index === void 0) { index = null; }\n            if (index == null)\n                index = this.index;\n            return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n                \"at the end of the expression\";\n        };\n        // Error recovery should skip tokens until it encounters a recovery point. skip() treats\n        // the end of input and a ';' as unconditionally a recovery point. It also treats ')',\n        // '}' and ']' as conditional recovery points if one of calling productions is expecting\n        // one of these symbols. This allows skip() to recover from errors such as '(a.) + 1' allowing\n        // more of the AST to be retained (it doesn't skip any tokens as the ')' is retained because\n        // of the '(' begins an '(' <expr> ')' production). The recovery points of grouping symbols\n        // must be conditional as they must be skipped if none of the calling productions are not\n        // expecting the closing token else we will never make progress in the case of an\n        // extraneous group closing symbol (such as a stray ')'). This is not the case for ';' because\n        // parseChain() is always the root production and it expects a ';'.\n        // If a production expects one of these token it increments the corresponding nesting count,\n        // and then decrements it just prior to checking if the token is in the input.\n        _ParseAST.prototype.skip = function () {\n            var n = this.next;\n            while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n                (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n                (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n                (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n                if (this.next.isError()) {\n                    this.errors.push(new ParserError(this.next.toString(), this.input, this.locationText(), this.location));\n                }\n                this.advance();\n                n = this.next;\n            }\n        };\n        return _ParseAST;\n    }());\n    var SimpleExpressionChecker = /** @class */ (function () {\n        function SimpleExpressionChecker() {\n            this.errors = [];\n        }\n        SimpleExpressionChecker.check = function (ast) {\n            var s = new SimpleExpressionChecker();\n            ast.visit(s);\n            return s.errors;\n        };\n        SimpleExpressionChecker.prototype.visitImplicitReceiver = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitInterpolation = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitLiteralPrimitive = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitPropertyRead = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitPropertyWrite = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitSafePropertyRead = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitMethodCall = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitSafeMethodCall = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitFunctionCall = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitLiteralArray = function (ast, context) { this.visitAll(ast.expressions); };\n        SimpleExpressionChecker.prototype.visitLiteralMap = function (ast, context) { this.visitAll(ast.values); };\n        SimpleExpressionChecker.prototype.visitBinary = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitPrefixNot = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitNonNullAssert = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitConditional = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitPipe = function (ast, context) { this.errors.push('pipes'); };\n        SimpleExpressionChecker.prototype.visitKeyedRead = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitKeyedWrite = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitAll = function (asts) {\n            var _this = this;\n            return asts.map(function (node) { return node.visit(_this); });\n        };\n        SimpleExpressionChecker.prototype.visitChain = function (ast, context) { };\n        SimpleExpressionChecker.prototype.visitQuote = function (ast, context) { };\n        return SimpleExpressionChecker;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A path is an ordered set of elements. Typically a path is to  a\n     * particular offset in a source file. The head of the list is the top\n     * most node. The tail is the node that contains the offset directly.\n     *\n     * For example, the expression `a + b + c` might have an ast that looks\n     * like:\n     *     +\n     *    / \\\n     *   a   +\n     *      / \\\n     *     b   c\n     *\n     * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n     * 'c' at 9-10]` and the path the node at offset 1 would be\n     * `['+' at 1-10, 'a' at 1-2]`.\n     */\n    var AstPath = /** @class */ (function () {\n        function AstPath(path, position) {\n            if (position === void 0) { position = -1; }\n            this.path = path;\n            this.position = position;\n        }\n        Object.defineProperty(AstPath.prototype, \"empty\", {\n            get: function () { return !this.path || !this.path.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AstPath.prototype, \"head\", {\n            get: function () { return this.path[0]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AstPath.prototype, \"tail\", {\n            get: function () { return this.path[this.path.length - 1]; },\n            enumerable: true,\n            configurable: true\n        });\n        AstPath.prototype.parentOf = function (node) {\n            return node && this.path[this.path.indexOf(node) - 1];\n        };\n        AstPath.prototype.childOf = function (node) { return this.path[this.path.indexOf(node) + 1]; };\n        AstPath.prototype.first = function (ctor) {\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                var item = this.path[i];\n                if (item instanceof ctor)\n                    return item;\n            }\n        };\n        AstPath.prototype.push = function (node) { this.path.push(node); };\n        AstPath.prototype.pop = function () { return this.path.pop(); };\n        return AstPath;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Text$3 = /** @class */ (function () {\n        function Text(value, sourceSpan, i18n) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n            this.i18n = i18n;\n        }\n        Text.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n        return Text;\n    }());\n    var Expansion = /** @class */ (function () {\n        function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan, i18n) {\n            this.switchValue = switchValue;\n            this.type = type;\n            this.cases = cases;\n            this.sourceSpan = sourceSpan;\n            this.switchValueSourceSpan = switchValueSourceSpan;\n            this.i18n = i18n;\n        }\n        Expansion.prototype.visit = function (visitor, context) { return visitor.visitExpansion(this, context); };\n        return Expansion;\n    }());\n    var ExpansionCase = /** @class */ (function () {\n        function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n            this.value = value;\n            this.expression = expression;\n            this.sourceSpan = sourceSpan;\n            this.valueSourceSpan = valueSourceSpan;\n            this.expSourceSpan = expSourceSpan;\n        }\n        ExpansionCase.prototype.visit = function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n        return ExpansionCase;\n    }());\n    var Attribute = /** @class */ (function () {\n        function Attribute(name, value, sourceSpan, valueSpan, i18n) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n            this.valueSpan = valueSpan;\n            this.i18n = i18n;\n        }\n        Attribute.prototype.visit = function (visitor, context) { return visitor.visitAttribute(this, context); };\n        return Attribute;\n    }());\n    var Element$1 = /** @class */ (function () {\n        function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan, i18n) {\n            if (startSourceSpan === void 0) { startSourceSpan = null; }\n            if (endSourceSpan === void 0) { endSourceSpan = null; }\n            this.name = name;\n            this.attrs = attrs;\n            this.children = children;\n            this.sourceSpan = sourceSpan;\n            this.startSourceSpan = startSourceSpan;\n            this.endSourceSpan = endSourceSpan;\n            this.i18n = i18n;\n        }\n        Element.prototype.visit = function (visitor, context) { return visitor.visitElement(this, context); };\n        return Element;\n    }());\n    var Comment = /** @class */ (function () {\n        function Comment(value, sourceSpan) {\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        Comment.prototype.visit = function (visitor, context) { return visitor.visitComment(this, context); };\n        return Comment;\n    }());\n    function visitAll$1(visitor, nodes, context) {\n        if (context === void 0) { context = null; }\n        var result = [];\n        var visit = visitor.visit ?\n            function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n            function (ast) { return ast.visit(visitor, context); };\n        nodes.forEach(function (ast) {\n            var astResult = visit(ast);\n            if (astResult) {\n                result.push(astResult);\n            }\n        });\n        return result;\n    }\n    var RecursiveVisitor$1 = /** @class */ (function () {\n        function RecursiveVisitor() {\n        }\n        RecursiveVisitor.prototype.visitElement = function (ast, context) {\n            this.visitChildren(context, function (visit) {\n                visit(ast.attrs);\n                visit(ast.children);\n            });\n        };\n        RecursiveVisitor.prototype.visitAttribute = function (ast, context) { };\n        RecursiveVisitor.prototype.visitText = function (ast, context) { };\n        RecursiveVisitor.prototype.visitComment = function (ast, context) { };\n        RecursiveVisitor.prototype.visitExpansion = function (ast, context) {\n            return this.visitChildren(context, function (visit) { visit(ast.cases); });\n        };\n        RecursiveVisitor.prototype.visitExpansionCase = function (ast, context) { };\n        RecursiveVisitor.prototype.visitChildren = function (context, cb) {\n            var results = [];\n            var t = this;\n            function visit(children) {\n                if (children)\n                    results.push(visitAll$1(t, children, context));\n            }\n            cb(visit);\n            return [].concat.apply([], results);\n        };\n        return RecursiveVisitor;\n    }());\n    function spanOf(ast) {\n        var start = ast.sourceSpan.start.offset;\n        var end = ast.sourceSpan.end.offset;\n        if (ast instanceof Element$1) {\n            if (ast.endSourceSpan) {\n                end = ast.endSourceSpan.end.offset;\n            }\n            else if (ast.children && ast.children.length) {\n                end = spanOf(ast.children[ast.children.length - 1]).end;\n            }\n        }\n        return { start: start, end: end };\n    }\n    function findNode(nodes, position) {\n        var path = [];\n        var visitor = new /** @class */ (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.visit = function (ast, context) {\n                var span = spanOf(ast);\n                if (span.start <= position && position < span.end) {\n                    path.push(ast);\n                }\n                else {\n                    // Returning a value here will result in the children being skipped.\n                    return true;\n                }\n            };\n            return class_1;\n        }(RecursiveVisitor$1));\n        visitAll$1(visitor, nodes);\n        return new AstPath(path, position);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TokenType;\n    (function (TokenType) {\n        TokenType[TokenType[\"TAG_OPEN_START\"] = 0] = \"TAG_OPEN_START\";\n        TokenType[TokenType[\"TAG_OPEN_END\"] = 1] = \"TAG_OPEN_END\";\n        TokenType[TokenType[\"TAG_OPEN_END_VOID\"] = 2] = \"TAG_OPEN_END_VOID\";\n        TokenType[TokenType[\"TAG_CLOSE\"] = 3] = \"TAG_CLOSE\";\n        TokenType[TokenType[\"TEXT\"] = 4] = \"TEXT\";\n        TokenType[TokenType[\"ESCAPABLE_RAW_TEXT\"] = 5] = \"ESCAPABLE_RAW_TEXT\";\n        TokenType[TokenType[\"RAW_TEXT\"] = 6] = \"RAW_TEXT\";\n        TokenType[TokenType[\"COMMENT_START\"] = 7] = \"COMMENT_START\";\n        TokenType[TokenType[\"COMMENT_END\"] = 8] = \"COMMENT_END\";\n        TokenType[TokenType[\"CDATA_START\"] = 9] = \"CDATA_START\";\n        TokenType[TokenType[\"CDATA_END\"] = 10] = \"CDATA_END\";\n        TokenType[TokenType[\"ATTR_NAME\"] = 11] = \"ATTR_NAME\";\n        TokenType[TokenType[\"ATTR_VALUE\"] = 12] = \"ATTR_VALUE\";\n        TokenType[TokenType[\"DOC_TYPE\"] = 13] = \"DOC_TYPE\";\n        TokenType[TokenType[\"EXPANSION_FORM_START\"] = 14] = \"EXPANSION_FORM_START\";\n        TokenType[TokenType[\"EXPANSION_CASE_VALUE\"] = 15] = \"EXPANSION_CASE_VALUE\";\n        TokenType[TokenType[\"EXPANSION_CASE_EXP_START\"] = 16] = \"EXPANSION_CASE_EXP_START\";\n        TokenType[TokenType[\"EXPANSION_CASE_EXP_END\"] = 17] = \"EXPANSION_CASE_EXP_END\";\n        TokenType[TokenType[\"EXPANSION_FORM_END\"] = 18] = \"EXPANSION_FORM_END\";\n        TokenType[TokenType[\"EOF\"] = 19] = \"EOF\";\n    })(TokenType || (TokenType = {}));\n    var Token$1 = /** @class */ (function () {\n        function Token(type, parts, sourceSpan) {\n            this.type = type;\n            this.parts = parts;\n            this.sourceSpan = sourceSpan;\n        }\n        return Token;\n    }());\n    var TokenError = /** @class */ (function (_super) {\n        __extends(TokenError, _super);\n        function TokenError(errorMsg, tokenType, span) {\n            var _this = _super.call(this, span, errorMsg) || this;\n            _this.tokenType = tokenType;\n            return _this;\n        }\n        return TokenError;\n    }(ParseError));\n    var TokenizeResult = /** @class */ (function () {\n        function TokenizeResult(tokens, errors) {\n            this.tokens = tokens;\n            this.errors = errors;\n        }\n        return TokenizeResult;\n    }());\n    function tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n        if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n            .tokenize();\n    }\n    var _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n    function _unexpectedCharacterErrorMsg(charCode) {\n        var char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n        return \"Unexpected character \\\"\" + char + \"\\\"\";\n    }\n    function _unknownEntityErrorMsg(entitySrc) {\n        return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n    }\n    var _ControlFlowError = /** @class */ (function () {\n        function _ControlFlowError(error) {\n            this.error = error;\n        }\n        return _ControlFlowError;\n    }());\n    // See http://www.w3.org/TR/html51/syntax.html#writing\n    var _Tokenizer = /** @class */ (function () {\n        /**\n         * @param _file The html source\n         * @param _getTagDefinition\n         * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n         * @param _interpolationConfig\n         */\n        function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n            if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            this._file = _file;\n            this._getTagDefinition = _getTagDefinition;\n            this._tokenizeIcu = _tokenizeIcu;\n            this._interpolationConfig = _interpolationConfig;\n            // Note: this is always lowercase!\n            this._peek = -1;\n            this._nextPeek = -1;\n            this._index = -1;\n            this._line = 0;\n            this._column = -1;\n            this._expansionCaseStack = [];\n            this._inInterpolation = false;\n            this.tokens = [];\n            this.errors = [];\n            this._input = _file.content;\n            this._length = _file.content.length;\n            this._advance();\n        }\n        _Tokenizer.prototype._processCarriageReturns = function (content) {\n            // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n            // In order to keep the original position in the source, we can not\n            // pre-process it.\n            // Instead CRs are processed right before instantiating the tokens.\n            return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n        };\n        _Tokenizer.prototype.tokenize = function () {\n            while (this._peek !== $EOF) {\n                var start = this._getLocation();\n                try {\n                    if (this._attemptCharCode($LT)) {\n                        if (this._attemptCharCode($BANG)) {\n                            if (this._attemptCharCode($LBRACKET)) {\n                                this._consumeCdata(start);\n                            }\n                            else if (this._attemptCharCode($MINUS)) {\n                                this._consumeComment(start);\n                            }\n                            else {\n                                this._consumeDocType(start);\n                            }\n                        }\n                        else if (this._attemptCharCode($SLASH)) {\n                            this._consumeTagClose(start);\n                        }\n                        else {\n                            this._consumeTagOpen(start);\n                        }\n                    }\n                    else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                        this._consumeText();\n                    }\n                }\n                catch (e) {\n                    if (e instanceof _ControlFlowError) {\n                        this.errors.push(e.error);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            this._beginToken(TokenType.EOF);\n            this._endToken([]);\n            return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n        };\n        /**\n         * @returns whether an ICU token has been created\n         * @internal\n         */\n        _Tokenizer.prototype._tokenizeExpansionForm = function () {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                this._consumeExpansionFormStart();\n                return true;\n            }\n            if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n                this._consumeExpansionCaseStart();\n                return true;\n            }\n            if (this._peek === $RBRACE) {\n                if (this._isInExpansionCase()) {\n                    this._consumeExpansionCaseEnd();\n                    return true;\n                }\n                if (this._isInExpansionForm()) {\n                    this._consumeExpansionFormEnd();\n                    return true;\n                }\n            }\n            return false;\n        };\n        _Tokenizer.prototype._getLocation = function () {\n            return new ParseLocation(this._file, this._index, this._line, this._column);\n        };\n        _Tokenizer.prototype._getSpan = function (start, end) {\n            if (start === void 0) { start = this._getLocation(); }\n            if (end === void 0) { end = this._getLocation(); }\n            return new ParseSourceSpan(start, end);\n        };\n        _Tokenizer.prototype._beginToken = function (type, start) {\n            if (start === void 0) { start = this._getLocation(); }\n            this._currentTokenStart = start;\n            this._currentTokenType = type;\n        };\n        _Tokenizer.prototype._endToken = function (parts, end) {\n            if (end === void 0) { end = this._getLocation(); }\n            var token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n            this.tokens.push(token);\n            this._currentTokenStart = null;\n            this._currentTokenType = null;\n            return token;\n        };\n        _Tokenizer.prototype._createError = function (msg, span) {\n            if (this._isInExpansionForm()) {\n                msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n            }\n            var error = new TokenError(msg, this._currentTokenType, span);\n            this._currentTokenStart = null;\n            this._currentTokenType = null;\n            return new _ControlFlowError(error);\n        };\n        _Tokenizer.prototype._advance = function () {\n            if (this._index >= this._length) {\n                throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n            }\n            if (this._peek === $LF) {\n                this._line++;\n                this._column = 0;\n            }\n            else if (this._peek !== $LF && this._peek !== $CR) {\n                this._column++;\n            }\n            this._index++;\n            this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n            this._nextPeek =\n                this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n        };\n        _Tokenizer.prototype._attemptCharCode = function (charCode) {\n            if (this._peek === charCode) {\n                this._advance();\n                return true;\n            }\n            return false;\n        };\n        _Tokenizer.prototype._attemptCharCodeCaseInsensitive = function (charCode) {\n            if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n                this._advance();\n                return true;\n            }\n            return false;\n        };\n        _Tokenizer.prototype._requireCharCode = function (charCode) {\n            var location = this._getLocation();\n            if (!this._attemptCharCode(charCode)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n            }\n        };\n        _Tokenizer.prototype._attemptStr = function (chars) {\n            var len = chars.length;\n            if (this._index + len > this._length) {\n                return false;\n            }\n            var initialPosition = this._savePosition();\n            for (var i = 0; i < len; i++) {\n                if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                    // If attempting to parse the string fails, we want to reset the parser\n                    // to where it was before the attempt\n                    this._restorePosition(initialPosition);\n                    return false;\n                }\n            }\n            return true;\n        };\n        _Tokenizer.prototype._attemptStrCaseInsensitive = function (chars) {\n            for (var i = 0; i < chars.length; i++) {\n                if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        _Tokenizer.prototype._requireStr = function (chars) {\n            var location = this._getLocation();\n            if (!this._attemptStr(chars)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n            }\n        };\n        _Tokenizer.prototype._attemptCharCodeUntilFn = function (predicate) {\n            while (!predicate(this._peek)) {\n                this._advance();\n            }\n        };\n        _Tokenizer.prototype._requireCharCodeUntilFn = function (predicate, len) {\n            var start = this._getLocation();\n            this._attemptCharCodeUntilFn(predicate);\n            if (this._index - start.offset < len) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n            }\n        };\n        _Tokenizer.prototype._attemptUntilChar = function (char) {\n            while (this._peek !== char) {\n                this._advance();\n            }\n        };\n        _Tokenizer.prototype._readChar = function (decodeEntities) {\n            if (decodeEntities && this._peek === $AMPERSAND) {\n                return this._decodeEntity();\n            }\n            else {\n                var index = this._index;\n                this._advance();\n                return this._input[index];\n            }\n        };\n        _Tokenizer.prototype._decodeEntity = function () {\n            var start = this._getLocation();\n            this._advance();\n            if (this._attemptCharCode($HASH)) {\n                var isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n                var numberStart = this._getLocation().offset;\n                this._attemptCharCodeUntilFn(isDigitEntityEnd);\n                if (this._peek != $SEMICOLON) {\n                    throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n                }\n                this._advance();\n                var strNum = this._input.substring(numberStart, this._index - 1);\n                try {\n                    var charCode = parseInt(strNum, isHex ? 16 : 10);\n                    return String.fromCharCode(charCode);\n                }\n                catch (_a) {\n                    var entity = this._input.substring(start.offset + 1, this._index - 1);\n                    throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n                }\n            }\n            else {\n                var startPosition = this._savePosition();\n                this._attemptCharCodeUntilFn(isNamedEntityEnd);\n                if (this._peek != $SEMICOLON) {\n                    this._restorePosition(startPosition);\n                    return '&';\n                }\n                this._advance();\n                var name_1 = this._input.substring(start.offset + 1, this._index - 1);\n                var char = NAMED_ENTITIES[name_1];\n                if (!char) {\n                    throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n                }\n                return char;\n            }\n        };\n        _Tokenizer.prototype._consumeRawText = function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n            var tagCloseStart;\n            var textStart = this._getLocation();\n            this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n            var parts = [];\n            while (true) {\n                tagCloseStart = this._getLocation();\n                if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                    break;\n                }\n                if (this._index > tagCloseStart.offset) {\n                    // add the characters consumed by the previous if statement to the output\n                    parts.push(this._input.substring(tagCloseStart.offset, this._index));\n                }\n                while (this._peek !== firstCharOfEnd) {\n                    parts.push(this._readChar(decodeEntities));\n                }\n            }\n            return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n        };\n        _Tokenizer.prototype._consumeComment = function (start) {\n            var _this = this;\n            this._beginToken(TokenType.COMMENT_START, start);\n            this._requireCharCode($MINUS);\n            this._endToken([]);\n            var textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n            this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n            this._endToken([]);\n        };\n        _Tokenizer.prototype._consumeCdata = function (start) {\n            var _this = this;\n            this._beginToken(TokenType.CDATA_START, start);\n            this._requireStr('CDATA[');\n            this._endToken([]);\n            var textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n            this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n            this._endToken([]);\n        };\n        _Tokenizer.prototype._consumeDocType = function (start) {\n            this._beginToken(TokenType.DOC_TYPE, start);\n            this._attemptUntilChar($GT);\n            this._advance();\n            this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n        };\n        _Tokenizer.prototype._consumePrefixAndName = function () {\n            var nameOrPrefixStart = this._index;\n            var prefix = null;\n            while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n                this._advance();\n            }\n            var nameStart;\n            if (this._peek === $COLON) {\n                this._advance();\n                prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n                nameStart = this._index;\n            }\n            else {\n                nameStart = nameOrPrefixStart;\n            }\n            this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n            var name = this._input.substring(nameStart, this._index);\n            return [prefix, name];\n        };\n        _Tokenizer.prototype._consumeTagOpen = function (start) {\n            var savedPos = this._savePosition();\n            var tagName;\n            var lowercaseTagName;\n            try {\n                if (!isAsciiLetter(this._peek)) {\n                    throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n                }\n                var nameStart = this._index;\n                this._consumeTagOpenStart(start);\n                tagName = this._input.substring(nameStart, this._index);\n                lowercaseTagName = tagName.toLowerCase();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                while (this._peek !== $SLASH && this._peek !== $GT) {\n                    this._consumeAttributeName();\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    if (this._attemptCharCode($EQ)) {\n                        this._attemptCharCodeUntilFn(isNotWhitespace);\n                        this._consumeAttributeValue();\n                    }\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                }\n                this._consumeTagOpenEnd();\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    // When the start tag is invalid, assume we want a \"<\"\n                    this._restorePosition(savedPos);\n                    // Back to back text tokens are merged at the end\n                    this._beginToken(TokenType.TEXT, start);\n                    this._endToken(['<']);\n                    return;\n                }\n                throw e;\n            }\n            var contentTokenType = this._getTagDefinition(tagName).contentType;\n            if (contentTokenType === exports.TagContentType.RAW_TEXT) {\n                this._consumeRawTextWithTagClose(lowercaseTagName, false);\n            }\n            else if (contentTokenType === exports.TagContentType.ESCAPABLE_RAW_TEXT) {\n                this._consumeRawTextWithTagClose(lowercaseTagName, true);\n            }\n        };\n        _Tokenizer.prototype._consumeRawTextWithTagClose = function (lowercaseTagName, decodeEntities) {\n            var _this = this;\n            var textToken = this._consumeRawText(decodeEntities, $LT, function () {\n                if (!_this._attemptCharCode($SLASH))\n                    return false;\n                _this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                    return false;\n                _this._attemptCharCodeUntilFn(isNotWhitespace);\n                return _this._attemptCharCode($GT);\n            });\n            this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n            this._endToken([null, lowercaseTagName]);\n        };\n        _Tokenizer.prototype._consumeTagOpenStart = function (start) {\n            this._beginToken(TokenType.TAG_OPEN_START, start);\n            var parts = this._consumePrefixAndName();\n            this._endToken(parts);\n        };\n        _Tokenizer.prototype._consumeAttributeName = function () {\n            this._beginToken(TokenType.ATTR_NAME);\n            var prefixAndName = this._consumePrefixAndName();\n            this._endToken(prefixAndName);\n        };\n        _Tokenizer.prototype._consumeAttributeValue = function () {\n            this._beginToken(TokenType.ATTR_VALUE);\n            var value;\n            if (this._peek === $SQ || this._peek === $DQ) {\n                var quoteChar = this._peek;\n                this._advance();\n                var parts = [];\n                while (this._peek !== quoteChar) {\n                    parts.push(this._readChar(true));\n                }\n                value = parts.join('');\n                this._advance();\n            }\n            else {\n                var valueStart = this._index;\n                this._requireCharCodeUntilFn(isNameEnd, 1);\n                value = this._input.substring(valueStart, this._index);\n            }\n            this._endToken([this._processCarriageReturns(value)]);\n        };\n        _Tokenizer.prototype._consumeTagOpenEnd = function () {\n            var tokenType = this._attemptCharCode($SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n            this._beginToken(tokenType);\n            this._requireCharCode($GT);\n            this._endToken([]);\n        };\n        _Tokenizer.prototype._consumeTagClose = function (start) {\n            this._beginToken(TokenType.TAG_CLOSE, start);\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            var prefixAndName = this._consumePrefixAndName();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._requireCharCode($GT);\n            this._endToken(prefixAndName);\n        };\n        _Tokenizer.prototype._consumeExpansionFormStart = function () {\n            this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n            this._requireCharCode($LBRACE);\n            this._endToken([]);\n            this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n            this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n            var condition = this._readUntil($COMMA);\n            this._endToken([condition], this._getLocation());\n            this._requireCharCode($COMMA);\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n            var type = this._readUntil($COMMA);\n            this._endToken([type], this._getLocation());\n            this._requireCharCode($COMMA);\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n        };\n        _Tokenizer.prototype._consumeExpansionCaseStart = function () {\n            this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n            var value = this._readUntil($LBRACE).trim();\n            this._endToken([value], this._getLocation());\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n            this._requireCharCode($LBRACE);\n            this._endToken([], this._getLocation());\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n        };\n        _Tokenizer.prototype._consumeExpansionCaseEnd = function () {\n            this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n            this._requireCharCode($RBRACE);\n            this._endToken([], this._getLocation());\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            this._expansionCaseStack.pop();\n        };\n        _Tokenizer.prototype._consumeExpansionFormEnd = function () {\n            this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n            this._requireCharCode($RBRACE);\n            this._endToken([]);\n            this._expansionCaseStack.pop();\n        };\n        _Tokenizer.prototype._consumeText = function () {\n            var start = this._getLocation();\n            this._beginToken(TokenType.TEXT, start);\n            var parts = [];\n            do {\n                if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                    parts.push(this._interpolationConfig.start);\n                    this._inInterpolation = true;\n                }\n                else if (this._interpolationConfig && this._inInterpolation &&\n                    this._attemptStr(this._interpolationConfig.end)) {\n                    parts.push(this._interpolationConfig.end);\n                    this._inInterpolation = false;\n                }\n                else {\n                    parts.push(this._readChar(true));\n                }\n            } while (!this._isTextEnd());\n            this._endToken([this._processCarriageReturns(parts.join(''))]);\n        };\n        _Tokenizer.prototype._isTextEnd = function () {\n            if (this._peek === $LT || this._peek === $EOF) {\n                return true;\n            }\n            if (this._tokenizeIcu && !this._inInterpolation) {\n                if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                    // start of an expansion form\n                    return true;\n                }\n                if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                    // end of and expansion case\n                    return true;\n                }\n            }\n            return false;\n        };\n        _Tokenizer.prototype._savePosition = function () {\n            return [this._peek, this._index, this._column, this._line, this.tokens.length];\n        };\n        _Tokenizer.prototype._readUntil = function (char) {\n            var start = this._index;\n            this._attemptUntilChar(char);\n            return this._input.substring(start, this._index);\n        };\n        _Tokenizer.prototype._restorePosition = function (position) {\n            this._peek = position[0];\n            this._index = position[1];\n            this._column = position[2];\n            this._line = position[3];\n            var nbTokens = position[4];\n            if (nbTokens < this.tokens.length) {\n                // remove any extra tokens\n                this.tokens = this.tokens.slice(0, nbTokens);\n            }\n        };\n        _Tokenizer.prototype._isInExpansionCase = function () {\n            return this._expansionCaseStack.length > 0 &&\n                this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                    TokenType.EXPANSION_CASE_EXP_START;\n        };\n        _Tokenizer.prototype._isInExpansionForm = function () {\n            return this._expansionCaseStack.length > 0 &&\n                this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                    TokenType.EXPANSION_FORM_START;\n        };\n        return _Tokenizer;\n    }());\n    function isNotWhitespace(code) {\n        return !isWhitespace(code) || code === $EOF;\n    }\n    function isNameEnd(code) {\n        return isWhitespace(code) || code === $GT || code === $SLASH ||\n            code === $SQ || code === $DQ || code === $EQ;\n    }\n    function isPrefixEnd(code) {\n        return (code < $a || $z < code) && (code < $A || $Z < code) &&\n            (code < $0 || code > $9);\n    }\n    function isDigitEntityEnd(code) {\n        return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n    }\n    function isNamedEntityEnd(code) {\n        return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n    }\n    function isExpansionFormStart(input, offset, interpolationConfig) {\n        var isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n        return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n    }\n    function isExpansionCaseStart(peek) {\n        return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n    }\n    function compareCharCodeCaseInsensitive(code1, code2) {\n        return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n    }\n    function toUpperCaseCharCode(code) {\n        return code >= $a && code <= $z ? code - $a + $A : code;\n    }\n    function mergeTextTokens(srcTokens) {\n        var dstTokens = [];\n        var lastDstToken = undefined;\n        for (var i = 0; i < srcTokens.length; i++) {\n            var token = srcTokens[i];\n            if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n                lastDstToken.parts[0] += token.parts[0];\n                lastDstToken.sourceSpan.end = token.sourceSpan.end;\n            }\n            else {\n                lastDstToken = token;\n                dstTokens.push(lastDstToken);\n            }\n        }\n        return dstTokens;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TreeError = /** @class */ (function (_super) {\n        __extends(TreeError, _super);\n        function TreeError(elementName, span, msg) {\n            var _this = _super.call(this, span, msg) || this;\n            _this.elementName = elementName;\n            return _this;\n        }\n        TreeError.create = function (elementName, span, msg) {\n            return new TreeError(elementName, span, msg);\n        };\n        return TreeError;\n    }(ParseError));\n    var ParseTreeResult = /** @class */ (function () {\n        function ParseTreeResult(rootNodes, errors) {\n            this.rootNodes = rootNodes;\n            this.errors = errors;\n        }\n        return ParseTreeResult;\n    }());\n    var Parser$1 = /** @class */ (function () {\n        function Parser(getTagDefinition) {\n            this.getTagDefinition = getTagDefinition;\n        }\n        Parser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n            var treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n            return new ParseTreeResult(treeAndErrors.rootNodes, tokensAndErrors.errors.concat(treeAndErrors.errors));\n        };\n        return Parser;\n    }());\n    var _TreeBuilder = /** @class */ (function () {\n        function _TreeBuilder(tokens, getTagDefinition) {\n            this.tokens = tokens;\n            this.getTagDefinition = getTagDefinition;\n            this._index = -1;\n            this._rootNodes = [];\n            this._errors = [];\n            this._elementStack = [];\n            this._advance();\n        }\n        _TreeBuilder.prototype.build = function () {\n            while (this._peek.type !== TokenType.EOF) {\n                if (this._peek.type === TokenType.TAG_OPEN_START) {\n                    this._consumeStartTag(this._advance());\n                }\n                else if (this._peek.type === TokenType.TAG_CLOSE) {\n                    this._consumeEndTag(this._advance());\n                }\n                else if (this._peek.type === TokenType.CDATA_START) {\n                    this._closeVoidElement();\n                    this._consumeCdata(this._advance());\n                }\n                else if (this._peek.type === TokenType.COMMENT_START) {\n                    this._closeVoidElement();\n                    this._consumeComment(this._advance());\n                }\n                else if (this._peek.type === TokenType.TEXT || this._peek.type === TokenType.RAW_TEXT ||\n                    this._peek.type === TokenType.ESCAPABLE_RAW_TEXT) {\n                    this._closeVoidElement();\n                    this._consumeText(this._advance());\n                }\n                else if (this._peek.type === TokenType.EXPANSION_FORM_START) {\n                    this._consumeExpansion(this._advance());\n                }\n                else {\n                    // Skip all other tokens...\n                    this._advance();\n                }\n            }\n            return new ParseTreeResult(this._rootNodes, this._errors);\n        };\n        _TreeBuilder.prototype._advance = function () {\n            var prev = this._peek;\n            if (this._index < this.tokens.length - 1) {\n                // Note: there is always an EOF token at the end\n                this._index++;\n            }\n            this._peek = this.tokens[this._index];\n            return prev;\n        };\n        _TreeBuilder.prototype._advanceIf = function (type) {\n            if (this._peek.type === type) {\n                return this._advance();\n            }\n            return null;\n        };\n        _TreeBuilder.prototype._consumeCdata = function (startToken) {\n            this._consumeText(this._advance());\n            this._advanceIf(TokenType.CDATA_END);\n        };\n        _TreeBuilder.prototype._consumeComment = function (token) {\n            var text = this._advanceIf(TokenType.RAW_TEXT);\n            this._advanceIf(TokenType.COMMENT_END);\n            var value = text != null ? text.parts[0].trim() : null;\n            this._addToParent(new Comment(value, token.sourceSpan));\n        };\n        _TreeBuilder.prototype._consumeExpansion = function (token) {\n            var switchValue = this._advance();\n            var type = this._advance();\n            var cases = [];\n            // read =\n            while (this._peek.type === TokenType.EXPANSION_CASE_VALUE) {\n                var expCase = this._parseExpansionCase();\n                if (!expCase)\n                    return; // error\n                cases.push(expCase);\n            }\n            // read the final }\n            if (this._peek.type !== TokenType.EXPANSION_FORM_END) {\n                this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return;\n            }\n            var sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n            this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n            this._advance();\n        };\n        _TreeBuilder.prototype._parseExpansionCase = function () {\n            var value = this._advance();\n            // read {\n            if (this._peek.type !== TokenType.EXPANSION_CASE_EXP_START) {\n                this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n                return null;\n            }\n            // read until }\n            var start = this._advance();\n            var exp = this._collectExpansionExpTokens(start);\n            if (!exp)\n                return null;\n            var end = this._advance();\n            exp.push(new Token$1(TokenType.EOF, [], end.sourceSpan));\n            // parse everything in between { and }\n            var parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n            if (parsedExp.errors.length > 0) {\n                this._errors = this._errors.concat(parsedExp.errors);\n                return null;\n            }\n            var sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n            var expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n            return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n        };\n        _TreeBuilder.prototype._collectExpansionExpTokens = function (start) {\n            var exp = [];\n            var expansionFormStack = [TokenType.EXPANSION_CASE_EXP_START];\n            while (true) {\n                if (this._peek.type === TokenType.EXPANSION_FORM_START ||\n                    this._peek.type === TokenType.EXPANSION_CASE_EXP_START) {\n                    expansionFormStack.push(this._peek.type);\n                }\n                if (this._peek.type === TokenType.EXPANSION_CASE_EXP_END) {\n                    if (lastOnStack(expansionFormStack, TokenType.EXPANSION_CASE_EXP_START)) {\n                        expansionFormStack.pop();\n                        if (expansionFormStack.length == 0)\n                            return exp;\n                    }\n                    else {\n                        this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                        return null;\n                    }\n                }\n                if (this._peek.type === TokenType.EXPANSION_FORM_END) {\n                    if (lastOnStack(expansionFormStack, TokenType.EXPANSION_FORM_START)) {\n                        expansionFormStack.pop();\n                    }\n                    else {\n                        this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                        return null;\n                    }\n                }\n                if (this._peek.type === TokenType.EOF) {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n                exp.push(this._advance());\n            }\n        };\n        _TreeBuilder.prototype._consumeText = function (token) {\n            var text = token.parts[0];\n            if (text.length > 0 && text[0] == '\\n') {\n                var parent_1 = this._getParentElement();\n                if (parent_1 != null && parent_1.children.length == 0 &&\n                    this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                    text = text.substring(1);\n                }\n            }\n            if (text.length > 0) {\n                this._addToParent(new Text$3(text, token.sourceSpan));\n            }\n        };\n        _TreeBuilder.prototype._closeVoidElement = function () {\n            var el = this._getParentElement();\n            if (el && this.getTagDefinition(el.name).isVoid) {\n                this._elementStack.pop();\n            }\n        };\n        _TreeBuilder.prototype._consumeStartTag = function (startTagToken) {\n            var prefix = startTagToken.parts[0];\n            var name = startTagToken.parts[1];\n            var attrs = [];\n            while (this._peek.type === TokenType.ATTR_NAME) {\n                attrs.push(this._consumeAttr(this._advance()));\n            }\n            var fullName = this._getElementFullName(prefix, name, this._getParentElement());\n            var selfClosing = false;\n            // Note: There could have been a tokenizer error\n            // so that we don't get a token for the end tag...\n            if (this._peek.type === TokenType.TAG_OPEN_END_VOID) {\n                this._advance();\n                selfClosing = true;\n                var tagDef = this.getTagDefinition(fullName);\n                if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                    this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n                }\n            }\n            else if (this._peek.type === TokenType.TAG_OPEN_END) {\n                this._advance();\n                selfClosing = false;\n            }\n            var end = this._peek.sourceSpan.start;\n            var span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n            var el = new Element$1(fullName, attrs, [], span, span, undefined);\n            this._pushElement(el);\n            if (selfClosing) {\n                this._popElement(fullName);\n                el.endSourceSpan = span;\n            }\n        };\n        _TreeBuilder.prototype._pushElement = function (el) {\n            var parentEl = this._getParentElement();\n            if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n                this._elementStack.pop();\n            }\n            var tagDef = this.getTagDefinition(el.name);\n            var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n            if (parent && tagDef.requireExtraParent(parent.name)) {\n                var newParent = new Element$1(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n                this._insertBeforeContainer(parent, container, newParent);\n            }\n            this._addToParent(el);\n            this._elementStack.push(el);\n        };\n        _TreeBuilder.prototype._consumeEndTag = function (endTagToken) {\n            var fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n            if (this._getParentElement()) {\n                this._getParentElement().endSourceSpan = endTagToken.sourceSpan;\n            }\n            if (this.getTagDefinition(fullName).isVoid) {\n                this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n            }\n            else if (!this._popElement(fullName)) {\n                var errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n                this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n            }\n        };\n        _TreeBuilder.prototype._popElement = function (fullName) {\n            for (var stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n                var el = this._elementStack[stackIndex];\n                if (el.name == fullName) {\n                    this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                    return true;\n                }\n                if (!this.getTagDefinition(el.name).closedByParent) {\n                    return false;\n                }\n            }\n            return false;\n        };\n        _TreeBuilder.prototype._consumeAttr = function (attrName) {\n            var fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n            var end = attrName.sourceSpan.end;\n            var value = '';\n            var valueSpan = undefined;\n            if (this._peek.type === TokenType.ATTR_VALUE) {\n                var valueToken = this._advance();\n                value = valueToken.parts[0];\n                end = valueToken.sourceSpan.end;\n                valueSpan = valueToken.sourceSpan;\n            }\n            return new Attribute(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n        };\n        _TreeBuilder.prototype._getParentElement = function () {\n            return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n        };\n        /**\n         * Returns the parent in the DOM and the container.\n         *\n         * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n         */\n        _TreeBuilder.prototype._getParentElementSkippingContainers = function () {\n            var container = null;\n            for (var i = this._elementStack.length - 1; i >= 0; i--) {\n                if (!isNgContainer(this._elementStack[i].name)) {\n                    return { parent: this._elementStack[i], container: container };\n                }\n                container = this._elementStack[i];\n            }\n            return { parent: null, container: container };\n        };\n        _TreeBuilder.prototype._addToParent = function (node) {\n            var parent = this._getParentElement();\n            if (parent != null) {\n                parent.children.push(node);\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n        };\n        /**\n         * Insert a node between the parent and the container.\n         * When no container is given, the node is appended as a child of the parent.\n         * Also updates the element stack accordingly.\n         *\n         * @internal\n         */\n        _TreeBuilder.prototype._insertBeforeContainer = function (parent, container, node) {\n            if (!container) {\n                this._addToParent(node);\n                this._elementStack.push(node);\n            }\n            else {\n                if (parent) {\n                    // replace the container with the new node in the children\n                    var index = parent.children.indexOf(container);\n                    parent.children[index] = node;\n                }\n                else {\n                    this._rootNodes.push(node);\n                }\n                node.children.push(container);\n                this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n            }\n        };\n        _TreeBuilder.prototype._getElementFullName = function (prefix, localName, parentElement) {\n            if (prefix == null) {\n                prefix = this.getTagDefinition(localName).implicitNamespacePrefix;\n                if (prefix == null && parentElement != null) {\n                    prefix = getNsPrefix(parentElement.name);\n                }\n            }\n            return mergeNsAndName(prefix, localName);\n        };\n        return _TreeBuilder;\n    }());\n    function lastOnStack(stack, element) {\n        return stack.length > 0 && stack[stack.length - 1] === element;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var HtmlParser = /** @class */ (function (_super) {\n        __extends(HtmlParser, _super);\n        function HtmlParser() {\n            return _super.call(this, getHtmlTagDefinition) || this;\n        }\n        HtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n        };\n        return HtmlParser;\n    }(Parser$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\n    var SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n    // Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n    // Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    var WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\n    var NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\n    var WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n    function hasPreserveWhitespacesAttr(attrs) {\n        return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here.\n     */\n    function replaceNgsp(value) {\n        // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n        return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n    }\n    /**\n     * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n     * - consider spaces, tabs and new lines as whitespace characters;\n     * - drop text nodes consisting of whitespace characters only;\n     * - for all other text nodes replace consecutive whitespace characters with one space;\n     * - convert &ngsp; pseudo-entity to a single space;\n     *\n     * Removal and trimming of whitespaces have positive performance impact (less code to generate\n     * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n     * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n     * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n     * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n     * and might be changed to \"on\" by default.\n     */\n    var WhitespaceVisitor = /** @class */ (function () {\n        function WhitespaceVisitor() {\n        }\n        WhitespaceVisitor.prototype.visitElement = function (element, context) {\n            if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n                // don't descent into elements where we need to preserve whitespaces\n                // but still visit all attributes to eliminate one used as a market to preserve WS\n                return new Element$1(element.name, visitAll$1(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n            }\n            return new Element$1(element.name, element.attrs, visitAll$1(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n        };\n        WhitespaceVisitor.prototype.visitAttribute = function (attribute, context) {\n            return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n        };\n        WhitespaceVisitor.prototype.visitText = function (text, context) {\n            var isNotBlank = text.value.match(NO_WS_REGEXP);\n            if (isNotBlank) {\n                return new Text$3(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan, text.i18n);\n            }\n            return null;\n        };\n        WhitespaceVisitor.prototype.visitComment = function (comment, context) { return comment; };\n        WhitespaceVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n        WhitespaceVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n        return WhitespaceVisitor;\n    }());\n    function removeWhitespaces(htmlAstWithErrors) {\n        return new ParseTreeResult(visitAll$1(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // =================================================================================================\n    // =================================================================================================\n    // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n    // =================================================================================================\n    // =================================================================================================\n    //\n    //        DO NOT EDIT THIS LIST OF SECURITY SENSITIVE PROPERTIES WITHOUT A SECURITY REVIEW!\n    //                               Reach out to mprobst for details.\n    //\n    // =================================================================================================\n    /** Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'. */\n    var _SECURITY_SCHEMA;\n    function SECURITY_SCHEMA() {\n        if (!_SECURITY_SCHEMA) {\n            _SECURITY_SCHEMA = {};\n            // Case is insignificant below, all element and attribute names are lower-cased for lookup.\n            registerContext(SecurityContext.HTML, [\n                'iframe|srcdoc',\n                '*|innerHTML',\n                '*|outerHTML',\n            ]);\n            registerContext(SecurityContext.STYLE, ['*|style']);\n            // NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\n            registerContext(SecurityContext.URL, [\n                '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n                'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n                'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n                'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n            ]);\n            registerContext(SecurityContext.RESOURCE_URL, [\n                'applet|code',\n                'applet|codebase',\n                'base|href',\n                'embed|src',\n                'frame|src',\n                'head|profile',\n                'html|manifest',\n                'iframe|src',\n                'link|href',\n                'media|src',\n                'object|codebase',\n                'object|data',\n                'script|src',\n            ]);\n        }\n        return _SECURITY_SCHEMA;\n    }\n    function registerContext(ctx, specs) {\n        var e_1, _a;\n        try {\n            for (var specs_1 = __values(specs), specs_1_1 = specs_1.next(); !specs_1_1.done; specs_1_1 = specs_1.next()) {\n                var spec = specs_1_1.value;\n                _SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (specs_1_1 && !specs_1_1.done && (_a = specs_1.return)) _a.call(specs_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ElementSchemaRegistry = /** @class */ (function () {\n        function ElementSchemaRegistry() {\n        }\n        return ElementSchemaRegistry;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BOOLEAN = 'boolean';\n    var NUMBER = 'number';\n    var STRING = 'string';\n    var OBJECT = 'object';\n    /**\n     * This array represents the DOM schema. It encodes inheritance, properties, and events.\n     *\n     * ## Overview\n     *\n     * Each line represents one kind of element. The `element_inheritance` and properties are joined\n     * using `element_inheritance|properties` syntax.\n     *\n     * ## Element Inheritance\n     *\n     * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n     * Here the individual elements are separated by `,` (commas). Every element in the list\n     * has identical properties.\n     *\n     * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n     * specified then `\"\"` (blank) element is assumed.\n     *\n     * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n     * elements.\n     *\n     * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n     *\n     * ## Properties\n     *\n     * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n     * by a special character designating its type:\n     *\n     * - (no prefix): property is a string.\n     * - `*`: property represents an event.\n     * - `!`: property is a boolean.\n     * - `#`: property is a number.\n     * - `%`: property is an object.\n     *\n     * ## Query\n     *\n     * The class creates an internal squas representation which allows to easily answer the query of\n     * if a given property exist on a given element.\n     *\n     * NOTE: We don't yet support querying for types or events.\n     * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n     *       see dom_element_schema_registry_spec.ts\n     */\n    // =================================================================================================\n    // =================================================================================================\n    // =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n    // =================================================================================================\n    // =================================================================================================\n    //\n    //                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n    //\n    // Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n    // dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n    //\n    // =================================================================================================\n    var SCHEMA = [\n        '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n            /* added manually to avoid breaking changes */\n            ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n        '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n        'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n        'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n        ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n        ':svg:graphics^:svg:|',\n        ':svg:animation^:svg:|*begin,*end,*repeat',\n        ':svg:geometry^:svg:|',\n        ':svg:componentTransferFunction^:svg:|',\n        ':svg:gradient^:svg:|',\n        ':svg:textContent^:svg:graphics|',\n        ':svg:textPositioning^:svg:textContent|',\n        'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n        'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n        'audio^media|',\n        'br^[HTMLElement]|clear',\n        'base^[HTMLElement]|href,target',\n        'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n        'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n        'canvas^[HTMLElement]|#height,#width',\n        'content^[HTMLElement]|select',\n        'dl^[HTMLElement]|!compact',\n        'datalist^[HTMLElement]|',\n        'details^[HTMLElement]|!open',\n        'dialog^[HTMLElement]|!open,returnValue',\n        'dir^[HTMLElement]|!compact',\n        'div^[HTMLElement]|align',\n        'embed^[HTMLElement]|align,height,name,src,type,width',\n        'fieldset^[HTMLElement]|!disabled,name',\n        'font^[HTMLElement]|color,face,size',\n        'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n        'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n        'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n        'hr^[HTMLElement]|align,color,!noShade,size,width',\n        'head^[HTMLElement]|',\n        'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n        'html^[HTMLElement]|version',\n        'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n        'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n        'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n        'li^[HTMLElement]|type,#value',\n        'label^[HTMLElement]|htmlFor',\n        'legend^[HTMLElement]|align',\n        'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n        'map^[HTMLElement]|name',\n        'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n        'menu^[HTMLElement]|!compact',\n        'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n        'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n        'ins,del^[HTMLElement]|cite,dateTime',\n        'ol^[HTMLElement]|!compact,!reversed,#start,type',\n        'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n        'optgroup^[HTMLElement]|!disabled,label',\n        'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n        'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n        'p^[HTMLElement]|align',\n        'param^[HTMLElement]|name,type,value,valueType',\n        'picture^[HTMLElement]|',\n        'pre^[HTMLElement]|#width',\n        'progress^[HTMLElement]|#max,#value',\n        'q,blockquote,cite^[HTMLElement]|',\n        'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n        'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n        'shadow^[HTMLElement]|',\n        'slot^[HTMLElement]|name',\n        'source^[HTMLElement]|media,sizes,src,srcset,type',\n        'span^[HTMLElement]|',\n        'style^[HTMLElement]|!disabled,media,type',\n        'caption^[HTMLElement]|align',\n        'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n        'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n        'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n        'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n        'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n        'template^[HTMLElement]|',\n        'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n        'title^[HTMLElement]|text',\n        'track^[HTMLElement]|!default,kind,label,src,srclang',\n        'ul^[HTMLElement]|!compact,type',\n        'unknown^[HTMLElement]|',\n        'video^media|#height,poster,#width',\n        ':svg:a^:svg:graphics|',\n        ':svg:animate^:svg:animation|',\n        ':svg:animateMotion^:svg:animation|',\n        ':svg:animateTransform^:svg:animation|',\n        ':svg:circle^:svg:geometry|',\n        ':svg:clipPath^:svg:graphics|',\n        ':svg:defs^:svg:graphics|',\n        ':svg:desc^:svg:|',\n        ':svg:discard^:svg:|',\n        ':svg:ellipse^:svg:geometry|',\n        ':svg:feBlend^:svg:|',\n        ':svg:feColorMatrix^:svg:|',\n        ':svg:feComponentTransfer^:svg:|',\n        ':svg:feComposite^:svg:|',\n        ':svg:feConvolveMatrix^:svg:|',\n        ':svg:feDiffuseLighting^:svg:|',\n        ':svg:feDisplacementMap^:svg:|',\n        ':svg:feDistantLight^:svg:|',\n        ':svg:feDropShadow^:svg:|',\n        ':svg:feFlood^:svg:|',\n        ':svg:feFuncA^:svg:componentTransferFunction|',\n        ':svg:feFuncB^:svg:componentTransferFunction|',\n        ':svg:feFuncG^:svg:componentTransferFunction|',\n        ':svg:feFuncR^:svg:componentTransferFunction|',\n        ':svg:feGaussianBlur^:svg:|',\n        ':svg:feImage^:svg:|',\n        ':svg:feMerge^:svg:|',\n        ':svg:feMergeNode^:svg:|',\n        ':svg:feMorphology^:svg:|',\n        ':svg:feOffset^:svg:|',\n        ':svg:fePointLight^:svg:|',\n        ':svg:feSpecularLighting^:svg:|',\n        ':svg:feSpotLight^:svg:|',\n        ':svg:feTile^:svg:|',\n        ':svg:feTurbulence^:svg:|',\n        ':svg:filter^:svg:|',\n        ':svg:foreignObject^:svg:graphics|',\n        ':svg:g^:svg:graphics|',\n        ':svg:image^:svg:graphics|',\n        ':svg:line^:svg:geometry|',\n        ':svg:linearGradient^:svg:gradient|',\n        ':svg:mpath^:svg:|',\n        ':svg:marker^:svg:|',\n        ':svg:mask^:svg:|',\n        ':svg:metadata^:svg:|',\n        ':svg:path^:svg:geometry|',\n        ':svg:pattern^:svg:|',\n        ':svg:polygon^:svg:geometry|',\n        ':svg:polyline^:svg:geometry|',\n        ':svg:radialGradient^:svg:gradient|',\n        ':svg:rect^:svg:geometry|',\n        ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n        ':svg:script^:svg:|type',\n        ':svg:set^:svg:animation|',\n        ':svg:stop^:svg:|',\n        ':svg:style^:svg:|!disabled,media,title,type',\n        ':svg:switch^:svg:graphics|',\n        ':svg:symbol^:svg:|',\n        ':svg:tspan^:svg:textPositioning|',\n        ':svg:text^:svg:textPositioning|',\n        ':svg:textPath^:svg:textContent|',\n        ':svg:title^:svg:|',\n        ':svg:use^:svg:graphics|',\n        ':svg:view^:svg:|#zoomAndPan',\n        'data^[HTMLElement]|value',\n        'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n        'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n        'summary^[HTMLElement]|',\n        'time^[HTMLElement]|dateTime',\n        ':svg:cursor^:svg:|',\n    ];\n    var _ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    var DomElementSchemaRegistry = /** @class */ (function (_super) {\n        __extends(DomElementSchemaRegistry, _super);\n        function DomElementSchemaRegistry() {\n            var _this = _super.call(this) || this;\n            _this._schema = {};\n            SCHEMA.forEach(function (encodedType) {\n                var type = {};\n                var _a = __read(encodedType.split('|'), 2), strType = _a[0], strProperties = _a[1];\n                var properties = strProperties.split(',');\n                var _b = __read(strType.split('^'), 2), typeNames = _b[0], superName = _b[1];\n                typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n                var superType = superName && _this._schema[superName.toLowerCase()];\n                if (superType) {\n                    Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n                }\n                properties.forEach(function (property) {\n                    if (property.length > 0) {\n                        switch (property[0]) {\n                            case '*':\n                                // We don't yet support events.\n                                // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                                // will\n                                // almost certainly introduce bad XSS vulnerabilities.\n                                // type[property.substring(1)] = EVENT;\n                                break;\n                            case '!':\n                                type[property.substring(1)] = BOOLEAN;\n                                break;\n                            case '#':\n                                type[property.substring(1)] = NUMBER;\n                                break;\n                            case '%':\n                                type[property.substring(1)] = OBJECT;\n                                break;\n                            default:\n                                type[property] = STRING;\n                        }\n                    }\n                });\n            });\n            return _this;\n        }\n        DomElementSchemaRegistry.prototype.hasProperty = function (tagName, propName, schemaMetas) {\n            if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n                return true;\n            }\n            if (tagName.indexOf('-') > -1) {\n                if (isNgContainer(tagName) || isNgContent(tagName)) {\n                    return false;\n                }\n                if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                    // Can't tell now as we don't know which properties a custom element will get\n                    // once it is instantiated\n                    return true;\n                }\n            }\n            var elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n            return !!elementProperties[propName];\n        };\n        DomElementSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n            if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n                return true;\n            }\n            if (tagName.indexOf('-') > -1) {\n                if (isNgContainer(tagName) || isNgContent(tagName)) {\n                    return true;\n                }\n                if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                    // Allow any custom elements\n                    return true;\n                }\n            }\n            return !!this._schema[tagName.toLowerCase()];\n        };\n        /**\n         * securityContext returns the security context for the given property on the given DOM tag.\n         *\n         * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n         * possible to bind a value into a changing attribute or tag name.\n         *\n         * The filtering is white list based. All attributes in the schema above are assumed to have the\n         * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n         * attack vectors are assigned their appropriate context.\n         */\n        DomElementSchemaRegistry.prototype.securityContext = function (tagName, propName, isAttribute) {\n            if (isAttribute) {\n                // NB: For security purposes, use the mapped property name, not the attribute name.\n                propName = this.getMappedPropName(propName);\n            }\n            // Make sure comparisons are case insensitive, so that case differences between attribute and\n            // property names do not have a security impact.\n            tagName = tagName.toLowerCase();\n            propName = propName.toLowerCase();\n            var ctx = SECURITY_SCHEMA()[tagName + '|' + propName];\n            if (ctx) {\n                return ctx;\n            }\n            ctx = SECURITY_SCHEMA()['*|' + propName];\n            return ctx ? ctx : SecurityContext.NONE;\n        };\n        DomElementSchemaRegistry.prototype.getMappedPropName = function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n        DomElementSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n        DomElementSchemaRegistry.prototype.validateProperty = function (name) {\n            if (name.toLowerCase().startsWith('on')) {\n                var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                    (\"please use (\" + name.slice(2) + \")=...\") +\n                    (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                    \" current module.\";\n                return { error: true, msg: msg };\n            }\n            else {\n                return { error: false };\n            }\n        };\n        DomElementSchemaRegistry.prototype.validateAttribute = function (name) {\n            if (name.toLowerCase().startsWith('on')) {\n                var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                    (\"please use (\" + name.slice(2) + \")=...\");\n                return { error: true, msg: msg };\n            }\n            else {\n                return { error: false };\n            }\n        };\n        DomElementSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this._schema); };\n        DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) {\n            return dashCaseToCamelCase(propName);\n        };\n        DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n            var unit = '';\n            var strVal = val.toString().trim();\n            var errorMsg = null;\n            if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n                if (typeof val === 'number') {\n                    unit = 'px';\n                }\n                else {\n                    var valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                    if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                        errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                    }\n                }\n            }\n            return { error: errorMsg, value: strVal + unit };\n        };\n        return DomElementSchemaRegistry;\n    }(ElementSchemaRegistry));\n    function _isPixelDimensionStyle(prop) {\n        switch (prop) {\n            case 'width':\n            case 'height':\n            case 'minWidth':\n            case 'minHeight':\n            case 'maxWidth':\n            case 'maxHeight':\n            case 'left':\n            case 'top':\n            case 'bottom':\n            case 'right':\n            case 'fontSize':\n            case 'outlineWidth':\n            case 'outlineOffset':\n            case 'paddingTop':\n            case 'paddingLeft':\n            case 'paddingBottom':\n            case 'paddingRight':\n            case 'marginTop':\n            case 'marginLeft':\n            case 'marginBottom':\n            case 'marginRight':\n            case 'borderRadius':\n            case 'borderWidth':\n            case 'borderTopWidth':\n            case 'borderLeftWidth':\n            case 'borderRightWidth':\n            case 'borderBottomWidth':\n            case 'textIndent':\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PROPERTY_PARTS_SEPARATOR = '.';\n    var ATTRIBUTE_PREFIX = 'attr';\n    var CLASS_PREFIX = 'class';\n    var STYLE_PREFIX = 'style';\n    var ANIMATE_PROP_PREFIX = 'animate-';\n    /**\n     * Parses bindings in templates and in the directive host area.\n     */\n    var BindingParser = /** @class */ (function () {\n        function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, errors) {\n            this._exprParser = _exprParser;\n            this._interpolationConfig = _interpolationConfig;\n            this._schemaRegistry = _schemaRegistry;\n            this.errors = errors;\n            this.pipesByName = null;\n            this._usedPipes = new Map();\n            // When the `pipes` parameter is `null`, do not check for used pipes\n            // This is used in IVY when we might not know the available pipes at compile time\n            if (pipes) {\n                var pipesByName_1 = new Map();\n                pipes.forEach(function (pipe) { return pipesByName_1.set(pipe.name, pipe); });\n                this.pipesByName = pipesByName_1;\n            }\n        }\n        Object.defineProperty(BindingParser.prototype, \"interpolationConfig\", {\n            get: function () { return this._interpolationConfig; },\n            enumerable: true,\n            configurable: true\n        });\n        BindingParser.prototype.getUsedPipes = function () { return Array.from(this._usedPipes.values()); };\n        BindingParser.prototype.createBoundHostProperties = function (dirMeta, sourceSpan) {\n            var _this = this;\n            if (dirMeta.hostProperties) {\n                var boundProps_1 = [];\n                Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                    var expression = dirMeta.hostProperties[propName];\n                    if (typeof expression === 'string') {\n                        _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                    }\n                    else {\n                        _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                    }\n                });\n                return boundProps_1;\n            }\n            return null;\n        };\n        BindingParser.prototype.createDirectiveHostPropertyAsts = function (dirMeta, elementSelector, sourceSpan) {\n            var _this = this;\n            var boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n            return boundProps &&\n                boundProps.map(function (prop) { return _this.createBoundElementProperty(elementSelector, prop); });\n        };\n        BindingParser.prototype.createDirectiveHostEventAsts = function (dirMeta, sourceSpan) {\n            var _this = this;\n            if (dirMeta.hostListeners) {\n                var targetEvents_1 = [];\n                Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                    var expression = dirMeta.hostListeners[propName];\n                    if (typeof expression === 'string') {\n                        _this.parseEvent(propName, expression, sourceSpan, [], targetEvents_1);\n                    }\n                    else {\n                        _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                    }\n                });\n                return targetEvents_1;\n            }\n            return null;\n        };\n        BindingParser.prototype.parseInterpolation = function (value, sourceSpan) {\n            var sourceInfo = sourceSpan.start.toString();\n            try {\n                var ast = this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig);\n                if (ast)\n                    this._reportExpressionParserErrors(ast.errors, sourceSpan);\n                this._checkPipes(ast, sourceSpan);\n                return ast;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n        };\n        // Parse an inline template binding. ie `<tag *tplKey=\"<tplValue>\">`\n        BindingParser.prototype.parseInlineTemplateBinding = function (tplKey, tplValue, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n            var bindings = this._parseTemplateBindings(tplKey, tplValue, sourceSpan);\n            for (var i = 0; i < bindings.length; i++) {\n                var binding = bindings[i];\n                if (binding.keyIsVar) {\n                    targetVars.push(new ParsedVariable(binding.key, binding.name, sourceSpan));\n                }\n                else if (binding.expression) {\n                    this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n                }\n                else {\n                    targetMatchableAttrs.push([binding.key, '']);\n                    this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n                }\n            }\n        };\n        BindingParser.prototype._parseTemplateBindings = function (tplKey, tplValue, sourceSpan) {\n            var _this = this;\n            var sourceInfo = sourceSpan.start.toString();\n            try {\n                var bindingsResult = this._exprParser.parseTemplateBindings(tplKey, tplValue, sourceInfo);\n                this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n                bindingsResult.templateBindings.forEach(function (binding) {\n                    if (binding.expression) {\n                        _this._checkPipes(binding.expression, sourceSpan);\n                    }\n                });\n                bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, exports.ParseErrorLevel.WARNING); });\n                return bindingsResult.templateBindings;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return [];\n            }\n        };\n        BindingParser.prototype.parseLiteralAttr = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n            if (isAnimationLabel(name)) {\n                name = name.substring(1);\n                if (value) {\n                    this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                        \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, exports.ParseErrorLevel.ERROR);\n                }\n                this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetProps.push(new ParsedProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), exports.ParsedPropertyType.LITERAL_ATTR, sourceSpan));\n            }\n        };\n        BindingParser.prototype.parsePropertyBinding = function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n            var isAnimationProp = false;\n            if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n                isAnimationProp = true;\n                name = name.substring(ANIMATE_PROP_PREFIX.length);\n            }\n            else if (isAnimationLabel(name)) {\n                isAnimationProp = true;\n                name = name.substring(1);\n            }\n            if (isAnimationProp) {\n                this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        };\n        BindingParser.prototype.parsePropertyInterpolation = function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n            var expr = this.parseInterpolation(value, sourceSpan);\n            if (expr) {\n                this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n                return true;\n            }\n            return false;\n        };\n        BindingParser.prototype._parsePropertyAst = function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n            targetMatchableAttrs.push([name, ast.source]);\n            targetProps.push(new ParsedProperty(name, ast, exports.ParsedPropertyType.DEFAULT, sourceSpan));\n        };\n        BindingParser.prototype._parseAnimation = function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n            // This will occur when a @trigger is not paired with an expression.\n            // For animations it is valid to not have an expression since */void\n            // states will be applied by angular when the element is attached/detached\n            var ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n            targetMatchableAttrs.push([name, ast.source]);\n            targetProps.push(new ParsedProperty(name, ast, exports.ParsedPropertyType.ANIMATION, sourceSpan));\n        };\n        BindingParser.prototype._parseBinding = function (value, isHostBinding, sourceSpan) {\n            var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown)').toString();\n            try {\n                var ast = isHostBinding ?\n                    this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                    this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n                if (ast)\n                    this._reportExpressionParserErrors(ast.errors, sourceSpan);\n                this._checkPipes(ast, sourceSpan);\n                return ast;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n        };\n        BindingParser.prototype.createBoundElementProperty = function (elementSelector, boundProp, skipValidation) {\n            if (skipValidation === void 0) { skipValidation = false; }\n            if (boundProp.isAnimation) {\n                return new BoundElementProperty(boundProp.name, 4 /* Animation */, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n            }\n            var unit = null;\n            var bindingType = undefined;\n            var boundPropertyName = null;\n            var parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n            var securityContexts = undefined;\n            // Check for special cases (prefix style, attr, class)\n            if (parts.length > 1) {\n                if (parts[0] == ATTRIBUTE_PREFIX) {\n                    boundPropertyName = parts[1];\n                    if (!skipValidation) {\n                        this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                    }\n                    securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                    var nsSeparatorIdx = boundPropertyName.indexOf(':');\n                    if (nsSeparatorIdx > -1) {\n                        var ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                        var name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                        boundPropertyName = mergeNsAndName(ns, name_1);\n                    }\n                    bindingType = 1 /* Attribute */;\n                }\n                else if (parts[0] == CLASS_PREFIX) {\n                    boundPropertyName = parts[1];\n                    bindingType = 2 /* Class */;\n                    securityContexts = [SecurityContext.NONE];\n                }\n                else if (parts[0] == STYLE_PREFIX) {\n                    unit = parts.length > 2 ? parts[2] : null;\n                    boundPropertyName = parts[1];\n                    bindingType = 3 /* Style */;\n                    securityContexts = [SecurityContext.STYLE];\n                }\n            }\n            // If not a special case, use the full property name\n            if (boundPropertyName === null) {\n                boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n                bindingType = 0 /* Property */;\n                if (!skipValidation) {\n                    this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n                }\n            }\n            return new BoundElementProperty(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n        };\n        BindingParser.prototype.parseEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n            if (isAnimationLabel(name)) {\n                name = name.substr(1);\n                this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n            }\n            else {\n                this._parseRegularEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n            }\n        };\n        BindingParser.prototype.calcPossibleSecurityContexts = function (selector, propName, isAttribute) {\n            var prop = this._schemaRegistry.getMappedPropName(propName);\n            return calcPossibleSecurityContexts(this._schemaRegistry, selector, prop, isAttribute);\n        };\n        BindingParser.prototype._parseAnimationEvent = function (name, expression, sourceSpan, targetEvents) {\n            var matches = splitAtPeriod(name, [name, '']);\n            var eventName = matches[0];\n            var phase = matches[1].toLowerCase();\n            if (phase) {\n                switch (phase) {\n                    case 'start':\n                    case 'done':\n                        var ast = this._parseAction(expression, sourceSpan);\n                        targetEvents.push(new ParsedEvent(eventName, phase, 1 /* Animation */, ast, sourceSpan));\n                        break;\n                    default:\n                        this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                        break;\n                }\n            }\n            else {\n                this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n            }\n        };\n        BindingParser.prototype._parseRegularEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n            // long format: 'target: eventName'\n            var _a = __read(splitAtColon(name, [null, name]), 2), target = _a[0], eventName = _a[1];\n            var ast = this._parseAction(expression, sourceSpan);\n            targetMatchableAttrs.push([name, ast.source]);\n            targetEvents.push(new ParsedEvent(eventName, target, 0 /* Regular */, ast, sourceSpan));\n            // Don't detect directives for event names for now,\n            // so don't add the event name to the matchableAttrs\n        };\n        BindingParser.prototype._parseAction = function (value, sourceSpan) {\n            var sourceInfo = (sourceSpan && sourceSpan.start || '(unknown').toString();\n            try {\n                var ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n                if (ast) {\n                    this._reportExpressionParserErrors(ast.errors, sourceSpan);\n                }\n                if (!ast || ast.ast instanceof EmptyExpr) {\n                    this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                    return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n                }\n                this._checkPipes(ast, sourceSpan);\n                return ast;\n            }\n            catch (e) {\n                this._reportError(\"\" + e, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n        };\n        BindingParser.prototype._reportError = function (message, sourceSpan, level) {\n            if (level === void 0) { level = exports.ParseErrorLevel.ERROR; }\n            this.errors.push(new ParseError(sourceSpan, message, level));\n        };\n        BindingParser.prototype._reportExpressionParserErrors = function (errors, sourceSpan) {\n            var e_1, _a;\n            try {\n                for (var errors_1 = __values(errors), errors_1_1 = errors_1.next(); !errors_1_1.done; errors_1_1 = errors_1.next()) {\n                    var error$$1 = errors_1_1.value;\n                    this._reportError(error$$1.message, sourceSpan);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (errors_1_1 && !errors_1_1.done && (_a = errors_1.return)) _a.call(errors_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        // Make sure all the used pipes are known in `this.pipesByName`\n        BindingParser.prototype._checkPipes = function (ast, sourceSpan) {\n            var _this = this;\n            if (ast && this.pipesByName) {\n                var collector = new PipeCollector();\n                ast.visit(collector);\n                collector.pipes.forEach(function (ast, pipeName) {\n                    var pipeMeta = _this.pipesByName.get(pipeName);\n                    if (!pipeMeta) {\n                        _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                    }\n                    else {\n                        _this._usedPipes.set(pipeName, pipeMeta);\n                    }\n                });\n            }\n        };\n        /**\n         * @param propName the name of the property / attribute\n         * @param sourceSpan\n         * @param isAttr true when binding to an attribute\n         */\n        BindingParser.prototype._validatePropertyOrAttributeName = function (propName, sourceSpan, isAttr) {\n            var report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n                this._schemaRegistry.validateProperty(propName);\n            if (report.error) {\n                this._reportError(report.msg, sourceSpan, exports.ParseErrorLevel.ERROR);\n            }\n        };\n        return BindingParser;\n    }());\n    var PipeCollector = /** @class */ (function (_super) {\n        __extends(PipeCollector, _super);\n        function PipeCollector() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.pipes = new Map();\n            return _this;\n        }\n        PipeCollector.prototype.visitPipe = function (ast, context) {\n            this.pipes.set(ast.name, ast);\n            ast.exp.visit(this);\n            this.visitAll(ast.args, context);\n            return null;\n        };\n        return PipeCollector;\n    }(RecursiveAstVisitor$1));\n    function isAnimationLabel(name) {\n        return name[0] == '@';\n    }\n    function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n        var ctxs = [];\n        CssSelector.parse(selector).forEach(function (selector) {\n            var elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n            var notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n                .map(function (selector) { return selector.element; }));\n            var possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n            ctxs.push.apply(ctxs, __spread(possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); })));\n        });\n        return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var StyleWithImports = /** @class */ (function () {\n        function StyleWithImports(style, styleUrls) {\n            this.style = style;\n            this.styleUrls = styleUrls;\n        }\n        return StyleWithImports;\n    }());\n    function isStyleUrlResolvable(url) {\n        if (url == null || url.length === 0 || url[0] == '/')\n            return false;\n        var schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n        return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n    }\n    /**\n     * Rewrites stylesheets by resolving and removing the @import urls that\n     * are either relative or don't have a `package:` scheme\n     */\n    function extractStyleUrls(resolver, baseUrl, cssText) {\n        var foundUrls = [];\n        var modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n            .replace(CSS_IMPORT_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var url = m[1] || m[2];\n            if (!isStyleUrlResolvable(url)) {\n                // Do not attempt to resolve non-package absolute URLs with URI\n                // scheme\n                return m[0];\n            }\n            foundUrls.push(resolver.resolve(baseUrl, url));\n            return '';\n        });\n        return new StyleWithImports(modifiedCssText, foundUrls);\n    }\n    var CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\n    var CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\n    var URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_CONTENT_SELECT_ATTR = 'select';\n    var LINK_ELEMENT = 'link';\n    var LINK_STYLE_REL_ATTR = 'rel';\n    var LINK_STYLE_HREF_ATTR = 'href';\n    var LINK_STYLE_REL_VALUE = 'stylesheet';\n    var STYLE_ELEMENT = 'style';\n    var SCRIPT_ELEMENT = 'script';\n    var NG_NON_BINDABLE_ATTR = 'ngNonBindable';\n    var NG_PROJECT_AS = 'ngProjectAs';\n    function preparseElement(ast) {\n        var selectAttr = null;\n        var hrefAttr = null;\n        var relAttr = null;\n        var nonBindable = false;\n        var projectAs = '';\n        ast.attrs.forEach(function (attr) {\n            var lcAttrName = attr.name.toLowerCase();\n            if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n                selectAttr = attr.value;\n            }\n            else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n                hrefAttr = attr.value;\n            }\n            else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n                relAttr = attr.value;\n            }\n            else if (attr.name == NG_NON_BINDABLE_ATTR) {\n                nonBindable = true;\n            }\n            else if (attr.name == NG_PROJECT_AS) {\n                if (attr.value.length > 0) {\n                    projectAs = attr.value;\n                }\n            }\n        });\n        selectAttr = normalizeNgContentSelect(selectAttr);\n        var nodeName = ast.name.toLowerCase();\n        var type = PreparsedElementType.OTHER;\n        if (isNgContent(nodeName)) {\n            type = PreparsedElementType.NG_CONTENT;\n        }\n        else if (nodeName == STYLE_ELEMENT) {\n            type = PreparsedElementType.STYLE;\n        }\n        else if (nodeName == SCRIPT_ELEMENT) {\n            type = PreparsedElementType.SCRIPT;\n        }\n        else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n            type = PreparsedElementType.STYLESHEET;\n        }\n        return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n    }\n    var PreparsedElementType;\n    (function (PreparsedElementType) {\n        PreparsedElementType[PreparsedElementType[\"NG_CONTENT\"] = 0] = \"NG_CONTENT\";\n        PreparsedElementType[PreparsedElementType[\"STYLE\"] = 1] = \"STYLE\";\n        PreparsedElementType[PreparsedElementType[\"STYLESHEET\"] = 2] = \"STYLESHEET\";\n        PreparsedElementType[PreparsedElementType[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        PreparsedElementType[PreparsedElementType[\"OTHER\"] = 4] = \"OTHER\";\n    })(PreparsedElementType || (PreparsedElementType = {}));\n    var PreparsedElement = /** @class */ (function () {\n        function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n            this.type = type;\n            this.selectAttr = selectAttr;\n            this.hrefAttr = hrefAttr;\n            this.nonBindable = nonBindable;\n            this.projectAs = projectAs;\n        }\n        return PreparsedElement;\n    }());\n    function normalizeNgContentSelect(selectAttr) {\n        if (selectAttr === null || selectAttr.length === 0) {\n            return '*';\n        }\n        return selectAttr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n    // Group 1 = \"bind-\"\n    var KW_BIND_IDX = 1;\n    // Group 2 = \"let-\"\n    var KW_LET_IDX = 2;\n    // Group 3 = \"ref-/#\"\n    var KW_REF_IDX = 3;\n    // Group 4 = \"on-\"\n    var KW_ON_IDX = 4;\n    // Group 5 = \"bindon-\"\n    var KW_BINDON_IDX = 5;\n    // Group 6 = \"@\"\n    var KW_AT_IDX = 6;\n    // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n    var IDENT_KW_IDX = 7;\n    // Group 8 = identifier inside [()]\n    var IDENT_BANANA_BOX_IDX = 8;\n    // Group 9 = identifier inside []\n    var IDENT_PROPERTY_IDX = 9;\n    // Group 10 = identifier inside ()\n    var IDENT_EVENT_IDX = 10;\n    var TEMPLATE_ATTR_PREFIX = '*';\n    function htmlAstToRender3Ast(htmlNodes, bindingParser) {\n        var transformer = new HtmlAstToIvyAst(bindingParser);\n        var ivyNodes = visitAll$1(transformer, htmlNodes);\n        // Errors might originate in either the binding parser or the html to ivy transformer\n        var allErrors = bindingParser.errors.concat(transformer.errors);\n        var errors = allErrors.filter(function (e) { return e.level === exports.ParseErrorLevel.ERROR; });\n        if (errors.length > 0) {\n            var errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return {\n            nodes: ivyNodes,\n            errors: allErrors,\n        };\n    }\n    var HtmlAstToIvyAst = /** @class */ (function () {\n        function HtmlAstToIvyAst(bindingParser) {\n            this.bindingParser = bindingParser;\n            this.errors = [];\n        }\n        // HTML visitor\n        HtmlAstToIvyAst.prototype.visitElement = function (element) {\n            var _this = this;\n            var e_1, _a;\n            var preparsedElement = preparseElement(element);\n            if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n                preparsedElement.type === PreparsedElementType.STYLE) {\n                // Skipping <script> for security reasons\n                // Skipping <style> as we already processed them\n                // in the StyleCompiler\n                return null;\n            }\n            if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n                isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n                // Skipping stylesheets with either relative urls or package scheme as we already processed\n                // them in the StyleCompiler\n                return null;\n            }\n            // Whether the element is a `<ng-template>`\n            var isTemplateElement = isNgTemplate(element.name);\n            var parsedProperties = [];\n            var boundEvents = [];\n            var variables = [];\n            var references = [];\n            var attributes = [];\n            var i18nAttrsMeta = {};\n            var templateParsedProperties = [];\n            var templateVariables = [];\n            // Whether the element has any *-attribute\n            var elementHasInlineTemplate = false;\n            try {\n                for (var _b = __values(element.attrs), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var attribute = _c.value;\n                    var hasBinding = false;\n                    var normalizedName = normalizeAttributeName(attribute.name);\n                    // `*attr` defines template bindings\n                    var isTemplateBinding = false;\n                    if (attribute.i18n) {\n                        i18nAttrsMeta[attribute.name] = attribute.i18n;\n                    }\n                    if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                        // *-attributes\n                        if (elementHasInlineTemplate) {\n                            this.reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attribute.sourceSpan);\n                        }\n                        isTemplateBinding = true;\n                        elementHasInlineTemplate = true;\n                        var templateValue = attribute.value;\n                        var templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length);\n                        var parsedVariables = [];\n                        this.bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attribute.sourceSpan, [], templateParsedProperties, parsedVariables);\n                        templateVariables.push.apply(templateVariables, __spread(parsedVariables.map(function (v) { return new Variable(v.name, v.value, v.sourceSpan); })));\n                    }\n                    else {\n                        // Check for variables, events, property bindings, interpolation\n                        hasBinding = this.parseAttribute(isTemplateElement, attribute, [], parsedProperties, boundEvents, variables, references);\n                    }\n                    if (!hasBinding && !isTemplateBinding) {\n                        // don't include the bindings as attributes as well in the AST\n                        attributes.push(this.visitAttribute(attribute));\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var children = visitAll$1(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children);\n            var parsedElement;\n            if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n                // `<ng-content>`\n                if (element.children && !element.children.every(isEmptyTextNode)) {\n                    this.reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n                }\n                var selector = preparsedElement.selectAttr;\n                var attrs = element.attrs.map(function (attr) { return _this.visitAttribute(attr); });\n                parsedElement = new Content(selector, attrs, element.sourceSpan, element.i18n);\n            }\n            else if (isTemplateElement) {\n                // `<ng-template>`\n                var attrs = this.extractAttributes(element.name, parsedProperties, i18nAttrsMeta);\n                parsedElement = new Template(element.name, attributes, attrs.bound, boundEvents, children, references, variables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n            }\n            else {\n                var attrs = this.extractAttributes(element.name, parsedProperties, i18nAttrsMeta);\n                parsedElement = new Element(element.name, attributes, attrs.bound, boundEvents, children, references, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n            }\n            if (elementHasInlineTemplate) {\n                var attrs = this.extractAttributes('ng-template', templateParsedProperties, i18nAttrsMeta);\n                // TODO(pk): test for this case\n                parsedElement = new Template(parsedElement.name, attrs.literal, attrs.bound, [], [parsedElement], [], templateVariables, element.sourceSpan, element.startSourceSpan, element.endSourceSpan, element.i18n);\n            }\n            return parsedElement;\n        };\n        HtmlAstToIvyAst.prototype.visitAttribute = function (attribute) {\n            return new TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, attribute.valueSpan, attribute.i18n);\n        };\n        HtmlAstToIvyAst.prototype.visitText = function (text) {\n            return this._visitTextWithInterpolation(text.value, text.sourceSpan, text.i18n);\n        };\n        HtmlAstToIvyAst.prototype.visitExpansion = function (expansion) {\n            var _this = this;\n            var meta = expansion.i18n;\n            // do not generate Icu in case it was created\n            // outside of i18n block in a template\n            if (!meta) {\n                return null;\n            }\n            var vars = {};\n            var placeholders = {};\n            // extract VARs from ICUs - we process them separately while\n            // assembling resulting message via goog.getMsg function, since\n            // we need to pass them to top-level goog.getMsg call\n            Object.keys(meta.placeholders).forEach(function (key) {\n                var value = meta.placeholders[key];\n                if (key.startsWith(I18N_ICU_VAR_PREFIX)) {\n                    var config = _this.bindingParser.interpolationConfig;\n                    // ICU expression is a plain string, not wrapped into start\n                    // and end tags, so we wrap it before passing to binding parser\n                    var wrapped = \"\" + config.start + value + config.end;\n                    vars[key] = _this._visitTextWithInterpolation(wrapped, expansion.sourceSpan);\n                }\n                else {\n                    placeholders[key] = _this._visitTextWithInterpolation(value, expansion.sourceSpan);\n                }\n            });\n            return new Icu$1(vars, placeholders, expansion.sourceSpan, meta);\n        };\n        HtmlAstToIvyAst.prototype.visitExpansionCase = function (expansionCase) { return null; };\n        HtmlAstToIvyAst.prototype.visitComment = function (comment) { return null; };\n        // convert view engine `ParsedProperty` to a format suitable for IVY\n        HtmlAstToIvyAst.prototype.extractAttributes = function (elementName, properties, i18nPropsMeta) {\n            var _this = this;\n            var bound = [];\n            var literal = [];\n            properties.forEach(function (prop) {\n                var i18n = i18nPropsMeta[prop.name];\n                if (prop.isLiteral) {\n                    literal.push(new TextAttribute(prop.name, prop.expression.source || '', prop.sourceSpan, undefined, i18n));\n                }\n                else {\n                    // we skip validation here, since we do this check at runtime due to the fact that we need\n                    // to make sure a given prop is not an input of some Directive (thus should not be a subject\n                    // of this check) and Directive matching happens at runtime\n                    var bep = _this.bindingParser.createBoundElementProperty(elementName, prop, /* skipValidation */ true);\n                    bound.push(BoundAttribute.fromBoundElementProperty(bep, i18n));\n                }\n            });\n            return { bound: bound, literal: literal };\n        };\n        HtmlAstToIvyAst.prototype.parseAttribute = function (isTemplateElement, attribute, matchableAttributes, parsedProperties, boundEvents, variables, references) {\n            var name = normalizeAttributeName(attribute.name);\n            var value = attribute.value;\n            var srcSpan = attribute.sourceSpan;\n            var bindParts = name.match(BIND_NAME_REGEXP);\n            var hasBinding = false;\n            if (bindParts) {\n                hasBinding = true;\n                if (bindParts[KW_BIND_IDX] != null) {\n                    this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                }\n                else if (bindParts[KW_LET_IDX]) {\n                    if (isTemplateElement) {\n                        var identifier = bindParts[IDENT_KW_IDX];\n                        this.parseVariable(identifier, value, srcSpan, variables);\n                    }\n                    else {\n                        this.reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                    }\n                }\n                else if (bindParts[KW_REF_IDX]) {\n                    var identifier = bindParts[IDENT_KW_IDX];\n                    this.parseReference(identifier, value, srcSpan, references);\n                }\n                else if (bindParts[KW_ON_IDX]) {\n                    var events = [];\n                    this.bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, events);\n                    addEvents(events, boundEvents);\n                }\n                else if (bindParts[KW_BINDON_IDX]) {\n                    this.bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                    this.parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, matchableAttributes, boundEvents);\n                }\n                else if (bindParts[KW_AT_IDX]) {\n                    this.bindingParser.parseLiteralAttr(name, value, srcSpan, matchableAttributes, parsedProperties);\n                }\n                else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                    this.bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                    this.parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, matchableAttributes, boundEvents);\n                }\n                else if (bindParts[IDENT_PROPERTY_IDX]) {\n                    this.bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, matchableAttributes, parsedProperties);\n                }\n                else if (bindParts[IDENT_EVENT_IDX]) {\n                    var events = [];\n                    this.bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, matchableAttributes, events);\n                    addEvents(events, boundEvents);\n                }\n            }\n            else {\n                hasBinding = this.bindingParser.parsePropertyInterpolation(name, value, srcSpan, matchableAttributes, parsedProperties);\n            }\n            return hasBinding;\n        };\n        HtmlAstToIvyAst.prototype._visitTextWithInterpolation = function (value, sourceSpan, i18n) {\n            var valueNoNgsp = replaceNgsp(value);\n            var expr = this.bindingParser.parseInterpolation(valueNoNgsp, sourceSpan);\n            return expr ? new BoundText(expr, sourceSpan, i18n) : new Text$2(valueNoNgsp, sourceSpan);\n        };\n        HtmlAstToIvyAst.prototype.parseVariable = function (identifier, value, sourceSpan, variables) {\n            if (identifier.indexOf('-') > -1) {\n                this.reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n            }\n            variables.push(new Variable(identifier, value, sourceSpan));\n        };\n        HtmlAstToIvyAst.prototype.parseReference = function (identifier, value, sourceSpan, references) {\n            if (identifier.indexOf('-') > -1) {\n                this.reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n            }\n            references.push(new Reference(identifier, value, sourceSpan));\n        };\n        HtmlAstToIvyAst.prototype.parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, boundEvents) {\n            var events = [];\n            this.bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, events);\n            addEvents(events, boundEvents);\n        };\n        HtmlAstToIvyAst.prototype.reportError = function (message, sourceSpan, level) {\n            if (level === void 0) { level = exports.ParseErrorLevel.ERROR; }\n            this.errors.push(new ParseError(sourceSpan, message, level));\n        };\n        return HtmlAstToIvyAst;\n    }());\n    var NonBindableVisitor = /** @class */ (function () {\n        function NonBindableVisitor() {\n        }\n        NonBindableVisitor.prototype.visitElement = function (ast) {\n            var preparsedElement = preparseElement(ast);\n            if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n                preparsedElement.type === PreparsedElementType.STYLE ||\n                preparsedElement.type === PreparsedElementType.STYLESHEET) {\n                // Skipping <script> for security reasons\n                // Skipping <style> and stylesheets as we already processed them\n                // in the StyleCompiler\n                return null;\n            }\n            var children = visitAll$1(this, ast.children, null);\n            return new Element(ast.name, visitAll$1(this, ast.attrs), \n            /* inputs */ [], /* outputs */ [], children, /* references */ [], ast.sourceSpan, ast.startSourceSpan, ast.endSourceSpan);\n        };\n        NonBindableVisitor.prototype.visitComment = function (comment) { return null; };\n        NonBindableVisitor.prototype.visitAttribute = function (attribute) {\n            return new TextAttribute(attribute.name, attribute.value, attribute.sourceSpan, undefined, attribute.i18n);\n        };\n        NonBindableVisitor.prototype.visitText = function (text) { return new Text$2(text.value, text.sourceSpan); };\n        NonBindableVisitor.prototype.visitExpansion = function (expansion) { return null; };\n        NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase) { return null; };\n        return NonBindableVisitor;\n    }());\n    var NON_BINDABLE_VISITOR = new NonBindableVisitor();\n    function normalizeAttributeName(attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    }\n    function addEvents(events, boundEvents) {\n        boundEvents.push.apply(boundEvents, __spread(events.map(function (e) { return BoundEvent.fromParsedEvent(e); })));\n    }\n    function isEmptyTextNode(node) {\n        return node instanceof Text$3 && node.value.trim().length == 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TagType;\n    (function (TagType) {\n        TagType[TagType[\"ELEMENT\"] = 0] = \"ELEMENT\";\n        TagType[TagType[\"TEMPLATE\"] = 1] = \"TEMPLATE\";\n    })(TagType || (TagType = {}));\n    /**\n     * Generates an object that is used as a shared state between parent and all child contexts.\n     */\n    function setupRegistry() {\n        return { getUniqueId: getSeqNumberGenerator(), icus: new Map() };\n    }\n    /**\n     * I18nContext is a helper class which keeps track of all i18n-related aspects\n     * (accumulates placeholders, bindings, etc) between i18nStart and i18nEnd instructions.\n     *\n     * When we enter a nested template, the top-level context is being passed down\n     * to the nested component, which uses this context to generate a child instance\n     * of I18nContext class (to handle nested template) and at the end, reconciles it back\n     * with the parent context.\n     *\n     * @param index Instruction index of i18nStart, which initiates this context\n     * @param ref Reference to a translation const that represents the content if thus context\n     * @param level Nestng level defined for child contexts\n     * @param templateIndex Instruction index of a template which this context belongs to\n     * @param meta Meta information (id, meaning, description, etc) associated with this context\n     */\n    var I18nContext = /** @class */ (function () {\n        function I18nContext(index, ref, level, templateIndex, meta, registry) {\n            if (level === void 0) { level = 0; }\n            if (templateIndex === void 0) { templateIndex = null; }\n            this.index = index;\n            this.ref = ref;\n            this.level = level;\n            this.templateIndex = templateIndex;\n            this.meta = meta;\n            this.registry = registry;\n            this.bindings = new Set();\n            this.placeholders = new Map();\n            this._unresolvedCtxCount = 0;\n            this._registry = registry || setupRegistry();\n            this.id = this._registry.getUniqueId();\n        }\n        I18nContext.prototype.appendTag = function (type, node, index, closed) {\n            if (node.isVoid && closed) {\n                return; // ignore \"close\" for void tags\n            }\n            var ph = node.isVoid || !closed ? node.startName : node.closeName;\n            var content = { type: type, index: index, ctx: this.id, isVoid: node.isVoid, closed: closed };\n            updatePlaceholderMap(this.placeholders, ph, content);\n        };\n        Object.defineProperty(I18nContext.prototype, \"icus\", {\n            get: function () { return this._registry.icus; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(I18nContext.prototype, \"isRoot\", {\n            get: function () { return this.level === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(I18nContext.prototype, \"isResolved\", {\n            get: function () { return this._unresolvedCtxCount === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        I18nContext.prototype.getSerializedPlaceholders = function () {\n            var result = new Map();\n            this.placeholders.forEach(function (values, key) { return result.set(key, values.map(serializePlaceholderValue)); });\n            return result;\n        };\n        // public API to accumulate i18n-related content\n        I18nContext.prototype.appendBinding = function (binding) { this.bindings.add(binding); };\n        I18nContext.prototype.appendIcu = function (name, ref) {\n            updatePlaceholderMap(this._registry.icus, name, ref);\n        };\n        I18nContext.prototype.appendBoundText = function (node) {\n            var _this = this;\n            var phs = assembleBoundTextPlaceholders(node, this.bindings.size, this.id);\n            phs.forEach(function (values, key) { return updatePlaceholderMap.apply(void 0, __spread([_this.placeholders, key], values)); });\n        };\n        I18nContext.prototype.appendTemplate = function (node, index) {\n            // add open and close tags at the same time,\n            // since we process nested templates separately\n            this.appendTag(TagType.TEMPLATE, node, index, false);\n            this.appendTag(TagType.TEMPLATE, node, index, true);\n            this._unresolvedCtxCount++;\n        };\n        I18nContext.prototype.appendElement = function (node, index, closed) {\n            this.appendTag(TagType.ELEMENT, node, index, closed);\n        };\n        /**\n         * Generates an instance of a child context based on the root one,\n         * when we enter a nested template within I18n section.\n         *\n         * @param index Instruction index of corresponding i18nStart, which initiates this context\n         * @param templateIndex Instruction index of a template which this context belongs to\n         * @param meta Meta information (id, meaning, description, etc) associated with this context\n         *\n         * @returns I18nContext instance\n         */\n        I18nContext.prototype.forkChildContext = function (index, templateIndex, meta) {\n            return new I18nContext(index, this.ref, this.level + 1, templateIndex, meta, this._registry);\n        };\n        /**\n         * Reconciles child context into parent one once the end of the i18n block is reached (i18nEnd).\n         *\n         * @param context Child I18nContext instance to be reconciled with parent context.\n         */\n        I18nContext.prototype.reconcileChildContext = function (context) {\n            var _this = this;\n            // set the right context id for open and close\n            // template tags, so we can use it as sub-block ids\n            ['start', 'close'].forEach(function (op) {\n                var key = context.meta[op + \"Name\"];\n                var phs = _this.placeholders.get(key) || [];\n                var tag = phs.find(findTemplateFn(_this.id, context.templateIndex));\n                if (tag) {\n                    tag.ctx = context.id;\n                }\n            });\n            // reconcile placeholders\n            var childPhs = context.placeholders;\n            childPhs.forEach(function (values, key) {\n                var phs = _this.placeholders.get(key);\n                if (!phs) {\n                    _this.placeholders.set(key, values);\n                    return;\n                }\n                // try to find matching template...\n                var tmplIdx = findIndex(phs, findTemplateFn(context.id, context.templateIndex));\n                if (tmplIdx >= 0) {\n                    // ... if found - replace it with nested template content\n                    var isCloseTag = key.startsWith('CLOSE');\n                    var isTemplateTag = key.endsWith('NG-TEMPLATE');\n                    if (isTemplateTag) {\n                        // current template's content is placed before or after\n                        // parent template tag, depending on the open/close atrribute\n                        phs.splice.apply(phs, __spread([tmplIdx + (isCloseTag ? 0 : 1), 0], values));\n                    }\n                    else {\n                        var idx = isCloseTag ? values.length - 1 : 0;\n                        values[idx].tmpl = phs[tmplIdx];\n                        phs.splice.apply(phs, __spread([tmplIdx, 1], values));\n                    }\n                }\n                else {\n                    // ... otherwise just append content to placeholder value\n                    phs.push.apply(phs, __spread(values));\n                }\n                _this.placeholders.set(key, phs);\n            });\n            this._unresolvedCtxCount--;\n        };\n        return I18nContext;\n    }());\n    //\n    // Helper methods\n    //\n    function wrap(symbol, index, contextId, closed) {\n        var state = closed ? '/' : '';\n        return wrapI18nPlaceholder(\"\" + state + symbol + index, contextId);\n    }\n    function wrapTag(symbol, _a, closed) {\n        var index = _a.index, ctx = _a.ctx, isVoid = _a.isVoid;\n        return isVoid ? wrap(symbol, index, ctx) + wrap(symbol, index, ctx, true) :\n            wrap(symbol, index, ctx, closed);\n    }\n    function findTemplateFn(ctx, templateIndex) {\n        return function (token) { return typeof token === 'object' && token.type === TagType.TEMPLATE &&\n            token.index === templateIndex && token.ctx === ctx; };\n    }\n    function serializePlaceholderValue(value) {\n        var element = function (data, closed) { return wrapTag('#', data, closed); };\n        var template = function (data, closed) { return wrapTag('*', data, closed); };\n        switch (value.type) {\n            case TagType.ELEMENT:\n                // close element tag\n                if (value.closed) {\n                    return element(value, true) + (value.tmpl ? template(value.tmpl, true) : '');\n                }\n                // open element tag that also initiates a template\n                if (value.tmpl) {\n                    return template(value.tmpl) + element(value) +\n                        (value.isVoid ? template(value.tmpl, true) : '');\n                }\n                return element(value);\n            case TagType.TEMPLATE:\n                return template(value, value.closed);\n            default:\n                return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TAG_TO_PLACEHOLDER_NAMES = {\n        'A': 'LINK',\n        'B': 'BOLD_TEXT',\n        'BR': 'LINE_BREAK',\n        'EM': 'EMPHASISED_TEXT',\n        'H1': 'HEADING_LEVEL1',\n        'H2': 'HEADING_LEVEL2',\n        'H3': 'HEADING_LEVEL3',\n        'H4': 'HEADING_LEVEL4',\n        'H5': 'HEADING_LEVEL5',\n        'H6': 'HEADING_LEVEL6',\n        'HR': 'HORIZONTAL_RULE',\n        'I': 'ITALIC_TEXT',\n        'LI': 'LIST_ITEM',\n        'LINK': 'MEDIA_LINK',\n        'OL': 'ORDERED_LIST',\n        'P': 'PARAGRAPH',\n        'Q': 'QUOTATION',\n        'S': 'STRIKETHROUGH_TEXT',\n        'SMALL': 'SMALL_TEXT',\n        'SUB': 'SUBSTRIPT',\n        'SUP': 'SUPERSCRIPT',\n        'TBODY': 'TABLE_BODY',\n        'TD': 'TABLE_CELL',\n        'TFOOT': 'TABLE_FOOTER',\n        'TH': 'TABLE_HEADER_CELL',\n        'THEAD': 'TABLE_HEADER',\n        'TR': 'TABLE_ROW',\n        'TT': 'MONOSPACED_TEXT',\n        'U': 'UNDERLINED_TEXT',\n        'UL': 'UNORDERED_LIST',\n    };\n    /**\n     * Creates unique names for placeholder with different content.\n     *\n     * Returns the same placeholder name when the content is identical.\n     */\n    var PlaceholderRegistry = /** @class */ (function () {\n        function PlaceholderRegistry() {\n            // Count the occurrence of the base name top generate a unique name\n            this._placeHolderNameCounts = {};\n            // Maps signature to placeholder names\n            this._signatureToName = {};\n        }\n        PlaceholderRegistry.prototype.getStartTagPlaceholderName = function (tag, attrs, isVoid) {\n            var signature = this._hashTag(tag, attrs, isVoid);\n            if (this._signatureToName[signature]) {\n                return this._signatureToName[signature];\n            }\n            var upperTag = tag.toUpperCase();\n            var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n            var name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n            this._signatureToName[signature] = name;\n            return name;\n        };\n        PlaceholderRegistry.prototype.getCloseTagPlaceholderName = function (tag) {\n            var signature = this._hashClosingTag(tag);\n            if (this._signatureToName[signature]) {\n                return this._signatureToName[signature];\n            }\n            var upperTag = tag.toUpperCase();\n            var baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n            var name = this._generateUniqueName(\"CLOSE_\" + baseName);\n            this._signatureToName[signature] = name;\n            return name;\n        };\n        PlaceholderRegistry.prototype.getPlaceholderName = function (name, content) {\n            var upperName = name.toUpperCase();\n            var signature = \"PH: \" + upperName + \"=\" + content;\n            if (this._signatureToName[signature]) {\n                return this._signatureToName[signature];\n            }\n            var uniqueName = this._generateUniqueName(upperName);\n            this._signatureToName[signature] = uniqueName;\n            return uniqueName;\n        };\n        PlaceholderRegistry.prototype.getUniquePlaceholder = function (name) {\n            return this._generateUniqueName(name.toUpperCase());\n        };\n        // Generate a hash for a tag - does not take attribute order into account\n        PlaceholderRegistry.prototype._hashTag = function (tag, attrs, isVoid) {\n            var start = \"<\" + tag;\n            var strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n            var end = isVoid ? '/>' : \"></\" + tag + \">\";\n            return start + strAttrs + end;\n        };\n        PlaceholderRegistry.prototype._hashClosingTag = function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n        PlaceholderRegistry.prototype._generateUniqueName = function (base) {\n            var seen = this._placeHolderNameCounts.hasOwnProperty(base);\n            if (!seen) {\n                this._placeHolderNameCounts[base] = 1;\n                return base;\n            }\n            var id = this._placeHolderNameCounts[base];\n            this._placeHolderNameCounts[base] = id + 1;\n            return base + \"_\" + id;\n        };\n        return PlaceholderRegistry;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _expParser = new Parser(new Lexer());\n    /**\n     * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n     */\n    function createI18nMessageFactory(interpolationConfig) {\n        var visitor = new _I18nVisitor(_expParser, interpolationConfig);\n        return function (nodes, meaning, description, id, visitNodeFn) {\n            return visitor.toI18nMessage(nodes, meaning, description, id, visitNodeFn);\n        };\n    }\n    var _I18nVisitor = /** @class */ (function () {\n        function _I18nVisitor(_expressionParser, _interpolationConfig) {\n            this._expressionParser = _expressionParser;\n            this._interpolationConfig = _interpolationConfig;\n        }\n        _I18nVisitor.prototype.toI18nMessage = function (nodes, meaning, description, id, visitNodeFn) {\n            this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n            this._icuDepth = 0;\n            this._placeholderRegistry = new PlaceholderRegistry();\n            this._placeholderToContent = {};\n            this._placeholderToMessage = {};\n            this._visitNodeFn = visitNodeFn;\n            var i18nodes = visitAll$1(this, nodes, {});\n            return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n        };\n        _I18nVisitor.prototype._visitNode = function (html, i18n) {\n            if (this._visitNodeFn) {\n                this._visitNodeFn(html, i18n);\n            }\n            return i18n;\n        };\n        _I18nVisitor.prototype.visitElement = function (el, context) {\n            var children = visitAll$1(this, el.children);\n            var attrs = {};\n            el.attrs.forEach(function (attr) {\n                // Do not visit the attributes, translatable ones are top-level ASTs\n                attrs[attr.name] = attr.value;\n            });\n            var isVoid = getHtmlTagDefinition(el.name).isVoid;\n            var startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n            this._placeholderToContent[startPhName] = el.sourceSpan.toString();\n            var closePhName = '';\n            if (!isVoid) {\n                closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n                this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n            }\n            var node = new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, el.sourceSpan);\n            return this._visitNode(el, node);\n        };\n        _I18nVisitor.prototype.visitAttribute = function (attribute, context) {\n            var node = this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n            return this._visitNode(attribute, node);\n        };\n        _I18nVisitor.prototype.visitText = function (text, context) {\n            var node = this._visitTextWithInterpolation(text.value, text.sourceSpan);\n            return this._visitNode(text, node);\n        };\n        _I18nVisitor.prototype.visitComment = function (comment, context) { return null; };\n        _I18nVisitor.prototype.visitExpansion = function (icu, context) {\n            var _this = this;\n            this._icuDepth++;\n            var i18nIcuCases = {};\n            var i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n            icu.cases.forEach(function (caze) {\n                i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n            });\n            this._icuDepth--;\n            if (this._isIcu || this._icuDepth > 0) {\n                // Returns an ICU node when:\n                // - the message (vs a part of the message) is an ICU message, or\n                // - the ICU message is nested.\n                var expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n                i18nIcu.expressionPlaceholder = expPh;\n                this._placeholderToContent[expPh] = icu.switchValue;\n                return this._visitNode(icu, i18nIcu);\n            }\n            // Else returns a placeholder\n            // ICU placeholders should not be replaced with their original content but with the their\n            // translations. We need to create a new visitor (they are not re-entrant) to compute the\n            // message id.\n            // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n            var phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n            var visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n            this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n            var node = new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n            return this._visitNode(icu, node);\n        };\n        _I18nVisitor.prototype.visitExpansionCase = function (icuCase, context) {\n            throw new Error('Unreachable code');\n        };\n        _I18nVisitor.prototype._visitTextWithInterpolation = function (text, sourceSpan) {\n            var splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n            if (!splitInterpolation) {\n                // No expression, return a single text\n                return new Text(text, sourceSpan);\n            }\n            // Return a group of text + expressions\n            var nodes = [];\n            var container = new Container(nodes, sourceSpan);\n            var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n            for (var i = 0; i < splitInterpolation.strings.length - 1; i++) {\n                var expression = splitInterpolation.expressions[i];\n                var baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n                var phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n                if (splitInterpolation.strings[i].length) {\n                    // No need to add empty strings\n                    nodes.push(new Text(splitInterpolation.strings[i], sourceSpan));\n                }\n                nodes.push(new Placeholder(expression, phName, sourceSpan));\n                this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n            }\n            // The last index contains no expression\n            var lastStringIdx = splitInterpolation.strings.length - 1;\n            if (splitInterpolation.strings[lastStringIdx].length) {\n                nodes.push(new Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n            }\n            return container;\n        };\n        return _I18nVisitor;\n    }());\n    var _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n    function _extractPlaceholderName(input) {\n        return input.split(_CUSTOM_PH_EXP)[2];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function setI18nRefs(html, i18n) {\n        html.i18n = i18n;\n    }\n    /**\n     * This visitor walks over HTML parse tree and converts information stored in\n     * i18n-related attributes (\"i18n\" and \"i18n-*\") into i18n meta object that is\n     * stored with other element's and attribute's information.\n     */\n    var I18nMetaVisitor = /** @class */ (function () {\n        function I18nMetaVisitor(interpolationConfig, keepI18nAttrs) {\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            if (keepI18nAttrs === void 0) { keepI18nAttrs = false; }\n            this.interpolationConfig = interpolationConfig;\n            this.keepI18nAttrs = keepI18nAttrs;\n            // i18n message generation factory\n            this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n        }\n        I18nMetaVisitor.prototype._generateI18nMessage = function (nodes, meta, visitNodeFn) {\n            if (meta === void 0) { meta = ''; }\n            var parsed = typeof meta === 'string' ? parseI18nMeta(meta) : metaFromI18nMessage(meta);\n            var message = this._createI18nMessage(nodes, parsed.meaning || '', parsed.description || '', parsed.id || '', visitNodeFn);\n            if (!message.id) {\n                // generate (or restore) message id if not specified in template\n                message.id = typeof meta !== 'string' && meta.id || decimalDigest(message);\n            }\n            return message;\n        };\n        I18nMetaVisitor.prototype.visitElement = function (element, context) {\n            var e_1, _a, e_2, _b;\n            if (hasI18nAttrs(element)) {\n                var attrs = [];\n                var attrsMeta = {};\n                try {\n                    for (var _c = __values(element.attrs), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var attr = _d.value;\n                        if (attr.name === I18N_ATTR) {\n                            // root 'i18n' node attribute\n                            var i18n_1 = element.i18n || attr.value;\n                            var message = this._generateI18nMessage(element.children, i18n_1, setI18nRefs);\n                            // do not assign empty i18n meta\n                            if (message.nodes.length) {\n                                element.i18n = message;\n                            }\n                        }\n                        else if (attr.name.startsWith(I18N_ATTR_PREFIX)) {\n                            // 'i18n-*' attributes\n                            var key = attr.name.slice(I18N_ATTR_PREFIX.length);\n                            attrsMeta[key] = attr.value;\n                        }\n                        else {\n                            // non-i18n attributes\n                            attrs.push(attr);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                // set i18n meta for attributes\n                if (Object.keys(attrsMeta).length) {\n                    try {\n                        for (var attrs_1 = __values(attrs), attrs_1_1 = attrs_1.next(); !attrs_1_1.done; attrs_1_1 = attrs_1.next()) {\n                            var attr = attrs_1_1.value;\n                            var meta = attrsMeta[attr.name];\n                            // do not create translation for empty attributes\n                            if (meta !== undefined && attr.value) {\n                                attr.i18n = this._generateI18nMessage([attr], attr.i18n || meta);\n                            }\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (attrs_1_1 && !attrs_1_1.done && (_b = attrs_1.return)) _b.call(attrs_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n                if (!this.keepI18nAttrs) {\n                    // update element's attributes,\n                    // keeping only non-i18n related ones\n                    element.attrs = attrs;\n                }\n            }\n            visitAll$1(this, element.children);\n            return element;\n        };\n        I18nMetaVisitor.prototype.visitExpansion = function (expansion, context) {\n            var message;\n            var meta = expansion.i18n;\n            if (meta instanceof IcuPlaceholder) {\n                // set ICU placeholder name (e.g. \"ICU_1\"),\n                // generated while processing root element contents,\n                // so we can reference it when we output translation\n                var name_1 = meta.name;\n                message = this._generateI18nMessage([expansion], meta);\n                var icu = icuFromI18nMessage(message);\n                icu.name = name_1;\n            }\n            else {\n                // when ICU is a root level translation\n                message = this._generateI18nMessage([expansion], meta);\n            }\n            expansion.i18n = message;\n            return expansion;\n        };\n        I18nMetaVisitor.prototype.visitText = function (text, context) { return text; };\n        I18nMetaVisitor.prototype.visitAttribute = function (attribute, context) { return attribute; };\n        I18nMetaVisitor.prototype.visitComment = function (comment, context) { return comment; };\n        I18nMetaVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n        return I18nMetaVisitor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var formatPh = function (value) { return \"{$\" + formatI18nPlaceholderName(value) + \"}\"; };\n    /**\n     * This visitor walks over i18n tree and generates its string representation,\n     * including ICUs and placeholders in {$PLACEHOLDER} format.\n     */\n    var SerializerVisitor = /** @class */ (function () {\n        function SerializerVisitor() {\n        }\n        SerializerVisitor.prototype.visitText = function (text, context) { return text.value; };\n        SerializerVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            return container.children.map(function (child) { return child.visit(_this); }).join('');\n        };\n        SerializerVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            return \"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \" + strCases.join(' ') + \"}\";\n        };\n        SerializerVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            return ph.isVoid ?\n                formatPh(ph.startName) :\n                \"\" + formatPh(ph.startName) + ph.children.map(function (child) { return child.visit(_this); }).join('') + formatPh(ph.closeName);\n        };\n        SerializerVisitor.prototype.visitPlaceholder = function (ph, context) { return formatPh(ph.name); };\n        SerializerVisitor.prototype.visitIcuPlaceholder = function (ph, context) { return formatPh(ph.name); };\n        return SerializerVisitor;\n    }());\n    var serializerVisitor$1 = new SerializerVisitor();\n    function getSerializedI18nContent(message) {\n        return message.nodes.map(function (node) { return node.visit(serializerVisitor$1, null); }).join('');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Default selector used by `<ng-content>` if none specified\n    var DEFAULT_NG_CONTENT_SELECTOR = '*';\n    // Selector attribute name of `<ng-content>`\n    var NG_CONTENT_SELECT_ATTR$1 = 'select';\n    // List of supported global targets for event listeners\n    var GLOBAL_TARGET_RESOLVERS = new Map([['window', Identifiers$1.resolveWindow], ['document', Identifiers$1.resolveDocument], ['body', Identifiers$1.resolveBody]]);\n    function mapBindingToInstruction(type) {\n        switch (type) {\n            case 0 /* Property */:\n            case 4 /* Animation */:\n                return Identifiers$1.elementProperty;\n            case 2 /* Class */:\n                return Identifiers$1.elementClassProp;\n            case 1 /* Attribute */:\n                return Identifiers$1.elementAttribute;\n            default:\n                return undefined;\n        }\n    }\n    //  if (rf & flags) { .. }\n    function renderFlagCheckIfStmt(flags, statements) {\n        return ifStmt(variable(RENDER_FLAGS).bitwiseAnd(literal(flags), null, false), statements);\n    }\n    function prepareEventListenerParameters(eventAst, bindingContext, handlerName, scope) {\n        if (handlerName === void 0) { handlerName = null; }\n        if (scope === void 0) { scope = null; }\n        var type = eventAst.type, name = eventAst.name, target = eventAst.target, phase = eventAst.phase, handler = eventAst.handler;\n        if (target && !GLOBAL_TARGET_RESOLVERS.has(target)) {\n            throw new Error(\"Unexpected global target '\" + target + \"' defined for '\" + name + \"' event.\\n        Supported list of global targets: \" + Array.from(GLOBAL_TARGET_RESOLVERS.keys()) + \".\");\n        }\n        var bindingExpr = convertActionBinding(scope, bindingContext, handler, 'b', function () { return error('Unexpected interpolation'); });\n        var statements = [];\n        if (scope) {\n            statements.push.apply(statements, __spread(scope.restoreViewStatement()));\n            statements.push.apply(statements, __spread(scope.variableDeclarations()));\n        }\n        statements.push.apply(statements, __spread(bindingExpr.render3Stmts));\n        var eventName = type === 1 /* Animation */ ? prepareSyntheticListenerName(name, phase) : name;\n        var fnName = handlerName && sanitizeIdentifier(handlerName);\n        var fnArgs = [new FnParam('$event', DYNAMIC_TYPE)];\n        var handlerFn = fn(fnArgs, statements, INFERRED_TYPE, null, fnName);\n        var params = [literal(eventName), handlerFn];\n        if (target) {\n            params.push(literal(false), // `useCapture` flag, defaults to `false`\n            importExpr(GLOBAL_TARGET_RESOLVERS.get(target)));\n        }\n        return params;\n    }\n    var TemplateDefinitionBuilder = /** @class */ (function () {\n        function TemplateDefinitionBuilder(constantPool, parentBindingScope, level, contextName, i18nContext, templateIndex, templateName, viewQueries, directiveMatcher, directives, pipeTypeByName, pipes, _namespace, relativeContextFilePath, i18nUseExternalIds) {\n            if (level === void 0) { level = 0; }\n            var _this = this;\n            this.constantPool = constantPool;\n            this.level = level;\n            this.contextName = contextName;\n            this.i18nContext = i18nContext;\n            this.templateIndex = templateIndex;\n            this.templateName = templateName;\n            this.viewQueries = viewQueries;\n            this.directiveMatcher = directiveMatcher;\n            this.directives = directives;\n            this.pipeTypeByName = pipeTypeByName;\n            this.pipes = pipes;\n            this._namespace = _namespace;\n            this.relativeContextFilePath = relativeContextFilePath;\n            this.i18nUseExternalIds = i18nUseExternalIds;\n            this._dataIndex = 0;\n            this._bindingContext = 0;\n            this._prefixCode = [];\n            /**\n             * List of callbacks to generate creation mode instructions. We store them here as we process\n             * the template so bindings in listeners are resolved only once all nodes have been visited.\n             * This ensures all local refs and context variables are available for matching.\n             */\n            this._creationCodeFns = [];\n            /**\n             * List of callbacks to generate update mode instructions. We store them here as we process\n             * the template so bindings are resolved only once all nodes have been visited. This ensures\n             * all local refs and context variables are available for matching.\n             */\n            this._updateCodeFns = [];\n            /** Temporary variable declarations generated from visiting pipes, literals, etc. */\n            this._tempVariables = [];\n            /**\n             * List of callbacks to build nested templates. Nested templates must not be visited until\n             * after the parent template has finished visiting all of its nodes. This ensures that all\n             * local ref bindings in nested templates are able to find local ref values if the refs\n             * are defined after the template declaration.\n             */\n            this._nestedTemplateFns = [];\n            this._unsupported = unsupported;\n            // i18n context local to this template\n            this.i18n = null;\n            // Number of slots to reserve for pureFunctions\n            this._pureFunctionSlots = 0;\n            // Number of binding slots\n            this._bindingSlots = 0;\n            // Whether the template includes <ng-content> tags.\n            this._hasNgContent = false;\n            // Selectors found in the <ng-content> tags in the template.\n            this._ngContentSelectors = [];\n            // Number of non-default selectors found in all parent templates of this template. We need to\n            // track it to properly adjust projection bucket index in the `projection` instruction.\n            this._ngContentSelectorsOffset = 0;\n            // These should be handled in the template or element directly.\n            this.visitReference = invalid$1;\n            this.visitVariable = invalid$1;\n            this.visitTextAttribute = invalid$1;\n            this.visitBoundAttribute = invalid$1;\n            this.visitBoundEvent = invalid$1;\n            // view queries can take up space in data and allocation happens earlier (in the \"viewQuery\"\n            // function)\n            this._dataIndex = viewQueries.length;\n            this._bindingScope = parentBindingScope.nestedScope(level);\n            // Turn the relative context file path into an identifier by replacing non-alphanumeric\n            // characters with underscores.\n            this.fileBasedI18nSuffix = relativeContextFilePath.replace(/[^A-Za-z0-9]/g, '_') + '_';\n            this._valueConverter = new ValueConverter(constantPool, function () { return _this.allocateDataSlot(); }, function (numSlots) { return _this.allocatePureFunctionSlots(numSlots); }, function (name, localName, slot, value) {\n                var pipeType = pipeTypeByName.get(name);\n                if (pipeType) {\n                    _this.pipes.add(pipeType);\n                }\n                _this._bindingScope.set(_this.level, localName, value);\n                _this.creationInstruction(null, Identifiers$1.pipe, [literal(slot), literal(name)]);\n            });\n        }\n        TemplateDefinitionBuilder.prototype.registerContextVariables = function (variable$$1) {\n            var scopedName = this._bindingScope.freshReferenceName();\n            var retrievalLevel = this.level;\n            var lhs = variable(variable$$1.name + scopedName);\n            this._bindingScope.set(retrievalLevel, variable$$1.name, lhs, 1 /* CONTEXT */, function (scope, relativeLevel) {\n                var rhs;\n                if (scope.bindingLevel === retrievalLevel) {\n                    // e.g. ctx\n                    rhs = variable(CONTEXT_NAME);\n                }\n                else {\n                    var sharedCtxVar = scope.getSharedContextName(retrievalLevel);\n                    // e.g. ctx_r0   OR  x(2);\n                    rhs = sharedCtxVar ? sharedCtxVar : generateNextContextExpr(relativeLevel);\n                }\n                // e.g. const $item$ = x(2).$implicit;\n                return [lhs.set(rhs.prop(variable$$1.value || IMPLICIT_REFERENCE)).toConstDecl()];\n            });\n        };\n        TemplateDefinitionBuilder.prototype.buildTemplateFunction = function (nodes, variables, ngContentSelectorsOffset, i18n) {\n            var _this = this;\n            if (ngContentSelectorsOffset === void 0) { ngContentSelectorsOffset = 0; }\n            this._ngContentSelectorsOffset = ngContentSelectorsOffset;\n            if (this._namespace !== Identifiers$1.namespaceHTML) {\n                this.creationInstruction(null, this._namespace);\n            }\n            // Create variable bindings\n            variables.forEach(function (v) { return _this.registerContextVariables(v); });\n            // Initiate i18n context in case:\n            // - this template has parent i18n context\n            // - or the template has i18n meta associated with it,\n            //   but it's not initiated by the Element (e.g. <ng-template i18n>)\n            var initI18nContext = this.i18nContext || (isI18nRootNode(i18n) && !isSingleI18nIcu(i18n) &&\n                !(isSingleElementTemplate(nodes) && nodes[0].i18n === i18n));\n            var selfClosingI18nInstruction = hasTextChildrenOnly(nodes);\n            if (initI18nContext) {\n                this.i18nStart(null, i18n, selfClosingI18nInstruction);\n            }\n            // This is the initial pass through the nodes of this template. In this pass, we\n            // queue all creation mode and update mode instructions for generation in the second\n            // pass. It's necessary to separate the passes to ensure local refs are defined before\n            // resolving bindings. We also count bindings in this pass as we walk bound expressions.\n            visitAll(this, nodes);\n            // Add total binding count to pure function count so pure function instructions are\n            // generated with the correct slot offset when update instructions are processed.\n            this._pureFunctionSlots += this._bindingSlots;\n            // Pipes are walked in the first pass (to enqueue `pipe()` creation instructions and\n            // `pipeBind` update instructions), so we have to update the slot offsets manually\n            // to account for bindings.\n            this._valueConverter.updatePipeSlotOffsets(this._bindingSlots);\n            // Nested templates must be processed before creation instructions so template()\n            // instructions can be generated with the correct internal const count.\n            this._nestedTemplateFns.forEach(function (buildTemplateFn) { return buildTemplateFn(); });\n            // Output the `projectionDef` instruction when some `<ng-content>` are present.\n            // The `projectionDef` instruction only emitted for the component template and it is skipped for\n            // nested templates (<ng-template> tags).\n            if (this.level === 0 && this._hasNgContent) {\n                var parameters = [];\n                // Only selectors with a non-default value are generated\n                if (this._ngContentSelectors.length) {\n                    var r3Selectors = this._ngContentSelectors.map(function (s) { return parseSelectorToR3Selector(s); });\n                    // `projectionDef` needs both the parsed and raw value of the selectors\n                    var parsed = this.constantPool.getConstLiteral(asLiteral(r3Selectors), true);\n                    var unParsed = this.constantPool.getConstLiteral(asLiteral(this._ngContentSelectors), true);\n                    parameters.push(parsed, unParsed);\n                }\n                // Since we accumulate ngContent selectors while processing template elements,\n                // we *prepend* `projectionDef` to creation instructions block, to put it before\n                // any `projection` instructions\n                this.creationInstruction(null, Identifiers$1.projectionDef, parameters, /* prepend */ true);\n            }\n            if (initI18nContext) {\n                this.i18nEnd(null, selfClosingI18nInstruction);\n            }\n            // Generate all the creation mode instructions (e.g. resolve bindings in listeners)\n            var creationStatements = this._creationCodeFns.map(function (fn$$1) { return fn$$1(); });\n            // Generate all the update mode instructions (e.g. resolve property or text bindings)\n            var updateStatements = this._updateCodeFns.map(function (fn$$1) { return fn$$1(); });\n            //  Variable declaration must occur after binding resolution so we can generate context\n            //  instructions that build on each other.\n            // e.g. const b = nextContext().$implicit(); const b = nextContext();\n            var creationVariables = this._bindingScope.viewSnapshotStatements();\n            var updateVariables = this._bindingScope.variableDeclarations().concat(this._tempVariables);\n            var creationBlock = creationStatements.length > 0 ?\n                [renderFlagCheckIfStmt(1 /* Create */, creationVariables.concat(creationStatements))] :\n                [];\n            var updateBlock = updateStatements.length > 0 ?\n                [renderFlagCheckIfStmt(2 /* Update */, updateVariables.concat(updateStatements))] :\n                [];\n            return fn(\n            // i.e. (rf: RenderFlags, ctx: any)\n            [new FnParam(RENDER_FLAGS, NUMBER_TYPE), new FnParam(CONTEXT_NAME, null)], __spread(this._prefixCode, creationBlock, updateBlock), INFERRED_TYPE, null, this.templateName);\n        };\n        // LocalResolver\n        TemplateDefinitionBuilder.prototype.getLocal = function (name) { return this._bindingScope.get(name); };\n        TemplateDefinitionBuilder.prototype.i18nTranslate = function (message, params, ref, transformFn) {\n            if (params === void 0) { params = {}; }\n            var _a;\n            var _ref = ref || this.i18nAllocateRef(message.id);\n            var _params = {};\n            if (params && Object.keys(params).length) {\n                Object.keys(params).forEach(function (key) { return _params[formatI18nPlaceholderName(key)] = params[key]; });\n            }\n            var meta = metaFromI18nMessage(message);\n            var content = getSerializedI18nContent(message);\n            var statements = getTranslationDeclStmts(_ref, content, meta, _params, transformFn);\n            (_a = this.constantPool.statements).push.apply(_a, __spread(statements));\n            return _ref;\n        };\n        TemplateDefinitionBuilder.prototype.i18nAppendBindings = function (expressions) {\n            var _this = this;\n            if (!this.i18n || !expressions.length)\n                return;\n            var implicit = variable(CONTEXT_NAME);\n            expressions.forEach(function (expression) {\n                var binding = _this.convertExpressionBinding(implicit, expression);\n                _this.i18n.appendBinding(binding);\n            });\n        };\n        TemplateDefinitionBuilder.prototype.i18nBindProps = function (props) {\n            var _this = this;\n            var bound = {};\n            Object.keys(props).forEach(function (key) {\n                var prop = props[key];\n                if (prop instanceof Text$2) {\n                    bound[key] = literal(prop.value);\n                }\n                else {\n                    var value = prop.value.visit(_this._valueConverter);\n                    _this.allocateBindingSlots(value);\n                    if (value instanceof Interpolation) {\n                        var strings = value.strings, expressions = value.expressions;\n                        var _a = _this.i18n, id = _a.id, bindings = _a.bindings;\n                        var label = assembleI18nBoundString(strings, bindings.size, id);\n                        _this.i18nAppendBindings(expressions);\n                        bound[key] = literal(label);\n                    }\n                }\n            });\n            return bound;\n        };\n        TemplateDefinitionBuilder.prototype.i18nAllocateRef = function (messageId) {\n            var name;\n            var suffix = this.fileBasedI18nSuffix.toUpperCase();\n            if (this.i18nUseExternalIds) {\n                var prefix = getTranslationConstPrefix(\"EXTERNAL_\");\n                var uniqueSuffix = this.constantPool.uniqueName(suffix);\n                name = \"\" + prefix + messageId + \"$$\" + uniqueSuffix;\n            }\n            else {\n                var prefix = getTranslationConstPrefix(suffix);\n                name = this.constantPool.uniqueName(prefix);\n            }\n            return variable(name);\n        };\n        TemplateDefinitionBuilder.prototype.i18nUpdateRef = function (context) {\n            var icus = context.icus, meta = context.meta, isRoot = context.isRoot, isResolved = context.isResolved;\n            if (isRoot && isResolved && !isSingleI18nIcu(meta)) {\n                var placeholders = context.getSerializedPlaceholders();\n                var icuMapping_1 = {};\n                var params_1 = placeholders.size ? placeholdersToParams(placeholders) : {};\n                if (icus.size) {\n                    icus.forEach(function (refs, key) {\n                        if (refs.length === 1) {\n                            // if we have one ICU defined for a given\n                            // placeholder - just output its reference\n                            params_1[key] = refs[0];\n                        }\n                        else {\n                            // ... otherwise we need to activate post-processing\n                            // to replace ICU placeholders with proper values\n                            var placeholder = wrapI18nPlaceholder(\"\" + I18N_ICU_MAPPING_PREFIX + key);\n                            params_1[key] = literal(placeholder);\n                            icuMapping_1[key] = literalArr(refs);\n                        }\n                    });\n                }\n                // translation requires post processing in 2 cases:\n                // - if we have placeholders with multiple values (ex. `START_DIV`: [�#1�, �#2�, ...])\n                // - if we have multiple ICUs that refer to the same placeholder name\n                var needsPostprocessing = Array.from(placeholders.values()).some(function (value) { return value.length > 1; }) ||\n                    Object.keys(icuMapping_1).length;\n                var transformFn = void 0;\n                if (needsPostprocessing) {\n                    transformFn = function (raw) {\n                        var args = [raw];\n                        if (Object.keys(icuMapping_1).length) {\n                            args.push(mapLiteral(icuMapping_1, true));\n                        }\n                        return instruction(null, Identifiers$1.i18nPostprocess, args);\n                    };\n                }\n                this.i18nTranslate(meta, params_1, context.ref, transformFn);\n            }\n        };\n        TemplateDefinitionBuilder.prototype.i18nStart = function (span, meta, selfClosing) {\n            if (span === void 0) { span = null; }\n            var index = this.allocateDataSlot();\n            if (this.i18nContext) {\n                this.i18n = this.i18nContext.forkChildContext(index, this.templateIndex, meta);\n            }\n            else {\n                var ref_1 = this.i18nAllocateRef(meta.id);\n                this.i18n = new I18nContext(index, ref_1, 0, this.templateIndex, meta);\n            }\n            // generate i18nStart instruction\n            var _a = this.i18n, id = _a.id, ref = _a.ref;\n            var params = [literal(index), ref];\n            if (id > 0) {\n                // do not push 3rd argument (sub-block id)\n                // into i18nStart call for top level i18n context\n                params.push(literal(id));\n            }\n            this.creationInstruction(span, selfClosing ? Identifiers$1.i18n : Identifiers$1.i18nStart, params);\n        };\n        TemplateDefinitionBuilder.prototype.i18nEnd = function (span, selfClosing) {\n            var _this = this;\n            if (span === void 0) { span = null; }\n            if (!this.i18n) {\n                throw new Error('i18nEnd is executed with no i18n context present');\n            }\n            if (this.i18nContext) {\n                this.i18nContext.reconcileChildContext(this.i18n);\n                this.i18nUpdateRef(this.i18nContext);\n            }\n            else {\n                this.i18nUpdateRef(this.i18n);\n            }\n            // setup accumulated bindings\n            var _a = this.i18n, index = _a.index, bindings = _a.bindings;\n            if (bindings.size) {\n                bindings.forEach(function (binding) { return _this.updateInstruction(span, Identifiers$1.i18nExp, [binding]); });\n                this.updateInstruction(span, Identifiers$1.i18nApply, [literal(index)]);\n            }\n            if (!selfClosing) {\n                this.creationInstruction(span, Identifiers$1.i18nEnd);\n            }\n            this.i18n = null; // reset local i18n context\n        };\n        TemplateDefinitionBuilder.prototype.visitContent = function (ngContent) {\n            this._hasNgContent = true;\n            var slot = this.allocateDataSlot();\n            var selectorIndex = ngContent.selector === DEFAULT_NG_CONTENT_SELECTOR ?\n                0 :\n                this._ngContentSelectors.push(ngContent.selector) + this._ngContentSelectorsOffset;\n            var parameters = [literal(slot)];\n            var attributeAsList = [];\n            ngContent.attributes.forEach(function (attribute) {\n                var name = attribute.name, value = attribute.value;\n                if (name.toLowerCase() !== NG_CONTENT_SELECT_ATTR$1) {\n                    attributeAsList.push(name, value);\n                }\n            });\n            if (attributeAsList.length > 0) {\n                parameters.push(literal(selectorIndex), asLiteral(attributeAsList));\n            }\n            else if (selectorIndex !== 0) {\n                parameters.push(literal(selectorIndex));\n            }\n            this.creationInstruction(ngContent.sourceSpan, Identifiers$1.projection, parameters);\n        };\n        TemplateDefinitionBuilder.prototype.getNamespaceInstruction = function (namespaceKey) {\n            switch (namespaceKey) {\n                case 'math':\n                    return Identifiers$1.namespaceMathML;\n                case 'svg':\n                    return Identifiers$1.namespaceSVG;\n                default:\n                    return Identifiers$1.namespaceHTML;\n            }\n        };\n        TemplateDefinitionBuilder.prototype.addNamespaceInstruction = function (nsInstruction, element) {\n            this._namespace = nsInstruction;\n            this.creationInstruction(element.sourceSpan, nsInstruction);\n        };\n        TemplateDefinitionBuilder.prototype.visitElement = function (element) {\n            var _this = this;\n            var e_1, _a;\n            var elementIndex = this.allocateDataSlot();\n            var stylingBuilder = new StylingBuilder(literal(elementIndex), null);\n            var isNonBindableMode = false;\n            var isI18nRootElement = isI18nRootNode(element.i18n) && !isSingleI18nIcu(element.i18n);\n            if (isI18nRootElement && this.i18n) {\n                throw new Error(\"Could not mark an element as translatable inside of a translatable section\");\n            }\n            var i18nAttrs = [];\n            var outputAttrs = [];\n            var _b = __read(splitNsName(element.name), 2), namespaceKey = _b[0], elementName = _b[1];\n            var isNgContainer$$1 = isNgContainer(element.name);\n            try {\n                // Handle styling, i18n, ngNonBindable attributes\n                for (var _c = __values(element.attributes), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var attr = _d.value;\n                    var name_1 = attr.name, value = attr.value;\n                    if (name_1 === NON_BINDABLE_ATTR) {\n                        isNonBindableMode = true;\n                    }\n                    else if (name_1 === 'style') {\n                        stylingBuilder.registerStyleAttr(value);\n                    }\n                    else if (name_1 === 'class') {\n                        stylingBuilder.registerClassAttr(value);\n                    }\n                    else if (attr.i18n) {\n                        i18nAttrs.push(attr);\n                    }\n                    else {\n                        outputAttrs.push(attr);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            // Match directives on non i18n attributes\n            this.matchDirectives(element.name, element);\n            // Regular element or ng-container creation mode\n            var parameters = [literal(elementIndex)];\n            if (!isNgContainer$$1) {\n                parameters.push(literal(elementName));\n            }\n            // Add the attributes\n            var attributes = [];\n            var allOtherInputs = [];\n            element.inputs.forEach(function (input) {\n                if (!stylingBuilder.registerBoundInput(input)) {\n                    if (input.type === 0 /* Property */) {\n                        if (input.i18n) {\n                            i18nAttrs.push(input);\n                        }\n                        else {\n                            allOtherInputs.push(input);\n                        }\n                    }\n                    else {\n                        allOtherInputs.push(input);\n                    }\n                }\n            });\n            outputAttrs.forEach(function (attr) {\n                attributes.push.apply(attributes, __spread(getAttributeNameLiterals(attr.name), [literal(attr.value)]));\n            });\n            // this will build the instructions so that they fall into the following syntax\n            // add attributes for directive matching purposes\n            attributes.push.apply(attributes, __spread(this.prepareSelectOnlyAttrs(allOtherInputs, element.outputs, stylingBuilder)));\n            parameters.push(this.toAttrsParam(attributes));\n            // local refs (ex.: <div #foo #bar=\"baz\">)\n            parameters.push(this.prepareRefsParameter(element.references));\n            var wasInNamespace = this._namespace;\n            var currentNamespace = this.getNamespaceInstruction(namespaceKey);\n            // If the namespace is changing now, include an instruction to change it\n            // during element creation.\n            if (currentNamespace !== wasInNamespace) {\n                this.addNamespaceInstruction(currentNamespace, element);\n            }\n            var implicit = variable(CONTEXT_NAME);\n            if (this.i18n) {\n                this.i18n.appendElement(element.i18n, elementIndex);\n            }\n            var hasChildren = function () {\n                if (!isI18nRootElement && _this.i18n) {\n                    // we do not append text node instructions and ICUs inside i18n section,\n                    // so we exclude them while calculating whether current element has children\n                    return !hasTextChildrenOnly(element.children);\n                }\n                return element.children.length > 0;\n            };\n            var createSelfClosingInstruction = !stylingBuilder.hasBindings && !isNgContainer$$1 &&\n                element.outputs.length === 0 && i18nAttrs.length === 0 && !hasChildren();\n            var createSelfClosingI18nInstruction = !createSelfClosingInstruction &&\n                !stylingBuilder.hasBindings && hasTextChildrenOnly(element.children);\n            if (createSelfClosingInstruction) {\n                this.creationInstruction(element.sourceSpan, Identifiers$1.element, trimTrailingNulls(parameters));\n            }\n            else {\n                this.creationInstruction(element.sourceSpan, isNgContainer$$1 ? Identifiers$1.elementContainerStart : Identifiers$1.elementStart, trimTrailingNulls(parameters));\n                if (isNonBindableMode) {\n                    this.creationInstruction(element.sourceSpan, Identifiers$1.disableBindings);\n                }\n                // process i18n element attributes\n                if (i18nAttrs.length) {\n                    var hasBindings_1 = false;\n                    var i18nAttrArgs_1 = [];\n                    i18nAttrs.forEach(function (attr) {\n                        var message = attr.i18n;\n                        if (attr instanceof TextAttribute) {\n                            i18nAttrArgs_1.push(literal(attr.name), _this.i18nTranslate(message));\n                        }\n                        else {\n                            var converted = attr.value.visit(_this._valueConverter);\n                            _this.allocateBindingSlots(converted);\n                            if (converted instanceof Interpolation) {\n                                var placeholders = assembleBoundTextPlaceholders(message);\n                                var params = placeholdersToParams(placeholders);\n                                i18nAttrArgs_1.push(literal(attr.name), _this.i18nTranslate(message, params));\n                                converted.expressions.forEach(function (expression) {\n                                    hasBindings_1 = true;\n                                    var binding = _this.convertExpressionBinding(implicit, expression);\n                                    _this.updateInstruction(element.sourceSpan, Identifiers$1.i18nExp, [binding]);\n                                });\n                            }\n                        }\n                    });\n                    if (i18nAttrArgs_1.length) {\n                        var index = literal(this.allocateDataSlot());\n                        var args = this.constantPool.getConstLiteral(literalArr(i18nAttrArgs_1), true);\n                        this.creationInstruction(element.sourceSpan, Identifiers$1.i18nAttributes, [index, args]);\n                        if (hasBindings_1) {\n                            this.updateInstruction(element.sourceSpan, Identifiers$1.i18nApply, [index]);\n                        }\n                    }\n                }\n                // Note: it's important to keep i18n/i18nStart instructions after i18nAttributes ones,\n                // to make sure i18nAttributes instruction targets current element at runtime.\n                if (isI18nRootElement) {\n                    this.i18nStart(element.sourceSpan, element.i18n, createSelfClosingI18nInstruction);\n                }\n                // The style bindings code is placed into two distinct blocks within the template function AOT\n                // code: creation and update. The creation code contains the `elementStyling` instructions\n                // which will apply the collected binding values to the element. `elementStyling` is\n                // designed to run inside of `elementStart` and `elementEnd`. The update instructions\n                // (things like `elementStyleProp`, `elementClassProp`, etc..) are applied later on in this\n                // file\n                this.processStylingInstruction(implicit, stylingBuilder.buildElementStylingInstruction(element.sourceSpan, this.constantPool), true);\n                // Generate Listeners (outputs)\n                element.outputs.forEach(function (outputAst) {\n                    _this.creationInstruction(outputAst.sourceSpan, Identifiers$1.listener, _this.prepareListenerParameter(element.name, outputAst, elementIndex));\n                });\n            }\n            // the code here will collect all update-level styling instructions and add them to the\n            // update block of the template function AOT code. Instructions like `elementStyleProp`,\n            // `elementStylingMap`, `elementClassProp` and `elementStylingApply` are all generated\n            // and assign in the code below.\n            stylingBuilder.buildUpdateLevelInstructions(this._valueConverter).forEach(function (instruction) {\n                _this._bindingSlots += instruction.allocateBindingSlots;\n                _this.processStylingInstruction(implicit, instruction, false);\n            });\n            // the reason why `undefined` is used is because the renderer understands this as a\n            // special value to symbolize that there is no RHS to this binding\n            // TODO (matsko): revisit this once FW-959 is approached\n            var emptyValueBindInstruction = importExpr(Identifiers$1.bind).callFn([literal(undefined)]);\n            // Generate element input bindings\n            allOtherInputs.forEach(function (input) {\n                var instruction = mapBindingToInstruction(input.type);\n                if (input.type === 4 /* Animation */) {\n                    var value_1 = input.value.visit(_this._valueConverter);\n                    // animation bindings can be presented in the following formats:\n                    // 1. [@binding]=\"fooExp\"\n                    // 2. [@binding]=\"{value:fooExp, params:{...}}\"\n                    // 3. [@binding]\n                    // 4. @binding\n                    // All formats will be valid for when a synthetic binding is created.\n                    // The reasoning for this is because the renderer should get each\n                    // synthetic binding value in the order of the array that they are\n                    // defined in...\n                    var hasValue_1 = value_1 instanceof LiteralPrimitive ? !!value_1.value : true;\n                    _this.allocateBindingSlots(value_1);\n                    var bindingName_1 = prepareSyntheticPropertyName(input.name);\n                    _this.updateInstruction(input.sourceSpan, Identifiers$1.elementProperty, function () {\n                        return [\n                            literal(elementIndex), literal(bindingName_1),\n                            (hasValue_1 ? _this.convertPropertyBinding(implicit, value_1) : emptyValueBindInstruction)\n                        ];\n                    });\n                }\n                else if (instruction) {\n                    var value_2 = input.value.visit(_this._valueConverter);\n                    if (value_2 !== undefined) {\n                        var params_2 = [];\n                        var _a = __read(splitNsName(input.name), 2), attrNamespace = _a[0], attrName_1 = _a[1];\n                        var isAttributeBinding = input.type === 1 /* Attribute */;\n                        var sanitizationRef = resolveSanitizationFn(input.securityContext, isAttributeBinding);\n                        if (sanitizationRef)\n                            params_2.push(sanitizationRef);\n                        if (attrNamespace) {\n                            var namespaceLiteral = literal(attrNamespace);\n                            if (sanitizationRef) {\n                                params_2.push(namespaceLiteral);\n                            }\n                            else {\n                                // If there wasn't a sanitization ref, we need to add\n                                // an extra param so that we can pass in the namespace.\n                                params_2.push(literal(null), namespaceLiteral);\n                            }\n                        }\n                        _this.allocateBindingSlots(value_2);\n                        _this.updateInstruction(input.sourceSpan, instruction, function () {\n                            return __spread([\n                                literal(elementIndex), literal(attrName_1),\n                                _this.convertPropertyBinding(implicit, value_2)\n                            ], params_2);\n                        });\n                    }\n                }\n                else {\n                    _this._unsupported(\"binding type \" + input.type);\n                }\n            });\n            // Traverse element child nodes\n            visitAll(this, element.children);\n            if (!isI18nRootElement && this.i18n) {\n                this.i18n.appendElement(element.i18n, elementIndex, true);\n            }\n            if (!createSelfClosingInstruction) {\n                // Finish element construction mode.\n                var span = element.endSourceSpan || element.sourceSpan;\n                if (isI18nRootElement) {\n                    this.i18nEnd(span, createSelfClosingI18nInstruction);\n                }\n                if (isNonBindableMode) {\n                    this.creationInstruction(span, Identifiers$1.enableBindings);\n                }\n                this.creationInstruction(span, isNgContainer$$1 ? Identifiers$1.elementContainerEnd : Identifiers$1.elementEnd);\n            }\n        };\n        TemplateDefinitionBuilder.prototype.visitTemplate = function (template) {\n            var _this = this;\n            var templateIndex = this.allocateDataSlot();\n            if (this.i18n) {\n                this.i18n.appendTemplate(template.i18n, templateIndex);\n            }\n            var tagName = sanitizeIdentifier(template.tagName || '');\n            var contextName = (tagName ? this.contextName + '_' + tagName : '') + \"_\" + templateIndex;\n            var templateName = contextName + \"_Template\";\n            var parameters = [\n                literal(templateIndex),\n                variable(templateName),\n                // We don't care about the tag's namespace here, because we infer\n                // it based on the parent nodes inside the template instruction.\n                literal(template.tagName ? splitNsName(template.tagName)[1] : template.tagName),\n            ];\n            // find directives matching on a given <ng-template> node\n            this.matchDirectives('ng-template', template);\n            // prepare attributes parameter (including attributes used for directive matching)\n            var attrsExprs = [];\n            template.attributes.forEach(function (a) { attrsExprs.push(asLiteral(a.name), asLiteral(a.value)); });\n            attrsExprs.push.apply(attrsExprs, __spread(this.prepareSelectOnlyAttrs(template.inputs, template.outputs)));\n            parameters.push(this.toAttrsParam(attrsExprs));\n            // local refs (ex.: <ng-template #foo>)\n            if (template.references && template.references.length) {\n                parameters.push(this.prepareRefsParameter(template.references));\n                parameters.push(importExpr(Identifiers$1.templateRefExtractor));\n            }\n            // handle property bindings e.g. p(1, 'ngForOf', ɵbind(ctx.items));\n            var context = variable(CONTEXT_NAME);\n            template.inputs.forEach(function (input) {\n                var value = input.value.visit(_this._valueConverter);\n                _this.allocateBindingSlots(value);\n                _this.updateInstruction(template.sourceSpan, Identifiers$1.elementProperty, function () {\n                    return [\n                        literal(templateIndex), literal(input.name),\n                        _this.convertPropertyBinding(context, value)\n                    ];\n                });\n            });\n            // Create the template function\n            var templateVisitor = new TemplateDefinitionBuilder(this.constantPool, this._bindingScope, this.level + 1, contextName, this.i18n, templateIndex, templateName, [], this.directiveMatcher, this.directives, this.pipeTypeByName, this.pipes, this._namespace, this.fileBasedI18nSuffix, this.i18nUseExternalIds);\n            // Nested templates must not be visited until after their parent templates have completed\n            // processing, so they are queued here until after the initial pass. Otherwise, we wouldn't\n            // be able to support bindings in nested templates to local refs that occur after the\n            // template definition. e.g. <div *ngIf=\"showing\">{{ foo }}</div>  <div #foo></div>\n            this._nestedTemplateFns.push(function () {\n                var _a;\n                var templateFunctionExpr = templateVisitor.buildTemplateFunction(template.children, template.variables, _this._ngContentSelectors.length + _this._ngContentSelectorsOffset, template.i18n);\n                _this.constantPool.statements.push(templateFunctionExpr.toDeclStmt(templateName, null));\n                if (templateVisitor._hasNgContent) {\n                    _this._hasNgContent = true;\n                    (_a = _this._ngContentSelectors).push.apply(_a, __spread(templateVisitor._ngContentSelectors));\n                }\n            });\n            // e.g. template(1, MyComp_Template_1)\n            this.creationInstruction(template.sourceSpan, Identifiers$1.templateCreate, function () {\n                parameters.splice(2, 0, literal(templateVisitor.getConstCount()), literal(templateVisitor.getVarCount()));\n                return trimTrailingNulls(parameters);\n            });\n            // Generate listeners for directive output\n            template.outputs.forEach(function (outputAst) {\n                _this.creationInstruction(outputAst.sourceSpan, Identifiers$1.listener, _this.prepareListenerParameter('ng_template', outputAst, templateIndex));\n            });\n        };\n        TemplateDefinitionBuilder.prototype.visitBoundText = function (text) {\n            var _this = this;\n            if (this.i18n) {\n                var value_3 = text.value.visit(this._valueConverter);\n                this.allocateBindingSlots(value_3);\n                if (value_3 instanceof Interpolation) {\n                    this.i18n.appendBoundText(text.i18n);\n                    this.i18nAppendBindings(value_3.expressions);\n                }\n                return;\n            }\n            var nodeIndex = this.allocateDataSlot();\n            this.creationInstruction(text.sourceSpan, Identifiers$1.text, [literal(nodeIndex)]);\n            var value = text.value.visit(this._valueConverter);\n            this.allocateBindingSlots(value);\n            this.updateInstruction(text.sourceSpan, Identifiers$1.textBinding, function () { return [literal(nodeIndex), _this.convertPropertyBinding(variable(CONTEXT_NAME), value)]; });\n        };\n        TemplateDefinitionBuilder.prototype.visitText = function (text) {\n            // when a text element is located within a translatable\n            // block, we exclude this text element from instructions set,\n            // since it will be captured in i18n content and processed at runtime\n            if (!this.i18n) {\n                this.creationInstruction(text.sourceSpan, Identifiers$1.text, [literal(this.allocateDataSlot()), literal(text.value)]);\n            }\n        };\n        TemplateDefinitionBuilder.prototype.visitIcu = function (icu) {\n            var initWasInvoked = false;\n            // if an ICU was created outside of i18n block, we still treat\n            // it as a translatable entity and invoke i18nStart and i18nEnd\n            // to generate i18n context and the necessary instructions\n            if (!this.i18n) {\n                initWasInvoked = true;\n                this.i18nStart(null, icu.i18n, true);\n            }\n            var i18n = this.i18n;\n            var vars = this.i18nBindProps(icu.vars);\n            var placeholders = this.i18nBindProps(icu.placeholders);\n            // output ICU directly and keep ICU reference in context\n            var message = icu.i18n;\n            var transformFn = function (raw) {\n                return instruction(null, Identifiers$1.i18nPostprocess, [raw, mapLiteral(vars, true)]);\n            };\n            // in case the whole i18n message is a single ICU - we do not need to\n            // create a separate top-level translation, we can use the root ref instead\n            // and make this ICU a top-level translation\n            if (isSingleI18nIcu(i18n.meta)) {\n                this.i18nTranslate(message, placeholders, i18n.ref, transformFn);\n            }\n            else {\n                // output ICU directly and keep ICU reference in context\n                var ref = this.i18nTranslate(message, placeholders, undefined, transformFn);\n                i18n.appendIcu(icuFromI18nMessage(message).name, ref);\n            }\n            if (initWasInvoked) {\n                this.i18nEnd(null, true);\n            }\n            return null;\n        };\n        TemplateDefinitionBuilder.prototype.allocateDataSlot = function () { return this._dataIndex++; };\n        TemplateDefinitionBuilder.prototype.getConstCount = function () { return this._dataIndex; };\n        TemplateDefinitionBuilder.prototype.getVarCount = function () { return this._pureFunctionSlots; };\n        TemplateDefinitionBuilder.prototype.getNgContentSelectors = function () {\n            return this._hasNgContent ?\n                this.constantPool.getConstLiteral(asLiteral(this._ngContentSelectors), true) :\n                null;\n        };\n        TemplateDefinitionBuilder.prototype.bindingContext = function () { return \"\" + this._bindingContext++; };\n        // Bindings must only be resolved after all local refs have been visited, so all\n        // instructions are queued in callbacks that execute once the initial pass has completed.\n        // Otherwise, we wouldn't be able to support local refs that are defined after their\n        // bindings. e.g. {{ foo }} <div #foo></div>\n        TemplateDefinitionBuilder.prototype.instructionFn = function (fns, span, reference, paramsOrFn, prepend) {\n            if (prepend === void 0) { prepend = false; }\n            fns[prepend ? 'unshift' : 'push'](function () {\n                var params = Array.isArray(paramsOrFn) ? paramsOrFn : paramsOrFn();\n                return instruction(span, reference, params).toStmt();\n            });\n        };\n        TemplateDefinitionBuilder.prototype.processStylingInstruction = function (implicit, instruction, createMode) {\n            var _this = this;\n            if (instruction) {\n                var paramsFn = function () {\n                    return instruction.buildParams(function (value) { return _this.convertPropertyBinding(implicit, value, true); });\n                };\n                if (createMode) {\n                    this.creationInstruction(instruction.sourceSpan, instruction.reference, paramsFn);\n                }\n                else {\n                    this.updateInstruction(instruction.sourceSpan, instruction.reference, paramsFn);\n                }\n            }\n        };\n        TemplateDefinitionBuilder.prototype.creationInstruction = function (span, reference, paramsOrFn, prepend) {\n            this.instructionFn(this._creationCodeFns, span, reference, paramsOrFn || [], prepend);\n        };\n        TemplateDefinitionBuilder.prototype.updateInstruction = function (span, reference, paramsOrFn) {\n            this.instructionFn(this._updateCodeFns, span, reference, paramsOrFn || []);\n        };\n        TemplateDefinitionBuilder.prototype.allocatePureFunctionSlots = function (numSlots) {\n            var originalSlots = this._pureFunctionSlots;\n            this._pureFunctionSlots += numSlots;\n            return originalSlots;\n        };\n        TemplateDefinitionBuilder.prototype.allocateBindingSlots = function (value) {\n            this._bindingSlots += value instanceof Interpolation ? value.expressions.length : 1;\n        };\n        TemplateDefinitionBuilder.prototype.convertExpressionBinding = function (implicit, value) {\n            var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple);\n            var valExpr = convertedPropertyBinding.currValExpr;\n            return importExpr(Identifiers$1.bind).callFn([valExpr]);\n        };\n        TemplateDefinitionBuilder.prototype.convertPropertyBinding = function (implicit, value, skipBindFn) {\n            var _a;\n            var interpolationFn = value instanceof Interpolation ? interpolate : function () { return error('Unexpected interpolation'); };\n            var convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolationFn);\n            (_a = this._tempVariables).push.apply(_a, __spread(convertedPropertyBinding.stmts));\n            var valExpr = convertedPropertyBinding.currValExpr;\n            return value instanceof Interpolation || skipBindFn ? valExpr :\n                importExpr(Identifiers$1.bind).callFn([valExpr]);\n        };\n        TemplateDefinitionBuilder.prototype.matchDirectives = function (tagName, elOrTpl) {\n            var _this = this;\n            if (this.directiveMatcher) {\n                var selector = createCssSelector(tagName, getAttrsForDirectiveMatching(elOrTpl));\n                this.directiveMatcher.match(selector, function (cssSelector, staticType) { _this.directives.add(staticType); });\n            }\n        };\n        /**\n         * Prepares all attribute expression values for the `TAttributes` array.\n         *\n         * The purpose of this function is to properly construct an attributes array that\n         * is passed into the `elementStart` (or just `element`) functions. Because there\n         * are many different types of attributes, the array needs to be constructed in a\n         * special way so that `elementStart` can properly evaluate them.\n         *\n         * The format looks like this:\n         *\n         * ```\n         * attrs = [prop, value, prop2, value2,\n         *   CLASSES, class1, class2,\n         *   STYLES, style1, value1, style2, value2,\n         *   SELECT_ONLY, name1, name2, name2, ...]\n         * ```\n         *\n         * Note that this function will fully ignore all synthetic (@foo) attribute values\n         * because those values are intended to always be generated as property instructions.\n         */\n        TemplateDefinitionBuilder.prototype.prepareSelectOnlyAttrs = function (inputs, outputs, styles) {\n            var alreadySeen = new Set();\n            var attrExprs = [];\n            function addAttrExpr(key, value) {\n                if (typeof key === 'string') {\n                    if (!alreadySeen.has(key)) {\n                        attrExprs.push.apply(attrExprs, __spread(getAttributeNameLiterals(key)));\n                        value !== undefined && attrExprs.push(value);\n                        alreadySeen.add(key);\n                    }\n                }\n                else {\n                    attrExprs.push(literal(key));\n                }\n            }\n            // it's important that this occurs before SelectOnly because once `elementStart`\n            // comes across the SelectOnly marker then it will continue reading each value as\n            // as single property value cell by cell.\n            if (styles) {\n                styles.populateInitialStylingAttrs(attrExprs);\n            }\n            if (inputs.length || outputs.length) {\n                var attrsStartIndex = attrExprs.length;\n                for (var i = 0; i < inputs.length; i++) {\n                    var input = inputs[i];\n                    if (input.type !== 4 /* Animation */) {\n                        addAttrExpr(input.name);\n                    }\n                }\n                for (var i = 0; i < outputs.length; i++) {\n                    var output = outputs[i];\n                    if (output.type !== 1 /* Animation */) {\n                        addAttrExpr(output.name);\n                    }\n                }\n                // this is a cheap way of adding the marker only after all the input/output\n                // values have been filtered (by not including the animation ones) and added\n                // to the expressions. The marker is important because it tells the runtime\n                // code that this is where attributes without values start...\n                if (attrExprs.length) {\n                    attrExprs.splice(attrsStartIndex, 0, literal(3 /* SelectOnly */));\n                }\n            }\n            return attrExprs;\n        };\n        TemplateDefinitionBuilder.prototype.toAttrsParam = function (attrsExprs) {\n            return attrsExprs.length > 0 ?\n                this.constantPool.getConstLiteral(literalArr(attrsExprs), true) :\n                TYPED_NULL_EXPR;\n        };\n        TemplateDefinitionBuilder.prototype.prepareRefsParameter = function (references) {\n            var _this = this;\n            if (!references || references.length === 0) {\n                return TYPED_NULL_EXPR;\n            }\n            var refsParam = flatten(references.map(function (reference) {\n                var slot = _this.allocateDataSlot();\n                // Generate the update temporary.\n                var variableName = _this._bindingScope.freshReferenceName();\n                var retrievalLevel = _this.level;\n                var lhs = variable(variableName);\n                _this._bindingScope.set(retrievalLevel, reference.name, lhs, 0 /* DEFAULT */, function (scope, relativeLevel) {\n                    // e.g. nextContext(2);\n                    var nextContextStmt = relativeLevel > 0 ? [generateNextContextExpr(relativeLevel).toStmt()] : [];\n                    // e.g. const $foo$ = reference(1);\n                    var refExpr = lhs.set(importExpr(Identifiers$1.reference).callFn([literal(slot)]));\n                    return nextContextStmt.concat(refExpr.toConstDecl());\n                }, true);\n                return [reference.name, reference.value];\n            }));\n            return this.constantPool.getConstLiteral(asLiteral(refsParam), true);\n        };\n        TemplateDefinitionBuilder.prototype.prepareListenerParameter = function (tagName, outputAst, index) {\n            var _this = this;\n            return function () {\n                var eventName = outputAst.name;\n                var bindingFnName = outputAst.type === 1 /* Animation */ ?\n                    // synthetic @listener.foo values are treated the exact same as are standard listeners\n                    prepareSyntheticListenerFunctionName(eventName, outputAst.phase) :\n                    sanitizeIdentifier(eventName);\n                var handlerName = _this.templateName + \"_\" + tagName + \"_\" + bindingFnName + \"_\" + index + \"_listener\";\n                var scope = _this._bindingScope.nestedScope(_this._bindingScope.bindingLevel);\n                var context = variable(CONTEXT_NAME);\n                return prepareEventListenerParameters(outputAst, context, handlerName, scope);\n            };\n        };\n        return TemplateDefinitionBuilder;\n    }());\n    var ValueConverter = /** @class */ (function (_super) {\n        __extends(ValueConverter, _super);\n        function ValueConverter(constantPool, allocateSlot, allocatePureFunctionSlots, definePipe) {\n            var _this = _super.call(this) || this;\n            _this.constantPool = constantPool;\n            _this.allocateSlot = allocateSlot;\n            _this.allocatePureFunctionSlots = allocatePureFunctionSlots;\n            _this.definePipe = definePipe;\n            _this._pipeBindExprs = [];\n            return _this;\n        }\n        // AstMemoryEfficientTransformer\n        ValueConverter.prototype.visitPipe = function (pipe, context) {\n            // Allocate a slot to create the pipe\n            var slot = this.allocateSlot();\n            var slotPseudoLocal = \"PIPE:\" + slot;\n            // Allocate one slot for the result plus one slot per pipe argument\n            var pureFunctionSlot = this.allocatePureFunctionSlots(2 + pipe.args.length);\n            var target = new PropertyRead(pipe.span, new ImplicitReceiver(pipe.span), slotPseudoLocal);\n            var _a = pipeBindingCallInfo(pipe.args), identifier = _a.identifier, isVarLength = _a.isVarLength;\n            this.definePipe(pipe.name, slotPseudoLocal, slot, importExpr(identifier));\n            var args = __spread([pipe.exp], pipe.args);\n            var convertedArgs = isVarLength ? this.visitAll([new LiteralArray(pipe.span, args)]) : this.visitAll(args);\n            var pipeBindExpr = new FunctionCall(pipe.span, target, __spread([\n                new LiteralPrimitive(pipe.span, slot),\n                new LiteralPrimitive(pipe.span, pureFunctionSlot)\n            ], convertedArgs));\n            this._pipeBindExprs.push(pipeBindExpr);\n            return pipeBindExpr;\n        };\n        ValueConverter.prototype.updatePipeSlotOffsets = function (bindingSlots) {\n            this._pipeBindExprs.forEach(function (pipe) {\n                // update the slot offset arg (index 1) to account for binding slots\n                var slotOffset = pipe.args[1];\n                slotOffset.value += bindingSlots;\n            });\n        };\n        ValueConverter.prototype.visitLiteralArray = function (array, context) {\n            var _this = this;\n            return new BuiltinFunctionCall(array.span, this.visitAll(array.expressions), function (values) {\n                // If the literal has calculated (non-literal) elements transform it into\n                // calls to literal factories that compose the literal and will cache intermediate\n                // values. Otherwise, just return an literal array that contains the values.\n                var literal$$1 = literalArr(values);\n                return values.every(function (a) { return a.isConstant(); }) ?\n                    _this.constantPool.getConstLiteral(literal$$1, true) :\n                    getLiteralFactory(_this.constantPool, literal$$1, _this.allocatePureFunctionSlots);\n            });\n        };\n        ValueConverter.prototype.visitLiteralMap = function (map, context) {\n            var _this = this;\n            return new BuiltinFunctionCall(map.span, this.visitAll(map.values), function (values) {\n                // If the literal has calculated (non-literal) elements  transform it into\n                // calls to literal factories that compose the literal and will cache intermediate\n                // values. Otherwise, just return an literal array that contains the values.\n                var literal$$1 = literalMap(values.map(function (value, index) { return ({ key: map.keys[index].key, value: value, quoted: map.keys[index].quoted }); }));\n                return values.every(function (a) { return a.isConstant(); }) ?\n                    _this.constantPool.getConstLiteral(literal$$1, true) :\n                    getLiteralFactory(_this.constantPool, literal$$1, _this.allocatePureFunctionSlots);\n            });\n        };\n        return ValueConverter;\n    }(AstMemoryEfficientTransformer));\n    // Pipes always have at least one parameter, the value they operate on\n    var pipeBindingIdentifiers = [Identifiers$1.pipeBind1, Identifiers$1.pipeBind2, Identifiers$1.pipeBind3, Identifiers$1.pipeBind4];\n    function pipeBindingCallInfo(args) {\n        var identifier = pipeBindingIdentifiers[args.length];\n        return {\n            identifier: identifier || Identifiers$1.pipeBindV,\n            isVarLength: !identifier,\n        };\n    }\n    var pureFunctionIdentifiers = [\n        Identifiers$1.pureFunction0, Identifiers$1.pureFunction1, Identifiers$1.pureFunction2, Identifiers$1.pureFunction3, Identifiers$1.pureFunction4,\n        Identifiers$1.pureFunction5, Identifiers$1.pureFunction6, Identifiers$1.pureFunction7, Identifiers$1.pureFunction8\n    ];\n    function pureFunctionCallInfo(args) {\n        var identifier = pureFunctionIdentifiers[args.length];\n        return {\n            identifier: identifier || Identifiers$1.pureFunctionV,\n            isVarLength: !identifier,\n        };\n    }\n    function instruction(span, reference, params) {\n        return importExpr(reference, null, span).callFn(params, span);\n    }\n    // e.g. x(2);\n    function generateNextContextExpr(relativeLevelDiff) {\n        return importExpr(Identifiers$1.nextContext)\n            .callFn(relativeLevelDiff > 1 ? [literal(relativeLevelDiff)] : []);\n    }\n    function getLiteralFactory(constantPool, literal$$1, allocateSlots) {\n        var _a = constantPool.getLiteralFactory(literal$$1), literalFactory = _a.literalFactory, literalFactoryArguments = _a.literalFactoryArguments;\n        // Allocate 1 slot for the result plus 1 per argument\n        var startSlot = allocateSlots(1 + literalFactoryArguments.length);\n        literalFactoryArguments.length > 0 || error(\"Expected arguments to a literal factory function\");\n        var _b = pureFunctionCallInfo(literalFactoryArguments), identifier = _b.identifier, isVarLength = _b.isVarLength;\n        // Literal factories are pure functions that only need to be re-invoked when the parameters\n        // change.\n        var args = [\n            literal(startSlot),\n            literalFactory,\n        ];\n        if (isVarLength) {\n            args.push(literalArr(literalFactoryArguments));\n        }\n        else {\n            args.push.apply(args, __spread(literalFactoryArguments));\n        }\n        return importExpr(identifier).callFn(args);\n    }\n    /**\n     * Gets an array of literals that can be added to an expression\n     * to represent the name and namespace of an attribute. E.g.\n     * `:xlink:href` turns into `[AttributeMarker.NamespaceURI, 'xlink', 'href']`.\n     *\n     * @param name Name of the attribute, including the namespace.\n     */\n    function getAttributeNameLiterals(name) {\n        var _a = __read(splitNsName(name), 2), attributeNamespace = _a[0], attributeName = _a[1];\n        var nameLiteral = literal(attributeName);\n        if (attributeNamespace) {\n            return [\n                literal(0 /* NamespaceURI */), literal(attributeNamespace), nameLiteral\n            ];\n        }\n        return [nameLiteral];\n    }\n    /** The prefix used to get a shared context in BindingScope's map. */\n    var SHARED_CONTEXT_KEY = '$$shared_ctx$$';\n    var BindingScope = /** @class */ (function () {\n        function BindingScope(bindingLevel, parent) {\n            if (bindingLevel === void 0) { bindingLevel = 0; }\n            if (parent === void 0) { parent = null; }\n            this.bindingLevel = bindingLevel;\n            this.parent = parent;\n            /** Keeps a map from local variables to their BindingData. */\n            this.map = new Map();\n            this.referenceNameIndex = 0;\n            this.restoreViewVariable = null;\n        }\n        Object.defineProperty(BindingScope, \"ROOT_SCOPE\", {\n            get: function () {\n                if (!BindingScope._ROOT_SCOPE) {\n                    BindingScope._ROOT_SCOPE = new BindingScope().set(0, '$event', variable('$event'));\n                }\n                return BindingScope._ROOT_SCOPE;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        BindingScope.prototype.get = function (name) {\n            var current = this;\n            while (current) {\n                var value = current.map.get(name);\n                if (value != null) {\n                    if (current !== this) {\n                        // make a local copy and reset the `declare` state\n                        value = {\n                            retrievalLevel: value.retrievalLevel,\n                            lhs: value.lhs,\n                            declareLocalCallback: value.declareLocalCallback,\n                            declare: false,\n                            priority: value.priority,\n                            localRef: value.localRef\n                        };\n                        // Cache the value locally.\n                        this.map.set(name, value);\n                        // Possibly generate a shared context var\n                        this.maybeGenerateSharedContextVar(value);\n                        this.maybeRestoreView(value.retrievalLevel, value.localRef);\n                    }\n                    if (value.declareLocalCallback && !value.declare) {\n                        value.declare = true;\n                    }\n                    return value.lhs;\n                }\n                current = current.parent;\n            }\n            // If we get to this point, we are looking for a property on the top level component\n            // - If level === 0, we are on the top and don't need to re-declare `ctx`.\n            // - If level > 0, we are in an embedded view. We need to retrieve the name of the\n            // local var we used to store the component context, e.g. const $comp$ = x();\n            return this.bindingLevel === 0 ? null : this.getComponentProperty(name);\n        };\n        /**\n         * Create a local variable for later reference.\n         *\n         * @param retrievalLevel The level from which this value can be retrieved\n         * @param name Name of the variable.\n         * @param lhs AST representing the left hand side of the `let lhs = rhs;`.\n         * @param priority The sorting priority of this var\n         * @param declareLocalCallback The callback to invoke when declaring this local var\n         * @param localRef Whether or not this is a local ref\n         */\n        BindingScope.prototype.set = function (retrievalLevel, name, lhs, priority, declareLocalCallback, localRef) {\n            if (priority === void 0) { priority = 0 /* DEFAULT */; }\n            !this.map.has(name) ||\n                error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n            this.map.set(name, {\n                retrievalLevel: retrievalLevel,\n                lhs: lhs,\n                declare: false,\n                declareLocalCallback: declareLocalCallback,\n                priority: priority,\n                localRef: localRef || false\n            });\n            return this;\n        };\n        BindingScope.prototype.getLocal = function (name) { return this.get(name); };\n        BindingScope.prototype.nestedScope = function (level) {\n            var newScope = new BindingScope(level, this);\n            if (level > 0)\n                newScope.generateSharedContextVar(0);\n            return newScope;\n        };\n        BindingScope.prototype.getSharedContextName = function (retrievalLevel) {\n            var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + retrievalLevel);\n            return sharedCtxObj && sharedCtxObj.declare ? sharedCtxObj.lhs : null;\n        };\n        BindingScope.prototype.maybeGenerateSharedContextVar = function (value) {\n            if (value.priority === 1 /* CONTEXT */) {\n                var sharedCtxObj = this.map.get(SHARED_CONTEXT_KEY + value.retrievalLevel);\n                if (sharedCtxObj) {\n                    sharedCtxObj.declare = true;\n                }\n                else {\n                    this.generateSharedContextVar(value.retrievalLevel);\n                }\n            }\n        };\n        BindingScope.prototype.generateSharedContextVar = function (retrievalLevel) {\n            var lhs = variable(CONTEXT_NAME + this.freshReferenceName());\n            this.map.set(SHARED_CONTEXT_KEY + retrievalLevel, {\n                retrievalLevel: retrievalLevel,\n                lhs: lhs,\n                declareLocalCallback: function (scope, relativeLevel) {\n                    // const ctx_r0 = nextContext(2);\n                    return [lhs.set(generateNextContextExpr(relativeLevel)).toConstDecl()];\n                },\n                declare: false,\n                priority: 2 /* SHARED_CONTEXT */,\n                localRef: false\n            });\n        };\n        BindingScope.prototype.getComponentProperty = function (name) {\n            var componentValue = this.map.get(SHARED_CONTEXT_KEY + 0);\n            componentValue.declare = true;\n            this.maybeRestoreView(0, false);\n            return componentValue.lhs.prop(name);\n        };\n        BindingScope.prototype.maybeRestoreView = function (retrievalLevel, localRefLookup) {\n            // We want to restore the current view in listener fns if:\n            // 1 - we are accessing a value in a parent view, which requires walking the view tree rather\n            // than using the ctx arg. In this case, the retrieval and binding level will be different.\n            // 2 - we are looking up a local ref, which requires restoring the view where the local\n            // ref is stored\n            if (this.isListenerScope() && (retrievalLevel < this.bindingLevel || localRefLookup)) {\n                if (!this.parent.restoreViewVariable) {\n                    // parent saves variable to generate a shared `const $s$ = getCurrentView();` instruction\n                    this.parent.restoreViewVariable = variable(this.parent.freshReferenceName());\n                }\n                this.restoreViewVariable = this.parent.restoreViewVariable;\n            }\n        };\n        BindingScope.prototype.restoreViewStatement = function () {\n            // restoreView($state$);\n            return this.restoreViewVariable ?\n                [instruction(null, Identifiers$1.restoreView, [this.restoreViewVariable]).toStmt()] :\n                [];\n        };\n        BindingScope.prototype.viewSnapshotStatements = function () {\n            // const $state$ = getCurrentView();\n            var getCurrentViewInstruction = instruction(null, Identifiers$1.getCurrentView, []);\n            return this.restoreViewVariable ?\n                [this.restoreViewVariable.set(getCurrentViewInstruction).toConstDecl()] :\n                [];\n        };\n        BindingScope.prototype.isListenerScope = function () { return this.parent && this.parent.bindingLevel === this.bindingLevel; };\n        BindingScope.prototype.variableDeclarations = function () {\n            var _this = this;\n            var currentContextLevel = 0;\n            return Array.from(this.map.values())\n                .filter(function (value) { return value.declare; })\n                .sort(function (a, b) { return b.retrievalLevel - a.retrievalLevel || b.priority - a.priority; })\n                .reduce(function (stmts, value) {\n                var levelDiff = _this.bindingLevel - value.retrievalLevel;\n                var currStmts = value.declareLocalCallback(_this, levelDiff - currentContextLevel);\n                currentContextLevel = levelDiff;\n                return stmts.concat(currStmts);\n            }, []);\n        };\n        BindingScope.prototype.freshReferenceName = function () {\n            var current = this;\n            // Find the top scope as it maintains the global reference count\n            while (current.parent)\n                current = current.parent;\n            var ref = \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n            return ref;\n        };\n        return BindingScope;\n    }());\n    /**\n     * Creates a `CssSelector` given a tag name and a map of attributes\n     */\n    function createCssSelector(tag, attributes) {\n        var cssSelector = new CssSelector();\n        cssSelector.setElement(tag);\n        Object.getOwnPropertyNames(attributes).forEach(function (name) {\n            var value = attributes[name];\n            cssSelector.addAttribute(name, value);\n            if (name.toLowerCase() === 'class') {\n                var classes = value.trim().split(/\\s+/);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        });\n        return cssSelector;\n    }\n    function interpolate(args) {\n        args = args.slice(1); // Ignore the length prefix added for render2\n        switch (args.length) {\n            case 3:\n                return importExpr(Identifiers$1.interpolation1).callFn(args);\n            case 5:\n                return importExpr(Identifiers$1.interpolation2).callFn(args);\n            case 7:\n                return importExpr(Identifiers$1.interpolation3).callFn(args);\n            case 9:\n                return importExpr(Identifiers$1.interpolation4).callFn(args);\n            case 11:\n                return importExpr(Identifiers$1.interpolation5).callFn(args);\n            case 13:\n                return importExpr(Identifiers$1.interpolation6).callFn(args);\n            case 15:\n                return importExpr(Identifiers$1.interpolation7).callFn(args);\n            case 17:\n                return importExpr(Identifiers$1.interpolation8).callFn(args);\n        }\n        (args.length >= 19 && args.length % 2 == 1) ||\n            error(\"Invalid interpolation argument length \" + args.length);\n        return importExpr(Identifiers$1.interpolationV).callFn([literalArr(args)]);\n    }\n    /**\n     * Parse a template into render3 `Node`s and additional metadata, with no other dependencies.\n     *\n     * @param template text of the template to parse\n     * @param templateUrl URL to use for source mapping of the parsed template\n     */\n    function parseTemplate(template, templateUrl, options) {\n        if (options === void 0) { options = {}; }\n        var interpolationConfig = options.interpolationConfig, preserveWhitespaces = options.preserveWhitespaces;\n        var bindingParser = makeBindingParser(interpolationConfig);\n        var htmlParser = new HtmlParser();\n        var parseResult = htmlParser.parse(template, templateUrl, true, interpolationConfig);\n        if (parseResult.errors && parseResult.errors.length > 0) {\n            return { errors: parseResult.errors, nodes: [] };\n        }\n        var rootNodes = parseResult.rootNodes;\n        // process i18n meta information (scan attributes, generate ids)\n        // before we run whitespace removal process, because existing i18n\n        // extraction process (ng xi18n) relies on a raw content to generate\n        // message ids\n        rootNodes =\n            visitAll$1(new I18nMetaVisitor(interpolationConfig, !preserveWhitespaces), rootNodes);\n        if (!preserveWhitespaces) {\n            rootNodes = visitAll$1(new WhitespaceVisitor(), rootNodes);\n            // run i18n meta visitor again in case we remove whitespaces, because\n            // that might affect generated i18n message content. During this pass\n            // i18n IDs generated at the first pass will be preserved, so we can mimic\n            // existing extraction process (ng xi18n)\n            rootNodes = visitAll$1(new I18nMetaVisitor(interpolationConfig, /* keepI18nAttrs */ false), rootNodes);\n        }\n        var _a = htmlAstToRender3Ast(rootNodes, bindingParser), nodes = _a.nodes, errors = _a.errors;\n        if (errors && errors.length > 0) {\n            return { errors: errors, nodes: [] };\n        }\n        return { nodes: nodes };\n    }\n    /**\n     * Construct a `BindingParser` with a default configuration.\n     */\n    function makeBindingParser(interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new BindingParser(new Parser(new Lexer()), interpolationConfig, new DomElementSchemaRegistry(), null, []);\n    }\n    function resolveSanitizationFn(context, isAttribute) {\n        switch (context) {\n            case SecurityContext.HTML:\n                return importExpr(Identifiers$1.sanitizeHtml);\n            case SecurityContext.SCRIPT:\n                return importExpr(Identifiers$1.sanitizeScript);\n            case SecurityContext.STYLE:\n                // the compiler does not fill in an instruction for [style.prop?] binding\n                // values because the style algorithm knows internally what props are subject\n                // to sanitization (only [attr.style] values are explicitly sanitized)\n                return isAttribute ? importExpr(Identifiers$1.sanitizeStyle) : null;\n            case SecurityContext.URL:\n                return importExpr(Identifiers$1.sanitizeUrl);\n            case SecurityContext.RESOURCE_URL:\n                return importExpr(Identifiers$1.sanitizeResourceUrl);\n            default:\n                return null;\n        }\n    }\n    function isSingleElementTemplate(children) {\n        return children.length === 1 && children[0] instanceof Element;\n    }\n    function isTextNode(node) {\n        return node instanceof Text$2 || node instanceof BoundText || node instanceof Icu$1;\n    }\n    function hasTextChildrenOnly(children) {\n        return children.every(isTextNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY = [];\n    // This regex matches any binding names that contain the \"attr.\" prefix, e.g. \"attr.required\"\n    // If there is a match, the first matching group will contain the attribute name to bind.\n    var ATTR_REGEX = /attr\\.([^\\]]+)/;\n    function getStylingPrefix(propName) {\n        return propName.substring(0, 5).toLowerCase();\n    }\n    function baseDirectiveFields(meta, constantPool, bindingParser) {\n        var definitionMap = new DefinitionMap();\n        // e.g. `type: MyDirective`\n        definitionMap.set('type', meta.type);\n        // e.g. `selectors: [['', 'someDir', '']]`\n        definitionMap.set('selectors', createDirectiveSelector(meta.selector));\n        // e.g. `factory: () => new MyApp(directiveInject(ElementRef))`\n        var result = compileFactoryFunction({\n            name: meta.name,\n            type: meta.type,\n            deps: meta.deps,\n            injectFn: Identifiers$1.directiveInject,\n        });\n        definitionMap.set('factory', result.factory);\n        definitionMap.set('contentQueries', createContentQueriesFunction(meta, constantPool));\n        definitionMap.set('contentQueriesRefresh', createContentQueriesRefreshFunction(meta));\n        // Initialize hostVarsCount to number of bound host properties (interpolations illegal),\n        // except 'style' and 'class' properties, since they should *not* allocate host var slots\n        var hostVarsCount = Object.keys(meta.host.properties)\n            .filter(function (name) {\n            var prefix = getStylingPrefix(name);\n            return prefix !== 'style' && prefix !== 'class';\n        })\n            .length;\n        var elVarExp = variable('elIndex');\n        var contextVarExp = variable(CONTEXT_NAME);\n        var styleBuilder = new StylingBuilder(elVarExp, contextVarExp);\n        var allOtherAttributes = {};\n        var attrNames = Object.getOwnPropertyNames(meta.host.attributes);\n        for (var i = 0; i < attrNames.length; i++) {\n            var attr = attrNames[i];\n            var value = meta.host.attributes[attr];\n            switch (attr) {\n                // style attributes are handled in the styling context\n                case 'style':\n                    styleBuilder.registerStyleAttr(value);\n                    break;\n                // class attributes are handled in the styling context\n                case 'class':\n                    styleBuilder.registerClassAttr(value);\n                    break;\n                default:\n                    allOtherAttributes[attr] = value;\n                    break;\n            }\n        }\n        // e.g. `hostBindings: (rf, ctx, elIndex) => { ... }\n        definitionMap.set('hostBindings', createHostBindingsFunction(meta, elVarExp, contextVarExp, allOtherAttributes, styleBuilder, bindingParser, constantPool, hostVarsCount));\n        // e.g 'inputs: {a: 'a'}`\n        definitionMap.set('inputs', conditionallyCreateMapObjectLiteral(meta.inputs, true));\n        // e.g 'outputs: {a: 'a'}`\n        definitionMap.set('outputs', conditionallyCreateMapObjectLiteral(meta.outputs));\n        if (meta.exportAs !== null) {\n            definitionMap.set('exportAs', literalArr(meta.exportAs.map(function (e) { return literal(e); })));\n        }\n        return { definitionMap: definitionMap, statements: result.statements };\n    }\n    /**\n     * Add features to the definition map.\n     */\n    function addFeatures(definitionMap, meta) {\n        // e.g. `features: [NgOnChangesFeature()]`\n        var features = [];\n        var providers = meta.providers;\n        var viewProviders = meta.viewProviders;\n        if (providers || viewProviders) {\n            var args = [providers || new LiteralArrayExpr([])];\n            if (viewProviders) {\n                args.push(viewProviders);\n            }\n            features.push(importExpr(Identifiers$1.ProvidersFeature).callFn(args));\n        }\n        if (meta.usesInheritance) {\n            features.push(importExpr(Identifiers$1.InheritDefinitionFeature));\n        }\n        if (meta.lifecycle.usesOnChanges) {\n            features.push(importExpr(Identifiers$1.NgOnChangesFeature).callFn(EMPTY_ARRAY));\n        }\n        if (features.length) {\n            definitionMap.set('features', literalArr(features));\n        }\n    }\n    /**\n     * Compile a directive for the render3 runtime as defined by the `R3DirectiveMetadata`.\n     */\n    function compileDirectiveFromMetadata(meta, constantPool, bindingParser) {\n        var _a = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _a.definitionMap, statements = _a.statements;\n        addFeatures(definitionMap, meta);\n        var expression = importExpr(Identifiers$1.defineDirective).callFn([definitionMap.toLiteralMap()]);\n        if (!meta.selector) {\n            throw new Error(\"Directive \" + meta.name + \" has no selector, please add it!\");\n        }\n        var type = createTypeForDef(meta, Identifiers$1.DirectiveDefWithMeta);\n        return { expression: expression, type: type, statements: statements };\n    }\n    /**\n     * Compile a base definition for the render3 runtime as defined by {@link R3BaseRefMetadata}\n     * @param meta the metadata used for compilation.\n     */\n    function compileBaseDefFromMetadata(meta) {\n        var definitionMap = new DefinitionMap();\n        if (meta.inputs) {\n            var inputs_1 = meta.inputs;\n            var inputsMap = Object.keys(inputs_1).map(function (key) {\n                var v = inputs_1[key];\n                var value = Array.isArray(v) ? literalArr(v.map(function (vx) { return literal(vx); })) : literal(v);\n                return { key: key, value: value, quoted: false };\n            });\n            definitionMap.set('inputs', literalMap(inputsMap));\n        }\n        if (meta.outputs) {\n            var outputs_1 = meta.outputs;\n            var outputsMap = Object.keys(outputs_1).map(function (key) {\n                var value = literal(outputs_1[key]);\n                return { key: key, value: value, quoted: false };\n            });\n            definitionMap.set('outputs', literalMap(outputsMap));\n        }\n        var expression = importExpr(Identifiers$1.defineBase).callFn([definitionMap.toLiteralMap()]);\n        var type = new ExpressionType(importExpr(Identifiers$1.BaseDef));\n        return { expression: expression, type: type };\n    }\n    /**\n     * Compile a component for the render3 runtime as defined by the `R3ComponentMetadata`.\n     */\n    function compileComponentFromMetadata(meta, constantPool, bindingParser) {\n        var e_1, _a;\n        var _b = baseDirectiveFields(meta, constantPool, bindingParser), definitionMap = _b.definitionMap, statements = _b.statements;\n        addFeatures(definitionMap, meta);\n        var selector = meta.selector && CssSelector.parse(meta.selector);\n        var firstSelector = selector && selector[0];\n        // e.g. `attr: [\"class\", \".my.app\"]`\n        // This is optional an only included if the first selector of a component specifies attributes.\n        if (firstSelector) {\n            var selectorAttributes = firstSelector.getAttrs();\n            if (selectorAttributes.length) {\n                definitionMap.set('attrs', constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), \n                /* forceShared */ true));\n            }\n        }\n        // Generate the CSS matcher that recognize directive\n        var directiveMatcher = null;\n        if (meta.directives.length > 0) {\n            var matcher = new SelectorMatcher();\n            try {\n                for (var _c = __values(meta.directives), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var _e = _d.value, selector_1 = _e.selector, expression_1 = _e.expression;\n                    matcher.addSelectables(CssSelector.parse(selector_1), expression_1);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            directiveMatcher = matcher;\n        }\n        if (meta.viewQueries.length) {\n            definitionMap.set('viewQuery', createViewQueriesFunction(meta, constantPool));\n        }\n        // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n        var templateTypeName = meta.name;\n        var templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n        var directivesUsed = new Set();\n        var pipesUsed = new Set();\n        var changeDetection = meta.changeDetection;\n        var template = meta.template;\n        var templateBuilder = new TemplateDefinitionBuilder(constantPool, BindingScope.ROOT_SCOPE, 0, templateTypeName, null, null, templateName, meta.viewQueries, directiveMatcher, directivesUsed, meta.pipes, pipesUsed, Identifiers$1.namespaceHTML, meta.relativeContextFilePath, meta.i18nUseExternalIds);\n        var templateFunctionExpression = templateBuilder.buildTemplateFunction(template.nodes, []);\n        // We need to provide this so that dynamically generated components know what\n        // projected content blocks to pass through to the component when it is instantiated.\n        var ngContentSelectors = templateBuilder.getNgContentSelectors();\n        if (ngContentSelectors) {\n            definitionMap.set('ngContentSelectors', ngContentSelectors);\n        }\n        // e.g. `consts: 2`\n        definitionMap.set('consts', literal(templateBuilder.getConstCount()));\n        // e.g. `vars: 2`\n        definitionMap.set('vars', literal(templateBuilder.getVarCount()));\n        definitionMap.set('template', templateFunctionExpression);\n        // e.g. `directives: [MyDirective]`\n        if (directivesUsed.size) {\n            var directivesExpr = literalArr(Array.from(directivesUsed));\n            if (meta.wrapDirectivesAndPipesInClosure) {\n                directivesExpr = fn([], [new ReturnStatement(directivesExpr)]);\n            }\n            definitionMap.set('directives', directivesExpr);\n        }\n        // e.g. `pipes: [MyPipe]`\n        if (pipesUsed.size) {\n            var pipesExpr = literalArr(Array.from(pipesUsed));\n            if (meta.wrapDirectivesAndPipesInClosure) {\n                pipesExpr = fn([], [new ReturnStatement(pipesExpr)]);\n            }\n            definitionMap.set('pipes', pipesExpr);\n        }\n        if (meta.encapsulation === null) {\n            meta.encapsulation = ViewEncapsulation.Emulated;\n        }\n        // e.g. `styles: [str1, str2]`\n        if (meta.styles && meta.styles.length) {\n            var styleValues = meta.encapsulation == ViewEncapsulation.Emulated ?\n                compileStyles(meta.styles, CONTENT_ATTR, HOST_ATTR) :\n                meta.styles;\n            var strings = styleValues.map(function (str) { return literal(str); });\n            definitionMap.set('styles', literalArr(strings));\n        }\n        else if (meta.encapsulation === ViewEncapsulation.Emulated) {\n            // If there is no style, don't generate css selectors on elements\n            meta.encapsulation = ViewEncapsulation.None;\n        }\n        // Only set view encapsulation if it's not the default value\n        if (meta.encapsulation !== ViewEncapsulation.Emulated) {\n            definitionMap.set('encapsulation', literal(meta.encapsulation));\n        }\n        // e.g. `animation: [trigger('123', [])]`\n        if (meta.animations !== null) {\n            definitionMap.set('data', literalMap([{ key: 'animation', value: meta.animations, quoted: false }]));\n        }\n        // Only set the change detection flag if it's defined and it's not the default.\n        if (changeDetection != null && changeDetection !== ChangeDetectionStrategy.Default) {\n            definitionMap.set('changeDetection', literal(changeDetection));\n        }\n        // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n        // string literal, which must be on one line.\n        var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n        var expression = importExpr(Identifiers$1.defineComponent).callFn([definitionMap.toLiteralMap()]);\n        var type = createTypeForDef(meta, Identifiers$1.ComponentDefWithMeta);\n        return { expression: expression, type: type, statements: statements };\n    }\n    /**\n     * A wrapper around `compileDirective` which depends on render2 global analysis data as its input\n     * instead of the `R3DirectiveMetadata`.\n     *\n     * `R3DirectiveMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n     * information.\n     */\n    function compileDirectiveFromRender2(outputCtx, directive, reflector, bindingParser) {\n        var name = identifierName(directive.type);\n        name || error(\"Cannot resolver the name of \" + directive.type);\n        var definitionField = outputCtx.constantPool.propertyNameOf(1 /* Directive */);\n        var meta = directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector);\n        var res = compileDirectiveFromMetadata(meta, outputCtx.constantPool, bindingParser);\n        // Create the partial class to be merged with the actual class.\n        outputCtx.statements.push(new ClassStmt(name, null, [new ClassField(definitionField, INFERRED_TYPE, [exports.StmtModifier.Static], res.expression)], [], new ClassMethod(null, [], []), []));\n    }\n    /**\n     * A wrapper around `compileComponent` which depends on render2 global analysis data as its input\n     * instead of the `R3DirectiveMetadata`.\n     *\n     * `R3ComponentMetadata` is computed from `CompileDirectiveMetadata` and other statically reflected\n     * information.\n     */\n    function compileComponentFromRender2(outputCtx, component, render3Ast, reflector, bindingParser, directiveTypeBySel, pipeTypeByName) {\n        var name = identifierName(component.type);\n        name || error(\"Cannot resolver the name of \" + component.type);\n        var definitionField = outputCtx.constantPool.propertyNameOf(2 /* Component */);\n        var summary = component.toSummary();\n        // Compute the R3ComponentMetadata from the CompileDirectiveMetadata\n        var meta = __assign({}, directiveMetadataFromGlobalMetadata(component, outputCtx, reflector), { selector: component.selector, template: { nodes: render3Ast.nodes }, directives: [], pipes: typeMapToExpressionMap(pipeTypeByName, outputCtx), viewQueries: queriesFromGlobalMetadata(component.viewQueries, outputCtx), wrapDirectivesAndPipesInClosure: false, styles: (summary.template && summary.template.styles) || EMPTY_ARRAY, encapsulation: (summary.template && summary.template.encapsulation) || ViewEncapsulation.Emulated, interpolation: DEFAULT_INTERPOLATION_CONFIG, animations: null, viewProviders: component.viewProviders.length > 0 ? new WrappedNodeExpr(component.viewProviders) : null, relativeContextFilePath: '', i18nUseExternalIds: true });\n        var res = compileComponentFromMetadata(meta, outputCtx.constantPool, bindingParser);\n        // Create the partial class to be merged with the actual class.\n        outputCtx.statements.push(new ClassStmt(name, null, [new ClassField(definitionField, INFERRED_TYPE, [exports.StmtModifier.Static], res.expression)], [], new ClassMethod(null, [], []), []));\n    }\n    /**\n     * Compute `R3DirectiveMetadata` given `CompileDirectiveMetadata` and a `CompileReflector`.\n     */\n    function directiveMetadataFromGlobalMetadata(directive, outputCtx, reflector) {\n        var summary = directive.toSummary();\n        var name = identifierName(directive.type);\n        name || error(\"Cannot resolver the name of \" + directive.type);\n        return {\n            name: name,\n            type: outputCtx.importExpr(directive.type.reference),\n            typeArgumentCount: 0,\n            typeSourceSpan: typeSourceSpan(directive.isComponent ? 'Component' : 'Directive', directive.type),\n            selector: directive.selector,\n            deps: dependenciesFromGlobalMetadata(directive.type, outputCtx, reflector),\n            queries: queriesFromGlobalMetadata(directive.queries, outputCtx),\n            lifecycle: {\n                usesOnChanges: directive.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; }),\n            },\n            host: {\n                attributes: directive.hostAttributes,\n                listeners: summary.hostListeners,\n                properties: summary.hostProperties,\n            },\n            inputs: directive.inputs,\n            outputs: directive.outputs,\n            usesInheritance: false,\n            exportAs: null,\n            providers: directive.providers.length > 0 ? new WrappedNodeExpr(directive.providers) : null\n        };\n    }\n    /**\n     * Convert `CompileQueryMetadata` into `R3QueryMetadata`.\n     */\n    function queriesFromGlobalMetadata(queries, outputCtx) {\n        return queries.map(function (query) {\n            var read = null;\n            if (query.read && query.read.identifier) {\n                read = outputCtx.importExpr(query.read.identifier.reference);\n            }\n            return {\n                propertyName: query.propertyName,\n                first: query.first,\n                predicate: selectorsFromGlobalMetadata(query.selectors, outputCtx),\n                descendants: query.descendants, read: read,\n            };\n        });\n    }\n    /**\n     * Convert `CompileTokenMetadata` for query selectors into either an expression for a predicate\n     * type, or a list of string predicates.\n     */\n    function selectorsFromGlobalMetadata(selectors, outputCtx) {\n        if (selectors.length > 1 || (selectors.length == 1 && selectors[0].value)) {\n            var selectorStrings = selectors.map(function (value) { return value.value; });\n            selectorStrings.some(function (value) { return !value; }) &&\n                error('Found a type among the string selectors expected');\n            return outputCtx.constantPool.getConstLiteral(literalArr(selectorStrings.map(function (value) { return literal(value); })));\n        }\n        if (selectors.length == 1) {\n            var first = selectors[0];\n            if (first.identifier) {\n                return outputCtx.importExpr(first.identifier.reference);\n            }\n        }\n        error('Unexpected query form');\n        return NULL_EXPR;\n    }\n    function createQueryDefinition(query, constantPool, idx) {\n        var predicate = getQueryPredicate(query, constantPool);\n        // e.g. r3.query(null, somePredicate, false) or r3.query(0, ['div'], false)\n        var parameters = [\n            literal(idx, INFERRED_TYPE),\n            predicate,\n            literal(query.descendants),\n        ];\n        if (query.read) {\n            parameters.push(query.read);\n        }\n        return importExpr(Identifiers$1.query).callFn(parameters);\n    }\n    // Turn a directive selector into an R3-compatible selector for directive def\n    function createDirectiveSelector(selector) {\n        return asLiteral(parseSelectorToR3Selector(selector));\n    }\n    function convertAttributesToExpressions(attributes) {\n        var e_2, _a;\n        var values = [];\n        try {\n            for (var _b = __values(Object.getOwnPropertyNames(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var value = attributes[key];\n                values.push(literal(key), literal(value));\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return values;\n    }\n    // Return a contentQueries function or null if one is not necessary.\n    function createContentQueriesFunction(meta, constantPool) {\n        if (meta.queries.length) {\n            var statements = meta.queries.map(function (query) {\n                var queryDefinition = createQueryDefinition(query, constantPool, null);\n                return importExpr(Identifiers$1.registerContentQuery)\n                    .callFn([queryDefinition, variable('dirIndex')])\n                    .toStmt();\n            });\n            var typeName = meta.name;\n            var parameters = [new FnParam('dirIndex', NUMBER_TYPE)];\n            return fn(parameters, statements, INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueries\" : null);\n        }\n        return null;\n    }\n    // Return a contentQueriesRefresh function or null if one is not necessary.\n    function createContentQueriesRefreshFunction(meta) {\n        if (meta.queries.length > 0) {\n            var statements_1 = [];\n            var typeName = meta.name;\n            var parameters = [\n                new FnParam('dirIndex', NUMBER_TYPE),\n                new FnParam('queryStartIndex', NUMBER_TYPE),\n            ];\n            var directiveInstanceVar_1 = variable('instance');\n            // var $tmp$: any;\n            var temporary_1 = temporaryAllocator(statements_1, TEMPORARY_NAME);\n            // const $instance$ = $r3$.ɵload(dirIndex);\n            statements_1.push(directiveInstanceVar_1.set(importExpr(Identifiers$1.load).callFn([variable('dirIndex')]))\n                .toDeclStmt(INFERRED_TYPE, [exports.StmtModifier.Final]));\n            meta.queries.forEach(function (query, idx) {\n                var loadQLArg = variable('queryStartIndex');\n                var getQueryList = importExpr(Identifiers$1.loadQueryList).callFn([\n                    idx > 0 ? loadQLArg.plus(literal(idx)) : loadQLArg\n                ]);\n                var assignToTemporary = temporary_1().set(getQueryList);\n                var callQueryRefresh = importExpr(Identifiers$1.queryRefresh).callFn([assignToTemporary]);\n                var updateDirective = directiveInstanceVar_1.prop(query.propertyName)\n                    .set(query.first ? temporary_1().prop('first') : temporary_1());\n                var refreshQueryAndUpdateDirective = callQueryRefresh.and(updateDirective);\n                statements_1.push(refreshQueryAndUpdateDirective.toStmt());\n            });\n            return fn(parameters, statements_1, INFERRED_TYPE, null, typeName ? typeName + \"_ContentQueriesRefresh\" : null);\n        }\n        return null;\n    }\n    function stringAsType(str) {\n        return expressionType(literal(str));\n    }\n    function stringMapAsType(map) {\n        var mapValues = Object.keys(map).map(function (key) {\n            var value = Array.isArray(map[key]) ? map[key][0] : map[key];\n            return {\n                key: key,\n                value: literal(value),\n                quoted: true,\n            };\n        });\n        return expressionType(literalMap(mapValues));\n    }\n    function stringArrayAsType(arr) {\n        return arr.length > 0 ? expressionType(literalArr(arr.map(function (value) { return literal(value); }))) :\n            NONE_TYPE;\n    }\n    function createTypeForDef(meta, typeBase) {\n        // On the type side, remove newlines from the selector as it will need to fit into a TypeScript\n        // string literal, which must be on one line.\n        var selectorForType = (meta.selector || '').replace(/\\n/g, '');\n        return expressionType(importExpr(typeBase, [\n            typeWithParameters(meta.type, meta.typeArgumentCount),\n            stringAsType(selectorForType),\n            meta.exportAs !== null ? stringArrayAsType(meta.exportAs) : NONE_TYPE,\n            stringMapAsType(meta.inputs),\n            stringMapAsType(meta.outputs),\n            stringArrayAsType(meta.queries.map(function (q) { return q.propertyName; })),\n        ]));\n    }\n    // Define and update any view queries\n    function createViewQueriesFunction(meta, constantPool) {\n        var createStatements = [];\n        var updateStatements = [];\n        var tempAllocator = temporaryAllocator(updateStatements, TEMPORARY_NAME);\n        for (var i = 0; i < meta.viewQueries.length; i++) {\n            var query = meta.viewQueries[i];\n            // creation, e.g. r3.Q(0, somePredicate, true);\n            var queryDefinition = createQueryDefinition(query, constantPool, i);\n            createStatements.push(queryDefinition.toStmt());\n            // update, e.g. (r3.qR(tmp = r3.ɵload(0)) && (ctx.someDir = tmp));\n            var temporary = tempAllocator();\n            var getQueryList = importExpr(Identifiers$1.load).callFn([literal(i)]);\n            var refresh = importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);\n            var updateDirective = variable(CONTEXT_NAME)\n                .prop(query.propertyName)\n                .set(query.first ? temporary.prop('first') : temporary);\n            updateStatements.push(refresh.and(updateDirective).toStmt());\n        }\n        var viewQueryFnName = meta.name ? meta.name + \"_Query\" : null;\n        return fn([new FnParam(RENDER_FLAGS, NUMBER_TYPE), new FnParam(CONTEXT_NAME, null)], [\n            renderFlagCheckIfStmt(1 /* Create */, createStatements),\n            renderFlagCheckIfStmt(2 /* Update */, updateStatements)\n        ], INFERRED_TYPE, null, viewQueryFnName);\n    }\n    // Return a host binding function or null if one is not necessary.\n    function createHostBindingsFunction(meta, elVarExp, bindingContext, staticAttributesAndValues, styleBuilder, bindingParser, constantPool, hostVarsCount) {\n        var e_3, _a;\n        var createStatements = [];\n        var updateStatements = [];\n        var totalHostVarsCount = hostVarsCount;\n        var hostBindingSourceSpan = meta.typeSourceSpan;\n        var directiveSummary = metadataAsSummary(meta);\n        // Calculate host event bindings\n        var eventBindings = bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n        if (eventBindings && eventBindings.length) {\n            var listeners = createHostListeners(bindingContext, eventBindings, meta);\n            createStatements.push.apply(createStatements, __spread(listeners));\n        }\n        // Calculate the host property bindings\n        var bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n        var bindingFn = function (implicit, value) {\n            return convertPropertyBinding(null, implicit, value, 'b', BindingForm.TrySimple, function () { return error('Unexpected interpolation'); });\n        };\n        if (bindings) {\n            var hostVarsCountFn = function (numSlots) {\n                var originalVarsCount = totalHostVarsCount;\n                totalHostVarsCount += numSlots;\n                return originalVarsCount;\n            };\n            var valueConverter = new ValueConverter(constantPool, \n            /* new nodes are illegal here */ function () { return error('Unexpected node'); }, hostVarsCountFn, \n            /* pipes are illegal here */ function () { return error('Unexpected pipe'); });\n            try {\n                for (var bindings_1 = __values(bindings), bindings_1_1 = bindings_1.next(); !bindings_1_1.done; bindings_1_1 = bindings_1.next()) {\n                    var binding = bindings_1_1.value;\n                    var name_1 = binding.name;\n                    var stylePrefix = getStylingPrefix(name_1);\n                    if (stylePrefix === 'style') {\n                        var _b = parseNamedProperty(name_1), propertyName = _b.propertyName, unit = _b.unit;\n                        styleBuilder.registerStyleInput(propertyName, binding.expression, unit, binding.sourceSpan);\n                    }\n                    else if (stylePrefix === 'class') {\n                        styleBuilder.registerClassInput(parseNamedProperty(name_1).propertyName, binding.expression, binding.sourceSpan);\n                    }\n                    else {\n                        // resolve literal arrays and literal objects\n                        var value = binding.expression.visit(valueConverter);\n                        var bindingExpr = bindingFn(bindingContext, value);\n                        var _c = getBindingNameAndInstruction(binding), bindingName = _c.bindingName, instruction = _c.instruction, isAttribute = _c.isAttribute;\n                        var securityContexts = bindingParser\n                            .calcPossibleSecurityContexts(meta.selector || '', bindingName, isAttribute)\n                            .filter(function (context) { return context !== SecurityContext.NONE; });\n                        var sanitizerFn = null;\n                        if (securityContexts.length) {\n                            if (securityContexts.length === 2 &&\n                                securityContexts.indexOf(SecurityContext.URL) > -1 &&\n                                securityContexts.indexOf(SecurityContext.RESOURCE_URL) > -1) {\n                                // Special case for some URL attributes (such as \"src\" and \"href\") that may be a part of\n                                // different security contexts. In this case we use special santitization function and\n                                // select the actual sanitizer at runtime based on a tag name that is provided while\n                                // invoking sanitization function.\n                                sanitizerFn = importExpr(Identifiers$1.sanitizeUrlOrResourceUrl);\n                            }\n                            else {\n                                sanitizerFn = resolveSanitizationFn(securityContexts[0], isAttribute);\n                            }\n                        }\n                        var instructionParams = [\n                            elVarExp, literal(bindingName), importExpr(Identifiers$1.bind).callFn([bindingExpr.currValExpr])\n                        ];\n                        if (sanitizerFn) {\n                            instructionParams.push(sanitizerFn);\n                        }\n                        if (!isAttribute) {\n                            if (!sanitizerFn) {\n                                // append `null` in front of `nativeOnly` flag if no sanitizer fn defined\n                                instructionParams.push(literal(null));\n                            }\n                            // host bindings must have nativeOnly prop set to true\n                            instructionParams.push(literal(true));\n                        }\n                        updateStatements.push.apply(updateStatements, __spread(bindingExpr.stmts));\n                        updateStatements.push(importExpr(instruction).callFn(instructionParams).toStmt());\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (bindings_1_1 && !bindings_1_1.done && (_a = bindings_1.return)) _a.call(bindings_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            // since we're dealing with directives/components and both have hostBinding\n            // functions, we need to generate a special hostAttrs instruction that deals\n            // with both the assignment of styling as well as static attributes to the host\n            // element. The instruction below will instruct all initial styling (styling\n            // that is inside of a host binding within a directive/component) to be attached\n            // to the host element alongside any of the provided host attributes that were\n            // collected earlier.\n            var hostAttrs = convertAttributesToExpressions(staticAttributesAndValues);\n            var hostInstruction = styleBuilder.buildHostAttrsInstruction(null, hostAttrs, constantPool);\n            if (hostInstruction) {\n                createStatements.push(createStylingStmt(hostInstruction, bindingContext, bindingFn));\n            }\n            if (styleBuilder.hasBindings) {\n                // singular style/class bindings (things like `[style.prop]` and `[class.name]`)\n                // MUST be registered on a given element within the component/directive\n                // templateFn/hostBindingsFn functions. The instruction below will figure out\n                // what all the bindings are and then generate the statements required to register\n                // those bindings to the element via `elementStyling`.\n                var elementStylingInstruction = styleBuilder.buildElementStylingInstruction(null, constantPool);\n                if (elementStylingInstruction) {\n                    createStatements.push(createStylingStmt(elementStylingInstruction, bindingContext, bindingFn));\n                }\n                // finally each binding that was registered in the statement above will need to be added to\n                // the update block of a component/directive templateFn/hostBindingsFn so that the bindings\n                // are evaluated and updated for the element.\n                styleBuilder.buildUpdateLevelInstructions(valueConverter).forEach(function (instruction) {\n                    updateStatements.push(createStylingStmt(instruction, bindingContext, bindingFn));\n                });\n            }\n        }\n        if (totalHostVarsCount) {\n            createStatements.unshift(importExpr(Identifiers$1.allocHostVars).callFn([literal(totalHostVarsCount)]).toStmt());\n        }\n        if (createStatements.length > 0 || updateStatements.length > 0) {\n            var hostBindingsFnName = meta.name ? meta.name + \"_HostBindings\" : null;\n            var statements = [];\n            if (createStatements.length > 0) {\n                statements.push(renderFlagCheckIfStmt(1 /* Create */, createStatements));\n            }\n            if (updateStatements.length > 0) {\n                statements.push(renderFlagCheckIfStmt(2 /* Update */, updateStatements));\n            }\n            return fn([\n                new FnParam(RENDER_FLAGS, NUMBER_TYPE), new FnParam(CONTEXT_NAME, null),\n                new FnParam(elVarExp.name, NUMBER_TYPE)\n            ], statements, INFERRED_TYPE, null, hostBindingsFnName);\n        }\n        return null;\n    }\n    function createStylingStmt(instruction, bindingContext, bindingFn) {\n        var params = instruction.buildParams(function (value) { return bindingFn(bindingContext, value).currValExpr; });\n        return importExpr(instruction.reference, null, instruction.sourceSpan)\n            .callFn(params, instruction.sourceSpan)\n            .toStmt();\n    }\n    function getBindingNameAndInstruction(binding) {\n        var bindingName = binding.name;\n        var instruction;\n        // Check to see if this is an attr binding or a property binding\n        var attrMatches = bindingName.match(ATTR_REGEX);\n        if (attrMatches) {\n            bindingName = attrMatches[1];\n            instruction = Identifiers$1.elementAttribute;\n        }\n        else {\n            if (binding.isAnimation) {\n                bindingName = prepareSyntheticPropertyName(bindingName);\n                // host bindings that have a synthetic property (e.g. @foo) should always be rendered\n                // in the context of the component and not the parent. Therefore there is a special\n                // compatibility instruction available for this purpose.\n                instruction = Identifiers$1.componentHostSyntheticProperty;\n            }\n            else {\n                instruction = Identifiers$1.elementProperty;\n            }\n        }\n        return { bindingName: bindingName, instruction: instruction, isAttribute: !!attrMatches };\n    }\n    function createHostListeners(bindingContext, eventBindings, meta) {\n        return eventBindings.map(function (binding) {\n            var bindingName = binding.name && sanitizeIdentifier(binding.name);\n            var bindingFnName = binding.type === 1 /* Animation */ ?\n                prepareSyntheticListenerFunctionName(bindingName, binding.targetOrPhase) :\n                bindingName;\n            var handlerName = meta.name && bindingName ? meta.name + \"_\" + bindingFnName + \"_HostBindingHandler\" : null;\n            var params = prepareEventListenerParameters(BoundEvent.fromParsedEvent(binding), bindingContext, handlerName);\n            var instruction = binding.type == 1 /* Animation */ ? Identifiers$1.componentHostSyntheticListener : Identifiers$1.listener;\n            return importExpr(instruction).callFn(params).toStmt();\n        });\n    }\n    function metadataAsSummary(meta) {\n        // clang-format off\n        return {\n            hostAttributes: meta.host.attributes,\n            hostListeners: meta.host.listeners,\n            hostProperties: meta.host.properties,\n        };\n        // clang-format on\n    }\n    function typeMapToExpressionMap(map, outputCtx) {\n        // Convert each map entry into another entry where the value is an expression importing the type.\n        var entries = Array.from(map).map(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], type = _b[1];\n            return [key, outputCtx.importExpr(type)];\n        });\n        return new Map(entries);\n    }\n    var HOST_REG_EXP$1 = /^(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\))$/;\n    function parseHostBindings(host) {\n        var attributes = {};\n        var listeners = {};\n        var properties = {};\n        Object.keys(host).forEach(function (key) {\n            var value = host[key];\n            var matches = key.match(HOST_REG_EXP$1);\n            if (matches === null) {\n                attributes[key] = value;\n            }\n            else if (matches[1 /* Binding */] != null) {\n                // synthetic properties (the ones that have a `@` as a prefix)\n                // are still treated the same as regular properties. Therefore\n                // there is no point in storing them in a separate map.\n                properties[matches[1 /* Binding */]] = value;\n            }\n            else if (matches[2 /* Event */] != null) {\n                listeners[matches[2 /* Event */]] = value;\n            }\n        });\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function compileStyles(styles, selector, hostSelector) {\n        var shadowCss = new ShadowCss();\n        return styles.map(function (style) { return shadowCss.shimCssText(style, selector, hostSelector); });\n    }\n    function parseNamedProperty(name) {\n        var unit = '';\n        var propertyName = '';\n        var index = name.indexOf('.');\n        if (index > 0) {\n            var unitIndex = name.lastIndexOf('.');\n            if (unitIndex !== index) {\n                unit = name.substring(unitIndex + 1, name.length);\n                propertyName = name.substring(index + 1, unitIndex);\n            }\n            else {\n                propertyName = name.substring(index + 1, name.length);\n            }\n        }\n        return { propertyName: propertyName, unit: unit };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CompilerFacadeImpl = /** @class */ (function () {\n        function CompilerFacadeImpl() {\n            this.R3ResolvedDependencyType = exports.R3ResolvedDependencyType;\n            this.elementSchemaRegistry = new DomElementSchemaRegistry();\n        }\n        CompilerFacadeImpl.prototype.compilePipe = function (angularCoreEnv, sourceMapUrl, facade) {\n            var res = compilePipeFromMetadata({\n                name: facade.name,\n                type: new WrappedNodeExpr(facade.type),\n                deps: convertR3DependencyMetadataArray(facade.deps),\n                pipeName: facade.pipeName,\n                pure: facade.pure,\n            });\n            return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n        };\n        CompilerFacadeImpl.prototype.compileInjectable = function (angularCoreEnv, sourceMapUrl, facade) {\n            var _a = compileInjectable({\n                name: facade.name,\n                type: new WrappedNodeExpr(facade.type),\n                typeArgumentCount: facade.typeArgumentCount,\n                providedIn: computeProvidedIn(facade.providedIn),\n                useClass: wrapExpression(facade, USE_CLASS),\n                useFactory: wrapExpression(facade, USE_FACTORY),\n                useValue: wrapExpression(facade, USE_VALUE),\n                useExisting: wrapExpression(facade, USE_EXISTING),\n                ctorDeps: convertR3DependencyMetadataArray(facade.ctorDeps),\n                userDeps: convertR3DependencyMetadataArray(facade.userDeps) || undefined,\n            }), expression = _a.expression, statements = _a.statements;\n            return jitExpression(expression, angularCoreEnv, sourceMapUrl, statements);\n        };\n        CompilerFacadeImpl.prototype.compileInjector = function (angularCoreEnv, sourceMapUrl, facade) {\n            var meta = {\n                name: facade.name,\n                type: new WrappedNodeExpr(facade.type),\n                deps: convertR3DependencyMetadataArray(facade.deps),\n                providers: new WrappedNodeExpr(facade.providers),\n                imports: new WrappedNodeExpr(facade.imports),\n            };\n            var res = compileInjector(meta);\n            return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n        };\n        CompilerFacadeImpl.prototype.compileNgModule = function (angularCoreEnv, sourceMapUrl, facade) {\n            var meta = {\n                type: new WrappedNodeExpr(facade.type),\n                bootstrap: facade.bootstrap.map(wrapReference),\n                declarations: facade.declarations.map(wrapReference),\n                imports: facade.imports.map(wrapReference),\n                exports: facade.exports.map(wrapReference),\n                emitInline: true,\n            };\n            var res = compileNgModule(meta);\n            return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, []);\n        };\n        CompilerFacadeImpl.prototype.compileDirective = function (angularCoreEnv, sourceMapUrl, facade) {\n            var constantPool = new ConstantPool();\n            var bindingParser = makeBindingParser();\n            var meta = convertDirectiveFacadeToMetadata(facade);\n            var res = compileDirectiveFromMetadata(meta, constantPool, bindingParser);\n            var preStatements = __spread(constantPool.statements, res.statements);\n            return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n        };\n        CompilerFacadeImpl.prototype.compileComponent = function (angularCoreEnv, sourceMapUrl, facade) {\n            // The ConstantPool is a requirement of the JIT'er.\n            var constantPool = new ConstantPool();\n            var interpolationConfig = facade.interpolation ?\n                InterpolationConfig.fromArray(facade.interpolation) :\n                DEFAULT_INTERPOLATION_CONFIG;\n            // Parse the template and check for errors.\n            var template = parseTemplate(facade.template, sourceMapUrl, { preserveWhitespaces: facade.preserveWhitespaces || false, interpolationConfig: interpolationConfig });\n            if (template.errors !== undefined) {\n                var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                throw new Error(\"Errors during JIT compilation of template for \" + facade.name + \": \" + errors);\n            }\n            // Compile the component metadata, including template, into an expression.\n            // TODO(alxhub): implement inputs, outputs, queries, etc.\n            var res = compileComponentFromMetadata(__assign({}, facade, convertDirectiveFacadeToMetadata(facade), { selector: facade.selector || this.elementSchemaRegistry.getDefaultComponentElementName(), template: template, viewQueries: facade.viewQueries.map(convertToR3QueryMetadata), wrapDirectivesAndPipesInClosure: false, styles: facade.styles || [], encapsulation: facade.encapsulation, interpolation: interpolationConfig, changeDetection: facade.changeDetection, animations: facade.animations != null ? new WrappedNodeExpr(facade.animations) : null, viewProviders: facade.viewProviders != null ? new WrappedNodeExpr(facade.viewProviders) :\n                    null, relativeContextFilePath: '', i18nUseExternalIds: true }), constantPool, makeBindingParser(interpolationConfig));\n            var preStatements = __spread(constantPool.statements, res.statements);\n            return jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n        };\n        return CompilerFacadeImpl;\n    }());\n    var USE_CLASS = Object.keys({ useClass: null })[0];\n    var USE_FACTORY = Object.keys({ useFactory: null })[0];\n    var USE_VALUE = Object.keys({ useValue: null })[0];\n    var USE_EXISTING = Object.keys({ useExisting: null })[0];\n    var wrapReference = function (value) {\n        var wrapped = new WrappedNodeExpr(value);\n        return { value: wrapped, type: wrapped };\n    };\n    function convertToR3QueryMetadata(facade) {\n        return __assign({}, facade, { predicate: Array.isArray(facade.predicate) ? facade.predicate :\n                new WrappedNodeExpr(facade.predicate), read: facade.read ? new WrappedNodeExpr(facade.read) : null });\n    }\n    function convertDirectiveFacadeToMetadata(facade) {\n        var inputsFromMetadata = parseInputOutputs(facade.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(facade.outputs || []);\n        var propMetadata = facade.propMetadata;\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] =\n                            ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return __assign({}, facade, { typeSourceSpan: null, type: new WrappedNodeExpr(facade.type), deps: convertR3DependencyMetadataArray(facade.deps), host: extractHostBindings(facade.host, facade.propMetadata), inputs: __assign({}, inputsFromMetadata, inputsFromType), outputs: __assign({}, outputsFromMetadata, outputsFromType), queries: facade.queries.map(convertToR3QueryMetadata), providers: facade.providers != null ? new WrappedNodeExpr(facade.providers) : null });\n    }\n    function wrapExpression(obj, property) {\n        if (obj.hasOwnProperty(property)) {\n            return new WrappedNodeExpr(obj[property]);\n        }\n        else {\n            return undefined;\n        }\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new LiteralExpr(providedIn);\n        }\n        else {\n            return new WrappedNodeExpr(providedIn);\n        }\n    }\n    function convertR3DependencyMetadata(facade) {\n        var tokenExpr;\n        if (facade.token === null) {\n            tokenExpr = new LiteralExpr(null);\n        }\n        else if (facade.resolved === exports.R3ResolvedDependencyType.Attribute) {\n            tokenExpr = new LiteralExpr(facade.token);\n        }\n        else {\n            tokenExpr = new WrappedNodeExpr(facade.token);\n        }\n        return {\n            token: tokenExpr,\n            resolved: facade.resolved,\n            host: facade.host,\n            optional: facade.optional,\n            self: facade.self,\n            skipSelf: facade.skipSelf\n        };\n    }\n    function convertR3DependencyMetadataArray(facades) {\n        return facades == null ? null : facades.map(convertR3DependencyMetadata);\n    }\n    function extractHostBindings(host, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = parseHostBindings(host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties;\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n    function publishFacade(global) {\n        var ng = global.ng || (global.ng = {});\n        ng.ɵcompilerFacade = new CompilerFacadeImpl();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var VERSION$1 = new Version('8.0.0-beta.1+12.sha-9f9024b');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _a;\n    /**\n     * A segment of text within the template.\n     */\n    var TextAst = /** @class */ (function () {\n        function TextAst(value, ngContentIndex, sourceSpan) {\n            this.value = value;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        TextAst.prototype.visit = function (visitor, context) { return visitor.visitText(this, context); };\n        return TextAst;\n    }());\n    /**\n     * A bound expression within the text of a template.\n     */\n    var BoundTextAst = /** @class */ (function () {\n        function BoundTextAst(value, ngContentIndex, sourceSpan) {\n            this.value = value;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        BoundTextAst.prototype.visit = function (visitor, context) {\n            return visitor.visitBoundText(this, context);\n        };\n        return BoundTextAst;\n    }());\n    /**\n     * A plain attribute on an element.\n     */\n    var AttrAst = /** @class */ (function () {\n        function AttrAst(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        AttrAst.prototype.visit = function (visitor, context) { return visitor.visitAttr(this, context); };\n        return AttrAst;\n    }());\n    var BoundPropertyMapping = (_a = {},\n        _a[4 /* Animation */] = 4 /* Animation */,\n        _a[1 /* Attribute */] = 1 /* Attribute */,\n        _a[2 /* Class */] = 2 /* Class */,\n        _a[0 /* Property */] = 0 /* Property */,\n        _a[3 /* Style */] = 3 /* Style */,\n        _a);\n    /**\n     * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n     * `[@trigger]=\"stateExp\"`)\n     */\n    var BoundElementPropertyAst = /** @class */ (function () {\n        function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n            this.name = name;\n            this.type = type;\n            this.securityContext = securityContext;\n            this.value = value;\n            this.unit = unit;\n            this.sourceSpan = sourceSpan;\n            this.isAnimation = this.type === 4 /* Animation */;\n        }\n        BoundElementPropertyAst.fromBoundProperty = function (prop) {\n            var type = BoundPropertyMapping[prop.type];\n            return new BoundElementPropertyAst(prop.name, type, prop.securityContext, prop.value, prop.unit, prop.sourceSpan);\n        };\n        BoundElementPropertyAst.prototype.visit = function (visitor, context) {\n            return visitor.visitElementProperty(this, context);\n        };\n        return BoundElementPropertyAst;\n    }());\n    /**\n     * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n     * `(@trigger.phase)=\"callback($event)\"`).\n     */\n    var BoundEventAst = /** @class */ (function () {\n        function BoundEventAst(name, target, phase, handler, sourceSpan) {\n            this.name = name;\n            this.target = target;\n            this.phase = phase;\n            this.handler = handler;\n            this.sourceSpan = sourceSpan;\n            this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n            this.isAnimation = !!this.phase;\n        }\n        BoundEventAst.calcFullName = function (name, target, phase) {\n            if (target) {\n                return target + \":\" + name;\n            }\n            if (phase) {\n                return \"@\" + name + \".\" + phase;\n            }\n            return name;\n        };\n        BoundEventAst.fromParsedEvent = function (event) {\n            var target = event.type === 0 /* Regular */ ? event.targetOrPhase : null;\n            var phase = event.type === 1 /* Animation */ ? event.targetOrPhase : null;\n            return new BoundEventAst(event.name, target, phase, event.handler, event.sourceSpan);\n        };\n        BoundEventAst.prototype.visit = function (visitor, context) {\n            return visitor.visitEvent(this, context);\n        };\n        return BoundEventAst;\n    }());\n    /**\n     * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n     */\n    var ReferenceAst = /** @class */ (function () {\n        function ReferenceAst(name, value, originalValue, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.originalValue = originalValue;\n            this.sourceSpan = sourceSpan;\n        }\n        ReferenceAst.prototype.visit = function (visitor, context) {\n            return visitor.visitReference(this, context);\n        };\n        return ReferenceAst;\n    }());\n    /**\n     * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n     */\n    var VariableAst = /** @class */ (function () {\n        function VariableAst(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        VariableAst.fromParsedVariable = function (v) {\n            return new VariableAst(v.name, v.value, v.sourceSpan);\n        };\n        VariableAst.prototype.visit = function (visitor, context) {\n            return visitor.visitVariable(this, context);\n        };\n        return VariableAst;\n    }());\n    /**\n     * An element declaration in a template.\n     */\n    var ElementAst = /** @class */ (function () {\n        function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n            this.name = name;\n            this.attrs = attrs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.references = references;\n            this.directives = directives;\n            this.providers = providers;\n            this.hasViewContainer = hasViewContainer;\n            this.queryMatches = queryMatches;\n            this.children = children;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n            this.endSourceSpan = endSourceSpan;\n        }\n        ElementAst.prototype.visit = function (visitor, context) {\n            return visitor.visitElement(this, context);\n        };\n        return ElementAst;\n    }());\n    /**\n     * A `<ng-template>` element included in an Angular template.\n     */\n    var EmbeddedTemplateAst = /** @class */ (function () {\n        function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n            this.attrs = attrs;\n            this.outputs = outputs;\n            this.references = references;\n            this.variables = variables;\n            this.directives = directives;\n            this.providers = providers;\n            this.hasViewContainer = hasViewContainer;\n            this.queryMatches = queryMatches;\n            this.children = children;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        EmbeddedTemplateAst.prototype.visit = function (visitor, context) {\n            return visitor.visitEmbeddedTemplate(this, context);\n        };\n        return EmbeddedTemplateAst;\n    }());\n    /**\n     * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n     */\n    var BoundDirectivePropertyAst = /** @class */ (function () {\n        function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n            this.directiveName = directiveName;\n            this.templateName = templateName;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        BoundDirectivePropertyAst.prototype.visit = function (visitor, context) {\n            return visitor.visitDirectiveProperty(this, context);\n        };\n        return BoundDirectivePropertyAst;\n    }());\n    /**\n     * A directive declared on an element.\n     */\n    var DirectiveAst = /** @class */ (function () {\n        function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n            this.directive = directive;\n            this.inputs = inputs;\n            this.hostProperties = hostProperties;\n            this.hostEvents = hostEvents;\n            this.contentQueryStartId = contentQueryStartId;\n            this.sourceSpan = sourceSpan;\n        }\n        DirectiveAst.prototype.visit = function (visitor, context) {\n            return visitor.visitDirective(this, context);\n        };\n        return DirectiveAst;\n    }());\n    /**\n     * A provider declared on an element\n     */\n    var ProviderAst = /** @class */ (function () {\n        function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n            this.token = token;\n            this.multiProvider = multiProvider;\n            this.eager = eager;\n            this.providers = providers;\n            this.providerType = providerType;\n            this.lifecycleHooks = lifecycleHooks;\n            this.sourceSpan = sourceSpan;\n            this.isModule = isModule;\n        }\n        ProviderAst.prototype.visit = function (visitor, context) {\n            // No visit method in the visitor for now...\n            return null;\n        };\n        return ProviderAst;\n    }());\n    (function (ProviderAstType) {\n        ProviderAstType[ProviderAstType[\"PublicService\"] = 0] = \"PublicService\";\n        ProviderAstType[ProviderAstType[\"PrivateService\"] = 1] = \"PrivateService\";\n        ProviderAstType[ProviderAstType[\"Component\"] = 2] = \"Component\";\n        ProviderAstType[ProviderAstType[\"Directive\"] = 3] = \"Directive\";\n        ProviderAstType[ProviderAstType[\"Builtin\"] = 4] = \"Builtin\";\n    })(exports.ProviderAstType || (exports.ProviderAstType = {}));\n    /**\n     * Position where content is to be projected (instance of `<ng-content>` in a template).\n     */\n    var NgContentAst = /** @class */ (function () {\n        function NgContentAst(index, ngContentIndex, sourceSpan) {\n            this.index = index;\n            this.ngContentIndex = ngContentIndex;\n            this.sourceSpan = sourceSpan;\n        }\n        NgContentAst.prototype.visit = function (visitor, context) {\n            return visitor.visitNgContent(this, context);\n        };\n        return NgContentAst;\n    }());\n    /**\n     * A visitor that accepts each node but doesn't do anything. It is intended to be used\n     * as the base class for a visitor that is only interested in a subset of the node types.\n     */\n    var NullTemplateVisitor = /** @class */ (function () {\n        function NullTemplateVisitor() {\n        }\n        NullTemplateVisitor.prototype.visitNgContent = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitEmbeddedTemplate = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitElement = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitReference = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitVariable = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitEvent = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitElementProperty = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitAttr = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitBoundText = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitText = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitDirective = function (ast, context) { };\n        NullTemplateVisitor.prototype.visitDirectiveProperty = function (ast, context) { };\n        return NullTemplateVisitor;\n    }());\n    /**\n     * Base class that can be used to build a visitor that visits each node\n     * in an template ast recursively.\n     */\n    var RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n        __extends(RecursiveTemplateAstVisitor, _super);\n        function RecursiveTemplateAstVisitor() {\n            return _super.call(this) || this;\n        }\n        // Nodes with children\n        RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                visit(ast.attrs);\n                visit(ast.references);\n                visit(ast.variables);\n                visit(ast.directives);\n                visit(ast.providers);\n                visit(ast.children);\n            });\n        };\n        RecursiveTemplateAstVisitor.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.providers);\n                visit(ast.children);\n            });\n        };\n        RecursiveTemplateAstVisitor.prototype.visitDirective = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                visit(ast.inputs);\n                visit(ast.hostProperties);\n                visit(ast.hostEvents);\n            });\n        };\n        RecursiveTemplateAstVisitor.prototype.visitChildren = function (context, cb) {\n            var results = [];\n            var t = this;\n            function visit(children) {\n                if (children && children.length)\n                    results.push(templateVisitAll(t, children, context));\n            }\n            cb(visit);\n            return [].concat.apply([], results);\n        };\n        return RecursiveTemplateAstVisitor;\n    }(NullTemplateVisitor));\n    /**\n     * Visit every node in a list of {@link TemplateAst}s with the given {@link TemplateAstVisitor}.\n     */\n    function templateVisitAll(visitor, asts, context) {\n        if (context === void 0) { context = null; }\n        var result = [];\n        var visit = visitor.visit ?\n            function (ast) { return visitor.visit(ast, context) || ast.visit(visitor, context); } :\n            function (ast) { return ast.visit(visitor, context); };\n        asts.forEach(function (ast) {\n            var astResult = visit(ast);\n            if (astResult) {\n                result.push(astResult);\n            }\n        });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CompilerConfig = /** @class */ (function () {\n        function CompilerConfig(_a) {\n            var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n            this.defaultEncapsulation = defaultEncapsulation;\n            this.useJit = !!useJit;\n            this.jitDevMode = !!jitDevMode;\n            this.missingTranslation = missingTranslation;\n            this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n            this.strictInjectionParameters = strictInjectionParameters === true;\n        }\n        return CompilerConfig;\n    }());\n    function preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n        if (defaultSetting === void 0) { defaultSetting = false; }\n        return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DirectiveNormalizer = /** @class */ (function () {\n        function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n            this._resourceLoader = _resourceLoader;\n            this._urlResolver = _urlResolver;\n            this._htmlParser = _htmlParser;\n            this._config = _config;\n            this._resourceLoaderCache = new Map();\n        }\n        DirectiveNormalizer.prototype.clearCache = function () { this._resourceLoaderCache.clear(); };\n        DirectiveNormalizer.prototype.clearCacheFor = function (normalizedDirective) {\n            var _this = this;\n            if (!normalizedDirective.isComponent) {\n                return;\n            }\n            var template = normalizedDirective.template;\n            this._resourceLoaderCache.delete(template.templateUrl);\n            template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(stylesheet.moduleUrl); });\n        };\n        DirectiveNormalizer.prototype._fetch = function (url) {\n            var result = this._resourceLoaderCache.get(url);\n            if (!result) {\n                result = this._resourceLoader.get(url);\n                this._resourceLoaderCache.set(url, result);\n            }\n            return result;\n        };\n        DirectiveNormalizer.prototype.normalizeTemplate = function (prenormData) {\n            var _this = this;\n            if (isDefined(prenormData.template)) {\n                if (isDefined(prenormData.templateUrl)) {\n                    throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n                }\n                if (typeof prenormData.template !== 'string') {\n                    throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n                }\n            }\n            else if (isDefined(prenormData.templateUrl)) {\n                if (typeof prenormData.templateUrl !== 'string') {\n                    throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n                }\n            }\n            else {\n                throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n            }\n            if (isDefined(prenormData.preserveWhitespaces) &&\n                typeof prenormData.preserveWhitespaces !== 'boolean') {\n                throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n            }\n            return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n        };\n        DirectiveNormalizer.prototype._preParseTemplate = function (prenomData) {\n            var _this = this;\n            var template;\n            var templateUrl;\n            if (prenomData.template != null) {\n                template = prenomData.template;\n                templateUrl = prenomData.moduleUrl;\n            }\n            else {\n                templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, prenomData.templateUrl);\n                template = this._fetch(templateUrl);\n            }\n            return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n        };\n        DirectiveNormalizer.prototype._preparseLoadedTemplate = function (prenormData, template, templateAbsUrl) {\n            var isInline = !!prenormData.template;\n            var interpolationConfig = InterpolationConfig.fromArray(prenormData.interpolation);\n            var rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n            if (rootNodesAndErrors.errors.length > 0) {\n                var errorString = rootNodesAndErrors.errors.join('\\n');\n                throw syntaxError(\"Template parse errors:\\n\" + errorString);\n            }\n            var templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n            var visitor = new TemplatePreparseVisitor();\n            visitAll$1(visitor, rootNodesAndErrors.rootNodes);\n            var templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n            var styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n            var inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n            var styleUrls = this\n                ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n                .styleUrls;\n            return {\n                template: template,\n                templateUrl: templateAbsUrl, isInline: isInline,\n                htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n                ngContentSelectors: visitor.ngContentSelectors,\n            };\n        };\n        DirectiveNormalizer.prototype._normalizeTemplateMetadata = function (prenormData, preparsedTemplate) {\n            var _this = this;\n            return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) { return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets); });\n        };\n        DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = function (prenormData, preparsedTemplate, stylesheets) {\n            // Algorithm:\n            // - produce exactly 1 entry per original styleUrl in\n            // CompileTemplateMetadata.externalStylesheets with all styles inlined\n            // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n            // Reason: be able to determine how many stylesheets there are even without loading\n            // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n            // (as resource loading may be async)\n            var _this = this;\n            var styles = __spread(preparsedTemplate.styles);\n            this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n            var styleUrls = preparsedTemplate.styleUrls;\n            var externalStylesheets = styleUrls.map(function (styleUrl) {\n                var stylesheet = stylesheets.get(styleUrl);\n                var styles = __spread(stylesheet.styles);\n                _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n                return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n            });\n            var encapsulation = prenormData.encapsulation;\n            if (encapsulation == null) {\n                encapsulation = this._config.defaultEncapsulation;\n            }\n            if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n                styleUrls.length === 0) {\n                encapsulation = ViewEncapsulation.None;\n            }\n            return new CompileTemplateMetadata({\n                encapsulation: encapsulation,\n                template: preparsedTemplate.template,\n                templateUrl: preparsedTemplate.templateUrl,\n                htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n                ngContentSelectors: preparsedTemplate.ngContentSelectors,\n                animations: prenormData.animations,\n                interpolation: prenormData.interpolation,\n                isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n                preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n            });\n        };\n        DirectiveNormalizer.prototype._inlineStyles = function (styleUrls, stylesheets, targetStyles) {\n            var _this = this;\n            styleUrls.forEach(function (styleUrl) {\n                var stylesheet = stylesheets.get(styleUrl);\n                stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n                _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n            });\n        };\n        DirectiveNormalizer.prototype._loadMissingExternalStylesheets = function (styleUrls, loadedStylesheets) {\n            var _this = this;\n            if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n            return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n                .map(function (styleUrl) { return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            }); })), function (_) { return loadedStylesheets; });\n        };\n        DirectiveNormalizer.prototype._normalizeStylesheet = function (stylesheet) {\n            var _this = this;\n            var moduleUrl = stylesheet.moduleUrl;\n            var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n            var allStyles = stylesheet.styles.map(function (style) {\n                var styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n                allStyleUrls.push.apply(allStyleUrls, __spread(styleWithImports.styleUrls));\n                return styleWithImports.style;\n            });\n            return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n        };\n        return DirectiveNormalizer;\n    }());\n    var TemplatePreparseVisitor = /** @class */ (function () {\n        function TemplatePreparseVisitor() {\n            this.ngContentSelectors = [];\n            this.styles = [];\n            this.styleUrls = [];\n            this.ngNonBindableStackCount = 0;\n        }\n        TemplatePreparseVisitor.prototype.visitElement = function (ast, context) {\n            var preparsedElement = preparseElement(ast);\n            switch (preparsedElement.type) {\n                case PreparsedElementType.NG_CONTENT:\n                    if (this.ngNonBindableStackCount === 0) {\n                        this.ngContentSelectors.push(preparsedElement.selectAttr);\n                    }\n                    break;\n                case PreparsedElementType.STYLE:\n                    var textContent_1 = '';\n                    ast.children.forEach(function (child) {\n                        if (child instanceof Text$3) {\n                            textContent_1 += child.value;\n                        }\n                    });\n                    this.styles.push(textContent_1);\n                    break;\n                case PreparsedElementType.STYLESHEET:\n                    this.styleUrls.push(preparsedElement.hrefAttr);\n                    break;\n                default:\n                    break;\n            }\n            if (preparsedElement.nonBindable) {\n                this.ngNonBindableStackCount++;\n            }\n            visitAll$1(this, ast.children);\n            if (preparsedElement.nonBindable) {\n                this.ngNonBindableStackCount--;\n            }\n            return null;\n        };\n        TemplatePreparseVisitor.prototype.visitExpansion = function (ast, context) { visitAll$1(this, ast.cases); };\n        TemplatePreparseVisitor.prototype.visitExpansionCase = function (ast, context) {\n            visitAll$1(this, ast.expression);\n        };\n        TemplatePreparseVisitor.prototype.visitComment = function (ast, context) { return null; };\n        TemplatePreparseVisitor.prototype.visitAttribute = function (ast, context) { return null; };\n        TemplatePreparseVisitor.prototype.visitText = function (ast, context) { return null; };\n        return TemplatePreparseVisitor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var QUERY_METADATA_IDENTIFIERS = [\n        createViewChild,\n        createViewChildren,\n        createContentChild,\n        createContentChildren,\n    ];\n    /*\n     * Resolve a `Type` for {@link Directive}.\n     *\n     * This interface can be overridden by the application developer to create custom behavior.\n     *\n     * See {@link Compiler}\n     */\n    var DirectiveResolver = /** @class */ (function () {\n        function DirectiveResolver(_reflector) {\n            this._reflector = _reflector;\n        }\n        DirectiveResolver.prototype.isDirective = function (type) {\n            var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n            return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n        };\n        DirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n            if (typeMetadata) {\n                var metadata = findLast(typeMetadata, isDirectiveMetadata);\n                if (metadata) {\n                    var propertyMetadata = this._reflector.propMetadata(type);\n                    var guards = this._reflector.guards(type);\n                    return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n                }\n            }\n            if (throwIfNotFound) {\n                throw new Error(\"No Directive annotation found on \" + stringify(type));\n            }\n            return null;\n        };\n        DirectiveResolver.prototype._mergeWithPropertyMetadata = function (dm, propertyMetadata, guards, directiveType) {\n            var inputs = [];\n            var outputs = [];\n            var host = {};\n            var queries = {};\n            Object.keys(propertyMetadata).forEach(function (propName) {\n                var input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n                if (input) {\n                    if (input.bindingPropertyName) {\n                        inputs.push(propName + \": \" + input.bindingPropertyName);\n                    }\n                    else {\n                        inputs.push(propName);\n                    }\n                }\n                var output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n                if (output) {\n                    if (output.bindingPropertyName) {\n                        outputs.push(propName + \": \" + output.bindingPropertyName);\n                    }\n                    else {\n                        outputs.push(propName);\n                    }\n                }\n                var hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n                hostBindings.forEach(function (hostBinding) {\n                    if (hostBinding.hostPropertyName) {\n                        var startWith = hostBinding.hostPropertyName[0];\n                        if (startWith === '(') {\n                            throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                        }\n                        else if (startWith === '[') {\n                            throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                        }\n                        host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                    }\n                    else {\n                        host[\"[\" + propName + \"]\"] = propName;\n                    }\n                });\n                var hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n                hostListeners.forEach(function (hostListener) {\n                    var args = hostListener.args || [];\n                    host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n                });\n                var query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n                if (query) {\n                    queries[propName] = query;\n                }\n            });\n            return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n        };\n        DirectiveResolver.prototype._extractPublicName = function (def) { return splitAtColon(def, [null, def])[1].trim(); };\n        DirectiveResolver.prototype._dedupeBindings = function (bindings) {\n            var names = new Set();\n            var publicNames = new Set();\n            var reversedResult = [];\n            // go last to first to allow later entries to overwrite previous entries\n            for (var i = bindings.length - 1; i >= 0; i--) {\n                var binding = bindings[i];\n                var name_1 = this._extractPublicName(binding);\n                publicNames.add(name_1);\n                if (!names.has(name_1)) {\n                    names.add(name_1);\n                    reversedResult.push(binding);\n                }\n            }\n            return reversedResult.reverse();\n        };\n        DirectiveResolver.prototype._merge = function (directive, inputs, outputs, host, queries, guards, directiveType) {\n            var mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n            var mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n            var mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n            var mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n            if (createComponent.isTypeOf(directive)) {\n                var comp = directive;\n                return createComponent({\n                    selector: comp.selector,\n                    inputs: mergedInputs,\n                    outputs: mergedOutputs,\n                    host: mergedHost,\n                    exportAs: comp.exportAs,\n                    moduleId: comp.moduleId,\n                    queries: mergedQueries,\n                    changeDetection: comp.changeDetection,\n                    providers: comp.providers,\n                    viewProviders: comp.viewProviders,\n                    entryComponents: comp.entryComponents,\n                    template: comp.template,\n                    templateUrl: comp.templateUrl,\n                    styles: comp.styles,\n                    styleUrls: comp.styleUrls,\n                    encapsulation: comp.encapsulation,\n                    animations: comp.animations,\n                    interpolation: comp.interpolation,\n                    preserveWhitespaces: directive.preserveWhitespaces,\n                });\n            }\n            else {\n                return createDirective({\n                    selector: directive.selector,\n                    inputs: mergedInputs,\n                    outputs: mergedOutputs,\n                    host: mergedHost,\n                    exportAs: directive.exportAs,\n                    queries: mergedQueries,\n                    providers: directive.providers, guards: guards\n                });\n            }\n        };\n        return DirectiveResolver;\n    }());\n    function isDirectiveMetadata(type) {\n        return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n    }\n    function findLast(arr, condition) {\n        for (var i = arr.length - 1; i >= 0; i--) {\n            if (condition(arr[i])) {\n                return arr[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An i18n error.\n     */\n    var I18nError = /** @class */ (function (_super) {\n        __extends(I18nError, _super);\n        function I18nError(span, msg) {\n            return _super.call(this, span, msg) || this;\n        }\n        return I18nError;\n    }(ParseError));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _I18N_ATTR = 'i18n';\n    var _I18N_ATTR_PREFIX = 'i18n-';\n    var _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\n    var MEANING_SEPARATOR = '|';\n    var ID_SEPARATOR = '@@';\n    var i18nCommentsWarned = false;\n    /**\n     * Extract translatable messages from an html AST\n     */\n    function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n        var visitor = new _Visitor$2(implicitTags, implicitAttrs);\n        return visitor.extract(nodes, interpolationConfig);\n    }\n    function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n        var visitor = new _Visitor$2(implicitTags, implicitAttrs);\n        return visitor.merge(nodes, translations, interpolationConfig);\n    }\n    var ExtractionResult = /** @class */ (function () {\n        function ExtractionResult(messages, errors) {\n            this.messages = messages;\n            this.errors = errors;\n        }\n        return ExtractionResult;\n    }());\n    var _VisitorMode;\n    (function (_VisitorMode) {\n        _VisitorMode[_VisitorMode[\"Extract\"] = 0] = \"Extract\";\n        _VisitorMode[_VisitorMode[\"Merge\"] = 1] = \"Merge\";\n    })(_VisitorMode || (_VisitorMode = {}));\n    /**\n     * This Visitor is used:\n     * 1. to extract all the translatable strings from an html AST (see `extract()`),\n     * 2. to replace the translatable strings with the actual translations (see `merge()`)\n     *\n     * @internal\n     */\n    var _Visitor$2 = /** @class */ (function () {\n        function _Visitor(_implicitTags, _implicitAttrs) {\n            this._implicitTags = _implicitTags;\n            this._implicitAttrs = _implicitAttrs;\n        }\n        /**\n         * Extracts the messages from the tree\n         */\n        _Visitor.prototype.extract = function (nodes, interpolationConfig) {\n            var _this = this;\n            this._init(_VisitorMode.Extract, interpolationConfig);\n            nodes.forEach(function (node) { return node.visit(_this, null); });\n            if (this._inI18nBlock) {\n                this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n            }\n            return new ExtractionResult(this._messages, this._errors);\n        };\n        /**\n         * Returns a tree where all translatable nodes are translated\n         */\n        _Visitor.prototype.merge = function (nodes, translations, interpolationConfig) {\n            this._init(_VisitorMode.Merge, interpolationConfig);\n            this._translations = translations;\n            // Construct a single fake root element\n            var wrapper = new Element$1('wrapper', [], nodes, undefined, undefined, undefined);\n            var translatedNode = wrapper.visit(this, null);\n            if (this._inI18nBlock) {\n                this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n            }\n            return new ParseTreeResult(translatedNode.children, this._errors);\n        };\n        _Visitor.prototype.visitExpansionCase = function (icuCase, context) {\n            // Parse cases for translatable html attributes\n            var expression = visitAll$1(this, icuCase.expression, context);\n            if (this._mode === _VisitorMode.Merge) {\n                return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n            }\n        };\n        _Visitor.prototype.visitExpansion = function (icu, context) {\n            this._mayBeAddBlockChildren(icu);\n            var wasInIcu = this._inIcu;\n            if (!this._inIcu) {\n                // nested ICU messages should not be extracted but top-level translated as a whole\n                if (this._isInTranslatableSection) {\n                    this._addMessage([icu]);\n                }\n                this._inIcu = true;\n            }\n            var cases = visitAll$1(this, icu.cases, context);\n            if (this._mode === _VisitorMode.Merge) {\n                icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n            }\n            this._inIcu = wasInIcu;\n            return icu;\n        };\n        _Visitor.prototype.visitComment = function (comment, context) {\n            var isOpening = _isOpeningComment(comment);\n            if (isOpening && this._isInTranslatableSection) {\n                this._reportError(comment, 'Could not start a block inside a translatable section');\n                return;\n            }\n            var isClosing = _isClosingComment(comment);\n            if (isClosing && !this._inI18nBlock) {\n                this._reportError(comment, 'Trying to close an unopened block');\n                return;\n            }\n            if (!this._inI18nNode && !this._inIcu) {\n                if (!this._inI18nBlock) {\n                    if (isOpening) {\n                        // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                        if (!i18nCommentsWarned && console && console.warn) {\n                            i18nCommentsWarned = true;\n                            var details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                            // TODO(ocombe): use a log service once there is a public one available\n                            console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                        }\n                        this._inI18nBlock = true;\n                        this._blockStartDepth = this._depth;\n                        this._blockChildren = [];\n                        this._blockMeaningAndDesc =\n                            comment.value.replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                        this._openTranslatableSection(comment);\n                    }\n                }\n                else {\n                    if (isClosing) {\n                        if (this._depth == this._blockStartDepth) {\n                            this._closeTranslatableSection(comment, this._blockChildren);\n                            this._inI18nBlock = false;\n                            var message = this._addMessage(this._blockChildren, this._blockMeaningAndDesc);\n                            // merge attributes in sections\n                            var nodes = this._translateMessage(comment, message);\n                            return visitAll$1(this, nodes);\n                        }\n                        else {\n                            this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                            return;\n                        }\n                    }\n                }\n            }\n        };\n        _Visitor.prototype.visitText = function (text, context) {\n            if (this._isInTranslatableSection) {\n                this._mayBeAddBlockChildren(text);\n            }\n            return text;\n        };\n        _Visitor.prototype.visitElement = function (el, context) {\n            var _this = this;\n            this._mayBeAddBlockChildren(el);\n            this._depth++;\n            var wasInI18nNode = this._inI18nNode;\n            var wasInImplicitNode = this._inImplicitNode;\n            var childNodes = [];\n            var translatedChildNodes = undefined;\n            // Extract:\n            // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n            // - ICU messages\n            var i18nAttr = _getI18nAttr(el);\n            var i18nMeta = i18nAttr ? i18nAttr.value : '';\n            var isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n                !this._isInTranslatableSection;\n            var isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n            this._inImplicitNode = wasInImplicitNode || isImplicit;\n            if (!this._isInTranslatableSection && !this._inIcu) {\n                if (i18nAttr || isTopLevelImplicit) {\n                    this._inI18nNode = true;\n                    var message = this._addMessage(el.children, i18nMeta);\n                    translatedChildNodes = this._translateMessage(el, message);\n                }\n                if (this._mode == _VisitorMode.Extract) {\n                    var isTranslatable = i18nAttr || isTopLevelImplicit;\n                    if (isTranslatable)\n                        this._openTranslatableSection(el);\n                    visitAll$1(this, el.children);\n                    if (isTranslatable)\n                        this._closeTranslatableSection(el, el.children);\n                }\n            }\n            else {\n                if (i18nAttr || isTopLevelImplicit) {\n                    this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n                }\n                if (this._mode == _VisitorMode.Extract) {\n                    // Descend into child nodes for extraction\n                    visitAll$1(this, el.children);\n                }\n            }\n            if (this._mode === _VisitorMode.Merge) {\n                var visitNodes = translatedChildNodes || el.children;\n                visitNodes.forEach(function (child) {\n                    var visited = child.visit(_this, context);\n                    if (visited && !_this._isInTranslatableSection) {\n                        // Do not add the children from translatable sections (= i18n blocks here)\n                        // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                        childNodes = childNodes.concat(visited);\n                    }\n                });\n            }\n            this._visitAttributesOf(el);\n            this._depth--;\n            this._inI18nNode = wasInI18nNode;\n            this._inImplicitNode = wasInImplicitNode;\n            if (this._mode === _VisitorMode.Merge) {\n                var translatedAttrs = this._translateAttributes(el);\n                return new Element$1(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            }\n            return null;\n        };\n        _Visitor.prototype.visitAttribute = function (attribute, context) {\n            throw new Error('unreachable code');\n        };\n        _Visitor.prototype._init = function (mode, interpolationConfig) {\n            this._mode = mode;\n            this._inI18nBlock = false;\n            this._inI18nNode = false;\n            this._depth = 0;\n            this._inIcu = false;\n            this._msgCountAtSectionStart = undefined;\n            this._errors = [];\n            this._messages = [];\n            this._inImplicitNode = false;\n            this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n        };\n        // looks for translatable attributes\n        _Visitor.prototype._visitAttributesOf = function (el) {\n            var _this = this;\n            var explicitAttrNameToValue = {};\n            var implicitAttrNames = this._implicitAttrs[el.name] || [];\n            el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n                .forEach(function (attr) { return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value; });\n            el.attrs.forEach(function (attr) {\n                if (attr.name in explicitAttrNameToValue) {\n                    _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n                }\n                else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                    _this._addMessage([attr]);\n                }\n            });\n        };\n        // add a translatable message\n        _Visitor.prototype._addMessage = function (ast, msgMeta) {\n            if (ast.length == 0 ||\n                ast.length == 1 && ast[0] instanceof Attribute && !ast[0].value) {\n                // Do not create empty messages\n                return null;\n            }\n            var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n            var message = this._createI18nMessage(ast, meaning, description, id);\n            this._messages.push(message);\n            return message;\n        };\n        // Translates the given message given the `TranslationBundle`\n        // This is used for translating elements / blocks - see `_translateAttributes` for attributes\n        // no-op when called in extraction mode (returns [])\n        _Visitor.prototype._translateMessage = function (el, message) {\n            if (message && this._mode === _VisitorMode.Merge) {\n                var nodes = this._translations.get(message);\n                if (nodes) {\n                    return nodes;\n                }\n                this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n            }\n            return [];\n        };\n        // translate the attributes of an element and remove i18n specific attributes\n        _Visitor.prototype._translateAttributes = function (el) {\n            var _this = this;\n            var attributes = el.attrs;\n            var i18nParsedMessageMeta = {};\n            attributes.forEach(function (attr) {\n                if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                    i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                        _parseMessageMeta(attr.value);\n                }\n            });\n            var translatedAttributes = [];\n            attributes.forEach(function (attr) {\n                if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                    // strip i18n specific attributes\n                    return;\n                }\n                if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                    var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                    var message = _this._createI18nMessage([attr], meaning, description, id);\n                    var nodes = _this._translations.get(message);\n                    if (nodes) {\n                        if (nodes.length == 0) {\n                            translatedAttributes.push(new Attribute(attr.name, '', attr.sourceSpan));\n                        }\n                        else if (nodes[0] instanceof Text$3) {\n                            var value = nodes[0].value;\n                            translatedAttributes.push(new Attribute(attr.name, value, attr.sourceSpan));\n                        }\n                        else {\n                            _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                        }\n                    }\n                    else {\n                        _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    translatedAttributes.push(attr);\n                }\n            });\n            return translatedAttributes;\n        };\n        /**\n         * Add the node as a child of the block when:\n         * - we are in a block,\n         * - we are not inside a ICU message (those are handled separately),\n         * - the node is a \"direct child\" of the block\n         */\n        _Visitor.prototype._mayBeAddBlockChildren = function (node) {\n            if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n                this._blockChildren.push(node);\n            }\n        };\n        /**\n         * Marks the start of a section, see `_closeTranslatableSection`\n         */\n        _Visitor.prototype._openTranslatableSection = function (node) {\n            if (this._isInTranslatableSection) {\n                this._reportError(node, 'Unexpected section start');\n            }\n            else {\n                this._msgCountAtSectionStart = this._messages.length;\n            }\n        };\n        Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n            /**\n             * A translatable section could be:\n             * - the content of translatable element,\n             * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n             */\n            get: function () {\n                return this._msgCountAtSectionStart !== void 0;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Terminates a section.\n         *\n         * If a section has only one significant children (comments not significant) then we should not\n         * keep the message from this children:\n         *\n         * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n         * - one for the <p> content with meaning and description,\n         * - another one for the ICU message.\n         *\n         * In this case the last message is discarded as it contains less information (the AST is\n         * otherwise identical).\n         *\n         * Note that we should still keep messages extracted from attributes inside the section (ie in the\n         * ICU message here)\n         */\n        _Visitor.prototype._closeTranslatableSection = function (node, directChildren) {\n            if (!this._isInTranslatableSection) {\n                this._reportError(node, 'Unexpected section end');\n                return;\n            }\n            var startIndex = this._msgCountAtSectionStart;\n            var significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n            if (significantChildren == 1) {\n                for (var i = this._messages.length - 1; i >= startIndex; i--) {\n                    var ast = this._messages[i].nodes;\n                    if (!(ast.length == 1 && ast[0] instanceof Text)) {\n                        this._messages.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n            this._msgCountAtSectionStart = undefined;\n        };\n        _Visitor.prototype._reportError = function (node, msg) {\n            this._errors.push(new I18nError(node.sourceSpan, msg));\n        };\n        return _Visitor;\n    }());\n    function _isOpeningComment(n) {\n        return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n    }\n    function _isClosingComment(n) {\n        return !!(n instanceof Comment && n.value && n.value === '/i18n');\n    }\n    function _getI18nAttr(p) {\n        return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n    }\n    function _parseMessageMeta(i18n) {\n        if (!i18n)\n            return { meaning: '', description: '', id: '' };\n        var idIndex = i18n.indexOf(ID_SEPARATOR);\n        var descIndex = i18n.indexOf(MEANING_SEPARATOR);\n        var _a = __read((idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], 2), meaningAndDesc = _a[0], id = _a[1];\n        var _b = __read((descIndex > -1) ?\n            [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n            ['', meaningAndDesc], 2), meaning = _b[0], description = _b[1];\n        return { meaning: meaning, description: description, id: id };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var XmlTagDefinition = /** @class */ (function () {\n        function XmlTagDefinition() {\n            this.closedByParent = false;\n            this.contentType = exports.TagContentType.PARSABLE_DATA;\n            this.isVoid = false;\n            this.ignoreFirstLf = false;\n            this.canSelfClose = true;\n        }\n        XmlTagDefinition.prototype.requireExtraParent = function (currentParent) { return false; };\n        XmlTagDefinition.prototype.isClosedByChild = function (name) { return false; };\n        return XmlTagDefinition;\n    }());\n    var _TAG_DEFINITION = new XmlTagDefinition();\n    function getXmlTagDefinition(tagName) {\n        return _TAG_DEFINITION;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var XmlParser = /** @class */ (function (_super) {\n        __extends(XmlParser, _super);\n        function XmlParser() {\n            return _super.call(this, getXmlTagDefinition) || this;\n        }\n        XmlParser.prototype.parse = function (source, url, parseExpansionForms) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n        };\n        return XmlParser;\n    }(Parser$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _VERSION = '1.2';\n    var _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n    // TODO(vicb): make this a param (s/_/-/)\n    var _DEFAULT_SOURCE_LANG = 'en';\n    var _PLACEHOLDER_TAG$1 = 'x';\n    var _MARKER_TAG = 'mrk';\n    var _FILE_TAG = 'file';\n    var _SOURCE_TAG$1 = 'source';\n    var _SEGMENT_SOURCE_TAG = 'seg-source';\n    var _TARGET_TAG = 'target';\n    var _UNIT_TAG = 'trans-unit';\n    var _CONTEXT_GROUP_TAG = 'context-group';\n    var _CONTEXT_TAG = 'context';\n    // http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\n    // http://docs.oasis-open.org/xliff/v1.2/xliff-profile-html/xliff-profile-html-1.2.html\n    var Xliff = /** @class */ (function (_super) {\n        __extends(Xliff, _super);\n        function Xliff() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Xliff.prototype.write = function (messages, locale) {\n            var visitor = new _WriteVisitor();\n            var transUnits = [];\n            messages.forEach(function (message) {\n                var _a;\n                var contextTags = [];\n                message.sources.forEach(function (source) {\n                    var contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                    contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$1(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$1(\"\" + source.startLine)]), new CR(8));\n                    contextTags.push(new CR(8), contextGroupTag);\n                });\n                var transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n                (_a = transUnit.children).push.apply(_a, __spread([new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes))], contextTags));\n                if (message.description) {\n                    transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$1(message.description)]));\n                }\n                if (message.meaning) {\n                    transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$1(message.meaning)]));\n                }\n                transUnit.children.push(new CR(6));\n                transUnits.push(new CR(6), transUnit);\n            });\n            var body = new Tag('body', {}, __spread(transUnits, [new CR(4)]));\n            var file = new Tag('file', {\n                'source-language': locale || _DEFAULT_SOURCE_LANG,\n                datatype: 'plaintext',\n                original: 'ng2.template',\n            }, [new CR(4), body, new CR(2)]);\n            var xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n            return serialize([\n                new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n            ]);\n        };\n        Xliff.prototype.load = function (content, url) {\n            // xliff to xml nodes\n            var xliffParser = new XliffParser();\n            var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n            // xml nodes to i18n nodes\n            var i18nNodesByMsgId = {};\n            var converter = new XmlToI18n();\n            Object.keys(msgIdToHtml).forEach(function (msgId) {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n                errors.push.apply(errors, __spread(e));\n                i18nNodesByMsgId[msgId] = i18nNodes;\n            });\n            if (errors.length) {\n                throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n            }\n            return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n        };\n        Xliff.prototype.digest = function (message) { return digest(message); };\n        return Xliff;\n    }(Serializer));\n    var _WriteVisitor = /** @class */ (function () {\n        function _WriteVisitor() {\n        }\n        _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$1(text.value)]; };\n        _WriteVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var nodes = [];\n            container.children.forEach(function (node) { return nodes.push.apply(nodes, __spread(node.visit(_this))); });\n            return nodes;\n        };\n        _WriteVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var nodes = [new Text$1(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n            Object.keys(icu.cases).forEach(function (c) {\n                nodes.push.apply(nodes, __spread([new Text$1(c + \" {\")], icu.cases[c].visit(_this), [new Text$1(\"} \")]));\n            });\n            nodes.push(new Text$1(\"}\"));\n            return nodes;\n        };\n        _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var ctype = getCtypeForTag(ph.tag);\n            if (ph.isVoid) {\n                // void tags have no children nor closing tags\n                return [new Tag(_PLACEHOLDER_TAG$1, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n            }\n            var startTagPh = new Tag(_PLACEHOLDER_TAG$1, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n            var closeTagPh = new Tag(_PLACEHOLDER_TAG$1, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n            return __spread([startTagPh], this.serialize(ph.children), [closeTagPh]);\n        };\n        _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n            return [new Tag(_PLACEHOLDER_TAG$1, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n        };\n        _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            var equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n            return [new Tag(_PLACEHOLDER_TAG$1, { id: ph.name, 'equiv-text': equivText })];\n        };\n        _WriteVisitor.prototype.serialize = function (nodes) {\n            var _this = this;\n            return [].concat.apply([], __spread(nodes.map(function (node) { return node.visit(_this); })));\n        };\n        return _WriteVisitor;\n    }());\n    // TODO(vicb): add error management (structure)\n    // Extract messages as xml nodes from the xliff file\n    var XliffParser = /** @class */ (function () {\n        function XliffParser() {\n            this._locale = null;\n        }\n        XliffParser.prototype.parse = function (xliff, url) {\n            this._unitMlString = null;\n            this._msgIdToHtml = {};\n            var xml = new XmlParser().parse(xliff, url, false);\n            this._errors = xml.errors;\n            visitAll$1(this, xml.rootNodes, null);\n            return {\n                msgIdToHtml: this._msgIdToHtml,\n                errors: this._errors,\n                locale: this._locale,\n            };\n        };\n        XliffParser.prototype.visitElement = function (element, context) {\n            switch (element.name) {\n                case _UNIT_TAG:\n                    this._unitMlString = null;\n                    var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                    if (!idAttr) {\n                        this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                    }\n                    else {\n                        var id = idAttr.value;\n                        if (this._msgIdToHtml.hasOwnProperty(id)) {\n                            this._addError(element, \"Duplicated translations for msg \" + id);\n                        }\n                        else {\n                            visitAll$1(this, element.children, null);\n                            if (typeof this._unitMlString === 'string') {\n                                this._msgIdToHtml[id] = this._unitMlString;\n                            }\n                            else {\n                                this._addError(element, \"Message \" + id + \" misses a translation\");\n                            }\n                        }\n                    }\n                    break;\n                // ignore those tags\n                case _SOURCE_TAG$1:\n                case _SEGMENT_SOURCE_TAG:\n                    break;\n                case _TARGET_TAG:\n                    var innerTextStart = element.startSourceSpan.end.offset;\n                    var innerTextEnd = element.endSourceSpan.start.offset;\n                    var content = element.startSourceSpan.start.file.content;\n                    var innerText = content.slice(innerTextStart, innerTextEnd);\n                    this._unitMlString = innerText;\n                    break;\n                case _FILE_TAG:\n                    var localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                    if (localeAttr) {\n                        this._locale = localeAttr.value;\n                    }\n                    visitAll$1(this, element.children, null);\n                    break;\n                default:\n                    // TODO(vicb): assert file structure, xliff version\n                    // For now only recurse on unhandled nodes\n                    visitAll$1(this, element.children, null);\n            }\n        };\n        XliffParser.prototype.visitAttribute = function (attribute, context) { };\n        XliffParser.prototype.visitText = function (text, context) { };\n        XliffParser.prototype.visitComment = function (comment, context) { };\n        XliffParser.prototype.visitExpansion = function (expansion, context) { };\n        XliffParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n        XliffParser.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XliffParser;\n    }());\n    // Convert ml nodes (xliff syntax) to i18n nodes\n    var XmlToI18n = /** @class */ (function () {\n        function XmlToI18n() {\n        }\n        XmlToI18n.prototype.convert = function (message, url) {\n            var xmlIcu = new XmlParser().parse(message, url, true);\n            this._errors = xmlIcu.errors;\n            var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n                [] : [].concat.apply([], __spread(visitAll$1(this, xmlIcu.rootNodes)));\n            return {\n                i18nNodes: i18nNodes,\n                errors: this._errors,\n            };\n        };\n        XmlToI18n.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n        XmlToI18n.prototype.visitElement = function (el, context) {\n            if (el.name === _PLACEHOLDER_TAG$1) {\n                var nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (nameAttr) {\n                    return new Placeholder('', nameAttr.value, el.sourceSpan);\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                return null;\n            }\n            if (el.name === _MARKER_TAG) {\n                return [].concat.apply([], __spread(visitAll$1(this, el.children)));\n            }\n            this._addError(el, \"Unexpected tag\");\n            return null;\n        };\n        XmlToI18n.prototype.visitExpansion = function (icu, context) {\n            var caseMap = {};\n            visitAll$1(this, icu.cases).forEach(function (c) {\n                caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n            });\n            return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n        };\n        XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n            return {\n                value: icuCase.value,\n                nodes: visitAll$1(this, icuCase.expression),\n            };\n        };\n        XmlToI18n.prototype.visitComment = function (comment, context) { };\n        XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n        XmlToI18n.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XmlToI18n;\n    }());\n    function getCtypeForTag(tag) {\n        switch (tag.toLowerCase()) {\n            case 'br':\n                return 'lb';\n            case 'img':\n                return 'image';\n            default:\n                return \"x-\" + tag;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _VERSION$1 = '2.0';\n    var _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n    // TODO(vicb): make this a param (s/_/-/)\n    var _DEFAULT_SOURCE_LANG$1 = 'en';\n    var _PLACEHOLDER_TAG$2 = 'ph';\n    var _PLACEHOLDER_SPANNING_TAG = 'pc';\n    var _MARKER_TAG$1 = 'mrk';\n    var _XLIFF_TAG = 'xliff';\n    var _SOURCE_TAG$2 = 'source';\n    var _TARGET_TAG$1 = 'target';\n    var _UNIT_TAG$1 = 'unit';\n    // http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html\n    var Xliff2 = /** @class */ (function (_super) {\n        __extends(Xliff2, _super);\n        function Xliff2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Xliff2.prototype.write = function (messages, locale) {\n            var visitor = new _WriteVisitor$1();\n            var units = [];\n            messages.forEach(function (message) {\n                var unit = new Tag(_UNIT_TAG$1, { id: message.id });\n                var notes = new Tag('notes');\n                if (message.description || message.meaning) {\n                    if (message.description) {\n                        notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$1(message.description)]));\n                    }\n                    if (message.meaning) {\n                        notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$1(message.meaning)]));\n                    }\n                }\n                message.sources.forEach(function (source) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                        new Text$1(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                    ]));\n                });\n                notes.children.push(new CR(6));\n                unit.children.push(new CR(6), notes);\n                var segment = new Tag('segment');\n                segment.children.push(new CR(8), new Tag(_SOURCE_TAG$2, {}, visitor.serialize(message.nodes)), new CR(6));\n                unit.children.push(new CR(6), segment, new CR(4));\n                units.push(new CR(4), unit);\n            });\n            var file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, __spread(units, [new CR(2)]));\n            var xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n            return serialize([\n                new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n            ]);\n        };\n        Xliff2.prototype.load = function (content, url) {\n            // xliff to xml nodes\n            var xliff2Parser = new Xliff2Parser();\n            var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n            // xml nodes to i18n nodes\n            var i18nNodesByMsgId = {};\n            var converter = new XmlToI18n$1();\n            Object.keys(msgIdToHtml).forEach(function (msgId) {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n                errors.push.apply(errors, __spread(e));\n                i18nNodesByMsgId[msgId] = i18nNodes;\n            });\n            if (errors.length) {\n                throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n            }\n            return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n        };\n        Xliff2.prototype.digest = function (message) { return decimalDigest(message); };\n        return Xliff2;\n    }(Serializer));\n    var _WriteVisitor$1 = /** @class */ (function () {\n        function _WriteVisitor() {\n        }\n        _WriteVisitor.prototype.visitText = function (text, context) { return [new Text$1(text.value)]; };\n        _WriteVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            var nodes = [];\n            container.children.forEach(function (node) { return nodes.push.apply(nodes, __spread(node.visit(_this))); });\n            return nodes;\n        };\n        _WriteVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var nodes = [new Text$1(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n            Object.keys(icu.cases).forEach(function (c) {\n                nodes.push.apply(nodes, __spread([new Text$1(c + \" {\")], icu.cases[c].visit(_this), [new Text$1(\"} \")]));\n            });\n            nodes.push(new Text$1(\"}\"));\n            return nodes;\n        };\n        _WriteVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            var type = getTypeForTag(ph.tag);\n            if (ph.isVoid) {\n                var tagPh = new Tag(_PLACEHOLDER_TAG$2, {\n                    id: (this._nextPlaceholderId++).toString(),\n                    equiv: ph.startName,\n                    type: type,\n                    disp: \"<\" + ph.tag + \"/>\",\n                });\n                return [tagPh];\n            }\n            var tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n                id: (this._nextPlaceholderId++).toString(),\n                equivStart: ph.startName,\n                equivEnd: ph.closeName,\n                type: type,\n                dispStart: \"<\" + ph.tag + \">\",\n                dispEnd: \"</\" + ph.tag + \">\",\n            });\n            var nodes = [].concat.apply([], __spread(ph.children.map(function (node) { return node.visit(_this); })));\n            if (nodes.length) {\n                nodes.forEach(function (node) { return tagPc.children.push(node); });\n            }\n            else {\n                tagPc.children.push(new Text$1(''));\n            }\n            return [tagPc];\n        };\n        _WriteVisitor.prototype.visitPlaceholder = function (ph, context) {\n            var idStr = (this._nextPlaceholderId++).toString();\n            return [new Tag(_PLACEHOLDER_TAG$2, {\n                    id: idStr,\n                    equiv: ph.name,\n                    disp: \"{{\" + ph.value + \"}}\",\n                })];\n        };\n        _WriteVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            var cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n            var idStr = (this._nextPlaceholderId++).toString();\n            return [new Tag(_PLACEHOLDER_TAG$2, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n        };\n        _WriteVisitor.prototype.serialize = function (nodes) {\n            var _this = this;\n            this._nextPlaceholderId = 0;\n            return [].concat.apply([], __spread(nodes.map(function (node) { return node.visit(_this); })));\n        };\n        return _WriteVisitor;\n    }());\n    // Extract messages as xml nodes from the xliff file\n    var Xliff2Parser = /** @class */ (function () {\n        function Xliff2Parser() {\n            this._locale = null;\n        }\n        Xliff2Parser.prototype.parse = function (xliff, url) {\n            this._unitMlString = null;\n            this._msgIdToHtml = {};\n            var xml = new XmlParser().parse(xliff, url, false);\n            this._errors = xml.errors;\n            visitAll$1(this, xml.rootNodes, null);\n            return {\n                msgIdToHtml: this._msgIdToHtml,\n                errors: this._errors,\n                locale: this._locale,\n            };\n        };\n        Xliff2Parser.prototype.visitElement = function (element, context) {\n            switch (element.name) {\n                case _UNIT_TAG$1:\n                    this._unitMlString = null;\n                    var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                    if (!idAttr) {\n                        this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                    }\n                    else {\n                        var id = idAttr.value;\n                        if (this._msgIdToHtml.hasOwnProperty(id)) {\n                            this._addError(element, \"Duplicated translations for msg \" + id);\n                        }\n                        else {\n                            visitAll$1(this, element.children, null);\n                            if (typeof this._unitMlString === 'string') {\n                                this._msgIdToHtml[id] = this._unitMlString;\n                            }\n                            else {\n                                this._addError(element, \"Message \" + id + \" misses a translation\");\n                            }\n                        }\n                    }\n                    break;\n                case _SOURCE_TAG$2:\n                    // ignore source message\n                    break;\n                case _TARGET_TAG$1:\n                    var innerTextStart = element.startSourceSpan.end.offset;\n                    var innerTextEnd = element.endSourceSpan.start.offset;\n                    var content = element.startSourceSpan.start.file.content;\n                    var innerText = content.slice(innerTextStart, innerTextEnd);\n                    this._unitMlString = innerText;\n                    break;\n                case _XLIFF_TAG:\n                    var localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                    if (localeAttr) {\n                        this._locale = localeAttr.value;\n                    }\n                    var versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                    if (versionAttr) {\n                        var version = versionAttr.value;\n                        if (version !== '2.0') {\n                            this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                        }\n                        else {\n                            visitAll$1(this, element.children, null);\n                        }\n                    }\n                    break;\n                default:\n                    visitAll$1(this, element.children, null);\n            }\n        };\n        Xliff2Parser.prototype.visitAttribute = function (attribute, context) { };\n        Xliff2Parser.prototype.visitText = function (text, context) { };\n        Xliff2Parser.prototype.visitComment = function (comment, context) { };\n        Xliff2Parser.prototype.visitExpansion = function (expansion, context) { };\n        Xliff2Parser.prototype.visitExpansionCase = function (expansionCase, context) { };\n        Xliff2Parser.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return Xliff2Parser;\n    }());\n    // Convert ml nodes (xliff syntax) to i18n nodes\n    var XmlToI18n$1 = /** @class */ (function () {\n        function XmlToI18n() {\n        }\n        XmlToI18n.prototype.convert = function (message, url) {\n            var xmlIcu = new XmlParser().parse(message, url, true);\n            this._errors = xmlIcu.errors;\n            var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n                [] : [].concat.apply([], __spread(visitAll$1(this, xmlIcu.rootNodes)));\n            return {\n                i18nNodes: i18nNodes,\n                errors: this._errors,\n            };\n        };\n        XmlToI18n.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n        XmlToI18n.prototype.visitElement = function (el, context) {\n            var _this = this;\n            switch (el.name) {\n                case _PLACEHOLDER_TAG$2:\n                    var nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                    if (nameAttr) {\n                        return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                    }\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"equiv\\\" attribute\");\n                    break;\n                case _PLACEHOLDER_SPANNING_TAG:\n                    var startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                    var endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                    if (!startAttr) {\n                        this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"equivStart\\\" attribute\");\n                    }\n                    else if (!endAttr) {\n                        this._addError(el, \"<\" + _PLACEHOLDER_TAG$2 + \"> misses the \\\"equivEnd\\\" attribute\");\n                    }\n                    else {\n                        var startId = startAttr.value;\n                        var endId = endAttr.value;\n                        var nodes = [];\n                        return nodes.concat.apply(nodes, __spread([new Placeholder('', startId, el.sourceSpan)], el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                    }\n                    break;\n                case _MARKER_TAG$1:\n                    return [].concat.apply([], __spread(visitAll$1(this, el.children)));\n                default:\n                    this._addError(el, \"Unexpected tag\");\n            }\n            return null;\n        };\n        XmlToI18n.prototype.visitExpansion = function (icu, context) {\n            var caseMap = {};\n            visitAll$1(this, icu.cases).forEach(function (c) {\n                caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n            });\n            return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n        };\n        XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n            return {\n                value: icuCase.value,\n                nodes: [].concat.apply([], __spread(visitAll$1(this, icuCase.expression))),\n            };\n        };\n        XmlToI18n.prototype.visitComment = function (comment, context) { };\n        XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n        XmlToI18n.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XmlToI18n;\n    }());\n    function getTypeForTag(tag) {\n        switch (tag.toLowerCase()) {\n            case 'br':\n            case 'b':\n            case 'i':\n            case 'u':\n                return 'fmt';\n            case 'img':\n                return 'image';\n            case 'a':\n                return 'link';\n            default:\n                return 'other';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _TRANSLATIONS_TAG = 'translationbundle';\n    var _TRANSLATION_TAG = 'translation';\n    var _PLACEHOLDER_TAG$3 = 'ph';\n    var Xtb = /** @class */ (function (_super) {\n        __extends(Xtb, _super);\n        function Xtb() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Xtb.prototype.write = function (messages, locale) { throw new Error('Unsupported'); };\n        Xtb.prototype.load = function (content, url) {\n            // xtb to xml nodes\n            var xtbParser = new XtbParser();\n            var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n            // xml nodes to i18n nodes\n            var i18nNodesByMsgId = {};\n            var converter = new XmlToI18n$2();\n            // Because we should be able to load xtb files that rely on features not supported by angular,\n            // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n            // converted\n            Object.keys(msgIdToHtml).forEach(function (msgId) {\n                var valueFn = function () {\n                    var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                    if (errors.length) {\n                        throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                    }\n                    return i18nNodes;\n                };\n                createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n            });\n            if (errors.length) {\n                throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n            }\n            return { locale: locale, i18nNodesByMsgId: i18nNodesByMsgId };\n        };\n        Xtb.prototype.digest = function (message) { return digest$1(message); };\n        Xtb.prototype.createNameMapper = function (message) {\n            return new SimplePlaceholderMapper(message, toPublicName);\n        };\n        return Xtb;\n    }(Serializer));\n    function createLazyProperty(messages, id, valueFn) {\n        Object.defineProperty(messages, id, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                var value = valueFn();\n                Object.defineProperty(messages, id, { enumerable: true, value: value });\n                return value;\n            },\n            set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n        });\n    }\n    // Extract messages as xml nodes from the xtb file\n    var XtbParser = /** @class */ (function () {\n        function XtbParser() {\n            this._locale = null;\n        }\n        XtbParser.prototype.parse = function (xtb, url) {\n            this._bundleDepth = 0;\n            this._msgIdToHtml = {};\n            // We can not parse the ICU messages at this point as some messages might not originate\n            // from Angular that could not be lex'd.\n            var xml = new XmlParser().parse(xtb, url, false);\n            this._errors = xml.errors;\n            visitAll$1(this, xml.rootNodes);\n            return {\n                msgIdToHtml: this._msgIdToHtml,\n                errors: this._errors,\n                locale: this._locale,\n            };\n        };\n        XtbParser.prototype.visitElement = function (element, context) {\n            switch (element.name) {\n                case _TRANSLATIONS_TAG:\n                    this._bundleDepth++;\n                    if (this._bundleDepth > 1) {\n                        this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                    }\n                    var langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                    if (langAttr) {\n                        this._locale = langAttr.value;\n                    }\n                    visitAll$1(this, element.children, null);\n                    this._bundleDepth--;\n                    break;\n                case _TRANSLATION_TAG:\n                    var idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                    if (!idAttr) {\n                        this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                    }\n                    else {\n                        var id = idAttr.value;\n                        if (this._msgIdToHtml.hasOwnProperty(id)) {\n                            this._addError(element, \"Duplicated translations for msg \" + id);\n                        }\n                        else {\n                            var innerTextStart = element.startSourceSpan.end.offset;\n                            var innerTextEnd = element.endSourceSpan.start.offset;\n                            var content = element.startSourceSpan.start.file.content;\n                            var innerText = content.slice(innerTextStart, innerTextEnd);\n                            this._msgIdToHtml[id] = innerText;\n                        }\n                    }\n                    break;\n                default:\n                    this._addError(element, 'Unexpected tag');\n            }\n        };\n        XtbParser.prototype.visitAttribute = function (attribute, context) { };\n        XtbParser.prototype.visitText = function (text, context) { };\n        XtbParser.prototype.visitComment = function (comment, context) { };\n        XtbParser.prototype.visitExpansion = function (expansion, context) { };\n        XtbParser.prototype.visitExpansionCase = function (expansionCase, context) { };\n        XtbParser.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XtbParser;\n    }());\n    // Convert ml nodes (xtb syntax) to i18n nodes\n    var XmlToI18n$2 = /** @class */ (function () {\n        function XmlToI18n() {\n        }\n        XmlToI18n.prototype.convert = function (message, url) {\n            var xmlIcu = new XmlParser().parse(message, url, true);\n            this._errors = xmlIcu.errors;\n            var i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n                [] :\n                visitAll$1(this, xmlIcu.rootNodes);\n            return {\n                i18nNodes: i18nNodes,\n                errors: this._errors,\n            };\n        };\n        XmlToI18n.prototype.visitText = function (text, context) { return new Text(text.value, text.sourceSpan); };\n        XmlToI18n.prototype.visitExpansion = function (icu, context) {\n            var caseMap = {};\n            visitAll$1(this, icu.cases).forEach(function (c) {\n                caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n            });\n            return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n        };\n        XmlToI18n.prototype.visitExpansionCase = function (icuCase, context) {\n            return {\n                value: icuCase.value,\n                nodes: visitAll$1(this, icuCase.expression),\n            };\n        };\n        XmlToI18n.prototype.visitElement = function (el, context) {\n            if (el.name === _PLACEHOLDER_TAG$3) {\n                var nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n                if (nameAttr) {\n                    return new Placeholder('', nameAttr.value, el.sourceSpan);\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n            }\n            else {\n                this._addError(el, \"Unexpected tag\");\n            }\n            return null;\n        };\n        XmlToI18n.prototype.visitComment = function (comment, context) { };\n        XmlToI18n.prototype.visitAttribute = function (attribute, context) { };\n        XmlToI18n.prototype._addError = function (node, message) {\n            this._errors.push(new I18nError(node.sourceSpan, message));\n        };\n        return XmlToI18n;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A container for translated messages\n     */\n    var TranslationBundle = /** @class */ (function () {\n        function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n            if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n            if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n            this._i18nNodesByMsgId = _i18nNodesByMsgId;\n            this.digest = digest;\n            this.mapperFactory = mapperFactory;\n            this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n        }\n        // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n        TranslationBundle.load = function (content, url, serializer, missingTranslationStrategy, console) {\n            var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n            var digestFn = function (m) { return serializer.digest(m); };\n            var mapperFactory = function (m) { return serializer.createNameMapper(m); };\n            return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n        };\n        // Returns the translation as HTML nodes from the given source message.\n        TranslationBundle.prototype.get = function (srcMsg) {\n            var html = this._i18nToHtml.convert(srcMsg);\n            if (html.errors.length) {\n                throw new Error(html.errors.join('\\n'));\n            }\n            return html.nodes;\n        };\n        TranslationBundle.prototype.has = function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n        return TranslationBundle;\n    }());\n    var I18nToHtmlVisitor = /** @class */ (function () {\n        function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n            if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n            this._i18nNodesByMsgId = _i18nNodesByMsgId;\n            this._locale = _locale;\n            this._digest = _digest;\n            this._mapperFactory = _mapperFactory;\n            this._missingTranslationStrategy = _missingTranslationStrategy;\n            this._console = _console;\n            this._contextStack = [];\n            this._errors = [];\n        }\n        I18nToHtmlVisitor.prototype.convert = function (srcMsg) {\n            this._contextStack.length = 0;\n            this._errors.length = 0;\n            // i18n to text\n            var text = this._convertToText(srcMsg);\n            // text to html\n            var url = srcMsg.nodes[0].sourceSpan.start.file.url;\n            var html = new HtmlParser().parse(text, url, true);\n            return {\n                nodes: html.rootNodes,\n                errors: __spread(this._errors, html.errors),\n            };\n        };\n        I18nToHtmlVisitor.prototype.visitText = function (text, context) {\n            // `convert()` uses an `HtmlParser` to return `html.Node`s\n            // we should then make sure that any special characters are escaped\n            return escapeXml(text.value);\n        };\n        I18nToHtmlVisitor.prototype.visitContainer = function (container, context) {\n            var _this = this;\n            return container.children.map(function (n) { return n.visit(_this); }).join('');\n        };\n        I18nToHtmlVisitor.prototype.visitIcu = function (icu, context) {\n            var _this = this;\n            var cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n            // TODO(vicb): Once all format switch to using expression placeholders\n            // we should throw when the placeholder is not in the source message\n            var exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n                this._srcMsg.placeholders[icu.expression] :\n                icu.expression;\n            return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n        };\n        I18nToHtmlVisitor.prototype.visitPlaceholder = function (ph, context) {\n            var phName = this._mapper(ph.name);\n            if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n                return this._srcMsg.placeholders[phName];\n            }\n            if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n                return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n            }\n            this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n            return '';\n        };\n        // Loaded message contains only placeholders (vs tag and icu placeholders).\n        // However when a translation can not be found, we need to serialize the source message\n        // which can contain tag placeholders\n        I18nToHtmlVisitor.prototype.visitTagPlaceholder = function (ph, context) {\n            var _this = this;\n            var tag = \"\" + ph.tag;\n            var attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n            if (ph.isVoid) {\n                return \"<\" + tag + \" \" + attrs + \"/>\";\n            }\n            var children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n            return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n        };\n        // Loaded message contains only placeholders (vs tag and icu placeholders).\n        // However when a translation can not be found, we need to serialize the source message\n        // which can contain tag placeholders\n        I18nToHtmlVisitor.prototype.visitIcuPlaceholder = function (ph, context) {\n            // An ICU placeholder references the source message to be serialized\n            return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n        };\n        /**\n         * Convert a source message to a translated text string:\n         * - text nodes are replaced with their translation,\n         * - placeholders are replaced with their content,\n         * - ICU nodes are converted to ICU expressions.\n         */\n        I18nToHtmlVisitor.prototype._convertToText = function (srcMsg) {\n            var _this = this;\n            var id = this._digest(srcMsg);\n            var mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n            var nodes;\n            this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n            this._srcMsg = srcMsg;\n            if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n                // When there is a translation use its nodes as the source\n                // And create a mapper to convert serialized placeholder names to internal names\n                nodes = this._i18nNodesByMsgId[id];\n                this._mapper = function (name) { return mapper ? mapper.toInternalName(name) : name; };\n            }\n            else {\n                // When no translation has been found\n                // - report an error / a warning / nothing,\n                // - use the nodes from the original message\n                // - placeholders are already internal and need no mapper\n                if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                    var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                    this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n                }\n                else if (this._console &&\n                    this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                    var ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                    this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n                }\n                nodes = srcMsg.nodes;\n                this._mapper = function (name) { return name; };\n            }\n            var text = nodes.map(function (node) { return node.visit(_this); }).join('');\n            var context = this._contextStack.pop();\n            this._srcMsg = context.msg;\n            this._mapper = context.mapper;\n            return text;\n        };\n        I18nToHtmlVisitor.prototype._addError = function (el, msg) {\n            this._errors.push(new I18nError(el.sourceSpan, msg));\n        };\n        return I18nToHtmlVisitor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var I18NHtmlParser = /** @class */ (function () {\n        function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n            if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n            this._htmlParser = _htmlParser;\n            if (translations) {\n                var serializer = createSerializer(translationsFormat);\n                this._translationBundle =\n                    TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n            }\n            else {\n                this._translationBundle =\n                    new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n            }\n        }\n        I18NHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n            if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n            if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n            var parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n            if (parseResult.errors.length) {\n                return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n            }\n            return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n        };\n        return I18NHtmlParser;\n    }());\n    function createSerializer(format) {\n        format = (format || 'xlf').toLowerCase();\n        switch (format) {\n            case 'xmb':\n                return new Xmb();\n            case 'xtb':\n                return new Xtb();\n            case 'xliff2':\n            case 'xlf2':\n                return new Xliff2();\n            case 'xliff':\n            case 'xlf':\n            default:\n                return new Xliff();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var QUOTED_KEYS = '$quoted$';\n    function convertValueToOutputAst(ctx, value, type) {\n        if (type === void 0) { type = null; }\n        return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n    }\n    var _ValueOutputAstTransformer = /** @class */ (function () {\n        function _ValueOutputAstTransformer(ctx) {\n            this.ctx = ctx;\n        }\n        _ValueOutputAstTransformer.prototype.visitArray = function (arr, type) {\n            var _this = this;\n            return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n        };\n        _ValueOutputAstTransformer.prototype.visitStringMap = function (map, type) {\n            var _this = this;\n            var entries = [];\n            var quotedSet = new Set(map && map[QUOTED_KEYS]);\n            Object.keys(map).forEach(function (key) {\n                entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n            });\n            return new LiteralMapExpr(entries, type);\n        };\n        _ValueOutputAstTransformer.prototype.visitPrimitive = function (value, type) { return literal(value, type); };\n        _ValueOutputAstTransformer.prototype.visitOther = function (value, type) {\n            if (value instanceof Expression) {\n                return value;\n            }\n            else {\n                return this.ctx.importExpr(value);\n            }\n        };\n        return _ValueOutputAstTransformer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function mapEntry$1(key, value) {\n        return { key: key, value: value, quoted: false };\n    }\n    var InjectableCompiler = /** @class */ (function () {\n        function InjectableCompiler(reflector, alwaysGenerateDef) {\n            this.reflector = reflector;\n            this.alwaysGenerateDef = alwaysGenerateDef;\n            this.tokenInjector = reflector.resolveExternalReference(Identifiers.Injector);\n        }\n        InjectableCompiler.prototype.depsArray = function (deps, ctx) {\n            var _this = this;\n            return deps.map(function (dep) {\n                var token = dep;\n                var args = [token];\n                var flags = 0 /* Default */;\n                if (Array.isArray(dep)) {\n                    for (var i = 0; i < dep.length; i++) {\n                        var v = dep[i];\n                        if (v) {\n                            if (v.ngMetadataName === 'Optional') {\n                                flags |= 8 /* Optional */;\n                            }\n                            else if (v.ngMetadataName === 'SkipSelf') {\n                                flags |= 4 /* SkipSelf */;\n                            }\n                            else if (v.ngMetadataName === 'Self') {\n                                flags |= 2 /* Self */;\n                            }\n                            else if (v.ngMetadataName === 'Inject') {\n                                token = v.token;\n                            }\n                            else {\n                                token = v;\n                            }\n                        }\n                    }\n                }\n                var tokenExpr;\n                if (typeof token === 'string') {\n                    tokenExpr = literal(token);\n                }\n                else if (token === _this.tokenInjector) {\n                    tokenExpr = importExpr(Identifiers.INJECTOR);\n                }\n                else {\n                    tokenExpr = ctx.importExpr(token);\n                }\n                if (flags !== 0 /* Default */) {\n                    args = [tokenExpr, literal(flags)];\n                }\n                else {\n                    args = [tokenExpr];\n                }\n                return importExpr(Identifiers.inject).callFn(args);\n            });\n        };\n        InjectableCompiler.prototype.factoryFor = function (injectable, ctx) {\n            var retValue;\n            if (injectable.useExisting) {\n                retValue = importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n            }\n            else if (injectable.useFactory) {\n                var deps = injectable.deps || [];\n                if (deps.length > 0) {\n                    retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n                }\n                else {\n                    return ctx.importExpr(injectable.useFactory);\n                }\n            }\n            else if (injectable.useValue) {\n                retValue = convertValueToOutputAst(ctx, injectable.useValue);\n            }\n            else {\n                var clazz = injectable.useClass || injectable.symbol;\n                var depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n                retValue = new InstantiateExpr(ctx.importExpr(clazz), depArgs);\n            }\n            return fn([], [new ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n        };\n        InjectableCompiler.prototype.injectableDef = function (injectable, ctx) {\n            var providedIn = NULL_EXPR;\n            if (injectable.providedIn !== undefined) {\n                if (injectable.providedIn === null) {\n                    providedIn = NULL_EXPR;\n                }\n                else if (typeof injectable.providedIn === 'string') {\n                    providedIn = literal(injectable.providedIn);\n                }\n                else {\n                    providedIn = ctx.importExpr(injectable.providedIn);\n                }\n            }\n            var def = [\n                mapEntry$1('factory', this.factoryFor(injectable, ctx)),\n                mapEntry$1('token', ctx.importExpr(injectable.type.reference)),\n                mapEntry$1('providedIn', providedIn),\n            ];\n            return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);\n        };\n        InjectableCompiler.prototype.compile = function (injectable, ctx) {\n            if (this.alwaysGenerateDef || injectable.providedIn !== undefined) {\n                var className = identifierName(injectable.type);\n                var clazz = new ClassStmt(className, null, [\n                    new ClassField('ngInjectableDef', INFERRED_TYPE, [exports.StmtModifier.Static], this.injectableDef(injectable, ctx)),\n                ], [], new ClassMethod(null, [], []), []);\n                ctx.statements.push(clazz);\n            }\n        };\n        return InjectableCompiler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\n    var GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\n    var JIT_SUMMARY_FILE = /\\.ngsummary\\./;\n    var JIT_SUMMARY_NAME = /NgSummary$/;\n    function ngfactoryFilePath(filePath, forceSourceFile) {\n        if (forceSourceFile === void 0) { forceSourceFile = false; }\n        var urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n        return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n    }\n    function stripGeneratedFileSuffix(filePath) {\n        return filePath.replace(GENERATED_FILE, '.');\n    }\n    function isGeneratedFile(filePath) {\n        return GENERATED_FILE.test(filePath);\n    }\n    function splitTypescriptSuffix(path, forceSourceFile) {\n        if (forceSourceFile === void 0) { forceSourceFile = false; }\n        if (path.endsWith('.d.ts')) {\n            return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n        }\n        var lastDot = path.lastIndexOf('.');\n        if (lastDot !== -1) {\n            return [path.substring(0, lastDot), path.substring(lastDot)];\n        }\n        return [path, ''];\n    }\n    function normalizeGenFileSuffix(srcFileSuffix) {\n        return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n    }\n    function summaryFileName(fileName) {\n        var fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n        return fileNameWithoutSuffix + \".ngsummary.json\";\n    }\n    function summaryForJitFileName(fileName, forceSourceFile) {\n        if (forceSourceFile === void 0) { forceSourceFile = false; }\n        var urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n        return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n    }\n    function stripSummaryForJitFileSuffix(filePath) {\n        return filePath.replace(JIT_SUMMARY_FILE, '.');\n    }\n    function summaryForJitName(symbolName) {\n        return symbolName + \"NgSummary\";\n    }\n    function stripSummaryForJitNameSuffix(symbolName) {\n        return symbolName.replace(JIT_SUMMARY_NAME, '');\n    }\n    var LOWERED_SYMBOL = /\\u0275\\d+/;\n    function isLoweredSymbol(name) {\n        return LOWERED_SYMBOL.test(name);\n    }\n    function createLoweredSymbol(id) {\n        return \"\\u0275\" + id;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_COMPONENT_TYPE = 'ngComponentType';\n    // Design notes:\n    // - don't lazily create metadata:\n    //   For some metadata, we need to do async work sometimes,\n    //   so the user has to kick off this loading.\n    //   But we want to report errors even when the async work is\n    //   not required to check that the user would have been able\n    //   to wait correctly.\n    var CompileMetadataResolver = /** @class */ (function () {\n        function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n            this._config = _config;\n            this._htmlParser = _htmlParser;\n            this._ngModuleResolver = _ngModuleResolver;\n            this._directiveResolver = _directiveResolver;\n            this._pipeResolver = _pipeResolver;\n            this._summaryResolver = _summaryResolver;\n            this._schemaRegistry = _schemaRegistry;\n            this._directiveNormalizer = _directiveNormalizer;\n            this._console = _console;\n            this._staticSymbolCache = _staticSymbolCache;\n            this._reflector = _reflector;\n            this._errorCollector = _errorCollector;\n            this._nonNormalizedDirectiveCache = new Map();\n            this._directiveCache = new Map();\n            this._summaryCache = new Map();\n            this._pipeCache = new Map();\n            this._ngModuleCache = new Map();\n            this._ngModuleOfTypes = new Map();\n            this._shallowModuleCache = new Map();\n        }\n        CompileMetadataResolver.prototype.getReflector = function () { return this._reflector; };\n        CompileMetadataResolver.prototype.clearCacheFor = function (type) {\n            var dirMeta = this._directiveCache.get(type);\n            this._directiveCache.delete(type);\n            this._nonNormalizedDirectiveCache.delete(type);\n            this._summaryCache.delete(type);\n            this._pipeCache.delete(type);\n            this._ngModuleOfTypes.delete(type);\n            // Clear all of the NgModule as they contain transitive information!\n            this._ngModuleCache.clear();\n            if (dirMeta) {\n                this._directiveNormalizer.clearCacheFor(dirMeta);\n            }\n        };\n        CompileMetadataResolver.prototype.clearCache = function () {\n            this._directiveCache.clear();\n            this._nonNormalizedDirectiveCache.clear();\n            this._summaryCache.clear();\n            this._pipeCache.clear();\n            this._ngModuleCache.clear();\n            this._ngModuleOfTypes.clear();\n            this._directiveNormalizer.clearCache();\n        };\n        CompileMetadataResolver.prototype._createProxyClass = function (baseType, name) {\n            var delegate = null;\n            var proxyClass = function () {\n                if (!delegate) {\n                    throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n                }\n                return delegate.apply(this, arguments);\n            };\n            proxyClass.setDelegate = function (d) {\n                delegate = d;\n                proxyClass.prototype = d.prototype;\n            };\n            // Make stringify work correctly\n            proxyClass.overriddenName = name;\n            return proxyClass;\n        };\n        CompileMetadataResolver.prototype.getGeneratedClass = function (dirType, name) {\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n            }\n            else {\n                return this._createProxyClass(dirType, name);\n            }\n        };\n        CompileMetadataResolver.prototype.getComponentViewClass = function (dirType) {\n            return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n        };\n        CompileMetadataResolver.prototype.getHostComponentViewClass = function (dirType) {\n            return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n        };\n        CompileMetadataResolver.prototype.getHostComponentType = function (dirType) {\n            var name = identifierName({ reference: dirType }) + \"_Host\";\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(dirType.filePath, name);\n            }\n            return this._createProxyClass(dirType, name);\n        };\n        CompileMetadataResolver.prototype.getRendererType = function (dirType) {\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n            }\n            else {\n                // returning an object as proxy,\n                // that we fill later during runtime compilation.\n                return {};\n            }\n        };\n        CompileMetadataResolver.prototype.getComponentFactory = function (selector, dirType, inputs, outputs) {\n            if (dirType instanceof StaticSymbol) {\n                return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n            }\n            else {\n                var hostView = this.getHostComponentViewClass(dirType);\n                // Note: ngContentSelectors will be filled later once the template is\n                // loaded.\n                var createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n                return createComponentFactory(selector, dirType, hostView, inputs, outputs, []);\n            }\n        };\n        CompileMetadataResolver.prototype.initComponentFactory = function (factory, ngContentSelectors) {\n            var _a;\n            if (!(factory instanceof StaticSymbol)) {\n                (_a = factory.ngContentSelectors).push.apply(_a, __spread(ngContentSelectors));\n            }\n        };\n        CompileMetadataResolver.prototype._loadSummary = function (type, kind) {\n            var typeSummary = this._summaryCache.get(type);\n            if (!typeSummary) {\n                var summary = this._summaryResolver.resolveSummary(type);\n                typeSummary = summary ? summary.type : null;\n                this._summaryCache.set(type, typeSummary || null);\n            }\n            return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n        };\n        CompileMetadataResolver.prototype.getHostComponentMetadata = function (compMeta, hostViewType) {\n            var hostType = this.getHostComponentType(compMeta.type.reference);\n            if (!hostViewType) {\n                hostViewType = this.getHostComponentViewClass(hostType);\n            }\n            // Note: ! is ok here as this method should only be called with normalized directive\n            // metadata, which always fills in the selector.\n            var template = CssSelector.parse(compMeta.selector)[0].getMatchingElementTemplate();\n            var templateUrl = '';\n            var htmlAst = this._htmlParser.parse(template, templateUrl);\n            return CompileDirectiveMetadata.create({\n                isHost: true,\n                type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n                template: new CompileTemplateMetadata({\n                    encapsulation: ViewEncapsulation.None,\n                    template: template,\n                    templateUrl: templateUrl,\n                    htmlAst: htmlAst,\n                    styles: [],\n                    styleUrls: [],\n                    ngContentSelectors: [],\n                    animations: [],\n                    isInline: true,\n                    externalStylesheets: [],\n                    interpolation: null,\n                    preserveWhitespaces: false,\n                }),\n                exportAs: null,\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: [],\n                outputs: [],\n                host: {},\n                isComponent: true,\n                selector: '*',\n                providers: [],\n                viewProviders: [],\n                queries: [],\n                guards: {},\n                viewQueries: [],\n                componentViewType: hostViewType,\n                rendererType: { id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} },\n                entryComponents: [],\n                componentFactory: null\n            });\n        };\n        CompileMetadataResolver.prototype.loadDirectiveMetadata = function (ngModuleType, directiveType, isSync) {\n            var _this = this;\n            if (this._directiveCache.has(directiveType)) {\n                return null;\n            }\n            directiveType = resolveForwardRef(directiveType);\n            var _a = this.getNonNormalizedDirectiveMetadata(directiveType), annotation = _a.annotation, metadata = _a.metadata;\n            var createDirectiveMetadata = function (templateMetadata) {\n                var normalizedDirMeta = new CompileDirectiveMetadata({\n                    isHost: false,\n                    type: metadata.type,\n                    isComponent: metadata.isComponent,\n                    selector: metadata.selector,\n                    exportAs: metadata.exportAs,\n                    changeDetection: metadata.changeDetection,\n                    inputs: metadata.inputs,\n                    outputs: metadata.outputs,\n                    hostListeners: metadata.hostListeners,\n                    hostProperties: metadata.hostProperties,\n                    hostAttributes: metadata.hostAttributes,\n                    providers: metadata.providers,\n                    viewProviders: metadata.viewProviders,\n                    queries: metadata.queries,\n                    guards: metadata.guards,\n                    viewQueries: metadata.viewQueries,\n                    entryComponents: metadata.entryComponents,\n                    componentViewType: metadata.componentViewType,\n                    rendererType: metadata.rendererType,\n                    componentFactory: metadata.componentFactory,\n                    template: templateMetadata\n                });\n                if (templateMetadata) {\n                    _this.initComponentFactory(metadata.componentFactory, templateMetadata.ngContentSelectors);\n                }\n                _this._directiveCache.set(directiveType, normalizedDirMeta);\n                _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n                return null;\n            };\n            if (metadata.isComponent) {\n                var template = metadata.template;\n                var templateMeta = this._directiveNormalizer.normalizeTemplate({\n                    ngModuleType: ngModuleType,\n                    componentType: directiveType,\n                    moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                    encapsulation: template.encapsulation,\n                    template: template.template,\n                    templateUrl: template.templateUrl,\n                    styles: template.styles,\n                    styleUrls: template.styleUrls,\n                    animations: template.animations,\n                    interpolation: template.interpolation,\n                    preserveWhitespaces: template.preserveWhitespaces\n                });\n                if (isPromise(templateMeta) && isSync) {\n                    this._reportError(componentStillLoadingError(directiveType), directiveType);\n                    return null;\n                }\n                return SyncAsync.then(templateMeta, createDirectiveMetadata);\n            }\n            else {\n                // directive\n                createDirectiveMetadata(null);\n                return null;\n            }\n        };\n        CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = function (directiveType) {\n            var _this = this;\n            directiveType = resolveForwardRef(directiveType);\n            if (!directiveType) {\n                return null;\n            }\n            var cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n            if (cacheEntry) {\n                return cacheEntry;\n            }\n            var dirMeta = this._directiveResolver.resolve(directiveType, false);\n            if (!dirMeta) {\n                return null;\n            }\n            var nonNormalizedTemplateMetadata = undefined;\n            if (createComponent.isTypeOf(dirMeta)) {\n                // component\n                var compMeta = dirMeta;\n                assertArrayOfStrings('styles', compMeta.styles);\n                assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n                assertInterpolationSymbols('interpolation', compMeta.interpolation);\n                var animations = compMeta.animations;\n                nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                    encapsulation: noUndefined(compMeta.encapsulation),\n                    template: noUndefined(compMeta.template),\n                    templateUrl: noUndefined(compMeta.templateUrl),\n                    htmlAst: null,\n                    styles: compMeta.styles || [],\n                    styleUrls: compMeta.styleUrls || [],\n                    animations: animations || [],\n                    interpolation: noUndefined(compMeta.interpolation),\n                    isInline: !!compMeta.template,\n                    externalStylesheets: [],\n                    ngContentSelectors: [],\n                    preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n                });\n            }\n            var changeDetectionStrategy = null;\n            var viewProviders = [];\n            var entryComponentMetadata = [];\n            var selector = dirMeta.selector;\n            if (createComponent.isTypeOf(dirMeta)) {\n                // Component\n                var compMeta = dirMeta;\n                changeDetectionStrategy = compMeta.changeDetection;\n                if (compMeta.viewProviders) {\n                    viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n                }\n                if (compMeta.entryComponents) {\n                    entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                        .map(function (type) { return _this._getEntryComponentMetadata(type); })\n                        .concat(entryComponentMetadata);\n                }\n                if (!selector) {\n                    selector = this._schemaRegistry.getDefaultComponentElementName();\n                }\n            }\n            else {\n                // Directive\n                if (!selector) {\n                    this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                    selector = 'error';\n                }\n            }\n            var providers = [];\n            if (dirMeta.providers != null) {\n                providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            var queries = [];\n            var viewQueries = [];\n            if (dirMeta.queries != null) {\n                queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n                viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n            }\n            var metadata = CompileDirectiveMetadata.create({\n                isHost: false,\n                selector: selector,\n                exportAs: noUndefined(dirMeta.exportAs),\n                isComponent: !!nonNormalizedTemplateMetadata,\n                type: this._getTypeMetadata(directiveType),\n                template: nonNormalizedTemplateMetadata,\n                changeDetection: changeDetectionStrategy,\n                inputs: dirMeta.inputs || [],\n                outputs: dirMeta.outputs || [],\n                host: dirMeta.host || {},\n                providers: providers || [],\n                viewProviders: viewProviders || [],\n                queries: queries || [],\n                guards: dirMeta.guards || {},\n                viewQueries: viewQueries || [],\n                entryComponents: entryComponentMetadata,\n                componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                    null,\n                rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n                componentFactory: null\n            });\n            if (nonNormalizedTemplateMetadata) {\n                metadata.componentFactory =\n                    this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n            }\n            cacheEntry = { metadata: metadata, annotation: dirMeta };\n            this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n            return cacheEntry;\n        };\n        /**\n         * Gets the metadata for the given directive.\n         * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n         */\n        CompileMetadataResolver.prototype.getDirectiveMetadata = function (directiveType) {\n            var dirMeta = this._directiveCache.get(directiveType);\n            if (!dirMeta) {\n                this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n            }\n            return dirMeta;\n        };\n        CompileMetadataResolver.prototype.getDirectiveSummary = function (dirType) {\n            var dirSummary = this._loadSummary(dirType, exports.CompileSummaryKind.Directive);\n            if (!dirSummary) {\n                this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n            }\n            return dirSummary;\n        };\n        CompileMetadataResolver.prototype.isDirective = function (type) {\n            return !!this._loadSummary(type, exports.CompileSummaryKind.Directive) ||\n                this._directiveResolver.isDirective(type);\n        };\n        CompileMetadataResolver.prototype.isPipe = function (type) {\n            return !!this._loadSummary(type, exports.CompileSummaryKind.Pipe) ||\n                this._pipeResolver.isPipe(type);\n        };\n        CompileMetadataResolver.prototype.isNgModule = function (type) {\n            return !!this._loadSummary(type, exports.CompileSummaryKind.NgModule) ||\n                this._ngModuleResolver.isNgModule(type);\n        };\n        CompileMetadataResolver.prototype.getNgModuleSummary = function (moduleType, alreadyCollecting) {\n            if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n            var moduleSummary = this._loadSummary(moduleType, exports.CompileSummaryKind.NgModule);\n            if (!moduleSummary) {\n                var moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n                moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n                if (moduleSummary) {\n                    this._summaryCache.set(moduleType, moduleSummary);\n                }\n            }\n            return moduleSummary;\n        };\n        /**\n         * Loads the declared directives and pipes of an NgModule.\n         */\n        CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = function (moduleType, isSync, throwIfNotFound) {\n            var _this = this;\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n            var loading = [];\n            if (ngModule) {\n                ngModule.declaredDirectives.forEach(function (id) {\n                    var promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                    if (promise) {\n                        loading.push(promise);\n                    }\n                });\n                ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n            }\n            return Promise.all(loading);\n        };\n        CompileMetadataResolver.prototype.getShallowModuleMetadata = function (moduleType) {\n            var compileMeta = this._shallowModuleCache.get(moduleType);\n            if (compileMeta) {\n                return compileMeta;\n            }\n            var ngModuleMeta = findLast(this._reflector.shallowAnnotations(moduleType), createNgModule.isTypeOf);\n            compileMeta = {\n                type: this._getTypeMetadata(moduleType),\n                rawExports: ngModuleMeta.exports,\n                rawImports: ngModuleMeta.imports,\n                rawProviders: ngModuleMeta.providers,\n            };\n            this._shallowModuleCache.set(moduleType, compileMeta);\n            return compileMeta;\n        };\n        CompileMetadataResolver.prototype.getNgModuleMetadata = function (moduleType, throwIfNotFound, alreadyCollecting) {\n            var _this = this;\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n            moduleType = resolveForwardRef(moduleType);\n            var compileMeta = this._ngModuleCache.get(moduleType);\n            if (compileMeta) {\n                return compileMeta;\n            }\n            var meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n            if (!meta) {\n                return null;\n            }\n            var declaredDirectives = [];\n            var exportedNonModuleIdentifiers = [];\n            var declaredPipes = [];\n            var importedModules = [];\n            var exportedModules = [];\n            var providers = [];\n            var entryComponents = [];\n            var bootstrapComponents = [];\n            var schemas = [];\n            if (meta.imports) {\n                flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                    var importedModuleType = undefined;\n                    if (isValidType(importedType)) {\n                        importedModuleType = importedType;\n                    }\n                    else if (importedType && importedType.ngModule) {\n                        var moduleWithProviders = importedType;\n                        importedModuleType = moduleWithProviders.ngModule;\n                        if (moduleWithProviders.providers) {\n                            providers.push.apply(providers, __spread(_this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType)));\n                        }\n                    }\n                    if (importedModuleType) {\n                        if (_this._checkSelfImport(moduleType, importedModuleType))\n                            return;\n                        if (!alreadyCollecting)\n                            alreadyCollecting = new Set();\n                        if (alreadyCollecting.has(importedModuleType)) {\n                            _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                            return;\n                        }\n                        alreadyCollecting.add(importedModuleType);\n                        var importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                        alreadyCollecting.delete(importedModuleType);\n                        if (!importedModuleSummary) {\n                            _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                            return;\n                        }\n                        importedModules.push(importedModuleSummary);\n                    }\n                    else {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                });\n            }\n            if (meta.exports) {\n                flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                    if (!isValidType(exportedType)) {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(exportedType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(exportedType);\n                    var exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                    alreadyCollecting.delete(exportedType);\n                    if (exportedModuleSummary) {\n                        exportedModules.push(exportedModuleSummary);\n                    }\n                    else {\n                        exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                    }\n                });\n            }\n            // Note: This will be modified later, so we rely on\n            // getting a new instance every time!\n            var transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n            if (meta.declarations) {\n                flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                    if (!isValidType(declaredType)) {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    var declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                    if (_this.isDirective(declaredType)) {\n                        transitiveModule.addDirective(declaredIdentifier);\n                        declaredDirectives.push(declaredIdentifier);\n                        _this._addTypeToModule(declaredType, moduleType);\n                    }\n                    else if (_this.isPipe(declaredType)) {\n                        transitiveModule.addPipe(declaredIdentifier);\n                        transitiveModule.pipes.push(declaredIdentifier);\n                        declaredPipes.push(declaredIdentifier);\n                        _this._addTypeToModule(declaredType, moduleType);\n                    }\n                    else {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                        return;\n                    }\n                });\n            }\n            var exportedDirectives = [];\n            var exportedPipes = [];\n            exportedNonModuleIdentifiers.forEach(function (exportedId) {\n                if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                    exportedDirectives.push(exportedId);\n                    transitiveModule.addExportedDirective(exportedId);\n                }\n                else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                    exportedPipes.push(exportedId);\n                    transitiveModule.addExportedPipe(exportedId);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                    return;\n                }\n            });\n            // The providers of the module have to go last\n            // so that they overwrite any other provider we already added.\n            if (meta.providers) {\n                providers.push.apply(providers, __spread(this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType)));\n            }\n            if (meta.entryComponents) {\n                entryComponents.push.apply(entryComponents, __spread(flattenAndDedupeArray(meta.entryComponents)\n                    .map(function (type) { return _this._getEntryComponentMetadata(type); })));\n            }\n            if (meta.bootstrap) {\n                flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                    if (!isValidType(type)) {\n                        _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                        return;\n                    }\n                    bootstrapComponents.push(_this._getIdentifierMetadata(type));\n                });\n            }\n            entryComponents.push.apply(entryComponents, __spread(bootstrapComponents.map(function (type) { return _this._getEntryComponentMetadata(type.reference); })));\n            if (meta.schemas) {\n                schemas.push.apply(schemas, __spread(flattenAndDedupeArray(meta.schemas)));\n            }\n            compileMeta = new CompileNgModuleMetadata({\n                type: this._getTypeMetadata(moduleType),\n                providers: providers,\n                entryComponents: entryComponents,\n                bootstrapComponents: bootstrapComponents,\n                schemas: schemas,\n                declaredDirectives: declaredDirectives,\n                exportedDirectives: exportedDirectives,\n                declaredPipes: declaredPipes,\n                exportedPipes: exportedPipes,\n                importedModules: importedModules,\n                exportedModules: exportedModules,\n                transitiveModule: transitiveModule,\n                id: meta.id || null,\n            });\n            entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n            providers.forEach(function (provider) { return transitiveModule.addProvider(provider, compileMeta.type); });\n            transitiveModule.addModule(compileMeta.type);\n            this._ngModuleCache.set(moduleType, compileMeta);\n            return compileMeta;\n        };\n        CompileMetadataResolver.prototype._checkSelfImport = function (moduleType, importedModuleType) {\n            if (moduleType === importedModuleType) {\n                this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n                return true;\n            }\n            return false;\n        };\n        CompileMetadataResolver.prototype._getTypeDescriptor = function (type) {\n            if (isValidType(type)) {\n                if (this.isDirective(type)) {\n                    return 'directive';\n                }\n                if (this.isPipe(type)) {\n                    return 'pipe';\n                }\n                if (this.isNgModule(type)) {\n                    return 'module';\n                }\n            }\n            if (type.provide) {\n                return 'provider';\n            }\n            return 'value';\n        };\n        CompileMetadataResolver.prototype._addTypeToModule = function (type, moduleType) {\n            var oldModule = this._ngModuleOfTypes.get(type);\n            if (oldModule && oldModule !== moduleType) {\n                this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                    (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n                return;\n            }\n            this._ngModuleOfTypes.set(type, moduleType);\n        };\n        CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = function (importedModules, exportedModules) {\n            // collect `providers` / `entryComponents` from all imported and all exported modules\n            var result = new TransitiveCompileNgModuleMetadata();\n            var modulesByToken = new Map();\n            importedModules.concat(exportedModules).forEach(function (modSummary) {\n                modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n                modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n                var addedTokens = new Set();\n                modSummary.providers.forEach(function (entry) {\n                    var tokenRef = tokenReference(entry.provider.token);\n                    var prevModules = modulesByToken.get(tokenRef);\n                    if (!prevModules) {\n                        prevModules = new Set();\n                        modulesByToken.set(tokenRef, prevModules);\n                    }\n                    var moduleRef = entry.module.reference;\n                    // Note: the providers of one module may still contain multiple providers\n                    // per token (e.g. for multi providers), and we need to preserve these.\n                    if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                        prevModules.add(moduleRef);\n                        addedTokens.add(tokenRef);\n                        result.addProvider(entry.provider, entry.module);\n                    }\n                });\n            });\n            exportedModules.forEach(function (modSummary) {\n                modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n                modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n            });\n            importedModules.forEach(function (modSummary) {\n                modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n                modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n            });\n            return result;\n        };\n        CompileMetadataResolver.prototype._getIdentifierMetadata = function (type) {\n            type = resolveForwardRef(type);\n            return { reference: type };\n        };\n        CompileMetadataResolver.prototype.isInjectable = function (type) {\n            var annotations = this._reflector.tryAnnotations(type);\n            return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n        };\n        CompileMetadataResolver.prototype.getInjectableSummary = function (type) {\n            return {\n                summaryKind: exports.CompileSummaryKind.Injectable,\n                type: this._getTypeMetadata(type, null, false)\n            };\n        };\n        CompileMetadataResolver.prototype.getInjectableMetadata = function (type, dependencies, throwOnUnknownDeps) {\n            if (dependencies === void 0) { dependencies = null; }\n            if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n            var typeSummary = this._loadSummary(type, exports.CompileSummaryKind.Injectable);\n            var typeMetadata = typeSummary ?\n                typeSummary.type :\n                this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n            var annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n            if (annotations.length === 0) {\n                return null;\n            }\n            var meta = annotations[annotations.length - 1];\n            return {\n                symbol: type,\n                type: typeMetadata,\n                providedIn: meta.providedIn,\n                useValue: meta.useValue,\n                useClass: meta.useClass,\n                useExisting: meta.useExisting,\n                useFactory: meta.useFactory,\n                deps: meta.deps,\n            };\n        };\n        CompileMetadataResolver.prototype._getTypeMetadata = function (type, dependencies, throwOnUnknownDeps) {\n            if (dependencies === void 0) { dependencies = null; }\n            if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n            var identifier = this._getIdentifierMetadata(type);\n            return {\n                reference: identifier.reference,\n                diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n                lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n            };\n        };\n        CompileMetadataResolver.prototype._getFactoryMetadata = function (factory, dependencies) {\n            if (dependencies === void 0) { dependencies = null; }\n            factory = resolveForwardRef(factory);\n            return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n        };\n        /**\n         * Gets the metadata for the given pipe.\n         * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n         */\n        CompileMetadataResolver.prototype.getPipeMetadata = function (pipeType) {\n            var pipeMeta = this._pipeCache.get(pipeType);\n            if (!pipeMeta) {\n                this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n            }\n            return pipeMeta || null;\n        };\n        CompileMetadataResolver.prototype.getPipeSummary = function (pipeType) {\n            var pipeSummary = this._loadSummary(pipeType, exports.CompileSummaryKind.Pipe);\n            if (!pipeSummary) {\n                this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n            }\n            return pipeSummary;\n        };\n        CompileMetadataResolver.prototype.getOrLoadPipeMetadata = function (pipeType) {\n            var pipeMeta = this._pipeCache.get(pipeType);\n            if (!pipeMeta) {\n                pipeMeta = this._loadPipeMetadata(pipeType);\n            }\n            return pipeMeta;\n        };\n        CompileMetadataResolver.prototype._loadPipeMetadata = function (pipeType) {\n            pipeType = resolveForwardRef(pipeType);\n            var pipeAnnotation = this._pipeResolver.resolve(pipeType);\n            var pipeMeta = new CompilePipeMetadata({\n                type: this._getTypeMetadata(pipeType),\n                name: pipeAnnotation.name,\n                pure: !!pipeAnnotation.pure\n            });\n            this._pipeCache.set(pipeType, pipeMeta);\n            this._summaryCache.set(pipeType, pipeMeta.toSummary());\n            return pipeMeta;\n        };\n        CompileMetadataResolver.prototype._getDependenciesMetadata = function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n            var _this = this;\n            if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n            var hasUnknownDeps = false;\n            var params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n            var dependenciesMetadata = params.map(function (param) {\n                var isAttribute = false;\n                var isHost = false;\n                var isSelf = false;\n                var isSkipSelf = false;\n                var isOptional = false;\n                var token = null;\n                if (Array.isArray(param)) {\n                    param.forEach(function (paramEntry) {\n                        if (createHost.isTypeOf(paramEntry)) {\n                            isHost = true;\n                        }\n                        else if (createSelf.isTypeOf(paramEntry)) {\n                            isSelf = true;\n                        }\n                        else if (createSkipSelf.isTypeOf(paramEntry)) {\n                            isSkipSelf = true;\n                        }\n                        else if (createOptional.isTypeOf(paramEntry)) {\n                            isOptional = true;\n                        }\n                        else if (createAttribute.isTypeOf(paramEntry)) {\n                            isAttribute = true;\n                            token = paramEntry.attributeName;\n                        }\n                        else if (createInject.isTypeOf(paramEntry)) {\n                            token = paramEntry.token;\n                        }\n                        else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                            token = paramEntry;\n                        }\n                        else if (isValidType(paramEntry) && token == null) {\n                            token = paramEntry;\n                        }\n                    });\n                }\n                else {\n                    token = param;\n                }\n                if (token == null) {\n                    hasUnknownDeps = true;\n                    return null;\n                }\n                return {\n                    isAttribute: isAttribute,\n                    isHost: isHost,\n                    isSelf: isSelf,\n                    isSkipSelf: isSkipSelf,\n                    isOptional: isOptional,\n                    token: _this._getTokenMetadata(token)\n                };\n            });\n            if (hasUnknownDeps) {\n                var depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n                var message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n                if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                    this._reportError(syntaxError(message), typeOrFunc);\n                }\n                else {\n                    this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n                }\n            }\n            return dependenciesMetadata;\n        };\n        CompileMetadataResolver.prototype._getTokenMetadata = function (token) {\n            token = resolveForwardRef(token);\n            var compileToken;\n            if (typeof token === 'string') {\n                compileToken = { value: token };\n            }\n            else {\n                compileToken = { identifier: { reference: token } };\n            }\n            return compileToken;\n        };\n        CompileMetadataResolver.prototype._getProvidersMetadata = function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n            var _this = this;\n            if (compileProviders === void 0) { compileProviders = []; }\n            providers.forEach(function (provider, providerIdx) {\n                if (Array.isArray(provider)) {\n                    _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n                }\n                else {\n                    provider = resolveForwardRef(provider);\n                    var providerMeta = undefined;\n                    if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                        _this._validateProvider(provider);\n                        providerMeta = new ProviderMeta(provider.provide, provider);\n                    }\n                    else if (isValidType(provider)) {\n                        providerMeta = new ProviderMeta(provider, { useClass: provider });\n                    }\n                    else if (provider === void 0) {\n                        _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies. This might be caused by using 'barrel' index.ts files.\"));\n                        return;\n                    }\n                    else {\n                        var providersInfo = providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                            if (seenProviderIdx < providerIdx) {\n                                soFar.push(\"\" + stringifyType(seenProvider));\n                            }\n                            else if (seenProviderIdx == providerIdx) {\n                                soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                            }\n                            else if (seenProviderIdx == providerIdx + 1) {\n                                soFar.push('...');\n                            }\n                            return soFar;\n                        }, [])\n                            .join(', ');\n                        _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                        return;\n                    }\n                    if (providerMeta.token ===\n                        _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                        targetEntryComponents.push.apply(targetEntryComponents, __spread(_this._getEntryComponentsFromProvider(providerMeta, type)));\n                    }\n                    else {\n                        compileProviders.push(_this.getProviderMetadata(providerMeta));\n                    }\n                }\n            });\n            return compileProviders;\n        };\n        CompileMetadataResolver.prototype._validateProvider = function (provider) {\n            if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n                this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n            }\n        };\n        CompileMetadataResolver.prototype._getEntryComponentsFromProvider = function (provider, type) {\n            var _this = this;\n            var components = [];\n            var collectedIdentifiers = [];\n            if (provider.useFactory || provider.useExisting || provider.useClass) {\n                this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n                return [];\n            }\n            if (!provider.multi) {\n                this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n                return [];\n            }\n            extractIdentifiers(provider.useValue, collectedIdentifiers);\n            collectedIdentifiers.forEach(function (identifier) {\n                var entry = _this._getEntryComponentMetadata(identifier.reference, false);\n                if (entry) {\n                    components.push(entry);\n                }\n            });\n            return components;\n        };\n        CompileMetadataResolver.prototype._getEntryComponentMetadata = function (dirType, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n            if (dirMeta && dirMeta.metadata.isComponent) {\n                return { componentType: dirType, componentFactory: dirMeta.metadata.componentFactory };\n            }\n            var dirSummary = this._loadSummary(dirType, exports.CompileSummaryKind.Directive);\n            if (dirSummary && dirSummary.isComponent) {\n                return { componentType: dirType, componentFactory: dirSummary.componentFactory };\n            }\n            if (throwIfNotFound) {\n                throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n            }\n            return null;\n        };\n        CompileMetadataResolver.prototype._getInjectableTypeMetadata = function (type, dependencies) {\n            if (dependencies === void 0) { dependencies = null; }\n            var typeSummary = this._loadSummary(type, exports.CompileSummaryKind.Injectable);\n            if (typeSummary) {\n                return typeSummary.type;\n            }\n            return this._getTypeMetadata(type, dependencies);\n        };\n        CompileMetadataResolver.prototype.getProviderMetadata = function (provider) {\n            var compileDeps = undefined;\n            var compileTypeMetadata = null;\n            var compileFactoryMetadata = null;\n            var token = this._getTokenMetadata(provider.token);\n            if (provider.useClass) {\n                compileTypeMetadata =\n                    this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n                compileDeps = compileTypeMetadata.diDeps;\n                if (provider.token === provider.useClass) {\n                    // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                    token = { identifier: compileTypeMetadata };\n                }\n            }\n            else if (provider.useFactory) {\n                compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n                compileDeps = compileFactoryMetadata.diDeps;\n            }\n            return {\n                token: token,\n                useClass: compileTypeMetadata,\n                useValue: provider.useValue,\n                useFactory: compileFactoryMetadata,\n                useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n                deps: compileDeps,\n                multi: provider.multi\n            };\n        };\n        CompileMetadataResolver.prototype._getQueriesMetadata = function (queries, isViewQuery, directiveType) {\n            var _this = this;\n            var res = [];\n            Object.keys(queries).forEach(function (propertyName) {\n                var query = queries[propertyName];\n                if (query.isViewQuery === isViewQuery) {\n                    res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n                }\n            });\n            return res;\n        };\n        CompileMetadataResolver.prototype._queryVarBindings = function (selector) { return selector.split(/\\s*,\\s*/); };\n        CompileMetadataResolver.prototype._getQueryMetadata = function (q, propertyName, typeOrFunc) {\n            var _this = this;\n            var selectors;\n            if (typeof q.selector === 'string') {\n                selectors =\n                    this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n            }\n            else {\n                if (!q.selector) {\n                    this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                    selectors = [];\n                }\n                else {\n                    selectors = [this._getTokenMetadata(q.selector)];\n                }\n            }\n            return {\n                selectors: selectors,\n                first: q.first,\n                descendants: q.descendants, propertyName: propertyName,\n                read: q.read ? this._getTokenMetadata(q.read) : null\n            };\n        };\n        CompileMetadataResolver.prototype._reportError = function (error$$1, type, otherType) {\n            if (this._errorCollector) {\n                this._errorCollector(error$$1, type);\n                if (otherType) {\n                    this._errorCollector(error$$1, otherType);\n                }\n            }\n            else {\n                throw error$$1;\n            }\n        };\n        return CompileMetadataResolver;\n    }());\n    function flattenArray(tree, out) {\n        if (out === void 0) { out = []; }\n        if (tree) {\n            for (var i = 0; i < tree.length; i++) {\n                var item = resolveForwardRef(tree[i]);\n                if (Array.isArray(item)) {\n                    flattenArray(item, out);\n                }\n                else {\n                    out.push(item);\n                }\n            }\n        }\n        return out;\n    }\n    function dedupeArray(array) {\n        if (array) {\n            return Array.from(new Set(array));\n        }\n        return [];\n    }\n    function flattenAndDedupeArray(tree) {\n        return dedupeArray(flattenArray(tree));\n    }\n    function isValidType(value) {\n        return (value instanceof StaticSymbol) || (value instanceof Type);\n    }\n    function extractIdentifiers(value, targetIdentifiers) {\n        visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n    }\n    var _CompileValueConverter = /** @class */ (function (_super) {\n        __extends(_CompileValueConverter, _super);\n        function _CompileValueConverter() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        _CompileValueConverter.prototype.visitOther = function (value, targetIdentifiers) {\n            targetIdentifiers.push({ reference: value });\n        };\n        return _CompileValueConverter;\n    }(ValueTransformer));\n    function stringifyType(type) {\n        if (type instanceof StaticSymbol) {\n            return type.name + \" in \" + type.filePath;\n        }\n        else {\n            return stringify(type);\n        }\n    }\n    /**\n     * Indicates that a component is still being loaded in a synchronous compile.\n     */\n    function componentStillLoadingError(compType) {\n        var error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n        error$$1[ERROR_COMPONENT_TYPE] = compType;\n        return error$$1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ProviderError = /** @class */ (function (_super) {\n        __extends(ProviderError, _super);\n        function ProviderError(message, span) {\n            return _super.call(this, span, message) || this;\n        }\n        return ProviderError;\n    }(ParseError));\n    var ProviderViewContext = /** @class */ (function () {\n        function ProviderViewContext(reflector, component) {\n            var _this = this;\n            this.reflector = reflector;\n            this.component = component;\n            this.errors = [];\n            this.viewQueries = _getViewQueries(component);\n            this.viewProviders = new Map();\n            component.viewProviders.forEach(function (provider) {\n                if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                    _this.viewProviders.set(tokenReference(provider.token), true);\n                }\n            });\n        }\n        return ProviderViewContext;\n    }());\n    var ProviderElementContext = /** @class */ (function () {\n        function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n            var _this = this;\n            this.viewContext = viewContext;\n            this._parent = _parent;\n            this._isViewRoot = _isViewRoot;\n            this._directiveAsts = _directiveAsts;\n            this._sourceSpan = _sourceSpan;\n            this._transformedProviders = new Map();\n            this._seenProviders = new Map();\n            this._queriedTokens = new Map();\n            this.transformedHasViewContainer = false;\n            this._attrs = {};\n            attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n            var directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n            this._allProviders =\n                _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n            this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n            });\n            if (isTemplate) {\n                var templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n                this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n            }\n            refs.forEach(function (refAst) {\n                var defaultQueryValue = refAst.value ||\n                    createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n                _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n            });\n            if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n                this.transformedHasViewContainer = true;\n            }\n            // create the providers that we know are eager first\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                var eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n                if (eager) {\n                    _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n                }\n            });\n        }\n        ProviderElementContext.prototype.afterElement = function () {\n            var _this = this;\n            // collect lazy providers\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n            });\n        };\n        Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n            get: function () {\n                // Note: Maps keep their insertion order.\n                var lazyProviders = [];\n                var eagerProviders = [];\n                this._transformedProviders.forEach(function (provider) {\n                    if (provider.eager) {\n                        eagerProviders.push(provider);\n                    }\n                    else {\n                        lazyProviders.push(provider);\n                    }\n                });\n                return lazyProviders.concat(eagerProviders);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n            get: function () {\n                var sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n                var sortedDirectives = this._directiveAsts.slice();\n                sortedDirectives.sort(function (dir1, dir2) { return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type); });\n                return sortedDirectives;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n            get: function () {\n                var allMatches = [];\n                this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, __spread(matches)); });\n                return allMatches;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ProviderElementContext.prototype._addQueryReadsTo = function (token, defaultValue, queryReadTokens) {\n            this._getQueriesFor(token).forEach(function (query) {\n                var queryValue = query.meta.read || defaultValue;\n                var tokenRef = tokenReference(queryValue);\n                var queryMatches = queryReadTokens.get(tokenRef);\n                if (!queryMatches) {\n                    queryMatches = [];\n                    queryReadTokens.set(tokenRef, queryMatches);\n                }\n                queryMatches.push({ queryId: query.queryId, value: queryValue });\n            });\n        };\n        ProviderElementContext.prototype._getQueriesFor = function (token) {\n            var result = [];\n            var currentEl = this;\n            var distance = 0;\n            var queries;\n            while (currentEl !== null) {\n                queries = currentEl._contentQueries.get(tokenReference(token));\n                if (queries) {\n                    result.push.apply(result, __spread(queries.filter(function (query) { return query.meta.descendants || distance <= 1; })));\n                }\n                if (currentEl._directiveAsts.length > 0) {\n                    distance++;\n                }\n                currentEl = currentEl._parent;\n            }\n            queries = this.viewContext.viewQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, __spread(queries));\n            }\n            return result;\n        };\n        ProviderElementContext.prototype._getOrCreateLocalProvider = function (requestingProviderType, token, eager) {\n            var _this = this;\n            var resolvedProvider = this._allProviders.get(tokenReference(token));\n            if (!resolvedProvider || ((requestingProviderType === exports.ProviderAstType.Directive ||\n                requestingProviderType === exports.ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === exports.ProviderAstType.PrivateService) ||\n                ((requestingProviderType === exports.ProviderAstType.PrivateService ||\n                    requestingProviderType === exports.ProviderAstType.PublicService) &&\n                    resolvedProvider.providerType === exports.ProviderAstType.Builtin)) {\n                return null;\n            }\n            var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n            if (transformedProviderAst) {\n                return transformedProviderAst;\n            }\n            if (this._seenProviders.get(tokenReference(token)) != null) {\n                this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n                return null;\n            }\n            this._seenProviders.set(tokenReference(token), true);\n            var transformedProviders = resolvedProvider.providers.map(function (provider) {\n                var transformedUseValue = provider.useValue;\n                var transformedUseExisting = provider.useExisting;\n                var transformedDeps = undefined;\n                if (provider.useExisting != null) {\n                    var existingDiDep = _this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager);\n                    if (existingDiDep.token != null) {\n                        transformedUseExisting = existingDiDep.token;\n                    }\n                    else {\n                        transformedUseExisting = null;\n                        transformedUseValue = existingDiDep.value;\n                    }\n                }\n                else if (provider.useFactory) {\n                    var deps = provider.deps || provider.useFactory.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n                }\n                else if (provider.useClass) {\n                    var deps = provider.deps || provider.useClass.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(resolvedProvider.providerType, dep, eager); });\n                }\n                return _transformProvider(provider, {\n                    useExisting: transformedUseExisting,\n                    useValue: transformedUseValue,\n                    deps: transformedDeps\n                });\n            });\n            transformedProviderAst =\n                _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n            this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n            return transformedProviderAst;\n        };\n        ProviderElementContext.prototype._getLocalDependency = function (requestingProviderType, dep, eager) {\n            if (eager === void 0) { eager = false; }\n            if (dep.isAttribute) {\n                var attrValue = this._attrs[dep.token.value];\n                return { isValue: true, value: attrValue == null ? null : attrValue };\n            }\n            if (dep.token != null) {\n                // access builtints\n                if ((requestingProviderType === exports.ProviderAstType.Directive ||\n                    requestingProviderType === exports.ProviderAstType.Component)) {\n                    if (tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                        tokenReference(dep.token) ===\n                            this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                        tokenReference(dep.token) ===\n                            this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                        tokenReference(dep.token) ===\n                            this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                        return dep;\n                    }\n                    if (tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                        this.transformedHasViewContainer = true;\n                    }\n                }\n                // access the injector\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                    return dep;\n                }\n                // access providers\n                if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                    return dep;\n                }\n            }\n            return null;\n        };\n        ProviderElementContext.prototype._getDependency = function (requestingProviderType, dep, eager) {\n            if (eager === void 0) { eager = false; }\n            var currElement = this;\n            var currEager = eager;\n            var result = null;\n            if (!dep.isSkipSelf) {\n                result = this._getLocalDependency(requestingProviderType, dep, eager);\n            }\n            if (dep.isSelf) {\n                if (!result && dep.isOptional) {\n                    result = { isValue: true, value: null };\n                }\n            }\n            else {\n                // check parent elements\n                while (!result && currElement._parent) {\n                    var prevElement = currElement;\n                    currElement = currElement._parent;\n                    if (prevElement._isViewRoot) {\n                        currEager = false;\n                    }\n                    result = currElement._getLocalDependency(exports.ProviderAstType.PublicService, dep, currEager);\n                }\n                // check @Host restriction\n                if (!result) {\n                    if (!dep.isHost || this.viewContext.component.isHost ||\n                        this.viewContext.component.type.reference === tokenReference(dep.token) ||\n                        this.viewContext.viewProviders.get(tokenReference(dep.token)) != null) {\n                        result = dep;\n                    }\n                    else {\n                        result = dep.isOptional ? { isValue: true, value: null } : null;\n                    }\n                }\n            }\n            if (!result) {\n                this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName(dep.token), this._sourceSpan));\n            }\n            return result;\n        };\n        return ProviderElementContext;\n    }());\n    var NgModuleProviderAnalyzer = /** @class */ (function () {\n        function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n            var _this = this;\n            this.reflector = reflector;\n            this._transformedProviders = new Map();\n            this._seenProviders = new Map();\n            this._errors = [];\n            this._allProviders = new Map();\n            ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n                var ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n                _resolveProviders([ngModuleProvider], exports.ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ true);\n            });\n            _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), exports.ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, \n            /* isModule */ false);\n        }\n        NgModuleProviderAnalyzer.prototype.parse = function () {\n            var _this = this;\n            Array.from(this._allProviders.values()).forEach(function (provider) {\n                _this._getOrCreateLocalProvider(provider.token, provider.eager);\n            });\n            if (this._errors.length > 0) {\n                var errorString = this._errors.join('\\n');\n                throw new Error(\"Provider parse errors:\\n\" + errorString);\n            }\n            // Note: Maps keep their insertion order.\n            var lazyProviders = [];\n            var eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        };\n        NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = function (token, eager) {\n            var _this = this;\n            var resolvedProvider = this._allProviders.get(tokenReference(token));\n            if (!resolvedProvider) {\n                return null;\n            }\n            var transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n            if (transformedProviderAst) {\n                return transformedProviderAst;\n            }\n            if (this._seenProviders.get(tokenReference(token)) != null) {\n                this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n                return null;\n            }\n            this._seenProviders.set(tokenReference(token), true);\n            var transformedProviders = resolvedProvider.providers.map(function (provider) {\n                var transformedUseValue = provider.useValue;\n                var transformedUseExisting = provider.useExisting;\n                var transformedDeps = undefined;\n                if (provider.useExisting != null) {\n                    var existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                    if (existingDiDep.token != null) {\n                        transformedUseExisting = existingDiDep.token;\n                    }\n                    else {\n                        transformedUseExisting = null;\n                        transformedUseValue = existingDiDep.value;\n                    }\n                }\n                else if (provider.useFactory) {\n                    var deps = provider.deps || provider.useFactory.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n                }\n                else if (provider.useClass) {\n                    var deps = provider.deps || provider.useClass.diDeps;\n                    transformedDeps =\n                        deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n                }\n                return _transformProvider(provider, {\n                    useExisting: transformedUseExisting,\n                    useValue: transformedUseValue,\n                    deps: transformedDeps\n                });\n            });\n            transformedProviderAst =\n                _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n            this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n            return transformedProviderAst;\n        };\n        NgModuleProviderAnalyzer.prototype._getDependency = function (dep, eager, requestorSourceSpan) {\n            if (eager === void 0) { eager = false; }\n            if (!dep.isSkipSelf && dep.token != null) {\n                // access the injector\n                if (tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                    tokenReference(dep.token) ===\n                        this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) ;\n                else if (this._getOrCreateLocalProvider(dep.token, eager) != null) ;\n            }\n            return dep;\n        };\n        return NgModuleProviderAnalyzer;\n    }());\n    function _transformProvider(provider, _a) {\n        var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n        return {\n            token: provider.token,\n            useClass: provider.useClass,\n            useExisting: useExisting,\n            useFactory: provider.useFactory,\n            useValue: useValue,\n            deps: deps,\n            multi: provider.multi\n        };\n    }\n    function _transformProviderAst(provider, _a) {\n        var eager = _a.eager, providers = _a.providers;\n        return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n    }\n    function _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n        var providersByToken = new Map();\n        directives.forEach(function (directive) {\n            var dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n            _resolveProviders([dirProvider], directive.isComponent ? exports.ProviderAstType.Component : exports.ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n        });\n        // Note: directives need to be able to overwrite providers of a component!\n        var directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n        directivesWithComponentFirst.forEach(function (directive) {\n            _resolveProviders(directive.providers, exports.ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n            _resolveProviders(directive.viewProviders, exports.ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ false);\n        });\n        return providersByToken;\n    }\n    function _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n        providers.forEach(function (provider) {\n            var resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n            if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n                targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n            }\n            if (!resolvedProvider) {\n                var lifecycleHooks = provider.token.identifier &&\n                    provider.token.identifier.lifecycleHooks ?\n                    provider.token.identifier.lifecycleHooks :\n                    [];\n                var isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n                resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n                targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n            }\n            else {\n                if (!provider.multi) {\n                    resolvedProvider.providers.length = 0;\n                }\n                resolvedProvider.providers.push(provider);\n            }\n        });\n    }\n    function _getViewQueries(component) {\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        var viewQueryId = 1;\n        var viewQueries = new Map();\n        if (component.viewQueries) {\n            component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n        }\n        return viewQueries;\n    }\n    function _getContentQueries(contentQueryStartId, directives) {\n        var contentQueryId = contentQueryStartId;\n        var contentQueries = new Map();\n        directives.forEach(function (directive, directiveIndex) {\n            if (directive.queries) {\n                directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n            }\n        });\n        return contentQueries;\n    }\n    function _addQueryToTokenMap(map, query) {\n        query.meta.selectors.forEach(function (token) {\n            var entry = map.get(tokenReference(token));\n            if (!entry) {\n                entry = [];\n                map.set(tokenReference(token), entry);\n            }\n            entry.push(query);\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function providerDef(ctx, providerAst) {\n        var flags = 0 /* None */;\n        if (!providerAst.eager) {\n            flags |= 4096 /* LazyProvider */;\n        }\n        if (providerAst.providerType === exports.ProviderAstType.PrivateService) {\n            flags |= 8192 /* PrivateProvider */;\n        }\n        if (providerAst.isModule) {\n            flags |= 1073741824 /* TypeModuleProvider */;\n        }\n        providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for regular providers, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy ||\n                providerAst.providerType === exports.ProviderAstType.Directive ||\n                providerAst.providerType === exports.ProviderAstType.Component) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var _a = providerAst.multiProvider ?\n            multiProviderDef(ctx, flags, providerAst.providers) :\n            singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n        return {\n            providerExpr: providerExpr,\n            flags: providerFlags, depsExpr: depsExpr,\n            tokenExpr: tokenExpr(ctx, providerAst.token),\n        };\n    }\n    function multiProviderDef(ctx, flags, providers) {\n        var allDepDefs = [];\n        var allParams = [];\n        var exprs = providers.map(function (provider, providerIndex) {\n            var expr;\n            if (provider.useClass) {\n                var depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n                expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n            }\n            else if (provider.useFactory) {\n                var depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n                expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n            }\n            else if (provider.useExisting) {\n                var depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n                expr = depExprs[0];\n            }\n            else {\n                expr = convertValueToOutputAst(ctx, provider.useValue);\n            }\n            return expr;\n        });\n        var providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n        return {\n            providerExpr: providerExpr,\n            flags: flags | 1024 /* TypeFactoryProvider */,\n            depsExpr: literalArr(allDepDefs)\n        };\n        function convertDeps(providerIndex, deps) {\n            return deps.map(function (dep, depIndex) {\n                var paramName = \"p\" + providerIndex + \"_\" + depIndex;\n                allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n                allDepDefs.push(depDef(ctx, dep));\n                return variable(paramName);\n            });\n        }\n    }\n    function singleProviderDef(ctx, flags, providerType, providerMeta) {\n        var providerExpr;\n        var deps;\n        if (providerType === exports.ProviderAstType.Directive || providerType === exports.ProviderAstType.Component) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 16384 /* TypeDirective */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else {\n            if (providerMeta.useClass) {\n                providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n                flags |= 512 /* TypeClassProvider */;\n                deps = providerMeta.deps || providerMeta.useClass.diDeps;\n            }\n            else if (providerMeta.useFactory) {\n                providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n                flags |= 1024 /* TypeFactoryProvider */;\n                deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n            }\n            else if (providerMeta.useExisting) {\n                providerExpr = NULL_EXPR;\n                flags |= 2048 /* TypeUseExistingProvider */;\n                deps = [{ token: providerMeta.useExisting }];\n            }\n            else {\n                providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n                flags |= 256 /* TypeValueProvider */;\n                deps = [];\n            }\n        }\n        var depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n        return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n    }\n    function tokenExpr(ctx, tokenMeta) {\n        return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n            literal(tokenMeta.value);\n    }\n    function depDef(ctx, dep) {\n        // Note: the following fields have already been normalized out by provider_analyzer:\n        // - isAttribute, isHost\n        var expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, dep.token);\n        var flags = 0 /* None */;\n        if (dep.isSkipSelf) {\n            flags |= 1 /* SkipSelf */;\n        }\n        if (dep.isOptional) {\n            flags |= 2 /* Optional */;\n        }\n        if (dep.isSelf) {\n            flags |= 4 /* Self */;\n        }\n        if (dep.isValue) {\n            flags |= 8 /* Value */;\n        }\n        return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n    }\n    function lifecycleHookToNodeFlag(lifecycleHook) {\n        var nodeFlag = 0 /* None */;\n        switch (lifecycleHook) {\n            case LifecycleHooks.AfterContentChecked:\n                nodeFlag = 2097152 /* AfterContentChecked */;\n                break;\n            case LifecycleHooks.AfterContentInit:\n                nodeFlag = 1048576 /* AfterContentInit */;\n                break;\n            case LifecycleHooks.AfterViewChecked:\n                nodeFlag = 8388608 /* AfterViewChecked */;\n                break;\n            case LifecycleHooks.AfterViewInit:\n                nodeFlag = 4194304 /* AfterViewInit */;\n                break;\n            case LifecycleHooks.DoCheck:\n                nodeFlag = 262144 /* DoCheck */;\n                break;\n            case LifecycleHooks.OnChanges:\n                nodeFlag = 524288 /* OnChanges */;\n                break;\n            case LifecycleHooks.OnDestroy:\n                nodeFlag = 131072 /* OnDestroy */;\n                break;\n            case LifecycleHooks.OnInit:\n                nodeFlag = 65536 /* OnInit */;\n                break;\n        }\n        return nodeFlag;\n    }\n    function componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n        var entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n        var token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n        var classMeta = {\n            diDeps: [\n                { isValue: true, value: literalArr(entryComponentFactories) },\n                { token: token, isSkipSelf: true, isOptional: true },\n                { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n            ],\n            lifecycleHooks: [],\n            reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n        };\n        var _a = singleProviderDef(ctx, flags, exports.ProviderAstType.PrivateService, {\n            token: token,\n            multi: false,\n            useClass: classMeta,\n        }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n        return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NgModuleCompileResult = /** @class */ (function () {\n        function NgModuleCompileResult(ngModuleFactoryVar) {\n            this.ngModuleFactoryVar = ngModuleFactoryVar;\n        }\n        return NgModuleCompileResult;\n    }());\n    var LOG_VAR = variable('_l');\n    var NgModuleCompiler = /** @class */ (function () {\n        function NgModuleCompiler(reflector) {\n            this.reflector = reflector;\n        }\n        NgModuleCompiler.prototype.compile = function (ctx, ngModuleMeta, extraProviders) {\n            var sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n            var entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n            var bootstrapComponents = ngModuleMeta.bootstrapComponents;\n            var providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n            var providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n                .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n                .map(function (_a) {\n                var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n                return importExpr(Identifiers.moduleProviderDef).callFn([\n                    literal(flags), tokenExpr, providerExpr, depsExpr\n                ]);\n            });\n            var ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n            var ngModuleDefFactory = fn([new FnParam(LOG_VAR.name)], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n            var ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n            this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n                ctx.importExpr(ngModuleMeta.type.reference),\n                literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n                ngModuleDefFactory\n            ]));\n            if (ngModuleMeta.id) {\n                var id = typeof ngModuleMeta.id === 'string' ? literal(ngModuleMeta.id) :\n                    ctx.importExpr(ngModuleMeta.id);\n                var registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                    .callFn([id, variable(ngModuleFactoryVar)])\n                    .toStmt();\n                ctx.statements.push(registerFactoryStmt);\n            }\n            return new NgModuleCompileResult(ngModuleFactoryVar);\n        };\n        NgModuleCompiler.prototype.createStub = function (ctx, ngModuleReference) {\n            this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n        };\n        NgModuleCompiler.prototype._createNgModuleFactory = function (ctx, reference, value) {\n            var ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n            var ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n                .set(value)\n                .toDeclStmt(importType(Identifiers.NgModuleFactory, [expressionType(ctx.importExpr(reference))], [TypeModifier.Const]), [exports.StmtModifier.Final, exports.StmtModifier.Exported]);\n            ctx.statements.push(ngModuleFactoryStmt);\n        };\n        return NgModuleCompiler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves types to {@link NgModule}.\n     */\n    var NgModuleResolver = /** @class */ (function () {\n        function NgModuleResolver(_reflector) {\n            this._reflector = _reflector;\n        }\n        NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n        NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n            if (ngModuleMeta) {\n                return ngModuleMeta;\n            }\n            else {\n                if (throwIfNotFound) {\n                    throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n                }\n                return null;\n            }\n        };\n        return NgModuleResolver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function debugOutputAstAsTypeScript(ast) {\n        var converter = new _TsEmitterVisitor();\n        var ctx = EmitterVisitorContext.createRoot();\n        var asts = Array.isArray(ast) ? ast : [ast];\n        asts.forEach(function (ast) {\n            if (ast instanceof Statement) {\n                ast.visitStatement(converter, ctx);\n            }\n            else if (ast instanceof Expression) {\n                ast.visitExpression(converter, ctx);\n            }\n            else if (ast instanceof Type$1) {\n                ast.visitType(converter, ctx);\n            }\n            else {\n                throw new Error(\"Don't know how to print debug info for \" + ast);\n            }\n        });\n        return ctx.toSource();\n    }\n    var TypeScriptEmitter = /** @class */ (function () {\n        function TypeScriptEmitter() {\n        }\n        TypeScriptEmitter.prototype.emitStatementsAndContext = function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n            if (preamble === void 0) { preamble = ''; }\n            if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n            var converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n            var ctx = EmitterVisitorContext.createRoot();\n            converter.visitAllStatements(stmts, ctx);\n            var preambleLines = preamble ? preamble.split('\\n') : [];\n            converter.reexports.forEach(function (reexports, exportedModuleName) {\n                var reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n                preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n            });\n            converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n                // Note: can't write the real word for import as it screws up system.js auto detection...\n                preambleLines.push(\"imp\" +\n                    (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n            });\n            var sm = emitSourceMaps ?\n                ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n                '';\n            var lines = __spread(preambleLines, [ctx.toSource(), sm]);\n            if (sm) {\n                // always add a newline at the end, as some tools have bugs without it.\n                lines.push('');\n            }\n            ctx.setPreambleLineCount(preambleLines.length);\n            return { sourceText: lines.join('\\n'), context: ctx };\n        };\n        TypeScriptEmitter.prototype.emitStatements = function (genFilePath, stmts, preamble) {\n            if (preamble === void 0) { preamble = ''; }\n            return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n        };\n        return TypeScriptEmitter;\n    }());\n    var _TsEmitterVisitor = /** @class */ (function (_super) {\n        __extends(_TsEmitterVisitor, _super);\n        function _TsEmitterVisitor(referenceFilter, importFilter) {\n            var _this = _super.call(this, false) || this;\n            _this.referenceFilter = referenceFilter;\n            _this.importFilter = importFilter;\n            _this.typeExpression = 0;\n            _this.importsWithPrefixes = new Map();\n            _this.reexports = new Map();\n            return _this;\n        }\n        _TsEmitterVisitor.prototype.visitType = function (t, ctx, defaultType) {\n            if (defaultType === void 0) { defaultType = 'any'; }\n            if (t) {\n                this.typeExpression++;\n                t.visitType(this, ctx);\n                this.typeExpression--;\n            }\n            else {\n                ctx.print(null, defaultType);\n            }\n        };\n        _TsEmitterVisitor.prototype.visitLiteralExpr = function (ast, ctx) {\n            var value = ast.value;\n            if (value == null && ast.type != INFERRED_TYPE) {\n                ctx.print(ast, \"(\" + value + \" as any)\");\n                return null;\n            }\n            return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n        };\n        // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n        // In SNC mode, [] have the type never[], so we cast here to any[].\n        // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n        // start with [].concat. see https://github.com/angular/angular/pull/11846\n        _TsEmitterVisitor.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n            if (ast.entries.length === 0) {\n                ctx.print(ast, '(');\n            }\n            var result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n            if (ast.entries.length === 0) {\n                ctx.print(ast, ' as any[])');\n            }\n            return result;\n        };\n        _TsEmitterVisitor.prototype.visitExternalExpr = function (ast, ctx) {\n            this._visitIdentifier(ast.value, ast.typeParams, ctx);\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n            var result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n            ctx.print(ast, '!');\n            return result;\n        };\n        _TsEmitterVisitor.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            if (stmt.hasModifier(exports.StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n                !stmt.type) {\n                // check for a reexport\n                var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n                if (moduleName) {\n                    var reexports = this.reexports.get(moduleName);\n                    if (!reexports) {\n                        reexports = [];\n                        this.reexports.set(moduleName, reexports);\n                    }\n                    reexports.push({ name: name_1, as: stmt.name });\n                    return null;\n                }\n            }\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                ctx.print(stmt, \"export \");\n            }\n            if (stmt.hasModifier(exports.StmtModifier.Final)) {\n                ctx.print(stmt, \"const\");\n            }\n            else {\n                ctx.print(stmt, \"var\");\n            }\n            ctx.print(stmt, \" \" + stmt.name);\n            this._printColonType(stmt.type, ctx);\n            if (stmt.value) {\n                ctx.print(stmt, \" = \");\n                stmt.value.visitExpression(this, ctx);\n            }\n            ctx.println(stmt, \";\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n            throw new Error('Cannot visit a WrappedNodeExpr when outputting Typescript.');\n        };\n        _TsEmitterVisitor.prototype.visitCastExpr = function (ast, ctx) {\n            ctx.print(ast, \"(<\");\n            ast.type.visitType(this, ctx);\n            ctx.print(ast, \">\");\n            ast.value.visitExpression(this, ctx);\n            ctx.print(ast, \")\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitInstantiateExpr = function (ast, ctx) {\n            ctx.print(ast, \"new \");\n            this.typeExpression++;\n            ast.classExpr.visitExpression(this, ctx);\n            this.typeExpression--;\n            ctx.print(ast, \"(\");\n            this.visitAllExpressions(ast.args, ctx, ',');\n            ctx.print(ast, \")\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            var _this = this;\n            ctx.pushClass(stmt);\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                ctx.print(stmt, \"export \");\n            }\n            ctx.print(stmt, \"class \" + stmt.name);\n            if (stmt.parent != null) {\n                ctx.print(stmt, \" extends \");\n                this.typeExpression++;\n                stmt.parent.visitExpression(this, ctx);\n                this.typeExpression--;\n            }\n            ctx.println(stmt, \" {\");\n            ctx.incIndent();\n            stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n            if (stmt.constructorMethod != null) {\n                this._visitClassConstructor(stmt, ctx);\n            }\n            stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n            stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            ctx.popClass();\n            return null;\n        };\n        _TsEmitterVisitor.prototype._visitClassField = function (field, ctx) {\n            if (field.hasModifier(exports.StmtModifier.Private)) {\n                // comment out as a workaround for #10967\n                ctx.print(null, \"/*private*/ \");\n            }\n            if (field.hasModifier(exports.StmtModifier.Static)) {\n                ctx.print(null, 'static ');\n            }\n            ctx.print(null, field.name);\n            this._printColonType(field.type, ctx);\n            if (field.initializer) {\n                ctx.print(null, ' = ');\n                field.initializer.visitExpression(this, ctx);\n            }\n            ctx.println(null, \";\");\n        };\n        _TsEmitterVisitor.prototype._visitClassGetter = function (getter, ctx) {\n            if (getter.hasModifier(exports.StmtModifier.Private)) {\n                ctx.print(null, \"private \");\n            }\n            ctx.print(null, \"get \" + getter.name + \"()\");\n            this._printColonType(getter.type, ctx);\n            ctx.println(null, \" {\");\n            ctx.incIndent();\n            this.visitAllStatements(getter.body, ctx);\n            ctx.decIndent();\n            ctx.println(null, \"}\");\n        };\n        _TsEmitterVisitor.prototype._visitClassConstructor = function (stmt, ctx) {\n            ctx.print(stmt, \"constructor(\");\n            this._visitParams(stmt.constructorMethod.params, ctx);\n            ctx.println(stmt, \") {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n        };\n        _TsEmitterVisitor.prototype._visitClassMethod = function (method, ctx) {\n            if (method.hasModifier(exports.StmtModifier.Private)) {\n                ctx.print(null, \"private \");\n            }\n            ctx.print(null, method.name + \"(\");\n            this._visitParams(method.params, ctx);\n            ctx.print(null, \")\");\n            this._printColonType(method.type, ctx, 'void');\n            ctx.println(null, \" {\");\n            ctx.incIndent();\n            this.visitAllStatements(method.body, ctx);\n            ctx.decIndent();\n            ctx.println(null, \"}\");\n        };\n        _TsEmitterVisitor.prototype.visitFunctionExpr = function (ast, ctx) {\n            if (ast.name) {\n                ctx.print(ast, 'function ');\n                ctx.print(ast, ast.name);\n            }\n            ctx.print(ast, \"(\");\n            this._visitParams(ast.params, ctx);\n            ctx.print(ast, \")\");\n            this._printColonType(ast.type, ctx, 'void');\n            if (!ast.name) {\n                ctx.print(ast, \" => \");\n            }\n            ctx.println(ast, '{');\n            ctx.incIndent();\n            this.visitAllStatements(ast.statements, ctx);\n            ctx.decIndent();\n            ctx.print(ast, \"}\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                ctx.print(stmt, \"export \");\n            }\n            ctx.print(stmt, \"function \" + stmt.name + \"(\");\n            this._visitParams(stmt.params, ctx);\n            ctx.print(stmt, \")\");\n            this._printColonType(stmt.type, ctx, 'void');\n            ctx.println(stmt, \" {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.statements, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitTryCatchStmt = function (stmt, ctx) {\n            ctx.println(stmt, \"try {\");\n            ctx.incIndent();\n            this.visitAllStatements(stmt.bodyStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n            ctx.incIndent();\n            var catchStmts = [CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                    exports.StmtModifier.Final\n                ])].concat(stmt.catchStmts);\n            this.visitAllStatements(catchStmts, ctx);\n            ctx.decIndent();\n            ctx.println(stmt, \"}\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitBuiltinType = function (type, ctx) {\n            var typeStr;\n            switch (type.name) {\n                case exports.BuiltinTypeName.Bool:\n                    typeStr = 'boolean';\n                    break;\n                case exports.BuiltinTypeName.Dynamic:\n                    typeStr = 'any';\n                    break;\n                case exports.BuiltinTypeName.Function:\n                    typeStr = 'Function';\n                    break;\n                case exports.BuiltinTypeName.Number:\n                    typeStr = 'number';\n                    break;\n                case exports.BuiltinTypeName.Int:\n                    typeStr = 'number';\n                    break;\n                case exports.BuiltinTypeName.String:\n                    typeStr = 'string';\n                    break;\n                case exports.BuiltinTypeName.None:\n                    typeStr = 'never';\n                    break;\n                default:\n                    throw new Error(\"Unsupported builtin type \" + type.name);\n            }\n            ctx.print(null, typeStr);\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitExpressionType = function (ast, ctx) {\n            var _this = this;\n            ast.value.visitExpression(this, ctx);\n            if (ast.typeParams !== null) {\n                ctx.print(null, '<');\n                this.visitAllObjects(function (type) { return _this.visitType(type, ctx); }, ast.typeParams, ctx, ',');\n                ctx.print(null, '>');\n            }\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitArrayType = function (type, ctx) {\n            this.visitType(type.of, ctx);\n            ctx.print(null, \"[]\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.visitMapType = function (type, ctx) {\n            ctx.print(null, \"{[key: string]:\");\n            this.visitType(type.valueType, ctx);\n            ctx.print(null, \"}\");\n            return null;\n        };\n        _TsEmitterVisitor.prototype.getBuiltinMethodName = function (method) {\n            var name;\n            switch (method) {\n                case exports.BuiltinMethod.ConcatArray:\n                    name = 'concat';\n                    break;\n                case exports.BuiltinMethod.SubscribeObservable:\n                    name = 'subscribe';\n                    break;\n                case exports.BuiltinMethod.Bind:\n                    name = 'bind';\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method: \" + method);\n            }\n            return name;\n        };\n        _TsEmitterVisitor.prototype._visitParams = function (params, ctx) {\n            var _this = this;\n            this.visitAllObjects(function (param) {\n                ctx.print(null, param.name);\n                _this._printColonType(param.type, ctx);\n            }, params, ctx, ',');\n        };\n        _TsEmitterVisitor.prototype._visitIdentifier = function (value, typeParams, ctx) {\n            var _this = this;\n            var name = value.name, moduleName = value.moduleName;\n            if (this.referenceFilter && this.referenceFilter(value)) {\n                ctx.print(null, '(null as any)');\n                return;\n            }\n            if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n                var prefix = this.importsWithPrefixes.get(moduleName);\n                if (prefix == null) {\n                    prefix = \"i\" + this.importsWithPrefixes.size;\n                    this.importsWithPrefixes.set(moduleName, prefix);\n                }\n                ctx.print(null, prefix + \".\");\n            }\n            ctx.print(null, name);\n            if (this.typeExpression > 0) {\n                // If we are in a type expression that refers to a generic type then supply\n                // the required type parameters. If there were not enough type parameters\n                // supplied, supply any as the type. Outside a type expression the reference\n                // should not supply type parameters and be treated as a simple value reference\n                // to the constructor function itself.\n                var suppliedParameters = typeParams || [];\n                if (suppliedParameters.length > 0) {\n                    ctx.print(null, \"<\");\n                    this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, typeParams, ctx, ',');\n                    ctx.print(null, \">\");\n                }\n            }\n        };\n        _TsEmitterVisitor.prototype._printColonType = function (type, ctx, defaultType) {\n            if (type !== INFERRED_TYPE) {\n                ctx.print(null, ':');\n                this.visitType(type, ctx, defaultType);\n            }\n        };\n        return _TsEmitterVisitor;\n    }(AbstractEmitterVisitor));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolve a `Type` for {@link Pipe}.\n     *\n     * This interface can be overridden by the application developer to create custom behavior.\n     *\n     * See {@link Compiler}\n     */\n    var PipeResolver = /** @class */ (function () {\n        function PipeResolver(_reflector) {\n            this._reflector = _reflector;\n        }\n        PipeResolver.prototype.isPipe = function (type) {\n            var typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n            return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n        };\n        /**\n         * Return {@link Pipe} for a given `Type`.\n         */\n        PipeResolver.prototype.resolve = function (type, throwIfNotFound) {\n            if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n            var metas = this._reflector.annotations(resolveForwardRef(type));\n            if (metas) {\n                var annotation = findLast(metas, createPipe.isTypeOf);\n                if (annotation) {\n                    return annotation;\n                }\n            }\n            if (throwIfNotFound) {\n                throw new Error(\"No Pipe decorator found on \" + stringify(type));\n            }\n            return null;\n        };\n        return PipeResolver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // http://cldr.unicode.org/index/cldr-spec/plural-rules\n    var PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n    /**\n     * Expands special forms into elements.\n     *\n     * For example,\n     *\n     * ```\n     * { messages.length, plural,\n     *   =0 {zero}\n     *   =1 {one}\n     *   other {more than one}\n     * }\n     * ```\n     *\n     * will be expanded into\n     *\n     * ```\n     * <ng-container [ngPlural]=\"messages.length\">\n     *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n     *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n     *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n     * </ng-container>\n     * ```\n     */\n    function expandNodes(nodes) {\n        var expander = new _Expander();\n        return new ExpansionResult(visitAll$1(expander, nodes), expander.isExpanded, expander.errors);\n    }\n    var ExpansionResult = /** @class */ (function () {\n        function ExpansionResult(nodes, expanded, errors) {\n            this.nodes = nodes;\n            this.expanded = expanded;\n            this.errors = errors;\n        }\n        return ExpansionResult;\n    }());\n    var ExpansionError = /** @class */ (function (_super) {\n        __extends(ExpansionError, _super);\n        function ExpansionError(span, errorMsg) {\n            return _super.call(this, span, errorMsg) || this;\n        }\n        return ExpansionError;\n    }(ParseError));\n    /**\n     * Expand expansion forms (plural, select) to directives\n     *\n     * @internal\n     */\n    var _Expander = /** @class */ (function () {\n        function _Expander() {\n            this.isExpanded = false;\n            this.errors = [];\n        }\n        _Expander.prototype.visitElement = function (element, context) {\n            return new Element$1(element.name, element.attrs, visitAll$1(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        };\n        _Expander.prototype.visitAttribute = function (attribute, context) { return attribute; };\n        _Expander.prototype.visitText = function (text, context) { return text; };\n        _Expander.prototype.visitComment = function (comment, context) { return comment; };\n        _Expander.prototype.visitExpansion = function (icu, context) {\n            this.isExpanded = true;\n            return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n                _expandDefaultForm(icu, this.errors);\n        };\n        _Expander.prototype.visitExpansionCase = function (icuCase, context) {\n            throw new Error('Should not be reached');\n        };\n        return _Expander;\n    }());\n    // Plural forms are expanded to `NgPlural` and `NgPluralCase`s\n    function _expandPluralForm(ast, errors) {\n        var children = ast.cases.map(function (c) {\n            if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n                errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n            }\n            var expansionResult = expandNodes(c.expression);\n            errors.push.apply(errors, __spread(expansionResult.errors));\n            return new Element$1(\"ng-template\", [new Attribute('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        });\n        var switchAttr = new Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n        return new Element$1('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n    }\n    // ICU messages (excluding plural form) are expanded to `NgSwitch`  and `NgSwitchCase`s\n    function _expandDefaultForm(ast, errors) {\n        var children = ast.cases.map(function (c) {\n            var expansionResult = expandNodes(c.expression);\n            errors.push.apply(errors, __spread(expansionResult.errors));\n            if (c.value === 'other') {\n                // other is the default case when no values match\n                return new Element$1(\"ng-template\", [new Attribute('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n            }\n            return new Element$1(\"ng-template\", [new Attribute('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        });\n        var switchAttr = new Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n        return new Element$1('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BIND_NAME_REGEXP$1 = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n    // Group 1 = \"bind-\"\n    var KW_BIND_IDX$1 = 1;\n    // Group 2 = \"let-\"\n    var KW_LET_IDX$1 = 2;\n    // Group 3 = \"ref-/#\"\n    var KW_REF_IDX$1 = 3;\n    // Group 4 = \"on-\"\n    var KW_ON_IDX$1 = 4;\n    // Group 5 = \"bindon-\"\n    var KW_BINDON_IDX$1 = 5;\n    // Group 6 = \"@\"\n    var KW_AT_IDX$1 = 6;\n    // Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\n    var IDENT_KW_IDX$1 = 7;\n    // Group 8 = identifier inside [()]\n    var IDENT_BANANA_BOX_IDX$1 = 8;\n    // Group 9 = identifier inside []\n    var IDENT_PROPERTY_IDX$1 = 9;\n    // Group 10 = identifier inside ()\n    var IDENT_EVENT_IDX$1 = 10;\n    var TEMPLATE_ATTR_PREFIX$1 = '*';\n    var CLASS_ATTR = 'class';\n    var _TEXT_CSS_SELECTOR;\n    function TEXT_CSS_SELECTOR() {\n        if (!_TEXT_CSS_SELECTOR) {\n            _TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\n        }\n        return _TEXT_CSS_SELECTOR;\n    }\n    var TemplateParseError = /** @class */ (function (_super) {\n        __extends(TemplateParseError, _super);\n        function TemplateParseError(message, span, level) {\n            return _super.call(this, span, message, level) || this;\n        }\n        return TemplateParseError;\n    }(ParseError));\n    var TemplateParseResult = /** @class */ (function () {\n        function TemplateParseResult(templateAst, usedPipes, errors) {\n            this.templateAst = templateAst;\n            this.usedPipes = usedPipes;\n            this.errors = errors;\n        }\n        return TemplateParseResult;\n    }());\n    var TemplateParser = /** @class */ (function () {\n        function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n            this._config = _config;\n            this._reflector = _reflector;\n            this._exprParser = _exprParser;\n            this._schemaRegistry = _schemaRegistry;\n            this._htmlParser = _htmlParser;\n            this._console = _console;\n            this.transforms = transforms;\n        }\n        Object.defineProperty(TemplateParser.prototype, \"expressionParser\", {\n            get: function () { return this._exprParser; },\n            enumerable: true,\n            configurable: true\n        });\n        TemplateParser.prototype.parse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n            var result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n            var warnings = result.errors.filter(function (error$$1) { return error$$1.level === exports.ParseErrorLevel.WARNING; });\n            var errors = result.errors.filter(function (error$$1) { return error$$1.level === exports.ParseErrorLevel.ERROR; });\n            if (warnings.length > 0) {\n                this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n            }\n            if (errors.length > 0) {\n                var errorString = errors.join('\\n');\n                throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n            }\n            return { template: result.templateAst, pipes: result.usedPipes };\n        };\n        TemplateParser.prototype.tryParse = function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n            var htmlParseResult = typeof template === 'string' ?\n                this._htmlParser.parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n                template;\n            if (!preserveWhitespaces) {\n                htmlParseResult = removeWhitespaces(htmlParseResult);\n            }\n            return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n        };\n        TemplateParser.prototype.tryParseHtml = function (htmlAstWithErrors, component, directives, pipes, schemas) {\n            var result;\n            var errors = htmlAstWithErrors.errors;\n            var usedPipes = [];\n            if (htmlAstWithErrors.rootNodes.length > 0) {\n                var uniqDirectives = removeSummaryDuplicates(directives);\n                var uniqPipes = removeSummaryDuplicates(pipes);\n                var providerViewContext = new ProviderViewContext(this._reflector, component);\n                var interpolationConfig = undefined;\n                if (component.template && component.template.interpolation) {\n                    interpolationConfig = {\n                        start: component.template.interpolation[0],\n                        end: component.template.interpolation[1]\n                    };\n                }\n                var bindingParser = new BindingParser(this._exprParser, interpolationConfig, this._schemaRegistry, uniqPipes, errors);\n                var parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n                result = visitAll$1(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n                errors.push.apply(errors, __spread(providerViewContext.errors));\n                usedPipes.push.apply(usedPipes, __spread(bindingParser.getUsedPipes()));\n            }\n            else {\n                result = [];\n            }\n            this._assertNoReferenceDuplicationOnTemplate(result, errors);\n            if (errors.length > 0) {\n                return new TemplateParseResult(result, usedPipes, errors);\n            }\n            if (this.transforms) {\n                this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n            }\n            return new TemplateParseResult(result, usedPipes, errors);\n        };\n        TemplateParser.prototype.expandHtml = function (htmlAstWithErrors, forced) {\n            if (forced === void 0) { forced = false; }\n            var errors = htmlAstWithErrors.errors;\n            if (errors.length == 0 || forced) {\n                // Transform ICU messages to angular directives\n                var expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n                errors.push.apply(errors, __spread(expandedHtmlAst.errors));\n                htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n            }\n            return htmlAstWithErrors;\n        };\n        TemplateParser.prototype.getInterpolationConfig = function (component) {\n            if (component.template) {\n                return InterpolationConfig.fromArray(component.template.interpolation);\n            }\n            return undefined;\n        };\n        /** @internal */\n        TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = function (result, errors) {\n            var existingReferences = [];\n            result.filter(function (element) { return !!element.references; })\n                .forEach(function (element) { return element.references.forEach(function (reference) {\n                var name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, exports.ParseErrorLevel.ERROR);\n                    errors.push(error$$1);\n                }\n            }); });\n        };\n        return TemplateParser;\n    }());\n    var TemplateParseVisitor = /** @class */ (function () {\n        function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n            var _this = this;\n            this.reflector = reflector;\n            this.config = config;\n            this.providerViewContext = providerViewContext;\n            this._bindingParser = _bindingParser;\n            this._schemaRegistry = _schemaRegistry;\n            this._schemas = _schemas;\n            this._targetErrors = _targetErrors;\n            this.selectorMatcher = new SelectorMatcher();\n            this.directivesIndex = new Map();\n            this.ngContentCount = 0;\n            // Note: queries start with id 1 so we can use the number in a Bloom filter!\n            this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n            directives.forEach(function (directive, index) {\n                var selector = CssSelector.parse(directive.selector);\n                _this.selectorMatcher.addSelectables(selector, directive);\n                _this.directivesIndex.set(directive, index);\n            });\n        }\n        TemplateParseVisitor.prototype.visitExpansion = function (expansion, context) { return null; };\n        TemplateParseVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return null; };\n        TemplateParseVisitor.prototype.visitText = function (text, parent) {\n            var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n            var valueNoNgsp = replaceNgsp(text.value);\n            var expr = this._bindingParser.parseInterpolation(valueNoNgsp, text.sourceSpan);\n            return expr ? new BoundTextAst(expr, ngContentIndex, text.sourceSpan) :\n                new TextAst(valueNoNgsp, ngContentIndex, text.sourceSpan);\n        };\n        TemplateParseVisitor.prototype.visitAttribute = function (attribute, context) {\n            return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n        };\n        TemplateParseVisitor.prototype.visitComment = function (comment, context) { return null; };\n        TemplateParseVisitor.prototype.visitElement = function (element, parent) {\n            var _this = this;\n            var queryStartIndex = this.contentQueryStartId;\n            var elName = element.name;\n            var preparsedElement = preparseElement(element);\n            if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n                preparsedElement.type === PreparsedElementType.STYLE) {\n                // Skipping <script> for security reasons\n                // Skipping <style> as we already processed them\n                // in the StyleCompiler\n                return null;\n            }\n            if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n                isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n                // Skipping stylesheets with either relative urls or package scheme as we already processed\n                // them in the StyleCompiler\n                return null;\n            }\n            var matchableAttrs = [];\n            var elementOrDirectiveProps = [];\n            var elementOrDirectiveRefs = [];\n            var elementVars = [];\n            var events = [];\n            var templateElementOrDirectiveProps = [];\n            var templateMatchableAttrs = [];\n            var templateElementVars = [];\n            var hasInlineTemplates = false;\n            var attrs = [];\n            var isTemplateElement = isNgTemplate(element.name);\n            element.attrs.forEach(function (attr) {\n                var parsedVariables = [];\n                var hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n                elementVars.push.apply(elementVars, __spread(parsedVariables.map(function (v) { return VariableAst.fromParsedVariable(v); })));\n                var templateValue;\n                var templateKey;\n                var normalizedName = _this._normalizeAttributeName(attr.name);\n                if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                    templateValue = attr.value;\n                    templateKey = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length);\n                }\n                var hasTemplateBinding = templateValue != null;\n                if (hasTemplateBinding) {\n                    if (hasInlineTemplates) {\n                        _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute prefixed with *\", attr.sourceSpan);\n                    }\n                    hasInlineTemplates = true;\n                    var parsedVariables_1 = [];\n                    _this._bindingParser.parseInlineTemplateBinding(templateKey, templateValue, attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, parsedVariables_1);\n                    templateElementVars.push.apply(templateElementVars, __spread(parsedVariables_1.map(function (v) { return VariableAst.fromParsedVariable(v); })));\n                }\n                if (!hasBinding && !hasTemplateBinding) {\n                    // don't include the bindings as attributes as well in the AST\n                    attrs.push(_this.visitAttribute(attr, null));\n                    matchableAttrs.push([attr.name, attr.value]);\n                }\n            });\n            var elementCssSelector = createElementCssSelector(elName, matchableAttrs);\n            var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n            var references = [];\n            var boundDirectivePropNames = new Set();\n            var directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, element.sourceSpan, references, boundDirectivePropNames);\n            var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n            var isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n            var providerContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, element.sourceSpan);\n            var children = visitAll$1(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR$1 : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? parent.providerContext : providerContext));\n            providerContext.afterElement();\n            // Override the actual selector when the `ngProjectAs` attribute is provided\n            var projectionSelector = preparsedElement.projectAs != '' ?\n                CssSelector.parse(preparsedElement.projectAs)[0] :\n                elementCssSelector;\n            var ngContentIndex = parent.findNgContentIndex(projectionSelector);\n            var parsedElement;\n            if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n                // `<ng-content>` element\n                if (element.children && !element.children.every(_isEmptyTextNode)) {\n                    this._reportError(\"<ng-content> element cannot have content.\", element.sourceSpan);\n                }\n                parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n            }\n            else if (isTemplateElement) {\n                // `<ng-template>` element\n                this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n                this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, element.sourceSpan);\n                parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan);\n            }\n            else {\n                // element other than `<ng-content>` and `<ng-template>`\n                this._assertElementExists(matchElement, element);\n                this._assertOnlyOneComponent(directiveAsts, element.sourceSpan);\n                var ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n                parsedElement = new ElementAst(elName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n            }\n            if (hasInlineTemplates) {\n                // The element as a *-attribute\n                var templateQueryStartIndex = this.contentQueryStartId;\n                var templateSelector = createElementCssSelector('ng-template', templateMatchableAttrs);\n                var directives = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n                var templateBoundDirectivePropNames = new Set();\n                var templateDirectiveAsts = this._createDirectiveAsts(true, elName, directives, templateElementOrDirectiveProps, [], element.sourceSpan, [], templateBoundDirectivePropNames);\n                var templateElementProps = this._createElementPropertyAsts(elName, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n                this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, element.sourceSpan);\n                var templateProviderContext = new ProviderElementContext(this.providerViewContext, parent.providerContext, parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, element.sourceSpan);\n                templateProviderContext.afterElement();\n                parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, element.sourceSpan);\n            }\n            return parsedElement;\n        };\n        TemplateParseVisitor.prototype._parseAttr = function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n            var name = this._normalizeAttributeName(attr.name);\n            var value = attr.value;\n            var srcSpan = attr.sourceSpan;\n            var boundEvents = [];\n            var bindParts = name.match(BIND_NAME_REGEXP$1);\n            var hasBinding = false;\n            if (bindParts !== null) {\n                hasBinding = true;\n                if (bindParts[KW_BIND_IDX$1] != null) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                }\n                else if (bindParts[KW_LET_IDX$1]) {\n                    if (isTemplateElement) {\n                        var identifier = bindParts[IDENT_KW_IDX$1];\n                        this._parseVariable(identifier, value, srcSpan, targetVars);\n                    }\n                    else {\n                        this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                    }\n                }\n                else if (bindParts[KW_REF_IDX$1]) {\n                    var identifier = bindParts[IDENT_KW_IDX$1];\n                    this._parseReference(identifier, value, srcSpan, targetRefs);\n                }\n                else if (bindParts[KW_ON_IDX$1]) {\n                    this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n                }\n                else if (bindParts[KW_BINDON_IDX$1]) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                    this._parseAssignmentEvent(bindParts[IDENT_KW_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n                }\n                else if (bindParts[KW_AT_IDX$1]) {\n                    this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n                }\n                else if (bindParts[IDENT_BANANA_BOX_IDX$1]) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                    this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n                }\n                else if (bindParts[IDENT_PROPERTY_IDX$1]) {\n                    this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX$1], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                }\n                else if (bindParts[IDENT_EVENT_IDX$1]) {\n                    this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX$1], value, srcSpan, targetMatchableAttrs, boundEvents);\n                }\n            }\n            else {\n                hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            if (!hasBinding) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            targetEvents.push.apply(targetEvents, __spread(boundEvents.map(function (e) { return BoundEventAst.fromParsedEvent(e); })));\n            return hasBinding;\n        };\n        TemplateParseVisitor.prototype._normalizeAttributeName = function (attrName) {\n            return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n        };\n        TemplateParseVisitor.prototype._parseVariable = function (identifier, value, sourceSpan, targetVars) {\n            if (identifier.indexOf('-') > -1) {\n                this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n            }\n            targetVars.push(new VariableAst(identifier, value, sourceSpan));\n        };\n        TemplateParseVisitor.prototype._parseReference = function (identifier, value, sourceSpan, targetRefs) {\n            if (identifier.indexOf('-') > -1) {\n                this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n            }\n            targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n        };\n        TemplateParseVisitor.prototype._parseAssignmentEvent = function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n            this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n        };\n        TemplateParseVisitor.prototype._parseDirectives = function (selectorMatcher, elementCssSelector) {\n            var _this = this;\n            // Need to sort the directives so that we get consistent results throughout,\n            // as selectorMatcher uses Maps inside.\n            // Also deduplicate directives as they might match more than one time!\n            var directives = new Array(this.directivesIndex.size);\n            // Whether any directive selector matches on the element name\n            var matchElement = false;\n            selectorMatcher.match(elementCssSelector, function (selector, directive) {\n                directives[_this.directivesIndex.get(directive)] = directive;\n                matchElement = matchElement || selector.hasElementSelector();\n            });\n            return {\n                directives: directives.filter(function (dir) { return !!dir; }),\n                matchElement: matchElement,\n            };\n        };\n        TemplateParseVisitor.prototype._createDirectiveAsts = function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n            var _this = this;\n            var matchedReferences = new Set();\n            var component = null;\n            var directiveAsts = directives.map(function (directive) {\n                var sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n                if (directive.isComponent) {\n                    component = directive;\n                }\n                var directiveProperties = [];\n                var boundProperties = _this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan);\n                var hostProperties = boundProperties.map(function (prop) { return BoundElementPropertyAst.fromBoundProperty(prop); });\n                // Note: We need to check the host properties here as well,\n                // as we don't know the element name in the DirectiveWrapperCompiler yet.\n                hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n                var parsedEvents = _this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan);\n                _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n                elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                    if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                        (elOrDirRef.isReferenceToDirective(directive))) {\n                        targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                        matchedReferences.add(elOrDirRef.name);\n                    }\n                });\n                var hostEvents = parsedEvents.map(function (e) { return BoundEventAst.fromParsedEvent(e); });\n                var contentQueryStartId = _this.contentQueryStartId;\n                _this.contentQueryStartId += directive.queries.length;\n                return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n            });\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if (elOrDirRef.value.length > 0) {\n                    if (!matchedReferences.has(elOrDirRef.name)) {\n                        _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                    }\n                }\n                else if (!component) {\n                    var refToken = null;\n                    if (isTemplateElement) {\n                        refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                    }\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n                }\n            });\n            return directiveAsts;\n        };\n        TemplateParseVisitor.prototype._createDirectivePropertyAsts = function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n            if (directiveProperties) {\n                var boundPropsByName_1 = new Map();\n                boundProps.forEach(function (boundProp) {\n                    var prevValue = boundPropsByName_1.get(boundProp.name);\n                    if (!prevValue || prevValue.isLiteral) {\n                        // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                        boundPropsByName_1.set(boundProp.name, boundProp);\n                    }\n                });\n                Object.keys(directiveProperties).forEach(function (dirProp) {\n                    var elProp = directiveProperties[dirProp];\n                    var boundProp = boundPropsByName_1.get(elProp);\n                    // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                    if (boundProp) {\n                        targetBoundDirectivePropNames.add(boundProp.name);\n                        if (!isEmptyExpression(boundProp.expression)) {\n                            targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                        }\n                    }\n                });\n            }\n        };\n        TemplateParseVisitor.prototype._createElementPropertyAsts = function (elementName, props, boundDirectivePropNames) {\n            var _this = this;\n            var boundElementProps = [];\n            props.forEach(function (prop) {\n                if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                    var boundProp = _this._bindingParser.createBoundElementProperty(elementName, prop);\n                    boundElementProps.push(BoundElementPropertyAst.fromBoundProperty(boundProp));\n                }\n            });\n            return this._checkPropertiesInSchema(elementName, boundElementProps);\n        };\n        TemplateParseVisitor.prototype._findComponentDirectives = function (directives) {\n            return directives.filter(function (directive) { return directive.directive.isComponent; });\n        };\n        TemplateParseVisitor.prototype._findComponentDirectiveNames = function (directives) {\n            return this._findComponentDirectives(directives)\n                .map(function (directive) { return identifierName(directive.directive.type); });\n        };\n        TemplateParseVisitor.prototype._assertOnlyOneComponent = function (directives, sourceSpan) {\n            var componentTypeNames = this._findComponentDirectiveNames(directives);\n            if (componentTypeNames.length > 1) {\n                this._reportError(\"More than one component matched on this element.\\n\" +\n                    \"Make sure that only one component's selector can match a given element.\\n\" +\n                    (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n            }\n        };\n        /**\n         * Make sure that non-angular tags conform to the schemas.\n         *\n         * Note: An element is considered an angular tag when at least one directive selector matches the\n         * tag name.\n         *\n         * @param matchElement Whether any directive has matched on the tag name\n         * @param element the html element\n         */\n        TemplateParseVisitor.prototype._assertElementExists = function (matchElement, element) {\n            var elName = element.name.replace(/^:xhtml:/, '');\n            if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n                var errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n                errorMsg +=\n                    \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (elName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMsg +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                this._reportError(errorMsg, element.sourceSpan);\n            }\n        };\n        TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function (directives, elementProps, sourceSpan) {\n            var _this = this;\n            var componentTypeNames = this._findComponentDirectiveNames(directives);\n            if (componentTypeNames.length > 0) {\n                this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n            }\n            elementProps.forEach(function (prop) {\n                _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n            });\n        };\n        TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function (directives, events) {\n            var _this = this;\n            var allDirectiveEvents = new Set();\n            directives.forEach(function (directive) {\n                Object.keys(directive.directive.outputs).forEach(function (k) {\n                    var eventName = directive.directive.outputs[k];\n                    allDirectiveEvents.add(eventName);\n                });\n            });\n            events.forEach(function (event) {\n                if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                    _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n                }\n            });\n        };\n        TemplateParseVisitor.prototype._checkPropertiesInSchema = function (elementName, boundProps) {\n            var _this = this;\n            // Note: We can't filter out empty expressions before this method,\n            // as we still want to validate them!\n            return boundProps.filter(function (boundProp) {\n                if (boundProp.type === 0 /* Property */ &&\n                    !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                    var errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                    if (elementName.startsWith('ng-')) {\n                        errorMsg +=\n                            \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                                \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                    }\n                    else if (elementName.indexOf('-') > -1) {\n                        errorMsg +=\n                            \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                                (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                                \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                    }\n                    _this._reportError(errorMsg, boundProp.sourceSpan);\n                }\n                return !isEmptyExpression(boundProp.value);\n            });\n        };\n        TemplateParseVisitor.prototype._reportError = function (message, sourceSpan, level) {\n            if (level === void 0) { level = exports.ParseErrorLevel.ERROR; }\n            this._targetErrors.push(new ParseError(sourceSpan, message, level));\n        };\n        return TemplateParseVisitor;\n    }());\n    var NonBindableVisitor$1 = /** @class */ (function () {\n        function NonBindableVisitor() {\n        }\n        NonBindableVisitor.prototype.visitElement = function (ast, parent) {\n            var preparsedElement = preparseElement(ast);\n            if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n                preparsedElement.type === PreparsedElementType.STYLE ||\n                preparsedElement.type === PreparsedElementType.STYLESHEET) {\n                // Skipping <script> for security reasons\n                // Skipping <style> and stylesheets as we already processed them\n                // in the StyleCompiler\n                return null;\n            }\n            var attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n            var selector = createElementCssSelector(ast.name, attrNameAndValues);\n            var ngContentIndex = parent.findNgContentIndex(selector);\n            var children = visitAll$1(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n            return new ElementAst(ast.name, visitAll$1(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n        };\n        NonBindableVisitor.prototype.visitComment = function (comment, context) { return null; };\n        NonBindableVisitor.prototype.visitAttribute = function (attribute, context) {\n            return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n        };\n        NonBindableVisitor.prototype.visitText = function (text, parent) {\n            var ngContentIndex = parent.findNgContentIndex(TEXT_CSS_SELECTOR());\n            return new TextAst(text.value, ngContentIndex, text.sourceSpan);\n        };\n        NonBindableVisitor.prototype.visitExpansion = function (expansion, context) { return expansion; };\n        NonBindableVisitor.prototype.visitExpansionCase = function (expansionCase, context) { return expansionCase; };\n        return NonBindableVisitor;\n    }());\n    /**\n     * A reference to an element or directive in a template. E.g., the reference in this template:\n     *\n     * <div #myMenu=\"coolMenu\">\n     *\n     * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n     */\n    var ElementOrDirectiveRef = /** @class */ (function () {\n        function ElementOrDirectiveRef(name, value, sourceSpan) {\n            this.name = name;\n            this.value = value;\n            this.sourceSpan = sourceSpan;\n        }\n        /** Gets whether this is a reference to the given directive. */\n        ElementOrDirectiveRef.prototype.isReferenceToDirective = function (directive) {\n            return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n        };\n        return ElementOrDirectiveRef;\n    }());\n    /** Splits a raw, potentially comma-delimited `exportAs` value into an array of names. */\n    function splitExportAs(exportAs) {\n        return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n    }\n    function splitClasses(classAttrValue) {\n        return classAttrValue.trim().split(/\\s+/g);\n    }\n    var ElementContext = /** @class */ (function () {\n        function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n            this.isTemplateElement = isTemplateElement;\n            this._ngContentIndexMatcher = _ngContentIndexMatcher;\n            this._wildcardNgContentIndex = _wildcardNgContentIndex;\n            this.providerContext = providerContext;\n        }\n        ElementContext.create = function (isTemplateElement, directives, providerContext) {\n            var matcher = new SelectorMatcher();\n            var wildcardNgContentIndex = null;\n            var component = directives.find(function (directive) { return directive.directive.isComponent; });\n            if (component) {\n                var ngContentSelectors = component.directive.template.ngContentSelectors;\n                for (var i = 0; i < ngContentSelectors.length; i++) {\n                    var selector = ngContentSelectors[i];\n                    if (selector === '*') {\n                        wildcardNgContentIndex = i;\n                    }\n                    else {\n                        matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                    }\n                }\n            }\n            return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n        };\n        ElementContext.prototype.findNgContentIndex = function (selector) {\n            var ngContentIndices = [];\n            this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n            ngContentIndices.sort();\n            if (this._wildcardNgContentIndex != null) {\n                ngContentIndices.push(this._wildcardNgContentIndex);\n            }\n            return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n        };\n        return ElementContext;\n    }());\n    function createElementCssSelector(elementName, attributes) {\n        var cssSelector = new CssSelector();\n        var elNameNoNs = splitNsName(elementName)[1];\n        cssSelector.setElement(elNameNoNs);\n        for (var i = 0; i < attributes.length; i++) {\n            var attrName = attributes[i][0];\n            var attrNameNoNs = splitNsName(attrName)[1];\n            var attrValue = attributes[i][1];\n            cssSelector.addAttribute(attrNameNoNs, attrValue);\n            if (attrName.toLowerCase() == CLASS_ATTR) {\n                var classes = splitClasses(attrValue);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n        return cssSelector;\n    }\n    var EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\n    var NON_BINDABLE_VISITOR$1 = new NonBindableVisitor$1();\n    function _isEmptyTextNode(node) {\n        return node instanceof Text$3 && node.value.trim().length == 0;\n    }\n    function removeSummaryDuplicates(items) {\n        var map = new Map();\n        items.forEach(function (item) {\n            if (!map.get(item.type.reference)) {\n                map.set(item.type.reference, item);\n            }\n        });\n        return Array.from(map.values());\n    }\n    function isEmptyExpression(ast) {\n        if (ast instanceof ASTWithSource) {\n            ast = ast.ast;\n        }\n        return ast instanceof EmptyExpr;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Generates code that is used to type check templates.\n     */\n    var TypeCheckCompiler = /** @class */ (function () {\n        function TypeCheckCompiler(options, reflector) {\n            this.options = options;\n            this.reflector = reflector;\n        }\n        /**\n         * Important notes:\n         * - This must not produce new `import` statements, but only refer to types outside\n         *   of the file via the variables provided via externalReferenceVars.\n         *   This allows Typescript to reuse the old program's structure as no imports have changed.\n         * - This must not produce any exports, as this would pollute the .d.ts file\n         *   and also violate the point above.\n         */\n        TypeCheckCompiler.prototype.compileComponent = function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n            var _this = this;\n            var pipes = new Map();\n            usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n            var embeddedViewCount = 0;\n            var viewBuilderFactory = function (parent, guards) {\n                var embeddedViewIndex = embeddedViewCount++;\n                return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n            };\n            var visitor = viewBuilderFactory(null, []);\n            visitor.visitAll([], template);\n            return visitor.build(componentId);\n        };\n        return TypeCheckCompiler;\n    }());\n    var DYNAMIC_VAR_NAME = '_any';\n    var TypeCheckLocalResolver = /** @class */ (function () {\n        function TypeCheckLocalResolver() {\n        }\n        TypeCheckLocalResolver.prototype.getLocal = function (name) {\n            if (name === EventHandlerVars.event.name) {\n                // References to the event should not be type-checked.\n                // TODO(chuckj): determine a better type for the event.\n                return variable(DYNAMIC_VAR_NAME);\n            }\n            return null;\n        };\n        return TypeCheckLocalResolver;\n    }());\n    var defaultResolver = new TypeCheckLocalResolver();\n    var ViewBuilder = /** @class */ (function () {\n        function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n            this.options = options;\n            this.reflector = reflector;\n            this.externalReferenceVars = externalReferenceVars;\n            this.parent = parent;\n            this.component = component;\n            this.isHostComponent = isHostComponent;\n            this.embeddedViewIndex = embeddedViewIndex;\n            this.pipes = pipes;\n            this.guards = guards;\n            this.ctx = ctx;\n            this.viewBuilderFactory = viewBuilderFactory;\n            this.refOutputVars = new Map();\n            this.variables = [];\n            this.children = [];\n            this.updates = [];\n            this.actions = [];\n        }\n        ViewBuilder.prototype.getOutputVar = function (type) {\n            var varName;\n            if (type === this.component && this.isHostComponent) {\n                varName = DYNAMIC_VAR_NAME;\n            }\n            else if (type instanceof StaticSymbol) {\n                varName = this.externalReferenceVars.get(type);\n            }\n            else {\n                varName = DYNAMIC_VAR_NAME;\n            }\n            if (!varName) {\n                throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n            }\n            return varName;\n        };\n        ViewBuilder.prototype.getTypeGuardExpressions = function (ast) {\n            var e_1, _a, e_2, _b;\n            var result = __spread(this.guards);\n            try {\n                for (var _c = __values(ast.directives), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var directive = _d.value;\n                    try {\n                        for (var _e = __values(directive.inputs), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var input = _f.value;\n                            var guard = directive.directive.guards[input.directiveName];\n                            if (guard) {\n                                var useIf = guard === 'UseIf';\n                                result.push({\n                                    guard: guard,\n                                    useIf: useIf,\n                                    expression: { context: this.component, value: input.value }\n                                });\n                            }\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return result;\n        };\n        ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n            this.variables = variables;\n            templateVisitAll(this, astNodes);\n        };\n        ViewBuilder.prototype.build = function (componentId, targetStatements) {\n            var _this = this;\n            if (targetStatements === void 0) { targetStatements = []; }\n            var e_3, _a;\n            this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n            var viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n            var bindingCount = 0;\n            this.updates.forEach(function (expression) {\n                var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var bindingId = \"\" + bindingCount++;\n                var nameResolver = context === _this.component ? _this : defaultResolver;\n                var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                stmts.push(new ExpressionStatement(currValExpr));\n                viewStmts.push.apply(viewStmts, __spread(stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); })));\n            });\n            this.actions.forEach(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var bindingId = \"\" + bindingCount++;\n                var nameResolver = context === _this.component ? _this : defaultResolver;\n                var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n                viewStmts.push.apply(viewStmts, __spread(stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); })));\n            });\n            if (this.guards.length) {\n                var guardExpression = undefined;\n                try {\n                    for (var _b = __values(this.guards), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var guard = _c.value;\n                        var _d = this.preprocessUpdateExpression(guard.expression), context = _d.context, value = _d.value;\n                        var bindingId = \"\" + bindingCount++;\n                        var nameResolver = context === this.component ? this : defaultResolver;\n                        // We only support support simple expressions and ignore others as they\n                        // are unlikely to affect type narrowing.\n                        var _e = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _e.stmts, currValExpr = _e.currValExpr;\n                        if (stmts.length == 0) {\n                            var guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                            guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                        }\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n                if (guardExpression) {\n                    viewStmts = [new IfStmt(guardExpression, viewStmts)];\n                }\n            }\n            var viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n            var viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n            targetStatements.push(viewFactory);\n            return targetStatements;\n        };\n        ViewBuilder.prototype.visitBoundText = function (ast, context) {\n            var _this = this;\n            var astWithSource = ast.value;\n            var inter = astWithSource.ast;\n            inter.expressions.forEach(function (expr) {\n                return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n            });\n        };\n        ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n            this.visitElementOrTemplate(ast);\n            // Note: The old view compiler used to use an `any` type\n            // for the context in any embedded view.\n            // We keep this behaivor behind a flag for now.\n            if (this.options.fullTemplateTypeCheck) {\n                // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n                // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n                // stamped out if ngIf is truthy so any bindings in the template can assume that,\n                // if a nullable type is used for ngIf, that expression is not null or undefined.\n                var guards = this.getTypeGuardExpressions(ast);\n                var childVisitor = this.viewBuilderFactory(this, guards);\n                this.children.push(childVisitor);\n                childVisitor.visitAll(ast.variables, ast.children);\n            }\n        };\n        ViewBuilder.prototype.visitElement = function (ast, context) {\n            var _this = this;\n            this.visitElementOrTemplate(ast);\n            ast.inputs.forEach(function (inputAst) {\n                _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            templateVisitAll(this, ast.children);\n        };\n        ViewBuilder.prototype.visitElementOrTemplate = function (ast) {\n            var _this = this;\n            ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n            ast.references.forEach(function (ref) {\n                var outputVarType = null;\n                // Note: The old view compiler used to use an `any` type\n                // for directives exposed via `exportAs`.\n                // We keep this behaivor behind a flag for now.\n                if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                    outputVarType = ref.value.identifier.reference;\n                }\n                else {\n                    outputVarType = exports.BuiltinTypeName.Dynamic;\n                }\n                _this.refOutputVars.set(ref.name, outputVarType);\n            });\n            ast.outputs.forEach(function (outputAst) {\n                _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n            });\n        };\n        ViewBuilder.prototype.visitDirective = function (dirAst) {\n            var _this = this;\n            var dirType = dirAst.directive.type.reference;\n            dirAst.inputs.forEach(function (input) { return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan }); });\n            // Note: The old view compiler used to use an `any` type\n            // for expressions in host properties / events.\n            // We keep this behaivor behind a flag for now.\n            if (this.options.fullTemplateTypeCheck) {\n                dirAst.hostProperties.forEach(function (inputAst) { return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan }); });\n                dirAst.hostEvents.forEach(function (hostEventAst) { return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                }); });\n            }\n        };\n        ViewBuilder.prototype.getLocal = function (name) {\n            if (name == EventHandlerVars.event.name) {\n                return variable(this.getOutputVar(exports.BuiltinTypeName.Dynamic));\n            }\n            for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n                var outputVarType = void 0;\n                // check references\n                outputVarType = currBuilder.refOutputVars.get(name);\n                if (outputVarType == null) {\n                    // check variables\n                    var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                    if (varAst) {\n                        outputVarType = exports.BuiltinTypeName.Dynamic;\n                    }\n                }\n                if (outputVarType != null) {\n                    return variable(this.getOutputVar(outputVarType));\n                }\n            }\n            return null;\n        };\n        ViewBuilder.prototype.pipeOutputVar = function (name) {\n            var pipe = this.pipes.get(name);\n            if (!pipe) {\n                throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n            }\n            return this.getOutputVar(pipe);\n        };\n        ViewBuilder.prototype.preprocessUpdateExpression = function (expression) {\n            var _this = this;\n            return {\n                sourceSpan: expression.sourceSpan,\n                context: expression.context,\n                value: convertPropertyBindingBuiltins({\n                    createLiteralArrayConverter: function (argCount) { return function (args) {\n                        var arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    }; },\n                    createLiteralMapConverter: function (keys) { return function (values) {\n                        var entries = keys.map(function (k, i) { return ({\n                            key: k.key,\n                            value: values[i],\n                            quoted: k.quoted,\n                        }); });\n                        var map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    }; },\n                    createPipeConverter: function (name, argCount) { return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(exports.BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    }; },\n                }, expression.value)\n            };\n        };\n        ViewBuilder.prototype.visitNgContent = function (ast, context) { };\n        ViewBuilder.prototype.visitText = function (ast, context) { };\n        ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n        ViewBuilder.prototype.visitReference = function (ast, context) { };\n        ViewBuilder.prototype.visitVariable = function (ast, context) { };\n        ViewBuilder.prototype.visitEvent = function (ast, context) { };\n        ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n        ViewBuilder.prototype.visitAttr = function (ast, context) { };\n        return ViewBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CLASS_ATTR$1 = 'class';\n    var STYLE_ATTR = 'style';\n    var IMPLICIT_TEMPLATE_VAR = '\\$implicit';\n    var ViewCompileResult = /** @class */ (function () {\n        function ViewCompileResult(viewClassVar, rendererTypeVar) {\n            this.viewClassVar = viewClassVar;\n            this.rendererTypeVar = rendererTypeVar;\n        }\n        return ViewCompileResult;\n    }());\n    var ViewCompiler = /** @class */ (function () {\n        function ViewCompiler(_reflector) {\n            this._reflector = _reflector;\n        }\n        ViewCompiler.prototype.compileComponent = function (outputCtx, component, template, styles, usedPipes) {\n            var _this = this;\n            var _a;\n            var embeddedViewCount = 0;\n            var staticQueryIds = findStaticQueryIds(template);\n            var renderComponentVarName = undefined;\n            if (!component.isHost) {\n                var template_1 = component.template;\n                var customRenderData = [];\n                if (template_1.animations && template_1.animations.length) {\n                    customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n                }\n                var renderComponentVar = variable(rendererTypeName(component.type.reference));\n                renderComponentVarName = renderComponentVar.name;\n                outputCtx.statements.push(renderComponentVar\n                    .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                        new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                        new LiteralMapEntry('styles', styles, false),\n                        new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                    ])]))\n                    .toDeclStmt(importType(Identifiers.RendererType2), [exports.StmtModifier.Final, exports.StmtModifier.Exported]));\n            }\n            var viewBuilderFactory = function (parent) {\n                var embeddedViewIndex = embeddedViewCount++;\n                return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n            };\n            var visitor = viewBuilderFactory(null);\n            visitor.visitAll([], template);\n            (_a = outputCtx.statements).push.apply(_a, __spread(visitor.build()));\n            return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        };\n        return ViewCompiler;\n    }());\n    var LOG_VAR$1 = variable('_l');\n    var VIEW_VAR = variable('_v');\n    var CHECK_VAR = variable('_ck');\n    var COMP_VAR = variable('_co');\n    var EVENT_NAME_VAR = variable('en');\n    var ALLOW_DEFAULT_VAR = variable(\"ad\");\n    var ViewBuilder$1 = /** @class */ (function () {\n        function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n            this.reflector = reflector;\n            this.outputCtx = outputCtx;\n            this.parent = parent;\n            this.component = component;\n            this.embeddedViewIndex = embeddedViewIndex;\n            this.usedPipes = usedPipes;\n            this.staticQueryIds = staticQueryIds;\n            this.viewBuilderFactory = viewBuilderFactory;\n            this.nodes = [];\n            this.purePipeNodeIndices = Object.create(null);\n            // Need Object.create so that we don't have builtin values...\n            this.refNodeIndices = Object.create(null);\n            this.variables = [];\n            this.children = [];\n            // TODO(tbosch): The old view compiler used to use an `any` type\n            // for the context in any embedded view. We keep this behaivor for now\n            // to be able to introduce the new view compiler without too many errors.\n            this.compType = this.embeddedViewIndex > 0 ?\n                DYNAMIC_TYPE :\n                expressionType(outputCtx.importExpr(this.component.type.reference));\n            this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n        }\n        ViewBuilder.prototype.visitAll = function (variables, astNodes) {\n            var _this = this;\n            this.variables = variables;\n            // create the pipes for the pure pipes immediately, so that we know their indices.\n            if (!this.parent) {\n                this.usedPipes.forEach(function (pipe) {\n                    if (pipe.pure) {\n                        _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                    }\n                });\n            }\n            if (!this.parent) {\n                var queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n                this.component.viewQueries.forEach(function (query, queryIndex) {\n                    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                    var queryId = queryIndex + 1;\n                    var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                    var flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                    _this.nodes.push(function () { return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    }); });\n                });\n            }\n            templateVisitAll(this, astNodes);\n            if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n                // if the view is an embedded view, then we need to add an additional root node in some cases\n                this.nodes.push(function () { return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                }); });\n            }\n        };\n        ViewBuilder.prototype.build = function (targetStatements) {\n            if (targetStatements === void 0) { targetStatements = []; }\n            this.children.forEach(function (child) { return child.build(targetStatements); });\n            var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n            var updateRendererFn = this._createUpdateFn(updateRendererStmts);\n            var updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n            var viewFlags = 0 /* None */;\n            if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n                viewFlags |= 2 /* OnPush */;\n            }\n            var viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(LOG_VAR$1.name)], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                    literal(viewFlags),\n                    literalArr(nodeDefExprs),\n                    updateDirectivesFn,\n                    updateRendererFn,\n                ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [exports.StmtModifier.Exported] : []);\n            targetStatements.push(viewFactory);\n            return targetStatements;\n        };\n        ViewBuilder.prototype._createUpdateFn = function (updateStmts) {\n            var updateFn;\n            if (updateStmts.length > 0) {\n                var preStmts = [];\n                if (!this.component.isHost && findReadVarNames(updateStmts).has(COMP_VAR.name)) {\n                    preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n                }\n                updateFn = fn([\n                    new FnParam(CHECK_VAR.name, INFERRED_TYPE),\n                    new FnParam(VIEW_VAR.name, INFERRED_TYPE)\n                ], __spread(preStmts, updateStmts), INFERRED_TYPE);\n            }\n            else {\n                updateFn = NULL_EXPR;\n            }\n            return updateFn;\n        };\n        ViewBuilder.prototype.visitNgContent = function (ast, context) {\n            // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            }); });\n        };\n        ViewBuilder.prototype.visitText = function (ast, context) {\n            // Static text nodes have no check function\n            var checkIndex = -1;\n            this.nodes.push(function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            }); });\n        };\n        ViewBuilder.prototype.visitBoundText = function (ast, context) {\n            var _this = this;\n            var nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array\n            this.nodes.push(null);\n            var astWithSource = ast.value;\n            var inter = astWithSource.ast;\n            var updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) { return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }); });\n            // Check index is the same as the node index during compilation\n            // They might only differ at runtime\n            var checkIndex = nodeIndex;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            }); };\n        };\n        ViewBuilder.prototype.visitEmbeddedTemplate = function (ast, context) {\n            var _this = this;\n            var nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array\n            this.nodes.push(null);\n            var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n            var childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n            var childCount = this.nodes.length - nodeIndex - 1;\n            // anchorDef(\n            //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n            //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n            //   ViewDefinitionFactory): NodeDef;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            }); };\n        };\n        ViewBuilder.prototype.visitElement = function (ast, context) {\n            var _this = this;\n            var nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array so we can add children\n            this.nodes.push(null);\n            // Using a null element name creates an anchor.\n            var elName = isNgContainer(ast.name) ? null : ast.name;\n            var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n            var inputDefs = [];\n            var updateRendererExpressions = [];\n            var outputDefs = [];\n            if (elName) {\n                var hostBindings = ast.inputs\n                    .map(function (inputAst) { return ({\n                    context: COMP_VAR,\n                    inputAst: inputAst,\n                    dirAst: null,\n                }); })\n                    .concat(dirHostBindings);\n                if (hostBindings.length) {\n                    updateRendererExpressions =\n                        hostBindings.map(function (hostBinding, bindingIndex) { return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        }); });\n                    inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n                }\n                outputDefs = usedEvents.map(function (_a) {\n                    var _b = __read(_a, 2), target = _b[0], eventName = _b[1];\n                    return literalArr([literal(target), literal(eventName)]);\n                });\n            }\n            templateVisitAll(this, ast.children);\n            var childCount = this.nodes.length - nodeIndex - 1;\n            var compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n            var compRendererType = NULL_EXPR;\n            var compView = NULL_EXPR;\n            if (compAst) {\n                compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n                compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n            }\n            // Check index is the same as the node index during compilation\n            // They might only differ at runtime\n            var checkIndex = nodeIndex;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            }); };\n        };\n        ViewBuilder.prototype._visitElementOrTemplate = function (nodeIndex, ast) {\n            var _this = this;\n            var flags = 0 /* None */;\n            if (ast.hasViewContainer) {\n                flags |= 16777216 /* EmbeddedViews */;\n            }\n            var usedEvents = new Map();\n            ast.outputs.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n            ast.directives.forEach(function (dirAst) {\n                dirAst.hostEvents.forEach(function (event) {\n                    var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                    usedEvents.set(elementEventFullName(target, name), [target, name]);\n                });\n            });\n            var hostBindings = [];\n            var hostEvents = [];\n            this._visitComponentFactoryResolverProvider(ast.directives);\n            ast.providers.forEach(function (providerAst, providerIndex) {\n                var dirAst = undefined;\n                var dirIndex = undefined;\n                ast.directives.forEach(function (localDirAst, i) {\n                    if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                        dirAst = localDirAst;\n                        dirIndex = i;\n                    }\n                });\n                if (dirAst) {\n                    var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, _this.staticQueryIds.get(ast)), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                    hostBindings.push.apply(hostBindings, __spread(dirHostBindings));\n                    hostEvents.push.apply(hostEvents, __spread(dirHostEvents));\n                }\n                else {\n                    _this._visitProvider(providerAst, ast.queryMatches);\n                }\n            });\n            var queryMatchExprs = [];\n            ast.queryMatches.forEach(function (match) {\n                var valueType = undefined;\n                if (tokenReference(match.value) ===\n                    _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                    valueType = 0 /* ElementRef */;\n                }\n                else if (tokenReference(match.value) ===\n                    _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    valueType = 3 /* ViewContainerRef */;\n                }\n                else if (tokenReference(match.value) ===\n                    _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    valueType = 2 /* TemplateRef */;\n                }\n                if (valueType != null) {\n                    queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n                }\n            });\n            ast.references.forEach(function (ref) {\n                var valueType = undefined;\n                if (!ref.value) {\n                    valueType = 1 /* RenderElement */;\n                }\n                else if (tokenReference(ref.value) ===\n                    _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    valueType = 2 /* TemplateRef */;\n                }\n                if (valueType != null) {\n                    _this.refNodeIndices[ref.name] = nodeIndex;\n                    queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n                }\n            });\n            ast.outputs.forEach(function (outputAst) {\n                hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: null });\n            });\n            return {\n                flags: flags,\n                usedEvents: Array.from(usedEvents.values()),\n                queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                hostBindings: hostBindings,\n                hostEvents: hostEvents\n            };\n        };\n        ViewBuilder.prototype._visitDirective = function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n            var _this = this;\n            var nodeIndex = this.nodes.length;\n            // reserve the space in the nodeDefs array so we can add children\n            this.nodes.push(null);\n            dirAst.directive.queries.forEach(function (query, queryIndex) {\n                var queryId = dirAst.contentQueryStartId + queryIndex;\n                var flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n                var bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                _this.nodes.push(function () { return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                }); });\n            });\n            // Note: the operation below might also create new nodeDefs,\n            // but we don't want them to be a child of a directive,\n            // as they might be a provider/pipe on their own.\n            // I.e. we only allow queries as children of directives nodes.\n            var childCount = this.nodes.length - nodeIndex - 1;\n            var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n            refs.forEach(function (ref) {\n                if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                    _this.refNodeIndices[ref.name] = nodeIndex;\n                    queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n                }\n            });\n            if (dirAst.directive.isComponent) {\n                flags |= 32768 /* Component */;\n            }\n            var inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n                var mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n            });\n            var outputDefs = [];\n            var dirMeta = dirAst.directive;\n            Object.keys(dirMeta.outputs).forEach(function (propName) {\n                var eventName = dirMeta.outputs[propName];\n                if (usedEvents.has(eventName)) {\n                    // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                    outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n                }\n            });\n            var updateDirectiveExpressions = [];\n            if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n                updateDirectiveExpressions =\n                    dirAst.inputs.map(function (input, bindingIndex) { return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    }); });\n            }\n            var dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            var hostBindings = dirAst.hostProperties.map(function (inputAst) { return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            }); });\n            var hostEvents = dirAst.hostEvents.map(function (hostEventAst) { return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            }); });\n            // Check index is the same as the node index during compilation\n            // They might only differ at runtime\n            var checkIndex = nodeIndex;\n            this.nodes[nodeIndex] = function () { return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            }); };\n            return { hostBindings: hostBindings, hostEvents: hostEvents };\n        };\n        ViewBuilder.prototype._visitProvider = function (providerAst, queryMatches) {\n            this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n        };\n        ViewBuilder.prototype._visitComponentFactoryResolverProvider = function (directives) {\n            var componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n            if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n                var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n                this._addProviderNode({\n                    providerExpr: providerExpr,\n                    depsExpr: depsExpr,\n                    flags: flags,\n                    tokenExpr: tokenExpr,\n                    queryMatchExprs: [],\n                    sourceSpan: componentDirMeta.sourceSpan\n                });\n            }\n        };\n        ViewBuilder.prototype._addProviderNode = function (data) {\n            var nodeIndex = this.nodes.length;\n            // providerDef(\n            //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n            //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n            this.nodes.push(function () { return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            }); });\n        };\n        ViewBuilder.prototype._visitProviderOrDirective = function (providerAst, queryMatches) {\n            var flags = 0 /* None */;\n            var queryMatchExprs = [];\n            queryMatches.forEach(function (match) {\n                if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                    queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n                }\n            });\n            var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n            return {\n                flags: flags | providerFlags,\n                queryMatchExprs: queryMatchExprs,\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                tokenExpr: tokenExpr,\n                sourceSpan: providerAst.sourceSpan\n            };\n        };\n        ViewBuilder.prototype.getLocal = function (name) {\n            if (name == EventHandlerVars.event.name) {\n                return EventHandlerVars.event;\n            }\n            var currViewExpr = VIEW_VAR;\n            for (var currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n                currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n                // check references\n                var refNodeIndex = currBuilder.refNodeIndices[name];\n                if (refNodeIndex != null) {\n                    return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n                }\n                // check variables\n                var varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    var varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                    return currViewExpr.prop('context').prop(varValue);\n                }\n            }\n            return null;\n        };\n        ViewBuilder.prototype._createLiteralArrayConverter = function (sourceSpan, argCount) {\n            if (argCount === 0) {\n                var valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n                return function () { return valueExpr_1; };\n            }\n            var checkIndex = this.nodes.length;\n            this.nodes.push(function () { return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            }); });\n            return function (args) { return callCheckStmt(checkIndex, args); };\n        };\n        ViewBuilder.prototype._createLiteralMapConverter = function (sourceSpan, keys) {\n            if (keys.length === 0) {\n                var valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n                return function () { return valueExpr_2; };\n            }\n            var map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n            var checkIndex = this.nodes.length;\n            this.nodes.push(function () { return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            }); });\n            return function (args) { return callCheckStmt(checkIndex, args); };\n        };\n        ViewBuilder.prototype._createPipeConverter = function (expression, name, argCount) {\n            var pipe = this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; });\n            if (pipe.pure) {\n                var checkIndex_1 = this.nodes.length;\n                this.nodes.push(function () { return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                }); });\n                // find underlying pipe in the component view\n                var compViewExpr = VIEW_VAR;\n                var compBuilder = this;\n                while (compBuilder.parent) {\n                    compBuilder = compBuilder.parent;\n                    compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n                }\n                var pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n                var pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n                return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args))); };\n            }\n            else {\n                var nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n                var nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n                return function (args) { return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args)); };\n            }\n        };\n        ViewBuilder.prototype._createPipe = function (sourceSpan, pipe) {\n            var _this = this;\n            var nodeIndex = this.nodes.length;\n            var flags = 0 /* None */;\n            pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n                // for pipes, we only support ngOnDestroy\n                if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                    flags |= lifecycleHookToNodeFlag(lifecycleHook);\n                }\n            });\n            var depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n            // function pipeDef(\n            //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n            this.nodes.push(function () { return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            }); });\n            return nodeIndex;\n        };\n        /**\n         * For the AST in `UpdateExpression.value`:\n         * - create nodes for pipes, literal arrays and, literal maps,\n         * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n         *\n         * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n         */\n        ViewBuilder.prototype._preprocessUpdateExpression = function (expression) {\n            var _this = this;\n            return {\n                nodeIndex: expression.nodeIndex,\n                bindingIndex: expression.bindingIndex,\n                sourceSpan: expression.sourceSpan,\n                context: expression.context,\n                value: convertPropertyBindingBuiltins({\n                    createLiteralArrayConverter: function (argCount) { return _this._createLiteralArrayConverter(expression.sourceSpan, argCount); },\n                    createLiteralMapConverter: function (keys) {\n                        return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                    },\n                    createPipeConverter: function (name, argCount) {\n                        return _this._createPipeConverter(expression, name, argCount);\n                    }\n                }, expression.value)\n            };\n        };\n        ViewBuilder.prototype._createNodeExpressions = function () {\n            var self = this;\n            var updateBindingCount = 0;\n            var updateRendererStmts = [];\n            var updateDirectivesStmts = [];\n            var nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n                var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n                if (updateRenderer) {\n                    updateRendererStmts.push.apply(updateRendererStmts, __spread(createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false)));\n                }\n                if (updateDirectives) {\n                    updateDirectivesStmts.push.apply(updateDirectivesStmts, __spread(createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0)));\n                }\n                // We use a comma expression to call the log function before\n                // the nodeDef function, but still use the result of the nodeDef function\n                // as the value.\n                // Note: We only add the logger to elements / text nodes,\n                // so we don't generate too much code.\n                var logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                    new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                    nodeDef;\n                return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n            });\n            return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n            function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n                var updateStmts = [];\n                var exprs = expressions.map(function (_a) {\n                    var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                    var bindingId = \"\" + updateBindingCount++;\n                    var nameResolver = context === COMP_VAR ? self : null;\n                    var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                    updateStmts.push.apply(updateStmts, __spread(stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); })));\n                    return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n                });\n                if (expressions.length || allowEmptyExprs) {\n                    updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n                }\n                return updateStmts;\n            }\n        };\n        ViewBuilder.prototype._createElementHandleEventFn = function (nodeIndex, handlers) {\n            var _this = this;\n            var handleEventStmts = [];\n            var handleEventBindingCount = 0;\n            handlers.forEach(function (_a) {\n                var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n                var bindingId = \"\" + handleEventBindingCount++;\n                var nameResolver = context === COMP_VAR ? _this : null;\n                var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n                var trueStmts = stmts;\n                if (allowDefault) {\n                    trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n                }\n                var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n                var fullEventName = elementEventFullName(eventTarget, eventName);\n                handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n            });\n            var handleEventFn;\n            if (handleEventStmts.length > 0) {\n                var preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n                if (!this.component.isHost && findReadVarNames(handleEventStmts).has(COMP_VAR.name)) {\n                    preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n                }\n                handleEventFn = fn([\n                    new FnParam(VIEW_VAR.name, INFERRED_TYPE),\n                    new FnParam(EVENT_NAME_VAR.name, INFERRED_TYPE),\n                    new FnParam(EventHandlerVars.event.name, INFERRED_TYPE)\n                ], __spread(preStmts, handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n            }\n            else {\n                handleEventFn = NULL_EXPR;\n            }\n            return handleEventFn;\n        };\n        ViewBuilder.prototype.visitDirective = function (ast, context) { };\n        ViewBuilder.prototype.visitDirectiveProperty = function (ast, context) { };\n        ViewBuilder.prototype.visitReference = function (ast, context) { };\n        ViewBuilder.prototype.visitVariable = function (ast, context) { };\n        ViewBuilder.prototype.visitEvent = function (ast, context) { };\n        ViewBuilder.prototype.visitElementProperty = function (ast, context) { };\n        ViewBuilder.prototype.visitAttr = function (ast, context) { };\n        return ViewBuilder;\n    }());\n    function needsAdditionalRootNode(astNodes) {\n        var lastAstNode = astNodes[astNodes.length - 1];\n        if (lastAstNode instanceof EmbeddedTemplateAst) {\n            return lastAstNode.hasViewContainer;\n        }\n        if (lastAstNode instanceof ElementAst) {\n            if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n                return needsAdditionalRootNode(lastAstNode.children);\n            }\n            return lastAstNode.hasViewContainer;\n        }\n        return lastAstNode instanceof NgContentAst;\n    }\n    function elementBindingDef(inputAst, dirAst) {\n        var inputType = inputAst.type;\n        switch (inputType) {\n            case 1 /* Attribute */:\n                return literalArr([\n                    literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                    literal(inputAst.securityContext)\n                ]);\n            case 0 /* Property */:\n                return literalArr([\n                    literal(8 /* TypeProperty */), literal(inputAst.name),\n                    literal(inputAst.securityContext)\n                ]);\n            case 4 /* Animation */:\n                var bindingType = 8 /* TypeProperty */ |\n                    (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                        16 /* SyntheticProperty */);\n                return literalArr([\n                    literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n                ]);\n            case 2 /* Class */:\n                return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n            case 3 /* Style */:\n                return literalArr([\n                    literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n                ]);\n            default:\n                // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n                // However Closure Compiler does not understand that and reports an error in typed mode.\n                // The `throw new Error` below works around the problem, and the unexpected: never variable\n                // makes sure tsc still checks this code is unreachable.\n                var unexpected = inputType;\n                throw new Error(\"unexpected \" + unexpected);\n        }\n    }\n    function fixedAttrsDef(elementAst) {\n        var mapResult = Object.create(null);\n        elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n        elementAst.directives.forEach(function (dirAst) {\n            Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n                var value = dirAst.directive.hostAttributes[name];\n                var prevValue = mapResult[name];\n                mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n            });\n        });\n        // Note: We need to sort to get a defined output order\n        // for tests and for caching generated artifacts...\n        return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n    }\n    function mergeAttributeValue(attrName, attrValue1, attrValue2) {\n        if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n            return attrValue1 + \" \" + attrValue2;\n        }\n        else {\n            return attrValue2;\n        }\n    }\n    function callCheckStmt(nodeIndex, exprs) {\n        if (exprs.length > 10) {\n            return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n        }\n        else {\n            return CHECK_VAR.callFn(__spread([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)], exprs));\n        }\n    }\n    function callUnwrapValue(nodeIndex, bindingIdx, expr) {\n        return importExpr(Identifiers.unwrapValue).callFn([\n            VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n        ]);\n    }\n    function findStaticQueryIds(nodes, result) {\n        if (result === void 0) { result = new Map(); }\n        nodes.forEach(function (node) {\n            var staticQueryIds = new Set();\n            var dynamicQueryIds = new Set();\n            var queryMatches = undefined;\n            if (node instanceof ElementAst) {\n                findStaticQueryIds(node.children, result);\n                node.children.forEach(function (child) {\n                    var childData = result.get(child);\n                    childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                    childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                });\n                queryMatches = node.queryMatches;\n            }\n            else if (node instanceof EmbeddedTemplateAst) {\n                findStaticQueryIds(node.children, result);\n                node.children.forEach(function (child) {\n                    var childData = result.get(child);\n                    childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                    childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                });\n                queryMatches = node.queryMatches;\n            }\n            if (queryMatches) {\n                queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n            }\n            dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n            result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n        });\n        return result;\n    }\n    function staticViewQueryIds(nodeStaticQueryIds) {\n        var staticQueryIds = new Set();\n        var dynamicQueryIds = new Set();\n        Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n            entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n            entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n        });\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n    }\n    function elementEventNameAndTarget(eventAst, dirAst) {\n        if (eventAst.isAnimation) {\n            return {\n                name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n                target: dirAst && dirAst.directive.isComponent ? 'component' : null\n            };\n        }\n        else {\n            return eventAst;\n        }\n    }\n    function calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n        var flags = 0 /* None */;\n        // Note: We only make queries static that query for a single item.\n        // This is because of backwards compatibility with the old view compiler...\n        if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n            flags |= 268435456 /* StaticQuery */;\n        }\n        else {\n            flags |= 536870912 /* DynamicQuery */;\n        }\n        return flags;\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A container for message extracted from the templates.\n     */\n    var MessageBundle = /** @class */ (function () {\n        function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n            if (_locale === void 0) { _locale = null; }\n            this._htmlParser = _htmlParser;\n            this._implicitTags = _implicitTags;\n            this._implicitAttrs = _implicitAttrs;\n            this._locale = _locale;\n            this._messages = [];\n        }\n        MessageBundle.prototype.updateFromTemplate = function (html, url, interpolationConfig) {\n            var _a;\n            var htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n            if (htmlParserResult.errors.length) {\n                return htmlParserResult.errors;\n            }\n            var i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n            if (i18nParserResult.errors.length) {\n                return i18nParserResult.errors;\n            }\n            (_a = this._messages).push.apply(_a, __spread(i18nParserResult.messages));\n            return [];\n        };\n        // Return the message in the internal format\n        // The public (serialized) format might be different, see the `write` method.\n        MessageBundle.prototype.getMessages = function () { return this._messages; };\n        MessageBundle.prototype.write = function (serializer, filterSources) {\n            var messages = {};\n            var mapperVisitor = new MapPlaceholderNames();\n            // Deduplicate messages based on their ID\n            this._messages.forEach(function (message) {\n                var _a;\n                var id = serializer.digest(message);\n                if (!messages.hasOwnProperty(id)) {\n                    messages[id] = message;\n                }\n                else {\n                    (_a = messages[id].sources).push.apply(_a, __spread(message.sources));\n                }\n            });\n            // Transform placeholder names using the serializer mapping\n            var msgList = Object.keys(messages).map(function (id) {\n                var mapper = serializer.createNameMapper(messages[id]);\n                var src = messages[id];\n                var nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n                var transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n                transformedMessage.sources = src.sources;\n                if (filterSources) {\n                    transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n                }\n                return transformedMessage;\n            });\n            return serializer.write(msgList, this._locale);\n        };\n        return MessageBundle;\n    }());\n    // Transform an i18n AST by renaming the placeholder nodes with the given mapper\n    var MapPlaceholderNames = /** @class */ (function (_super) {\n        __extends(MapPlaceholderNames, _super);\n        function MapPlaceholderNames() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        MapPlaceholderNames.prototype.convert = function (nodes, mapper) {\n            var _this = this;\n            return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n        };\n        MapPlaceholderNames.prototype.visitTagPlaceholder = function (ph, mapper) {\n            var _this = this;\n            var startName = mapper.toPublicName(ph.startName);\n            var closeName = ph.closeName ? mapper.toPublicName(ph.closeName) : ph.closeName;\n            var children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n            return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n        };\n        MapPlaceholderNames.prototype.visitPlaceholder = function (ph, mapper) {\n            return new Placeholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n        };\n        MapPlaceholderNames.prototype.visitIcuPlaceholder = function (ph, mapper) {\n            return new IcuPlaceholder(ph.value, mapper.toPublicName(ph.name), ph.sourceSpan);\n        };\n        return MapPlaceholderNames;\n    }(CloneVisitor));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GeneratedFile = /** @class */ (function () {\n        function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n            this.srcFileUrl = srcFileUrl;\n            this.genFileUrl = genFileUrl;\n            if (typeof sourceOrStmts === 'string') {\n                this.source = sourceOrStmts;\n                this.stmts = null;\n            }\n            else {\n                this.source = null;\n                this.stmts = sourceOrStmts;\n            }\n        }\n        GeneratedFile.prototype.isEquivalent = function (other) {\n            if (this.genFileUrl !== other.genFileUrl) {\n                return false;\n            }\n            if (this.source) {\n                return this.source === other.source;\n            }\n            if (other.stmts == null) {\n                return false;\n            }\n            // Note: the constructor guarantees that if this.source is not filled,\n            // then this.stmts is.\n            return areAllEquivalent(this.stmts, other.stmts);\n        };\n        return GeneratedFile;\n    }());\n    function toTypeScript(file, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        if (!file.stmts) {\n            throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n        }\n        return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function listLazyRoutes(moduleMeta, reflector) {\n        var e_1, _a, e_2, _b;\n        var allLazyRoutes = [];\n        try {\n            for (var _c = __values(moduleMeta.transitiveModule.providers), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = _d.value, provider = _e.provider, module = _e.module;\n                if (tokenReference(provider.token) === reflector.ROUTES) {\n                    var loadChildren = _collectLoadChildren(provider.useValue);\n                    try {\n                        for (var loadChildren_1 = __values(loadChildren), loadChildren_1_1 = loadChildren_1.next(); !loadChildren_1_1.done; loadChildren_1_1 = loadChildren_1.next()) {\n                            var route = loadChildren_1_1.value;\n                            allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (loadChildren_1_1 && !loadChildren_1_1.done && (_b = loadChildren_1.return)) _b.call(loadChildren_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return allLazyRoutes;\n    }\n    function _collectLoadChildren(routes, target) {\n        if (target === void 0) { target = []; }\n        var e_3, _a;\n        if (typeof routes === 'string') {\n            target.push(routes);\n        }\n        else if (Array.isArray(routes)) {\n            try {\n                for (var routes_1 = __values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                    var route = routes_1_1.value;\n                    _collectLoadChildren(route, target);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        else if (routes.loadChildren) {\n            _collectLoadChildren(routes.loadChildren, target);\n        }\n        else if (routes.children) {\n            _collectLoadChildren(routes.children, target);\n        }\n        return target;\n    }\n    function parseLazyRoute(route, reflector, module) {\n        var _a = __read(route.split('#'), 2), routePath = _a[0], routeName = _a[1];\n        var referencedModule = reflector.resolveExternalReference({\n            moduleName: routePath,\n            name: routeName,\n        }, module ? module.filePath : undefined);\n        return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\n    var ResolvedStaticSymbol = /** @class */ (function () {\n        function ResolvedStaticSymbol(symbol, metadata) {\n            this.symbol = symbol;\n            this.metadata = metadata;\n        }\n        return ResolvedStaticSymbol;\n    }());\n    var SUPPORTED_SCHEMA_VERSION = 4;\n    /**\n     * This class is responsible for loading metadata per symbol,\n     * and normalizing references between symbols.\n     *\n     * Internally, it only uses symbols without members,\n     * and deduces the values for symbols with members based\n     * on these symbols.\n     */\n    var StaticSymbolResolver = /** @class */ (function () {\n        function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n            this.host = host;\n            this.staticSymbolCache = staticSymbolCache;\n            this.summaryResolver = summaryResolver;\n            this.errorRecorder = errorRecorder;\n            this.metadataCache = new Map();\n            // Note: this will only contain StaticSymbols without members!\n            this.resolvedSymbols = new Map();\n            this.resolvedFilePaths = new Set();\n            // Note: this will only contain StaticSymbols without members!\n            this.importAs = new Map();\n            this.symbolResourcePaths = new Map();\n            this.symbolFromFile = new Map();\n            this.knownFileNameToModuleNames = new Map();\n        }\n        StaticSymbolResolver.prototype.resolveSymbol = function (staticSymbol) {\n            if (staticSymbol.members.length > 0) {\n                return this._resolveSymbolMembers(staticSymbol);\n            }\n            // Note: always ask for a summary first,\n            // as we might have read shallow metadata via a .d.ts file\n            // for the symbol.\n            var resultFromSummary = this._resolveSymbolFromSummary(staticSymbol);\n            if (resultFromSummary) {\n                return resultFromSummary;\n            }\n            var resultFromCache = this.resolvedSymbols.get(staticSymbol);\n            if (resultFromCache) {\n                return resultFromCache;\n            }\n            // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n            // have summaries, only .d.ts files. So we always need to check both, the summary\n            // and metadata.\n            this._createSymbolsOf(staticSymbol.filePath);\n            return this.resolvedSymbols.get(staticSymbol);\n        };\n        /**\n         * getImportAs produces a symbol that can be used to import the given symbol.\n         * The import might be different than the symbol if the symbol is exported from\n         * a library with a summary; in which case we want to import the symbol from the\n         * ngfactory re-export instead of directly to avoid introducing a direct dependency\n         * on an otherwise indirect dependency.\n         *\n         * @param staticSymbol the symbol for which to generate a import symbol\n         */\n        StaticSymbolResolver.prototype.getImportAs = function (staticSymbol, useSummaries) {\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (staticSymbol.members.length) {\n                var baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n                var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n                return baseImportAs ?\n                    this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                    null;\n            }\n            var summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n            if (summarizedFileName !== staticSymbol.filePath) {\n                var summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n                var baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n                var baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n                return baseImportAs ?\n                    this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                    null;\n            }\n            var result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n            if (!result) {\n                result = this.importAs.get(staticSymbol);\n            }\n            return result;\n        };\n        /**\n         * getResourcePath produces the path to the original location of the symbol and should\n         * be used to determine the relative location of resource references recorded in\n         * symbol metadata.\n         */\n        StaticSymbolResolver.prototype.getResourcePath = function (staticSymbol) {\n            return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n        };\n        /**\n         * getTypeArity returns the number of generic type parameters the given symbol\n         * has. If the symbol is not a type the result is null.\n         */\n        StaticSymbolResolver.prototype.getTypeArity = function (staticSymbol) {\n            // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n            // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n            // All references to generated classes must include the correct arity whenever\n            // generating code.\n            if (isGeneratedFile(staticSymbol.filePath)) {\n                return null;\n            }\n            var resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n            while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n                resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n            }\n            return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n        };\n        StaticSymbolResolver.prototype.getKnownModuleName = function (filePath) {\n            return this.knownFileNameToModuleNames.get(filePath) || null;\n        };\n        StaticSymbolResolver.prototype.recordImportAs = function (sourceSymbol, targetSymbol) {\n            sourceSymbol.assertNoMembers();\n            targetSymbol.assertNoMembers();\n            this.importAs.set(sourceSymbol, targetSymbol);\n        };\n        StaticSymbolResolver.prototype.recordModuleNameForFileName = function (fileName, moduleName) {\n            this.knownFileNameToModuleNames.set(fileName, moduleName);\n        };\n        /**\n         * Invalidate all information derived from the given file.\n         *\n         * @param fileName the file to invalidate\n         */\n        StaticSymbolResolver.prototype.invalidateFile = function (fileName) {\n            var e_1, _a;\n            this.metadataCache.delete(fileName);\n            this.resolvedFilePaths.delete(fileName);\n            var symbols = this.symbolFromFile.get(fileName);\n            if (symbols) {\n                this.symbolFromFile.delete(fileName);\n                try {\n                    for (var symbols_1 = __values(symbols), symbols_1_1 = symbols_1.next(); !symbols_1_1.done; symbols_1_1 = symbols_1.next()) {\n                        var symbol = symbols_1_1.value;\n                        this.resolvedSymbols.delete(symbol);\n                        this.importAs.delete(symbol);\n                        this.symbolResourcePaths.delete(symbol);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (symbols_1_1 && !symbols_1_1.done && (_a = symbols_1.return)) _a.call(symbols_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        };\n        /** @internal */\n        StaticSymbolResolver.prototype.ignoreErrorsFor = function (cb) {\n            var recorder = this.errorRecorder;\n            this.errorRecorder = function () { };\n            try {\n                return cb();\n            }\n            finally {\n                this.errorRecorder = recorder;\n            }\n        };\n        StaticSymbolResolver.prototype._resolveSymbolMembers = function (staticSymbol) {\n            var members = staticSymbol.members;\n            var baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n            if (!baseResolvedSymbol) {\n                return null;\n            }\n            var baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n            if (baseMetadata instanceof StaticSymbol) {\n                return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n            }\n            else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n                if (baseMetadata.statics && members.length === 1) {\n                    return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n                }\n            }\n            else {\n                var value = baseMetadata;\n                for (var i = 0; i < members.length && value; i++) {\n                    value = value[members[i]];\n                }\n                return new ResolvedStaticSymbol(staticSymbol, value);\n            }\n            return null;\n        };\n        StaticSymbolResolver.prototype._resolveSymbolFromSummary = function (staticSymbol) {\n            var summary = this.summaryResolver.resolveSummary(staticSymbol);\n            return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n        };\n        /**\n         * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n         * All types passed to the StaticResolver should be pseudo-types returned by this method.\n         *\n         * @param declarationFile the absolute path of the file where the symbol is declared\n         * @param name the name of the type.\n         * @param members a symbol for a static member of the named type\n         */\n        StaticSymbolResolver.prototype.getStaticSymbol = function (declarationFile, name, members) {\n            return this.staticSymbolCache.get(declarationFile, name, members);\n        };\n        /**\n         * hasDecorators checks a file's metadata for the presence of decorators without evaluating the\n         * metadata.\n         *\n         * @param filePath the absolute path to examine for decorators.\n         * @returns true if any class in the file has a decorator.\n         */\n        StaticSymbolResolver.prototype.hasDecorators = function (filePath) {\n            var metadata = this.getModuleMetadata(filePath);\n            if (metadata['metadata']) {\n                return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                    var entry = metadata['metadata'][metadataKey];\n                    return entry && entry.__symbolic === 'class' && entry.decorators;\n                });\n            }\n            return false;\n        };\n        StaticSymbolResolver.prototype.getSymbolsOf = function (filePath) {\n            var summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n            if (summarySymbols) {\n                return summarySymbols;\n            }\n            // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n            // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n            this._createSymbolsOf(filePath);\n            var metadataSymbols = [];\n            this.resolvedSymbols.forEach(function (resolvedSymbol) {\n                if (resolvedSymbol.symbol.filePath === filePath) {\n                    metadataSymbols.push(resolvedSymbol.symbol);\n                }\n            });\n            return metadataSymbols;\n        };\n        StaticSymbolResolver.prototype._createSymbolsOf = function (filePath) {\n            var _this = this;\n            var e_2, _a;\n            if (this.resolvedFilePaths.has(filePath)) {\n                return;\n            }\n            this.resolvedFilePaths.add(filePath);\n            var resolvedSymbols = [];\n            var metadata = this.getModuleMetadata(filePath);\n            if (metadata['importAs']) {\n                // Index bundle indices should use the importAs module name defined\n                // in the bundle.\n                this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n            }\n            // handle the symbols in one of the re-export location\n            if (metadata['exports']) {\n                var _loop_1 = function (moduleExport) {\n                    // handle the symbols in the list of explicitly re-exported symbols.\n                    if (moduleExport.export) {\n                        moduleExport.export.forEach(function (exportSymbol) {\n                            var symbolName;\n                            if (typeof exportSymbol === 'string') {\n                                symbolName = exportSymbol;\n                            }\n                            else {\n                                symbolName = exportSymbol.as;\n                            }\n                            symbolName = unescapeIdentifier(symbolName);\n                            var symName = symbolName;\n                            if (typeof exportSymbol !== 'string') {\n                                symName = unescapeIdentifier(exportSymbol.name);\n                            }\n                            var resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                            if (resolvedModule) {\n                                var targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                                var sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                                resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                            }\n                        });\n                    }\n                    else {\n                        // handle the symbols via export * directives.\n                        var resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var nestedExports = this_1.getSymbolsOf(resolvedModule);\n                            nestedExports.forEach(function (targetSymbol) {\n                                var sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                                resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                            });\n                        }\n                    }\n                };\n                var this_1 = this;\n                try {\n                    for (var _b = __values(metadata['exports']), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var moduleExport = _c.value;\n                        _loop_1(moduleExport);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            // handle the actual metadata. Has to be after the exports\n            // as there might be collisions in the names, and we want the symbols\n            // of the current module to win ofter reexports.\n            if (metadata['metadata']) {\n                // handle direct declarations of the symbol\n                var topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n                var origins_1 = metadata['origins'] || {};\n                Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                    var symbolMeta = metadata['metadata'][metadataKey];\n                    var name = unescapeIdentifier(metadataKey);\n                    var symbol = _this.getStaticSymbol(filePath, name);\n                    var origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                    if (origin) {\n                        // If the symbol is from a bundled index, use the declaration location of the\n                        // symbol so relative references (such as './my.html') will be calculated\n                        // correctly.\n                        var originFilePath = _this.resolveModule(origin, filePath);\n                        if (!originFilePath) {\n                            _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + _this.host.getOutputName(filePath)));\n                        }\n                        else {\n                            _this.symbolResourcePaths.set(symbol, originFilePath);\n                        }\n                    }\n                    resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n                });\n            }\n            resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n            this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n        };\n        StaticSymbolResolver.prototype.createResolvedSymbol = function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n            var _this = this;\n            // For classes that don't have Angular summaries / metadata,\n            // we only keep their arity, but nothing else\n            // (e.g. their constructor parameters).\n            // We do this to prevent introducing deep imports\n            // as we didn't generate .ngfactory.ts files with proper reexports.\n            var isTsFile = TS.test(sourceSymbol.filePath);\n            if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n                metadata['__symbolic'] === 'class') {\n                var transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n                return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n            }\n            var _originalFileMemo;\n            var getOriginalName = function () {\n                if (!_originalFileMemo) {\n                    // Guess what the original file name is from the reference. If it has a `.d.ts` extension\n                    // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                    // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                    // location as it is not important to finding the file.\n                    _originalFileMemo =\n                        _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                            .replace(/^.*node_modules[/\\\\]/, ''));\n                }\n                return _originalFileMemo;\n            };\n            var self = this;\n            var ReferenceTransformer = /** @class */ (function (_super) {\n                __extends(ReferenceTransformer, _super);\n                function ReferenceTransformer() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                ReferenceTransformer.prototype.visitStringMap = function (map, functionParams) {\n                    var symbolic = map['__symbolic'];\n                    if (symbolic === 'function') {\n                        var oldLen = functionParams.length;\n                        functionParams.push.apply(functionParams, __spread((map['parameters'] || [])));\n                        var result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                        functionParams.length = oldLen;\n                        return result;\n                    }\n                    else if (symbolic === 'reference') {\n                        var module = map['module'];\n                        var name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                        if (!name_1) {\n                            return null;\n                        }\n                        var filePath = void 0;\n                        if (module) {\n                            filePath = self.resolveModule(module, sourceSymbol.filePath);\n                            if (!filePath) {\n                                return {\n                                    __symbolic: 'error',\n                                    message: \"Could not resolve \" + module + \" relative to \" + self.host.getMetadataFor(sourceSymbol.filePath) + \".\",\n                                    line: map.line,\n                                    character: map.character,\n                                    fileName: getOriginalName()\n                                };\n                            }\n                            return {\n                                __symbolic: 'resolved',\n                                symbol: self.getStaticSymbol(filePath, name_1),\n                                line: map.line,\n                                character: map.character,\n                                fileName: getOriginalName()\n                            };\n                        }\n                        else if (functionParams.indexOf(name_1) >= 0) {\n                            // reference to a function parameter\n                            return { __symbolic: 'reference', name: name_1 };\n                        }\n                        else {\n                            if (topLevelSymbolNames.has(name_1)) {\n                                return self.getStaticSymbol(topLevelPath, name_1);\n                            }\n                        }\n                    }\n                    else if (symbolic === 'error') {\n                        return __assign({}, map, { fileName: getOriginalName() });\n                    }\n                    else {\n                        return _super.prototype.visitStringMap.call(this, map, functionParams);\n                    }\n                };\n                return ReferenceTransformer;\n            }(ValueTransformer));\n            var transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n            var unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n            if (unwrappedTransformedMeta instanceof StaticSymbol) {\n                return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n            }\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n        };\n        StaticSymbolResolver.prototype.createExport = function (sourceSymbol, targetSymbol) {\n            sourceSymbol.assertNoMembers();\n            targetSymbol.assertNoMembers();\n            if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n                this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n                // This case is for an ng library importing symbols from a plain ts library\n                // transitively.\n                // Note: We rely on the fact that we discover symbols in the direction\n                // from source files to library files\n                this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n            }\n            return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n        };\n        StaticSymbolResolver.prototype.reportError = function (error$$1, context, path) {\n            if (this.errorRecorder) {\n                this.errorRecorder(error$$1, (context && context.filePath) || path);\n            }\n            else {\n                throw error$$1;\n            }\n        };\n        /**\n         * @param module an absolute path to a module file.\n         */\n        StaticSymbolResolver.prototype.getModuleMetadata = function (module) {\n            var moduleMetadata = this.metadataCache.get(module);\n            if (!moduleMetadata) {\n                var moduleMetadatas = this.host.getMetadataFor(module);\n                if (moduleMetadatas) {\n                    var maxVersion_1 = -1;\n                    moduleMetadatas.forEach(function (md) {\n                        if (md && md['version'] > maxVersion_1) {\n                            maxVersion_1 = md['version'];\n                            moduleMetadata = md;\n                        }\n                    });\n                }\n                if (!moduleMetadata) {\n                    moduleMetadata =\n                        { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n                }\n                if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                    var errorMessage = moduleMetadata['version'] == 2 ?\n                        \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                        \"Metadata version mismatch for module \" + this.host.getOutputName(module) + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                    this.reportError(new Error(errorMessage));\n                }\n                this.metadataCache.set(module, moduleMetadata);\n            }\n            return moduleMetadata;\n        };\n        StaticSymbolResolver.prototype.getSymbolByModule = function (module, symbolName, containingFile) {\n            var filePath = this.resolveModule(module, containingFile);\n            if (!filePath) {\n                this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                    this.host.getOutputName(containingFile) : '')));\n                return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n            }\n            return this.getStaticSymbol(filePath, symbolName);\n        };\n        StaticSymbolResolver.prototype.resolveModule = function (module, containingFile) {\n            try {\n                return this.host.moduleNameToFileName(module, containingFile);\n            }\n            catch (e) {\n                console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n                this.reportError(e, undefined, containingFile);\n            }\n            return null;\n        };\n        return StaticSymbolResolver;\n    }());\n    // Remove extra underscore from escaped identifier.\n    // See https://github.com/Microsoft/TypeScript/blob/master/src/compiler/utilities.ts\n    function unescapeIdentifier(identifier) {\n        return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n    }\n    function unwrapResolvedMetadata(metadata) {\n        if (metadata && metadata.__symbolic === 'resolved') {\n            return metadata.symbol;\n        }\n        return metadata;\n    }\n\n    function serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n        var toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n        // for symbols, we use everything except for the class metadata itself\n        // (we keep the statics though), as the class metadata is contained in the\n        // CompileTypeSummary.\n        symbols.forEach(function (resolvedSymbol) { return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }); });\n        // Add type summaries.\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n        });\n        var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n        if (forJitCtx) {\n            var forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n            types.forEach(function (_a) {\n                var summary = _a.summary, metadata = _a.metadata;\n                forJitSerializer_1.addSourceType(summary, metadata);\n            });\n            toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n                if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                    forJitSerializer_1.addLibType(summary.type);\n                }\n            });\n            forJitSerializer_1.serialize(exportAs);\n        }\n        return { json: json, exportAs: exportAs };\n    }\n    function deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n        var deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n        return deserializer.deserialize(libraryFileName, json);\n    }\n    function createForJitStub(outputCtx, reference) {\n        return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n    }\n    function createSummaryForJitFunction(outputCtx, reference, value) {\n        var fnName = summaryForJitName(reference.name);\n        outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n            exports.StmtModifier.Final, exports.StmtModifier.Exported\n        ]));\n    }\n    var ToJsonSerializer = /** @class */ (function (_super) {\n        __extends(ToJsonSerializer, _super);\n        function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n            var _this = _super.call(this) || this;\n            _this.symbolResolver = symbolResolver;\n            _this.summaryResolver = summaryResolver;\n            _this.srcFileName = srcFileName;\n            // Note: This only contains symbols without members.\n            _this.symbols = [];\n            _this.indexBySymbol = new Map();\n            _this.reexportedBy = new Map();\n            // This now contains a `__symbol: number` in the place of\n            // StaticSymbols, but otherwise has the same shape as the original objects.\n            _this.processedSummaryBySymbol = new Map();\n            _this.processedSummaries = [];\n            _this.unprocessedSymbolSummariesBySymbol = new Map();\n            _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n            return _this;\n        }\n        ToJsonSerializer.prototype.addSummary = function (summary) {\n            var _this = this;\n            var unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n            var processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n            if (!unprocessedSummary) {\n                unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n                this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n                processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n                this.processedSummaries.push(processedSummary);\n                this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n            }\n            if (!unprocessedSummary.metadata && summary.metadata) {\n                var metadata_1 = summary.metadata || {};\n                if (metadata_1.__symbolic === 'class') {\n                    // For classes, we keep everything except their class decorators.\n                    // We need to keep e.g. the ctor args, method names, method decorators\n                    // so that the class can be extended in another compilation unit.\n                    // We don't keep the class decorators as\n                    // 1) they refer to data\n                    //   that should not cause a rebuild of downstream compilation units\n                    //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                    // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                    var clone_1 = {};\n                    Object.keys(metadata_1).forEach(function (propName) {\n                        if (propName !== 'decorators') {\n                            clone_1[propName] = metadata_1[propName];\n                        }\n                    });\n                    metadata_1 = clone_1;\n                }\n                else if (isCall(metadata_1)) {\n                    if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                        // Don't store complex calls as we won't be able to simplify them anyways later on.\n                        metadata_1 = {\n                            __symbolic: 'error',\n                            message: 'Complex function calls are not supported.',\n                        };\n                    }\n                }\n                // Note: We need to keep storing ctor calls for e.g.\n                // `export const x = new InjectionToken(...)`\n                unprocessedSummary.metadata = metadata_1;\n                processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n                if (metadata_1 instanceof StaticSymbol &&\n                    this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                    var declarationSymbol = this.symbols[this.indexBySymbol.get(metadata_1)];\n                    if (!isLoweredSymbol(declarationSymbol.name)) {\n                        // Note: symbols that were introduced during codegen in the user file can have a reexport\n                        // if a user used `export *`. However, we can't rely on this as tsickle will change\n                        // `export *` into named exports, using only the information from the typechecker.\n                        // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                        // and omits them when expanding `export *`.\n                        // So we have to keep reexporting these symbols manually via .ngfactory files.\n                        this.reexportedBy.set(declarationSymbol, summary.symbol);\n                    }\n                }\n            }\n            if (!unprocessedSummary.type && summary.type) {\n                unprocessedSummary.type = summary.type;\n                // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n                // as the type summaries already contain the transitive data that they require\n                // (in a minimal way).\n                processedSummary.type = this.processValue(summary.type, 0 /* None */);\n                // except for reexported directives / pipes, so we need to store\n                // their summaries explicitly.\n                if (summary.type.summaryKind === exports.CompileSummaryKind.NgModule) {\n                    var ngModuleSummary = summary.type;\n                    ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                        var symbol = id.reference;\n                        if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                            !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                            var summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                            if (summary_1) {\n                                _this.addSummary(summary_1);\n                            }\n                        }\n                    });\n                }\n            }\n        };\n        ToJsonSerializer.prototype.serialize = function () {\n            var _this = this;\n            var exportAs = [];\n            var json = JSON.stringify({\n                moduleName: this.moduleName,\n                summaries: this.processedSummaries,\n                symbols: this.symbols.map(function (symbol, index) {\n                    symbol.assertNoMembers();\n                    var importAs = undefined;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                        var reexportSymbol = _this.reexportedBy.get(symbol);\n                        if (reexportSymbol) {\n                            importAs = _this.indexBySymbol.get(reexportSymbol);\n                        }\n                        else {\n                            var summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                            if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                                importAs = symbol.name + \"_\" + index;\n                                exportAs.push({ symbol: symbol, exportAs: importAs });\n                            }\n                        }\n                    }\n                    return {\n                        __symbol: index,\n                        name: symbol.name,\n                        filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                        importAs: importAs\n                    };\n                })\n            });\n            return { json: json, exportAs: exportAs };\n        };\n        ToJsonSerializer.prototype.processValue = function (value, flags) {\n            return visitValue(value, this, flags);\n        };\n        ToJsonSerializer.prototype.visitOther = function (value, context) {\n            if (value instanceof StaticSymbol) {\n                var baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n                var index = this.visitStaticSymbol(baseSymbol, context);\n                return { __symbol: index, members: value.members };\n            }\n        };\n        /**\n         * Strip line and character numbers from ngsummaries.\n         * Emitting them causes white spaces changes to retrigger upstream\n         * recompilations in bazel.\n         * TODO: find out a way to have line and character numbers in errors without\n         * excessive recompilation in bazel.\n         */\n        ToJsonSerializer.prototype.visitStringMap = function (map, context) {\n            if (map['__symbolic'] === 'resolved') {\n                return visitValue(map.symbol, this, context);\n            }\n            if (map['__symbolic'] === 'error') {\n                delete map['line'];\n                delete map['character'];\n            }\n            return _super.prototype.visitStringMap.call(this, map, context);\n        };\n        /**\n         * Returns null if the options.resolveValue is true, and the summary for the symbol\n         * resolved to a type or could not be resolved.\n         */\n        ToJsonSerializer.prototype.visitStaticSymbol = function (baseSymbol, flags) {\n            var index = this.indexBySymbol.get(baseSymbol);\n            var summary = null;\n            if (flags & 1 /* ResolveValue */ &&\n                this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n                if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                    // the summary for this symbol was already added\n                    // -> nothing to do.\n                    return index;\n                }\n                summary = this.loadSummary(baseSymbol);\n                if (summary && summary.metadata instanceof StaticSymbol) {\n                    // The summary is a reexport\n                    index = this.visitStaticSymbol(summary.metadata, flags);\n                    // reset the summary as it is just a reexport, so we don't want to store it.\n                    summary = null;\n                }\n            }\n            else if (index != null) {\n                // Note: == on purpose to compare with undefined!\n                // No summary and the symbol is already added -> nothing to do.\n                return index;\n            }\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.symbols.length;\n                this.symbols.push(baseSymbol);\n            }\n            this.indexBySymbol.set(baseSymbol, index);\n            if (summary) {\n                this.addSummary(summary);\n            }\n            return index;\n        };\n        ToJsonSerializer.prototype.loadSummary = function (symbol) {\n            var summary = this.summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            return summary;\n        };\n        return ToJsonSerializer;\n    }(ValueTransformer));\n    var ForJitSerializer = /** @class */ (function () {\n        function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n            this.outputCtx = outputCtx;\n            this.symbolResolver = symbolResolver;\n            this.summaryResolver = summaryResolver;\n            this.data = [];\n        }\n        ForJitSerializer.prototype.addSourceType = function (summary, metadata) {\n            this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n        };\n        ForJitSerializer.prototype.addLibType = function (summary) {\n            this.data.push({ summary: summary, metadata: null, isLibrary: true });\n        };\n        ForJitSerializer.prototype.serialize = function (exportAsArr) {\n            var _this = this;\n            var e_1, _a, e_2, _b, e_3, _c;\n            var exportAsBySymbol = new Map();\n            try {\n                for (var exportAsArr_1 = __values(exportAsArr), exportAsArr_1_1 = exportAsArr_1.next(); !exportAsArr_1_1.done; exportAsArr_1_1 = exportAsArr_1.next()) {\n                    var _d = exportAsArr_1_1.value, symbol = _d.symbol, exportAs = _d.exportAs;\n                    exportAsBySymbol.set(symbol, exportAs);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (exportAsArr_1_1 && !exportAsArr_1_1.done && (_a = exportAsArr_1.return)) _a.call(exportAsArr_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var ngModuleSymbols = new Set();\n            try {\n                for (var _e = __values(this.data), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var _g = _f.value, summary = _g.summary, metadata = _g.metadata, isLibrary = _g.isLibrary;\n                    if (summary.summaryKind === exports.CompileSummaryKind.NgModule) {\n                        // collect the symbols that refer to NgModule classes.\n                        // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                        // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                        // See serializeSummaries for details.\n                        ngModuleSymbols.add(summary.type.reference);\n                        var modSummary = summary;\n                        try {\n                            for (var _h = __values(modSummary.modules), _j = _h.next(); !_j.done; _j = _h.next()) {\n                                var mod = _j.value;\n                                ngModuleSymbols.add(mod.reference);\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                    }\n                    if (!isLibrary) {\n                        var fnName = summaryForJitName(summary.type.reference.name);\n                        createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, metadata));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            ngModuleSymbols.forEach(function (ngModuleSymbol) {\n                if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                    var exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                    var jitExportAsName = summaryForJitName(exportAs);\n                    _this.outputCtx.statements.push(variable(jitExportAsName)\n                        .set(_this.serializeSummaryRef(ngModuleSymbol))\n                        .toDeclStmt(null, [exports.StmtModifier.Exported]));\n                }\n            });\n        };\n        ForJitSerializer.prototype.serializeSummaryWithDeps = function (summary, metadata) {\n            var _this = this;\n            var expressions = [this.serializeSummary(summary)];\n            var providers = [];\n            if (metadata instanceof CompileNgModuleMetadata) {\n                expressions.push.apply(expressions, __spread(\n                // For directives / pipes, we only add the declared ones,\n                // and rely on transitively importing NgModules to get the transitive\n                // summaries.\n                metadata.declaredDirectives.concat(metadata.declaredPipes)\n                    .map(function (type) { return type.reference; })\n                    // For modules,\n                    // we also add the summaries for modules\n                    // from libraries.\n                    // This is ok as we produce reexports for all transitive modules.\n                    .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                    .filter(function (ref) { return ref !== metadata.type.reference; }))\n                    .map(function (ref) { return _this.serializeSummaryRef(ref); })));\n                // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n                // and we already have transitive modules.\n                providers = metadata.providers;\n            }\n            else if (summary.summaryKind === exports.CompileSummaryKind.Directive) {\n                var dirSummary = summary;\n                providers = dirSummary.providers.concat(dirSummary.viewProviders);\n            }\n            // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n            // declaredDirectives / declaredPipes), as we allow\n            // providers without ctor arguments to skip the `@Injectable` decorator,\n            // i.e. we didn't generate .ngsummary.ts files for these.\n            expressions.push.apply(expressions, __spread(providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) { return _this.serializeSummary({\n                summaryKind: exports.CompileSummaryKind.Injectable, type: provider.useClass\n            }); })));\n            return literalArr(expressions);\n        };\n        ForJitSerializer.prototype.serializeSummaryRef = function (typeSymbol) {\n            var jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n            return this.outputCtx.importExpr(jitImportedSymbol);\n        };\n        ForJitSerializer.prototype.serializeSummary = function (data) {\n            var outputCtx = this.outputCtx;\n            var Transformer = /** @class */ (function () {\n                function Transformer() {\n                }\n                Transformer.prototype.visitArray = function (arr, context) {\n                    var _this = this;\n                    return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n                };\n                Transformer.prototype.visitStringMap = function (map, context) {\n                    var _this = this;\n                    return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n                };\n                Transformer.prototype.visitPrimitive = function (value, context) { return literal(value); };\n                Transformer.prototype.visitOther = function (value, context) {\n                    if (value instanceof StaticSymbol) {\n                        return outputCtx.importExpr(value);\n                    }\n                    else {\n                        throw new Error(\"Illegal State: Encountered value \" + value);\n                    }\n                };\n                return Transformer;\n            }());\n            return visitValue(data, new Transformer(), null);\n        };\n        return ForJitSerializer;\n    }());\n    var FromJsonDeserializer = /** @class */ (function (_super) {\n        __extends(FromJsonDeserializer, _super);\n        function FromJsonDeserializer(symbolCache, summaryResolver) {\n            var _this = _super.call(this) || this;\n            _this.symbolCache = symbolCache;\n            _this.summaryResolver = summaryResolver;\n            return _this;\n        }\n        FromJsonDeserializer.prototype.deserialize = function (libraryFileName, json) {\n            var _this = this;\n            var data = JSON.parse(json);\n            var allImportAs = [];\n            this.symbols = data.symbols.map(function (serializedSymbol) { return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name); });\n            data.symbols.forEach(function (serializedSymbol, index) {\n                var symbol = _this.symbols[index];\n                var importAs = serializedSymbol.importAs;\n                if (typeof importAs === 'number') {\n                    allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n                }\n                else if (typeof importAs === 'string') {\n                    allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n                }\n            });\n            var summaries = visitValue(data.summaries, this, null);\n            return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n        };\n        FromJsonDeserializer.prototype.visitStringMap = function (map, context) {\n            if ('__symbol' in map) {\n                var baseSymbol = this.symbols[map['__symbol']];\n                var members = map['members'];\n                return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                    baseSymbol;\n            }\n            else {\n                return _super.prototype.visitStringMap.call(this, map, context);\n            }\n        };\n        return FromJsonDeserializer;\n    }(ValueTransformer));\n    function isCall(metadata) {\n        return metadata && metadata.__symbolic === 'call';\n    }\n    function isFunctionCall(metadata) {\n        return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n    }\n    function isMethodCallOnVariable(metadata) {\n        return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n            unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AotCompiler = /** @class */ (function () {\n        function AotCompiler(_config, _options, _host, reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n            this._config = _config;\n            this._options = _options;\n            this._host = _host;\n            this.reflector = reflector;\n            this._metadataResolver = _metadataResolver;\n            this._templateParser = _templateParser;\n            this._styleCompiler = _styleCompiler;\n            this._viewCompiler = _viewCompiler;\n            this._typeCheckCompiler = _typeCheckCompiler;\n            this._ngModuleCompiler = _ngModuleCompiler;\n            this._injectableCompiler = _injectableCompiler;\n            this._outputEmitter = _outputEmitter;\n            this._summaryResolver = _summaryResolver;\n            this._symbolResolver = _symbolResolver;\n            this._templateAstCache = new Map();\n            this._analyzedFiles = new Map();\n            this._analyzedFilesForInjectables = new Map();\n        }\n        AotCompiler.prototype.clearCache = function () { this._metadataResolver.clearCache(); };\n        AotCompiler.prototype.analyzeModulesSync = function (rootFiles) {\n            var _this = this;\n            var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n            analyzeResult.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); });\n            return analyzeResult;\n        };\n        AotCompiler.prototype.analyzeModulesAsync = function (rootFiles) {\n            var _this = this;\n            var analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n            return Promise\n                .all(analyzeResult.ngModules.map(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n                .then(function () { return analyzeResult; });\n        };\n        AotCompiler.prototype._analyzeFile = function (fileName) {\n            var analyzedFile = this._analyzedFiles.get(fileName);\n            if (!analyzedFile) {\n                analyzedFile =\n                    analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n                this._analyzedFiles.set(fileName, analyzedFile);\n            }\n            return analyzedFile;\n        };\n        AotCompiler.prototype._analyzeFileForInjectables = function (fileName) {\n            var analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n            if (!analyzedFile) {\n                analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n                this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n            }\n            return analyzedFile;\n        };\n        AotCompiler.prototype.findGeneratedFileNames = function (fileName) {\n            var _this = this;\n            var genFileNames = [];\n            var file = this._analyzeFile(fileName);\n            // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n            // or a reference to a non source file.\n            // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n            // Only do this for StubEmitFlags.Basic, as adding a type check block\n            // does not change this file (as we generate type check blocks based on NgModules).\n            if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n                file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n                genFileNames.push(ngfactoryFilePath(file.fileName, true));\n                if (this._options.enableSummariesForJit) {\n                    genFileNames.push(summaryForJitFileName(file.fileName, true));\n                }\n            }\n            var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n            file.directives.forEach(function (dirSymbol) {\n                var compMeta = _this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol).metadata;\n                if (!compMeta.isComponent) {\n                    return;\n                }\n                // Note: compMeta is a component and therefore template is non null.\n                compMeta.template.styleUrls.forEach(function (styleUrl) {\n                    var normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                    if (!normalizedUrl) {\n                        throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                    }\n                    var needsShim = (compMeta.template.encapsulation ||\n                        _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                    if (_this._options.allowEmptyCodegenFiles) {\n                        genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                    }\n                });\n            });\n            return genFileNames;\n        };\n        AotCompiler.prototype.emitBasicStub = function (genFileName, originalFileName) {\n            var outputCtx = this._createOutputContext(genFileName);\n            if (genFileName.endsWith('.ngfactory.ts')) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n                }\n                var originalFile = this._analyzeFile(originalFileName);\n                this._createNgFactoryStub(outputCtx, originalFile, 1 /* Basic */);\n            }\n            else if (genFileName.endsWith('.ngsummary.ts')) {\n                if (this._options.enableSummariesForJit) {\n                    if (!originalFileName) {\n                        throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                    }\n                    var originalFile = this._analyzeFile(originalFileName);\n                    _createEmptyStub(outputCtx);\n                    originalFile.ngModules.forEach(function (ngModule) {\n                        // create exports that user code can reference\n                        createForJitStub(outputCtx, ngModule.type.reference);\n                    });\n                }\n            }\n            else if (genFileName.endsWith('.ngstyle.ts')) {\n                _createEmptyStub(outputCtx);\n            }\n            // Note: for the stubs, we don't need a property srcFileUrl,\n            // as later on in emitAllImpls we will create the proper GeneratedFiles with the\n            // correct srcFileUrl.\n            // This is good as e.g. for .ngstyle.ts files we can't derive\n            // the url of components based on the genFileUrl.\n            return this._codegenSourceModule('unknown', outputCtx);\n        };\n        AotCompiler.prototype.emitTypeCheckStub = function (genFileName, originalFileName) {\n            var originalFile = this._analyzeFile(originalFileName);\n            var outputCtx = this._createOutputContext(genFileName);\n            if (genFileName.endsWith('.ngfactory.ts')) {\n                this._createNgFactoryStub(outputCtx, originalFile, 2 /* TypeCheck */);\n            }\n            return outputCtx.statements.length > 0 ?\n                this._codegenSourceModule(originalFile.fileName, outputCtx) :\n                null;\n        };\n        AotCompiler.prototype.loadFilesAsync = function (fileNames, tsFiles) {\n            var _this = this;\n            var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n            var loadingPromises = [];\n            files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            }); });\n            var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n            return Promise.all(loadingPromises).then(function (_) { return ({\n                analyzedModules: mergeAndValidateNgFiles(files),\n                analyzedInjectables: analyzedInjectables,\n            }); });\n        };\n        AotCompiler.prototype.loadFilesSync = function (fileNames, tsFiles) {\n            var _this = this;\n            var files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n            files.forEach(function (file) { return file.ngModules.forEach(function (ngModule) { return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true); }); });\n            var analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n            return {\n                analyzedModules: mergeAndValidateNgFiles(files),\n                analyzedInjectables: analyzedInjectables,\n            };\n        };\n        AotCompiler.prototype._createNgFactoryStub = function (outputCtx, file, emitFlags) {\n            var _this = this;\n            var componentId = 0;\n            file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n                // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n                // so we don't change the .ngfactory file too much when adding the type-check block.\n                // create exports that user code can reference\n                _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n                // add references to the symbols from the metadata.\n                // These can be used by the type check block for components,\n                // and they also cause TypeScript to include these files into the program too,\n                // which will make them part of the analyzedFiles.\n                var externalReferences = __spread(ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }), ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n                var externalReferenceVars = new Map();\n                externalReferences.forEach(function (ref, typeIndex) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                });\n                externalReferenceVars.forEach(function (varName, reference) {\n                    outputCtx.statements.push(variable(varName)\n                        .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                        .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ false))));\n                });\n                if (emitFlags & 2 /* TypeCheck */) {\n                    // add the type-check block for all components of the NgModule\n                    ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                        var compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                        if (!compMeta.isComponent) {\n                            return;\n                        }\n                        componentId++;\n                        _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                        _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                    });\n                }\n            });\n            if (outputCtx.statements.length === 0) {\n                _createEmptyStub(outputCtx);\n            }\n        };\n        AotCompiler.prototype._externalIdentifierReferences = function (references) {\n            var e_1, _a;\n            var result = [];\n            try {\n                for (var references_1 = __values(references), references_1_1 = references_1.next(); !references_1_1.done; references_1_1 = references_1.next()) {\n                    var reference = references_1_1.value;\n                    var token = createTokenForExternalReference(this.reflector, reference);\n                    if (token.identifier) {\n                        result.push(token.identifier.reference);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (references_1_1 && !references_1_1.done && (_a = references_1.return)) _a.call(references_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return result;\n        };\n        AotCompiler.prototype._createTypeCheckBlock = function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n            var _a;\n            var _b = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _b.template, usedPipes = _b.pipes;\n            (_a = ctx.statements).push.apply(_a, __spread(this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx)));\n        };\n        AotCompiler.prototype.emitMessageBundle = function (analyzeResult, locale) {\n            var _this = this;\n            var errors = [];\n            var htmlParser = new HtmlParser();\n            // TODO(vicb): implicit tags & attributes\n            var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n            analyzeResult.files.forEach(function (file) {\n                var compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var html = compMeta.template.template;\n                    // Template URL points to either an HTML or TS file depending on whether\n                    // the file is used with `templateUrl:` or `template:`, respectively.\n                    var templateUrl = compMeta.template.templateUrl;\n                    var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                    errors.push.apply(errors, __spread(messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig)));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return messageBundle;\n        };\n        AotCompiler.prototype.emitAllPartialModules = function (_a, r3Files) {\n            var _this = this;\n            var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n            var contextMap = new Map();\n            var getContext = function (fileName) {\n                if (!contextMap.has(fileName)) {\n                    contextMap.set(fileName, _this._createOutputContext(fileName));\n                }\n                return contextMap.get(fileName);\n            };\n            files.forEach(function (file) { return _this._compilePartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables, getContext(file.fileName)); });\n            r3Files.forEach(function (file) { return _this._compileShallowModules(file.fileName, file.shallowModules, getContext(file.fileName)); });\n            return Array.from(contextMap.values())\n                .map(function (context) { return ({\n                fileName: context.genFilePath,\n                statements: __spread(context.constantPool.statements, context.statements),\n            }); });\n        };\n        AotCompiler.prototype._compileShallowModules = function (fileName, shallowModules, context) {\n            var _this = this;\n            shallowModules.forEach(function (module) { return compileNgModuleFromRender2(context, module, _this._injectableCompiler); });\n        };\n        AotCompiler.prototype._compilePartialModule = function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables, context) {\n            var _this = this;\n            var errors = [];\n            var schemaRegistry = new DomElementSchemaRegistry();\n            var hostBindingParser = new BindingParser(this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, schemaRegistry, [], errors);\n            // Process all components and directives\n            directives.forEach(function (directiveType) {\n                var directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (directiveMetadata.isComponent) {\n                    var module = ngModuleByPipeOrDirective.get(directiveType);\n                    module ||\n                        error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                    var htmlAst = directiveMetadata.template.htmlAst;\n                    var preserveWhitespaces = directiveMetadata.template.preserveWhitespaces;\n                    if (!preserveWhitespaces) {\n                        htmlAst = removeWhitespaces(htmlAst);\n                    }\n                    var render3Ast = htmlAstToRender3Ast(htmlAst.rootNodes, hostBindingParser);\n                    // Map of StaticType by directive selectors\n                    var directiveTypeBySel_1 = new Map();\n                    var directives_1 = module.transitiveModule.directives.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n                    directives_1.forEach(function (directive) {\n                        if (directive.selector) {\n                            directiveTypeBySel_1.set(directive.selector, directive.type.reference);\n                        }\n                    });\n                    // Map of StaticType by pipe names\n                    var pipeTypeByName_1 = new Map();\n                    var pipes_1 = module.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n                    pipes_1.forEach(function (pipe) { pipeTypeByName_1.set(pipe.name, pipe.type.reference); });\n                    compileComponentFromRender2(context, directiveMetadata, render3Ast, _this.reflector, hostBindingParser, directiveTypeBySel_1, pipeTypeByName_1);\n                }\n                else {\n                    compileDirectiveFromRender2(context, directiveMetadata, _this.reflector, hostBindingParser);\n                }\n            });\n            pipes.forEach(function (pipeType) {\n                var pipeMetadata = _this._metadataResolver.getPipeMetadata(pipeType);\n                if (pipeMetadata) {\n                    compilePipeFromRender2(context, pipeMetadata, _this.reflector);\n                }\n            });\n            injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        };\n        AotCompiler.prototype.emitAllPartialModules2 = function (files) {\n            var _this = this;\n            // Using reduce like this is a select many pattern (where map is a select pattern)\n            return files.reduce(function (r, file) {\n                r.push.apply(r, __spread(_this._emitPartialModule2(file.fileName, file.injectables)));\n                return r;\n            }, []);\n        };\n        AotCompiler.prototype._emitPartialModule2 = function (fileName, injectables) {\n            var _this = this;\n            var context = this._createOutputContext(fileName);\n            injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n            if (context.statements && context.statements.length > 0) {\n                return [{ fileName: fileName, statements: __spread(context.constantPool.statements, context.statements) }];\n            }\n            return [];\n        };\n        AotCompiler.prototype.emitAllImpls = function (analyzeResult) {\n            var _this = this;\n            var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n            var sourceModules = files.map(function (file) { return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables); });\n            return flatten(sourceModules);\n        };\n        AotCompiler.prototype._compileImplFile = function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n            var _this = this;\n            var fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n            var generatedFiles = [];\n            var outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n            generatedFiles.push.apply(generatedFiles, __spread(this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx)));\n            // compile all ng modules\n            ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n            // compile components\n            directives.forEach(function (dirType) {\n                var compMeta = _this._metadataResolver.getDirectiveMetadata(dirType);\n                if (!compMeta.isComponent) {\n                    return;\n                }\n                var ngModule = ngModuleByPipeOrDirective.get(dirType);\n                if (!ngModule) {\n                    throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n                }\n                // compile styles\n                var componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta);\n                // Note: compMeta is a component and therefore template is non null.\n                compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n                    // Note: fill non shim and shim style files as they might\n                    // be shared by component with and without ViewEncapsulation.\n                    var shim = _this._styleCompiler.needsStyleShim(compMeta);\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                    if (_this._options.allowEmptyCodegenFiles) {\n                        generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                    }\n                });\n                // compile components\n                var compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n                _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n            });\n            if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n                var srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n                generatedFiles.unshift(srcModule);\n            }\n            return generatedFiles;\n        };\n        AotCompiler.prototype._createSummary = function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n            var _this = this;\n            var symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n                .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n            var typeData = __spread(ngModules.map(function (meta) { return ({\n                summary: _this._metadataResolver.getNgModuleSummary(meta.type.reference),\n                metadata: _this._metadataResolver.getNgModuleMetadata(meta.type.reference)\n            }); }), directives.map(function (ref) { return ({\n                summary: _this._metadataResolver.getDirectiveSummary(ref),\n                metadata: _this._metadataResolver.getDirectiveMetadata(ref)\n            }); }), pipes.map(function (ref) { return ({\n                summary: _this._metadataResolver.getPipeSummary(ref),\n                metadata: _this._metadataResolver.getPipeMetadata(ref)\n            }); }), injectables.map(function (ref) { return ({\n                summary: _this._metadataResolver.getInjectableSummary(ref.symbol),\n                metadata: _this._metadataResolver.getInjectableSummary(ref.symbol).type\n            }); }));\n            var forJitOutputCtx = this._options.enableSummariesForJit ?\n                this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n                null;\n            var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n            exportAs.forEach(function (entry) {\n                ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                    exports.StmtModifier.Exported\n                ]));\n            });\n            var summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n            var result = [summaryJson];\n            if (forJitOutputCtx) {\n                result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n            }\n            return result;\n        };\n        AotCompiler.prototype._compileModule = function (outputCtx, ngModule) {\n            var providers = [];\n            if (this._options.locale) {\n                var normalizedLocale = this._options.locale.replace(/_/g, '-');\n                providers.push({\n                    token: createTokenForExternalReference(this.reflector, Identifiers.LOCALE_ID),\n                    useValue: normalizedLocale,\n                });\n            }\n            if (this._options.i18nFormat) {\n                providers.push({\n                    token: createTokenForExternalReference(this.reflector, Identifiers.TRANSLATIONS_FORMAT),\n                    useValue: this._options.i18nFormat\n                });\n            }\n            this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n        };\n        AotCompiler.prototype._compileComponentFactory = function (outputCtx, compMeta, ngModule, fileSuffix) {\n            var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n            var hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n                .viewClassVar;\n            var compFactoryVar = componentFactoryName(compMeta.type.reference);\n            var inputsExprs = [];\n            for (var propName in compMeta.inputs) {\n                var templateName = compMeta.inputs[propName];\n                // Don't quote so that the key gets minified...\n                inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n            }\n            var outputsExprs = [];\n            for (var propName in compMeta.outputs) {\n                var templateName = compMeta.outputs[propName];\n                // Don't quote so that the key gets minified...\n                outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n            }\n            outputCtx.statements.push(variable(compFactoryVar)\n                .set(importExpr(Identifiers.createComponentFactory).callFn([\n                literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n                variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n                new LiteralMapExpr(outputsExprs),\n                literalArr(compMeta.template.ngContentSelectors.map(function (selector) { return literal(selector); }))\n            ]))\n                .toDeclStmt(importType(Identifiers.ComponentFactory, [expressionType(outputCtx.importExpr(compMeta.type.reference))], [TypeModifier.Const]), [exports.StmtModifier.Final, exports.StmtModifier.Exported]));\n        };\n        AotCompiler.prototype._compileComponent = function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n            var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n            var stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n            var viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n            if (componentStyles) {\n                _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n            }\n            return viewResult;\n        };\n        AotCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n            var _this = this;\n            if (this._templateAstCache.has(compMeta.type.reference)) {\n                return this._templateAstCache.get(compMeta.type.reference);\n            }\n            var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n            var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n            var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n            var result = this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n            this._templateAstCache.set(compMeta.type.reference, result);\n            return result;\n        };\n        AotCompiler.prototype._createOutputContext = function (genFilePath) {\n            var _this = this;\n            var importExpr$$1 = function (symbol, typeParams, useSummaries) {\n                if (typeParams === void 0) { typeParams = null; }\n                if (useSummaries === void 0) { useSummaries = true; }\n                if (!(symbol instanceof StaticSymbol)) {\n                    throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n                }\n                var arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n                var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n                var importModule = _this._fileNameToModuleName(filePath, genFilePath);\n                // It should be good enough to compare filePath to genFilePath and if they are equal\n                // there is a self reference. However, ngfactory files generate to .ts but their\n                // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n                // and is tracked by #17705.\n                var selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n                var moduleName = importModule === selfReference ? null : importModule;\n                // If we are in a type expression that refers to a generic type then supply\n                // the required type parameters. If there were not enough type parameters\n                // supplied, supply any as the type. Outside a type expression the reference\n                // should not supply type parameters and be treated as a simple value reference\n                // to the constructor function itself.\n                var suppliedTypeParams = typeParams || [];\n                var missingTypeParamsCount = arity - suppliedTypeParams.length;\n                var allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n                return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, importExpr(new ExternalReference(moduleName, name, null), allTypeParams));\n            };\n            return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n        };\n        AotCompiler.prototype._fileNameToModuleName = function (importedFilePath, containingFilePath) {\n            return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n                this._symbolResolver.getKnownModuleName(importedFilePath) ||\n                this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n        };\n        AotCompiler.prototype._codegenStyles = function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n            var outputCtx = this._createOutputContext(_stylesModuleUrl(stylesheetMetadata.moduleUrl, isShimmed, fileSuffix));\n            var compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n            _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n            return this._codegenSourceModule(srcFileUrl, outputCtx);\n        };\n        AotCompiler.prototype._codegenSourceModule = function (srcFileUrl, ctx) {\n            return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n        };\n        AotCompiler.prototype.listLazyRoutes = function (entryRoute, analyzedModules) {\n            var e_2, _a, e_3, _b;\n            var self = this;\n            if (entryRoute) {\n                var symbol = parseLazyRoute(entryRoute, this.reflector).referencedModule;\n                return visitLazyRoute(symbol);\n            }\n            else if (analyzedModules) {\n                var allLazyRoutes = [];\n                try {\n                    for (var _c = __values(analyzedModules.ngModules), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var ngModule = _d.value;\n                        var lazyRoutes = listLazyRoutes(ngModule, this.reflector);\n                        try {\n                            for (var lazyRoutes_1 = __values(lazyRoutes), lazyRoutes_1_1 = lazyRoutes_1.next(); !lazyRoutes_1_1.done; lazyRoutes_1_1 = lazyRoutes_1.next()) {\n                                var lazyRoute = lazyRoutes_1_1.value;\n                                allLazyRoutes.push(lazyRoute);\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (lazyRoutes_1_1 && !lazyRoutes_1_1.done && (_b = lazyRoutes_1.return)) _b.call(lazyRoutes_1);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                return allLazyRoutes;\n            }\n            else {\n                throw new Error(\"Either route or analyzedModules has to be specified!\");\n            }\n            function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n                if (seenRoutes === void 0) { seenRoutes = new Set(); }\n                if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n                var e_4, _a;\n                // Support pointing to default exports, but stop recursing there,\n                // as the StaticReflector does not yet support default exports.\n                if (seenRoutes.has(symbol) || !symbol.name) {\n                    return allLazyRoutes;\n                }\n                seenRoutes.add(symbol);\n                var lazyRoutes = listLazyRoutes(self._metadataResolver.getNgModuleMetadata(symbol, true), self.reflector);\n                try {\n                    for (var lazyRoutes_2 = __values(lazyRoutes), lazyRoutes_2_1 = lazyRoutes_2.next(); !lazyRoutes_2_1.done; lazyRoutes_2_1 = lazyRoutes_2.next()) {\n                        var lazyRoute = lazyRoutes_2_1.value;\n                        allLazyRoutes.push(lazyRoute);\n                        visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (lazyRoutes_2_1 && !lazyRoutes_2_1.done && (_a = lazyRoutes_2.return)) _a.call(lazyRoutes_2);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n                return allLazyRoutes;\n            }\n        };\n        return AotCompiler;\n    }());\n    function _createEmptyStub(outputCtx) {\n        // Note: We need to produce at least one import statement so that\n        // TypeScript knows that the file is an es6 module. Otherwise our generated\n        // exports / imports won't be emitted properly by TypeScript.\n        outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n    }\n    function _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n        compileResult.dependencies.forEach(function (dep) {\n            dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n        });\n    }\n    function _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n        return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n    }\n    function analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n        var files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n        return mergeAnalyzedFiles(files);\n    }\n    function analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n        return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n    }\n    function validateAnalyzedModules(analyzedModules) {\n        if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n            var messages = analyzedModules.symbolsMissingModule.map(function (s) {\n                return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n            });\n            throw syntaxError(messages.join('\\n'));\n        }\n        return analyzedModules;\n    }\n    // Analyzes all of the program files,\n    // including files that are not part of the program\n    // but are referenced by an NgModule.\n    function _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n        var seenFiles = new Set();\n        var files = [];\n        var visitFile = function (fileName) {\n            if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n                return false;\n            }\n            seenFiles.add(fileName);\n            var analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n            files.push(analyzedFile);\n            analyzedFile.ngModules.forEach(function (ngModule) {\n                ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n            });\n        };\n        fileNames.forEach(function (fileName) { return visitFile(fileName); });\n        return files;\n    }\n    function analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n        var directives = [];\n        var pipes = [];\n        var injectables = [];\n        var ngModules = [];\n        var hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n        var exportsNonSourceFiles = false;\n        // Don't analyze .d.ts files that have no decorators as a shortcut\n        // to speed up the analysis. This prevents us from\n        // resolving the references in these files.\n        // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n        // which is not the case when .d.ts files are treated as input files.\n        if (!fileName.endsWith('.d.ts') || hasDecorators) {\n            staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n                var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n                var symbolMeta = resolvedSymbol.metadata;\n                if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                    return;\n                }\n                var isNgSymbol = false;\n                if (symbolMeta.__symbolic === 'class') {\n                    if (metadataResolver.isDirective(symbol)) {\n                        isNgSymbol = true;\n                        directives.push(symbol);\n                    }\n                    else if (metadataResolver.isPipe(symbol)) {\n                        isNgSymbol = true;\n                        pipes.push(symbol);\n                    }\n                    else if (metadataResolver.isNgModule(symbol)) {\n                        var ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                        if (ngModule) {\n                            isNgSymbol = true;\n                            ngModules.push(ngModule);\n                        }\n                    }\n                    else if (metadataResolver.isInjectable(symbol)) {\n                        isNgSymbol = true;\n                        var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                        if (injectable) {\n                            injectables.push(injectable);\n                        }\n                    }\n                }\n                if (!isNgSymbol) {\n                    exportsNonSourceFiles =\n                        exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n                }\n            });\n        }\n        return {\n            fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n        };\n    }\n    function analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n        var injectables = [];\n        var shallowModules = [];\n        if (staticSymbolResolver.hasDecorators(fileName)) {\n            staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n                var resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n                var symbolMeta = resolvedSymbol.metadata;\n                if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                    return;\n                }\n                if (symbolMeta.__symbolic === 'class') {\n                    if (metadataResolver.isInjectable(symbol)) {\n                        var injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                        if (injectable) {\n                            injectables.push(injectable);\n                        }\n                    }\n                    else if (metadataResolver.isNgModule(symbol)) {\n                        var module = metadataResolver.getShallowModuleMetadata(symbol);\n                        if (module) {\n                            shallowModules.push(module);\n                        }\n                    }\n                }\n            });\n        }\n        return { fileName: fileName, injectables: injectables, shallowModules: shallowModules };\n    }\n    function isValueExportingNonSourceFile(host, metadata) {\n        var exportsNonSourceFiles = false;\n        var Visitor = /** @class */ (function () {\n            function Visitor() {\n            }\n            Visitor.prototype.visitArray = function (arr, context) {\n                var _this = this;\n                arr.forEach(function (v) { return visitValue(v, _this, context); });\n            };\n            Visitor.prototype.visitStringMap = function (map, context) {\n                var _this = this;\n                Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n            };\n            Visitor.prototype.visitPrimitive = function (value, context) { };\n            Visitor.prototype.visitOther = function (value, context) {\n                if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                    exportsNonSourceFiles = true;\n                }\n            };\n            return Visitor;\n        }());\n        visitValue(metadata, new Visitor(), null);\n        return exportsNonSourceFiles;\n    }\n    function mergeAnalyzedFiles(analyzedFiles) {\n        var allNgModules = [];\n        var ngModuleByPipeOrDirective = new Map();\n        var allPipesAndDirectives = new Set();\n        analyzedFiles.forEach(function (af) {\n            af.ngModules.forEach(function (ngModule) {\n                allNgModules.push(ngModule);\n                ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n                ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n            });\n            af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n            af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n        });\n        var symbolsMissingModule = [];\n        allPipesAndDirectives.forEach(function (ref) {\n            if (!ngModuleByPipeOrDirective.has(ref)) {\n                symbolsMissingModule.push(ref);\n            }\n        });\n        return {\n            ngModules: allNgModules,\n            ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n            symbolsMissingModule: symbolsMissingModule,\n            files: analyzedFiles\n        };\n    }\n    function mergeAndValidateNgFiles(files) {\n        return validateAnalyzedModules(mergeAnalyzedFiles(files));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var FORMATTED_MESSAGE = 'ngFormattedMessage';\n    function indentStr(level) {\n        if (level <= 0)\n            return '';\n        if (level < 6)\n            return ['', ' ', '  ', '   ', '    ', '     '][level];\n        var half = indentStr(Math.floor(level / 2));\n        return half + half + (level % 2 === 1 ? ' ' : '');\n    }\n    function formatChain(chain, indent) {\n        if (indent === void 0) { indent = 0; }\n        if (!chain)\n            return '';\n        var position = chain.position ?\n            chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n            '';\n        var prefix = position && indent === 0 ? position + \": \" : '';\n        var postfix = position && indent !== 0 ? \" at \" + position : '';\n        var message = \"\" + prefix + chain.message + postfix;\n        return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n    }\n    function formattedError(chain) {\n        var message = formatChain(chain) + '.';\n        var error$$1 = syntaxError(message);\n        error$$1[FORMATTED_MESSAGE] = true;\n        error$$1.chain = chain;\n        error$$1.position = chain.position;\n        return error$$1;\n    }\n    function isFormattedError(error$$1) {\n        return !!error$$1[FORMATTED_MESSAGE];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANGULAR_CORE = '@angular/core';\n    var ANGULAR_ROUTER = '@angular/router';\n    var HIDDEN_KEY = /^\\$.*\\$$/;\n    var IGNORE = {\n        __symbolic: 'ignore'\n    };\n    var USE_VALUE$1 = 'useValue';\n    var PROVIDE = 'provide';\n    var REFERENCE_SET = new Set([USE_VALUE$1, 'useFactory', 'data', 'id', 'loadChildren']);\n    var TYPEGUARD_POSTFIX = 'TypeGuard';\n    var USE_IF = 'UseIf';\n    function shouldIgnore(value) {\n        return value && value.__symbolic == 'ignore';\n    }\n    /**\n     * A static reflector implements enough of the Reflector API that is necessary to compile\n     * templates statically.\n     */\n    var StaticReflector = /** @class */ (function () {\n        function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n            if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n            if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n            var _this = this;\n            this.summaryResolver = summaryResolver;\n            this.symbolResolver = symbolResolver;\n            this.errorRecorder = errorRecorder;\n            this.annotationCache = new Map();\n            this.shallowAnnotationCache = new Map();\n            this.propertyCache = new Map();\n            this.parameterCache = new Map();\n            this.methodCache = new Map();\n            this.staticCache = new Map();\n            this.conversionMap = new Map();\n            this.resolvedExternalReferences = new Map();\n            this.annotationForParentClassWithSummaryKind = new Map();\n            this.initializeConversionMap();\n            knownMetadataClasses.forEach(function (kc) { return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor); });\n            knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n            this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.Directive, [createDirective, createComponent]);\n            this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.Pipe, [createPipe]);\n            this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.NgModule, [createNgModule]);\n            this.annotationForParentClassWithSummaryKind.set(exports.CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n        }\n        StaticReflector.prototype.componentModuleUrl = function (typeOrFunc) {\n            var staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n            return this.symbolResolver.getResourcePath(staticSymbol);\n        };\n        StaticReflector.prototype.resolveExternalReference = function (ref, containingFile) {\n            var key = undefined;\n            if (!containingFile) {\n                key = ref.moduleName + \":\" + ref.name;\n                var declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n                if (declarationSymbol_1)\n                    return declarationSymbol_1;\n            }\n            var refSymbol = this.symbolResolver.getSymbolByModule(ref.moduleName, ref.name, containingFile);\n            var declarationSymbol = this.findSymbolDeclaration(refSymbol);\n            if (!containingFile) {\n                this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, ref.moduleName);\n                this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n            }\n            if (key) {\n                this.resolvedExternalReferences.set(key, declarationSymbol);\n            }\n            return declarationSymbol;\n        };\n        StaticReflector.prototype.findDeclaration = function (moduleUrl, name, containingFile) {\n            return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n        };\n        StaticReflector.prototype.tryFindDeclaration = function (moduleUrl, name, containingFile) {\n            var _this = this;\n            return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name, containingFile); });\n        };\n        StaticReflector.prototype.findSymbolDeclaration = function (symbol) {\n            var resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                var resolvedMetadata = resolvedSymbol.metadata;\n                if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                    resolvedMetadata = resolvedMetadata.symbol;\n                }\n                if (resolvedMetadata instanceof StaticSymbol) {\n                    return this.findSymbolDeclaration(resolvedSymbol.metadata);\n                }\n            }\n            return symbol;\n        };\n        StaticReflector.prototype.tryAnnotations = function (type) {\n            var originalRecorder = this.errorRecorder;\n            this.errorRecorder = function (error$$1, fileName) { };\n            try {\n                return this.annotations(type);\n            }\n            finally {\n                this.errorRecorder = originalRecorder;\n            }\n        };\n        StaticReflector.prototype.annotations = function (type) {\n            var _this = this;\n            return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators); }, this.annotationCache);\n        };\n        StaticReflector.prototype.shallowAnnotations = function (type) {\n            var _this = this;\n            return this._annotations(type, function (type, decorators) { return _this.simplify(type, decorators, true); }, this.shallowAnnotationCache);\n        };\n        StaticReflector.prototype._annotations = function (type, simplify, annotationCache) {\n            var annotations = annotationCache.get(type);\n            if (!annotations) {\n                annotations = [];\n                var classMetadata = this.getTypeMetadata(type);\n                var parentType = this.findParentType(type, classMetadata);\n                if (parentType) {\n                    var parentAnnotations = this.annotations(parentType);\n                    annotations.push.apply(annotations, __spread(parentAnnotations));\n                }\n                var ownAnnotations_1 = [];\n                if (classMetadata['decorators']) {\n                    ownAnnotations_1 = simplify(type, classMetadata['decorators']);\n                    if (ownAnnotations_1) {\n                        annotations.push.apply(annotations, __spread(ownAnnotations_1));\n                    }\n                }\n                if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                    this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                    var summary = this.summaryResolver.resolveSummary(parentType);\n                    if (summary && summary.type) {\n                        var requiredAnnotationTypes = this.annotationForParentClassWithSummaryKind.get(summary.type.summaryKind);\n                        var typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                        if (!typeHasRequiredAnnotation) {\n                            this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + exports.CompileSummaryKind[summary.type.summaryKind] + \" in another compilation unit without duplicating the decorator\", \n                            /* summary */ undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                        }\n                    }\n                }\n                annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n            }\n            return annotations;\n        };\n        StaticReflector.prototype.propMetadata = function (type) {\n            var _this = this;\n            var propMetadata = this.propertyCache.get(type);\n            if (!propMetadata) {\n                var classMetadata = this.getTypeMetadata(type);\n                propMetadata = {};\n                var parentType = this.findParentType(type, classMetadata);\n                if (parentType) {\n                    var parentPropMetadata_1 = this.propMetadata(parentType);\n                    Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                        propMetadata[parentProp] = parentPropMetadata_1[parentProp];\n                    });\n                }\n                var members_1 = classMetadata['members'] || {};\n                Object.keys(members_1).forEach(function (propName) {\n                    var propData = members_1[propName];\n                    var prop = propData\n                        .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                    var decorators = [];\n                    if (propMetadata[propName]) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    propMetadata[propName] = decorators;\n                    if (prop && prop['decorators']) {\n                        decorators.push.apply(decorators, __spread(_this.simplify(type, prop['decorators'])));\n                    }\n                });\n                this.propertyCache.set(type, propMetadata);\n            }\n            return propMetadata;\n        };\n        StaticReflector.prototype.parameters = function (type) {\n            var _this = this;\n            if (!(type instanceof StaticSymbol)) {\n                this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n                return [];\n            }\n            try {\n                var parameters_1 = this.parameterCache.get(type);\n                if (!parameters_1) {\n                    var classMetadata = this.getTypeMetadata(type);\n                    var parentType = this.findParentType(type, classMetadata);\n                    var members = classMetadata ? classMetadata['members'] : null;\n                    var ctorData = members ? members['__ctor__'] : null;\n                    if (ctorData) {\n                        var ctor = ctorData.find(function (a) { return a['__symbolic'] == 'constructor'; });\n                        var rawParameterTypes = ctor['parameters'] || [];\n                        var parameterDecorators_1 = this.simplify(type, ctor['parameterDecorators'] || []);\n                        parameters_1 = [];\n                        rawParameterTypes.forEach(function (rawParamType, index) {\n                            var nestedResult = [];\n                            var paramType = _this.trySimplify(type, rawParamType);\n                            if (paramType)\n                                nestedResult.push(paramType);\n                            var decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                            if (decorators) {\n                                nestedResult.push.apply(nestedResult, __spread(decorators));\n                            }\n                            parameters_1.push(nestedResult);\n                        });\n                    }\n                    else if (parentType) {\n                        parameters_1 = this.parameters(parentType);\n                    }\n                    if (!parameters_1) {\n                        parameters_1 = [];\n                    }\n                    this.parameterCache.set(type, parameters_1);\n                }\n                return parameters_1;\n            }\n            catch (e) {\n                console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n                throw e;\n            }\n        };\n        StaticReflector.prototype._methodNames = function (type) {\n            var methodNames = this.methodCache.get(type);\n            if (!methodNames) {\n                var classMetadata = this.getTypeMetadata(type);\n                methodNames = {};\n                var parentType = this.findParentType(type, classMetadata);\n                if (parentType) {\n                    var parentMethodNames_1 = this._methodNames(parentType);\n                    Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                        methodNames[parentProp] = parentMethodNames_1[parentProp];\n                    });\n                }\n                var members_2 = classMetadata['members'] || {};\n                Object.keys(members_2).forEach(function (propName) {\n                    var propData = members_2[propName];\n                    var isMethod = propData.some(function (a) { return a['__symbolic'] == 'method'; });\n                    methodNames[propName] = methodNames[propName] || isMethod;\n                });\n                this.methodCache.set(type, methodNames);\n            }\n            return methodNames;\n        };\n        StaticReflector.prototype._staticMembers = function (type) {\n            var staticMembers = this.staticCache.get(type);\n            if (!staticMembers) {\n                var classMetadata = this.getTypeMetadata(type);\n                var staticMemberData = classMetadata['statics'] || {};\n                staticMembers = Object.keys(staticMemberData);\n                this.staticCache.set(type, staticMembers);\n            }\n            return staticMembers;\n        };\n        StaticReflector.prototype.findParentType = function (type, classMetadata) {\n            var parentType = this.trySimplify(type, classMetadata['extends']);\n            if (parentType instanceof StaticSymbol) {\n                return parentType;\n            }\n        };\n        StaticReflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            if (!(type instanceof StaticSymbol)) {\n                this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            }\n            try {\n                return !!this._methodNames(type)[lcProperty];\n            }\n            catch (e) {\n                console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n                throw e;\n            }\n        };\n        StaticReflector.prototype.guards = function (type) {\n            var e_1, _a;\n            if (!(type instanceof StaticSymbol)) {\n                this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n                return {};\n            }\n            var staticMembers = this._staticMembers(type);\n            var result = {};\n            try {\n                for (var staticMembers_1 = __values(staticMembers), staticMembers_1_1 = staticMembers_1.next(); !staticMembers_1_1.done; staticMembers_1_1 = staticMembers_1.next()) {\n                    var name_1 = staticMembers_1_1.value;\n                    if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                        var property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                        var value = void 0;\n                        if (property.endsWith(USE_IF)) {\n                            property = name_1.substr(0, property.length - USE_IF.length);\n                            value = USE_IF;\n                        }\n                        else {\n                            value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                        }\n                        result[property] = value;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (staticMembers_1_1 && !staticMembers_1_1.done && (_a = staticMembers_1.return)) _a.call(staticMembers_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return result;\n        };\n        StaticReflector.prototype._registerDecoratorOrConstructor = function (type, ctor) {\n            this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, __spread([void 0], args)))(); });\n        };\n        StaticReflector.prototype._registerFunction = function (type, fn) {\n            this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n        };\n        StaticReflector.prototype.initializeConversionMap = function () {\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n            this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n            this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n            this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n            this.ANALYZE_FOR_ENTRY_COMPONENTS =\n                this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n            // Note: Some metadata classes can be used directly with Provider.deps.\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n            this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        };\n        /**\n         * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n         * All types passed to the StaticResolver should be pseudo-types returned by this method.\n         *\n         * @param declarationFile the absolute path of the file where the symbol is declared\n         * @param name the name of the type.\n         */\n        StaticReflector.prototype.getStaticSymbol = function (declarationFile, name, members) {\n            return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n        };\n        /**\n         * Simplify but discard any errors\n         */\n        StaticReflector.prototype.trySimplify = function (context, value) {\n            var originalRecorder = this.errorRecorder;\n            this.errorRecorder = function (error$$1, fileName) { };\n            var result = this.simplify(context, value);\n            this.errorRecorder = originalRecorder;\n            return result;\n        };\n        /** @internal */\n        StaticReflector.prototype.simplify = function (context, value, lazy) {\n            if (lazy === void 0) { lazy = false; }\n            var self = this;\n            var scope = BindingScope$1.empty;\n            var calling = new Map();\n            function simplifyInContext(context, value, depth, references) {\n                function resolveReferenceValue(staticSymbol) {\n                    var resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                    return resolvedSymbol ? resolvedSymbol.metadata : null;\n                }\n                function simplifyEagerly(value) {\n                    return simplifyInContext(context, value, depth, 0);\n                }\n                function simplifyLazily(value) {\n                    return simplifyInContext(context, value, depth, references + 1);\n                }\n                function simplifyNested(nestedContext, value) {\n                    if (nestedContext === context) {\n                        // If the context hasn't changed let the exception propagate unmodified.\n                        return simplifyInContext(nestedContext, value, depth + 1, references);\n                    }\n                    try {\n                        return simplifyInContext(nestedContext, value, depth + 1, references);\n                    }\n                    catch (e) {\n                        if (isMetadataError(e)) {\n                            // Propagate the message text up but add a message to the chain that explains how we got\n                            // here.\n                            // e.chain implies e.symbol\n                            var summaryMsg = e.chain ? 'references \\'' + e.symbol.name + '\\'' : errorSummary(e);\n                            var summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                            var chain = { message: summary, position: e.position, next: e.chain };\n                            // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                            // map if the metadata is from a .ts file.\n                            self.error({\n                                message: e.message,\n                                advise: e.advise,\n                                context: e.context, chain: chain,\n                                symbol: nestedContext\n                            }, context);\n                        }\n                        else {\n                            // It is probably an internal error.\n                            throw e;\n                        }\n                    }\n                }\n                function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                    if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                        if (calling.get(functionSymbol)) {\n                            self.error({\n                                message: 'Recursion is not supported',\n                                summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                                value: targetFunction\n                            }, functionSymbol);\n                        }\n                        try {\n                            var value_1 = targetFunction['value'];\n                            if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                                var parameters = targetFunction['parameters'];\n                                var defaults = targetFunction.defaults;\n                                args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                    .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                if (defaults && defaults.length > args.length) {\n                                    args.push.apply(args, __spread(defaults.slice(args.length).map(function (value) { return simplify(value); })));\n                                }\n                                calling.set(functionSymbol, true);\n                                var functionScope = BindingScope$1.build();\n                                for (var i = 0; i < parameters.length; i++) {\n                                    functionScope.define(parameters[i], args[i]);\n                                }\n                                var oldScope = scope;\n                                var result_1;\n                                try {\n                                    scope = functionScope.done();\n                                    result_1 = simplifyNested(functionSymbol, value_1);\n                                }\n                                finally {\n                                    scope = oldScope;\n                                }\n                                return result_1;\n                            }\n                        }\n                        finally {\n                            calling.delete(functionSymbol);\n                        }\n                    }\n                    if (depth === 0) {\n                        // If depth is 0 we are evaluating the top level expression that is describing element\n                        // decorator. In this case, it is a decorator we don't understand, such as a custom\n                        // non-angular decorator, and we should just ignore it.\n                        return IGNORE;\n                    }\n                    var position = undefined;\n                    if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                        var line = targetExpression.line;\n                        var character = targetExpression.character;\n                        var fileName = targetExpression.fileName;\n                        if (fileName != null && line != null && character != null) {\n                            position = { fileName: fileName, line: line, column: character };\n                        }\n                    }\n                    self.error({\n                        message: FUNCTION_CALL_NOT_SUPPORTED,\n                        context: functionSymbol,\n                        value: targetFunction, position: position\n                    }, context);\n                }\n                function simplify(expression) {\n                    var e_2, _a, e_3, _b;\n                    if (isPrimitive(expression)) {\n                        return expression;\n                    }\n                    if (expression instanceof Array) {\n                        var result_2 = [];\n                        try {\n                            for (var _c = __values(expression), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                var item = _d.value;\n                                // Check for a spread expression\n                                if (item && item.__symbolic === 'spread') {\n                                    // We call with references as 0 because we require the actual value and cannot\n                                    // tolerate a reference here.\n                                    var spreadArray = simplifyEagerly(item.expression);\n                                    if (Array.isArray(spreadArray)) {\n                                        try {\n                                            for (var spreadArray_1 = __values(spreadArray), spreadArray_1_1 = spreadArray_1.next(); !spreadArray_1_1.done; spreadArray_1_1 = spreadArray_1.next()) {\n                                                var spreadItem = spreadArray_1_1.value;\n                                                result_2.push(spreadItem);\n                                            }\n                                        }\n                                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                                        finally {\n                                            try {\n                                                if (spreadArray_1_1 && !spreadArray_1_1.done && (_b = spreadArray_1.return)) _b.call(spreadArray_1);\n                                            }\n                                            finally { if (e_3) throw e_3.error; }\n                                        }\n                                        continue;\n                                    }\n                                }\n                                var value_2 = simplify(item);\n                                if (shouldIgnore(value_2)) {\n                                    continue;\n                                }\n                                result_2.push(value_2);\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        return result_2;\n                    }\n                    if (expression instanceof StaticSymbol) {\n                        // Stop simplification at builtin symbols or if we are in a reference context and\n                        // the symbol doesn't have members.\n                        if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                            (references > 0 && !expression.members.length)) {\n                            return expression;\n                        }\n                        else {\n                            var staticSymbol = expression;\n                            var declarationValue = resolveReferenceValue(staticSymbol);\n                            if (declarationValue != null) {\n                                return simplifyNested(staticSymbol, declarationValue);\n                            }\n                            else {\n                                return staticSymbol;\n                            }\n                        }\n                    }\n                    if (expression) {\n                        if (expression['__symbolic']) {\n                            var staticSymbol = void 0;\n                            switch (expression['__symbolic']) {\n                                case 'binop':\n                                    var left = simplify(expression['left']);\n                                    if (shouldIgnore(left))\n                                        return left;\n                                    var right = simplify(expression['right']);\n                                    if (shouldIgnore(right))\n                                        return right;\n                                    switch (expression['operator']) {\n                                        case '&&':\n                                            return left && right;\n                                        case '||':\n                                            return left || right;\n                                        case '|':\n                                            return left | right;\n                                        case '^':\n                                            return left ^ right;\n                                        case '&':\n                                            return left & right;\n                                        case '==':\n                                            return left == right;\n                                        case '!=':\n                                            return left != right;\n                                        case '===':\n                                            return left === right;\n                                        case '!==':\n                                            return left !== right;\n                                        case '<':\n                                            return left < right;\n                                        case '>':\n                                            return left > right;\n                                        case '<=':\n                                            return left <= right;\n                                        case '>=':\n                                            return left >= right;\n                                        case '<<':\n                                            return left << right;\n                                        case '>>':\n                                            return left >> right;\n                                        case '+':\n                                            return left + right;\n                                        case '-':\n                                            return left - right;\n                                        case '*':\n                                            return left * right;\n                                        case '/':\n                                            return left / right;\n                                        case '%':\n                                            return left % right;\n                                    }\n                                    return null;\n                                case 'if':\n                                    var condition = simplify(expression['condition']);\n                                    return condition ? simplify(expression['thenExpression']) :\n                                        simplify(expression['elseExpression']);\n                                case 'pre':\n                                    var operand = simplify(expression['operand']);\n                                    if (shouldIgnore(operand))\n                                        return operand;\n                                    switch (expression['operator']) {\n                                        case '+':\n                                            return operand;\n                                        case '-':\n                                            return -operand;\n                                        case '!':\n                                            return !operand;\n                                        case '~':\n                                            return ~operand;\n                                    }\n                                    return null;\n                                case 'index':\n                                    var indexTarget = simplifyEagerly(expression['expression']);\n                                    var index = simplifyEagerly(expression['index']);\n                                    if (indexTarget && isPrimitive(index))\n                                        return indexTarget[index];\n                                    return null;\n                                case 'select':\n                                    var member = expression['member'];\n                                    var selectContext = context;\n                                    var selectTarget = simplify(expression['expression']);\n                                    if (selectTarget instanceof StaticSymbol) {\n                                        var members = selectTarget.members.concat(member);\n                                        selectContext =\n                                            self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                        var declarationValue = resolveReferenceValue(selectContext);\n                                        if (declarationValue != null) {\n                                            return simplifyNested(selectContext, declarationValue);\n                                        }\n                                        else {\n                                            return selectContext;\n                                        }\n                                    }\n                                    if (selectTarget && isPrimitive(member))\n                                        return simplifyNested(selectContext, selectTarget[member]);\n                                    return null;\n                                case 'reference':\n                                    // Note: This only has to deal with variable references, as symbol references have\n                                    // been converted into 'resolved'\n                                    // in the StaticSymbolResolver.\n                                    var name_2 = expression['name'];\n                                    var localValue = scope.resolve(name_2);\n                                    if (localValue != BindingScope$1.missing) {\n                                        return localValue;\n                                    }\n                                    break;\n                                case 'resolved':\n                                    try {\n                                        return simplify(expression.symbol);\n                                    }\n                                    catch (e) {\n                                        // If an error is reported evaluating the symbol record the position of the\n                                        // reference in the error so it can\n                                        // be reported in the error message generated from the exception.\n                                        if (isMetadataError(e) && expression.fileName != null &&\n                                            expression.line != null && expression.character != null) {\n                                            e.position = {\n                                                fileName: expression.fileName,\n                                                line: expression.line,\n                                                column: expression.character\n                                            };\n                                        }\n                                        throw e;\n                                    }\n                                case 'class':\n                                    return context;\n                                case 'function':\n                                    return context;\n                                case 'new':\n                                case 'call':\n                                    // Determine if the function is a built-in conversion\n                                    staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                    if (staticSymbol instanceof StaticSymbol) {\n                                        if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                            // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                            // but rather return the symbol to which the InjectionToken is assigned to.\n                                            // OpaqueToken is supported too as it is required by the language service to\n                                            // support v4 and prior versions of Angular.\n                                            return context;\n                                        }\n                                        var argExpressions = expression['arguments'] || [];\n                                        var converter = self.conversionMap.get(staticSymbol);\n                                        if (converter) {\n                                            var args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                            return converter(context, args);\n                                        }\n                                        else {\n                                            // Determine if the function is one we can simplify.\n                                            var targetFunction = resolveReferenceValue(staticSymbol);\n                                            return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                        }\n                                    }\n                                    return IGNORE;\n                                case 'error':\n                                    var message = expression.message;\n                                    if (expression['line'] != null) {\n                                        self.error({\n                                            message: message,\n                                            context: expression.context,\n                                            value: expression,\n                                            position: {\n                                                fileName: expression['fileName'],\n                                                line: expression['line'],\n                                                column: expression['character']\n                                            }\n                                        }, context);\n                                    }\n                                    else {\n                                        self.error({ message: message, context: expression.context }, context);\n                                    }\n                                    return IGNORE;\n                                case 'ignore':\n                                    return expression;\n                            }\n                            return null;\n                        }\n                        return mapStringMap(expression, function (value, name) {\n                            if (REFERENCE_SET.has(name)) {\n                                if (name === USE_VALUE$1 && PROVIDE in expression) {\n                                    // If this is a provider expression, check for special tokens that need the value\n                                    // during analysis.\n                                    var provide = simplify(expression.provide);\n                                    if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                        return simplify(value);\n                                    }\n                                }\n                                return simplifyLazily(value);\n                            }\n                            return simplify(value);\n                        });\n                    }\n                    return IGNORE;\n                }\n                return simplify(value);\n            }\n            var result;\n            try {\n                result = simplifyInContext(context, value, 0, lazy ? 1 : 0);\n            }\n            catch (e) {\n                if (this.errorRecorder) {\n                    this.reportError(e, context);\n                }\n                else {\n                    throw formatMetadataError(e, context);\n                }\n            }\n            if (shouldIgnore(result)) {\n                return undefined;\n            }\n            return result;\n        };\n        StaticReflector.prototype.getTypeMetadata = function (type) {\n            var resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n            return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n                { __symbolic: 'class' };\n        };\n        StaticReflector.prototype.reportError = function (error$$1, context, path) {\n            if (this.errorRecorder) {\n                this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n            }\n            else {\n                throw error$$1;\n            }\n        };\n        StaticReflector.prototype.error = function (_a, reportingContext) {\n            var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n            this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n        };\n        return StaticReflector;\n    }());\n    var METADATA_ERROR = 'ngMetadataError';\n    function metadataError(message, summary, advise, position, symbol, context, chain) {\n        var error$$1 = syntaxError(message);\n        error$$1[METADATA_ERROR] = true;\n        if (advise)\n            error$$1.advise = advise;\n        if (position)\n            error$$1.position = position;\n        if (summary)\n            error$$1.summary = summary;\n        if (context)\n            error$$1.context = context;\n        if (chain)\n            error$$1.chain = chain;\n        if (symbol)\n            error$$1.symbol = symbol;\n        return error$$1;\n    }\n    function isMetadataError(error$$1) {\n        return !!error$$1[METADATA_ERROR];\n    }\n    var REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\n    var VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\n    var DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\n    var COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\n    var FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\n    var REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\n    var LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n    function expandedMessage(message, context) {\n        switch (message) {\n            case REFERENCE_TO_NONEXPORTED_CLASS:\n                if (context && context.className) {\n                    return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n                }\n                break;\n            case VARIABLE_NOT_INITIALIZED:\n                return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n            case DESTRUCTURE_NOT_SUPPORTED:\n                return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n            case COULD_NOT_RESOLVE_TYPE:\n                if (context && context.typeName) {\n                    return \"Could not resolve type \" + context.typeName;\n                }\n                break;\n            case FUNCTION_CALL_NOT_SUPPORTED:\n                if (context && context.name) {\n                    return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n                }\n                return 'Function calls are not supported in decorators';\n            case REFERENCE_TO_LOCAL_SYMBOL:\n                if (context && context.name) {\n                    return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n                }\n                break;\n            case LAMBDA_NOT_SUPPORTED:\n                return \"Function expressions are not supported in decorators\";\n        }\n        return message;\n    }\n    function messageAdvise(message, context) {\n        switch (message) {\n            case REFERENCE_TO_NONEXPORTED_CLASS:\n                if (context && context.className) {\n                    return \"Consider exporting '\" + context.className + \"'\";\n                }\n                break;\n            case DESTRUCTURE_NOT_SUPPORTED:\n                return 'Consider simplifying to avoid destructuring';\n            case REFERENCE_TO_LOCAL_SYMBOL:\n                if (context && context.name) {\n                    return \"Consider exporting '\" + context.name + \"'\";\n                }\n                break;\n            case LAMBDA_NOT_SUPPORTED:\n                return \"Consider changing the function expression into an exported function\";\n        }\n        return undefined;\n    }\n    function errorSummary(error$$1) {\n        if (error$$1.summary) {\n            return error$$1.summary;\n        }\n        switch (error$$1.message) {\n            case REFERENCE_TO_NONEXPORTED_CLASS:\n                if (error$$1.context && error$$1.context.className) {\n                    return \"references non-exported class \" + error$$1.context.className;\n                }\n                break;\n            case VARIABLE_NOT_INITIALIZED:\n                return 'is not initialized';\n            case DESTRUCTURE_NOT_SUPPORTED:\n                return 'is a destructured variable';\n            case COULD_NOT_RESOLVE_TYPE:\n                return 'could not be resolved';\n            case FUNCTION_CALL_NOT_SUPPORTED:\n                if (error$$1.context && error$$1.context.name) {\n                    return \"calls '\" + error$$1.context.name + \"'\";\n                }\n                return \"calls a function\";\n            case REFERENCE_TO_LOCAL_SYMBOL:\n                if (error$$1.context && error$$1.context.name) {\n                    return \"references local variable \" + error$$1.context.name;\n                }\n                return \"references a local variable\";\n        }\n        return 'contains the error';\n    }\n    function mapStringMap(input, transform) {\n        if (!input)\n            return {};\n        var result = {};\n        Object.keys(input).forEach(function (key) {\n            var value = transform(input[key], key);\n            if (!shouldIgnore(value)) {\n                if (HIDDEN_KEY.test(key)) {\n                    Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n                }\n                else {\n                    result[key] = value;\n                }\n            }\n        });\n        return result;\n    }\n    function isPrimitive(o) {\n        return o === null || (typeof o !== 'function' && typeof o !== 'object');\n    }\n    var BindingScope$1 = /** @class */ (function () {\n        function BindingScope() {\n        }\n        BindingScope.build = function () {\n            var current = new Map();\n            return {\n                define: function (name, value) {\n                    current.set(name, value);\n                    return this;\n                },\n                done: function () {\n                    return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n                }\n            };\n        };\n        BindingScope.missing = {};\n        BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n        return BindingScope;\n    }());\n    var PopulatedScope = /** @class */ (function (_super) {\n        __extends(PopulatedScope, _super);\n        function PopulatedScope(bindings) {\n            var _this = _super.call(this) || this;\n            _this.bindings = bindings;\n            return _this;\n        }\n        PopulatedScope.prototype.resolve = function (name) {\n            return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n        };\n        return PopulatedScope;\n    }(BindingScope$1));\n    function formatMetadataMessageChain(chain, advise) {\n        var expanded = expandedMessage(chain.message, chain.context);\n        var nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n        var message = \"\" + expanded + nesting;\n        var position = chain.position;\n        var next = chain.next ?\n            formatMetadataMessageChain(chain.next, advise) :\n            advise ? { message: advise } : undefined;\n        return { message: message, position: position, next: next };\n    }\n    function formatMetadataError(e, context) {\n        if (isMetadataError(e)) {\n            // Produce a formatted version of the and leaving enough information in the original error\n            // to recover the formatting information to eventually produce a diagnostic error message.\n            var position = e.position;\n            var chain = {\n                message: \"Error during template compile of '\" + context.name + \"'\",\n                position: position,\n                next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n            };\n            var advise = e.advise || messageAdvise(e.message, e.context);\n            return formattedError(formatMetadataMessageChain(chain, advise));\n        }\n        return e;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var AotSummaryResolver = /** @class */ (function () {\n        function AotSummaryResolver(host, staticSymbolCache) {\n            this.host = host;\n            this.staticSymbolCache = staticSymbolCache;\n            // Note: this will only contain StaticSymbols without members!\n            this.summaryCache = new Map();\n            this.loadedFilePaths = new Map();\n            // Note: this will only contain StaticSymbols without members!\n            this.importAs = new Map();\n            this.knownFileNameToModuleNames = new Map();\n        }\n        AotSummaryResolver.prototype.isLibraryFile = function (filePath) {\n            // Note: We need to strip the .ngfactory. file path,\n            // so this method also works for generated files\n            // (for which host.isSourceFile will always return false).\n            return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n        };\n        AotSummaryResolver.prototype.toSummaryFileName = function (filePath, referringSrcFileName) {\n            return this.host.toSummaryFileName(filePath, referringSrcFileName);\n        };\n        AotSummaryResolver.prototype.fromSummaryFileName = function (fileName, referringLibFileName) {\n            return this.host.fromSummaryFileName(fileName, referringLibFileName);\n        };\n        AotSummaryResolver.prototype.resolveSummary = function (staticSymbol) {\n            var rootSymbol = staticSymbol.members.length ?\n                this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n                staticSymbol;\n            var summary = this.summaryCache.get(rootSymbol);\n            if (!summary) {\n                this._loadSummaryFile(staticSymbol.filePath);\n                summary = this.summaryCache.get(staticSymbol);\n            }\n            return (rootSymbol === staticSymbol && summary) || null;\n        };\n        AotSummaryResolver.prototype.getSymbolsOf = function (filePath) {\n            if (this._loadSummaryFile(filePath)) {\n                return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n            }\n            return null;\n        };\n        AotSummaryResolver.prototype.getImportAs = function (staticSymbol) {\n            staticSymbol.assertNoMembers();\n            return this.importAs.get(staticSymbol);\n        };\n        /**\n         * Converts a file path to a module name that can be used as an `import`.\n         */\n        AotSummaryResolver.prototype.getKnownModuleName = function (importedFilePath) {\n            return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n        };\n        AotSummaryResolver.prototype.addSummary = function (summary) { this.summaryCache.set(summary.symbol, summary); };\n        AotSummaryResolver.prototype._loadSummaryFile = function (filePath) {\n            var _this = this;\n            var hasSummary = this.loadedFilePaths.get(filePath);\n            if (hasSummary != null) {\n                return hasSummary;\n            }\n            var json = null;\n            if (this.isLibraryFile(filePath)) {\n                var summaryFilePath = summaryFileName(filePath);\n                try {\n                    json = this.host.loadSummary(summaryFilePath);\n                }\n                catch (e) {\n                    console.error(\"Error loading summary file \" + summaryFilePath);\n                    throw e;\n                }\n            }\n            hasSummary = json != null;\n            this.loadedFilePaths.set(filePath, hasSummary);\n            if (json) {\n                var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n                summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n                if (moduleName) {\n                    this.knownFileNameToModuleNames.set(filePath, moduleName);\n                }\n                importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n            }\n            return hasSummary;\n        };\n        return AotSummaryResolver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createAotUrlResolver(host) {\n        return {\n            resolve: function (basePath, url) {\n                var filePath = host.resourceNameToFileName(url, basePath);\n                if (!filePath) {\n                    throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n                }\n                return filePath;\n            }\n        };\n    }\n    /**\n     * Creates a new AotCompiler based on options and a host.\n     */\n    function createAotCompiler(compilerHost, options, errorCollector) {\n        var translations = options.translations || '';\n        var urlResolver = createAotUrlResolver(compilerHost);\n        var symbolCache = new StaticSymbolCache();\n        var summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n        var symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n        var staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n        var htmlParser;\n        if (!!options.enableIvy) {\n            // Ivy handles i18n at the compiler level so we must use a regular parser\n            htmlParser = new HtmlParser();\n        }\n        else {\n            htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n        }\n        var config = new CompilerConfig({\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            useJit: false,\n            missingTranslation: options.missingTranslation,\n            preserveWhitespaces: options.preserveWhitespaces,\n            strictInjectionParameters: options.strictInjectionParameters,\n        });\n        var normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n        var expressionParser = new Parser(new Lexer());\n        var elementSchemaRegistry = new DomElementSchemaRegistry();\n        var tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n        var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n        // TODO(vicb): do not pass options.i18nFormat here\n        var viewCompiler = new ViewCompiler(staticReflector);\n        var typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n        var compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector, !!options.enableIvy), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n        return { compiler: compiler, reflector: staticReflector };\n    }\n\n    var SummaryResolver = /** @class */ (function () {\n        function SummaryResolver() {\n        }\n        return SummaryResolver;\n    }());\n    var JitSummaryResolver = /** @class */ (function () {\n        function JitSummaryResolver() {\n            this._summaries = new Map();\n        }\n        JitSummaryResolver.prototype.isLibraryFile = function () { return false; };\n        JitSummaryResolver.prototype.toSummaryFileName = function (fileName) { return fileName; };\n        JitSummaryResolver.prototype.fromSummaryFileName = function (fileName) { return fileName; };\n        JitSummaryResolver.prototype.resolveSummary = function (reference) {\n            return this._summaries.get(reference) || null;\n        };\n        JitSummaryResolver.prototype.getSymbolsOf = function () { return []; };\n        JitSummaryResolver.prototype.getImportAs = function (reference) { return reference; };\n        JitSummaryResolver.prototype.getKnownModuleName = function (fileName) { return null; };\n        JitSummaryResolver.prototype.addSummary = function (summary) { this._summaries.set(summary.symbol, summary); };\n        return JitSummaryResolver;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function interpretStatements(statements, reflector) {\n        var ctx = new _ExecutionContext(null, null, null, new Map());\n        var visitor = new StatementInterpreter(reflector);\n        visitor.visitAllStatements(statements, ctx);\n        var result = {};\n        ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n        return result;\n    }\n    function _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n        var childCtx = ctx.createChildWihtLocalVars();\n        for (var i = 0; i < varNames.length; i++) {\n            childCtx.vars.set(varNames[i], varValues[i]);\n        }\n        var result = visitor.visitAllStatements(statements, childCtx);\n        return result ? result.value : null;\n    }\n    var _ExecutionContext = /** @class */ (function () {\n        function _ExecutionContext(parent, instance, className, vars) {\n            this.parent = parent;\n            this.instance = instance;\n            this.className = className;\n            this.vars = vars;\n            this.exports = [];\n        }\n        _ExecutionContext.prototype.createChildWihtLocalVars = function () {\n            return new _ExecutionContext(this, this.instance, this.className, new Map());\n        };\n        return _ExecutionContext;\n    }());\n    var ReturnValue = /** @class */ (function () {\n        function ReturnValue(value) {\n            this.value = value;\n        }\n        return ReturnValue;\n    }());\n    function createDynamicClass(_classStmt, _ctx, _visitor) {\n        var propertyDescriptors = {};\n        _classStmt.getters.forEach(function (getter) {\n            // Note: use `function` instead of arrow function to capture `this`\n            propertyDescriptors[getter.name] = {\n                configurable: false,\n                get: function () {\n                    var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                    return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n                }\n            };\n        });\n        _classStmt.methods.forEach(function (method) {\n            var paramNames = method.params.map(function (param) { return param.name; });\n            // Note: use `function` instead of arrow function to capture `this`\n            propertyDescriptors[method.name] = {\n                writable: false,\n                configurable: false,\n                value: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                    return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n                }\n            };\n        });\n        var ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        var ctor = function () {\n            var _this = this;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n            _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n            _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n        };\n        var superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n        ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n        return ctor;\n    }\n    var StatementInterpreter = /** @class */ (function () {\n        function StatementInterpreter(reflector) {\n            this.reflector = reflector;\n        }\n        StatementInterpreter.prototype.debugAst = function (ast) { return debugOutputAstAsTypeScript(ast); };\n        StatementInterpreter.prototype.visitDeclareVarStmt = function (stmt, ctx) {\n            var initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n            ctx.vars.set(stmt.name, initialValue);\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                ctx.exports.push(stmt.name);\n            }\n            return null;\n        };\n        StatementInterpreter.prototype.visitWriteVarExpr = function (expr, ctx) {\n            var value = expr.value.visitExpression(this, ctx);\n            var currCtx = ctx;\n            while (currCtx != null) {\n                if (currCtx.vars.has(expr.name)) {\n                    currCtx.vars.set(expr.name, value);\n                    return value;\n                }\n                currCtx = currCtx.parent;\n            }\n            throw new Error(\"Not declared variable \" + expr.name);\n        };\n        StatementInterpreter.prototype.visitWrappedNodeExpr = function (ast, ctx) {\n            throw new Error('Cannot interpret a WrappedNodeExpr.');\n        };\n        StatementInterpreter.prototype.visitTypeofExpr = function (ast, ctx) {\n            throw new Error('Cannot interpret a TypeofExpr');\n        };\n        StatementInterpreter.prototype.visitReadVarExpr = function (ast, ctx) {\n            var varName = ast.name;\n            if (ast.builtin != null) {\n                switch (ast.builtin) {\n                    case exports.BuiltinVar.Super:\n                        return ctx.instance.__proto__;\n                    case exports.BuiltinVar.This:\n                        return ctx.instance;\n                    case exports.BuiltinVar.CatchError:\n                        varName = CATCH_ERROR_VAR$2;\n                        break;\n                    case exports.BuiltinVar.CatchStack:\n                        varName = CATCH_STACK_VAR$2;\n                        break;\n                    default:\n                        throw new Error(\"Unknown builtin variable \" + ast.builtin);\n                }\n            }\n            var currCtx = ctx;\n            while (currCtx != null) {\n                if (currCtx.vars.has(varName)) {\n                    return currCtx.vars.get(varName);\n                }\n                currCtx = currCtx.parent;\n            }\n            throw new Error(\"Not declared variable \" + varName);\n        };\n        StatementInterpreter.prototype.visitWriteKeyExpr = function (expr, ctx) {\n            var receiver = expr.receiver.visitExpression(this, ctx);\n            var index = expr.index.visitExpression(this, ctx);\n            var value = expr.value.visitExpression(this, ctx);\n            receiver[index] = value;\n            return value;\n        };\n        StatementInterpreter.prototype.visitWritePropExpr = function (expr, ctx) {\n            var receiver = expr.receiver.visitExpression(this, ctx);\n            var value = expr.value.visitExpression(this, ctx);\n            receiver[expr.name] = value;\n            return value;\n        };\n        StatementInterpreter.prototype.visitInvokeMethodExpr = function (expr, ctx) {\n            var receiver = expr.receiver.visitExpression(this, ctx);\n            var args = this.visitAllExpressions(expr.args, ctx);\n            var result;\n            if (expr.builtin != null) {\n                switch (expr.builtin) {\n                    case exports.BuiltinMethod.ConcatArray:\n                        result = receiver.concat.apply(receiver, __spread(args));\n                        break;\n                    case exports.BuiltinMethod.SubscribeObservable:\n                        result = receiver.subscribe({ next: args[0] });\n                        break;\n                    case exports.BuiltinMethod.Bind:\n                        result = receiver.bind.apply(receiver, __spread(args));\n                        break;\n                    default:\n                        throw new Error(\"Unknown builtin method \" + expr.builtin);\n                }\n            }\n            else {\n                result = receiver[expr.name].apply(receiver, args);\n            }\n            return result;\n        };\n        StatementInterpreter.prototype.visitInvokeFunctionExpr = function (stmt, ctx) {\n            var args = this.visitAllExpressions(stmt.args, ctx);\n            var fnExpr = stmt.fn;\n            if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === exports.BuiltinVar.Super) {\n                ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n                return null;\n            }\n            else {\n                var fn$$1 = stmt.fn.visitExpression(this, ctx);\n                return fn$$1.apply(null, args);\n            }\n        };\n        StatementInterpreter.prototype.visitReturnStmt = function (stmt, ctx) {\n            return new ReturnValue(stmt.value.visitExpression(this, ctx));\n        };\n        StatementInterpreter.prototype.visitDeclareClassStmt = function (stmt, ctx) {\n            var clazz = createDynamicClass(stmt, ctx, this);\n            ctx.vars.set(stmt.name, clazz);\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                ctx.exports.push(stmt.name);\n            }\n            return null;\n        };\n        StatementInterpreter.prototype.visitExpressionStmt = function (stmt, ctx) {\n            return stmt.expr.visitExpression(this, ctx);\n        };\n        StatementInterpreter.prototype.visitIfStmt = function (stmt, ctx) {\n            var condition = stmt.condition.visitExpression(this, ctx);\n            if (condition) {\n                return this.visitAllStatements(stmt.trueCase, ctx);\n            }\n            else if (stmt.falseCase != null) {\n                return this.visitAllStatements(stmt.falseCase, ctx);\n            }\n            return null;\n        };\n        StatementInterpreter.prototype.visitTryCatchStmt = function (stmt, ctx) {\n            try {\n                return this.visitAllStatements(stmt.bodyStmts, ctx);\n            }\n            catch (e) {\n                var childCtx = ctx.createChildWihtLocalVars();\n                childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n                childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n                return this.visitAllStatements(stmt.catchStmts, childCtx);\n            }\n        };\n        StatementInterpreter.prototype.visitThrowStmt = function (stmt, ctx) {\n            throw stmt.error.visitExpression(this, ctx);\n        };\n        StatementInterpreter.prototype.visitCommentStmt = function (stmt, context) { return null; };\n        StatementInterpreter.prototype.visitJSDocCommentStmt = function (stmt, context) { return null; };\n        StatementInterpreter.prototype.visitInstantiateExpr = function (ast, ctx) {\n            var args = this.visitAllExpressions(ast.args, ctx);\n            var clazz = ast.classExpr.visitExpression(this, ctx);\n            return new (clazz.bind.apply(clazz, __spread([void 0], args)))();\n        };\n        StatementInterpreter.prototype.visitLiteralExpr = function (ast, ctx) { return ast.value; };\n        StatementInterpreter.prototype.visitExternalExpr = function (ast, ctx) {\n            return this.reflector.resolveExternalReference(ast.value);\n        };\n        StatementInterpreter.prototype.visitConditionalExpr = function (ast, ctx) {\n            if (ast.condition.visitExpression(this, ctx)) {\n                return ast.trueCase.visitExpression(this, ctx);\n            }\n            else if (ast.falseCase != null) {\n                return ast.falseCase.visitExpression(this, ctx);\n            }\n            return null;\n        };\n        StatementInterpreter.prototype.visitNotExpr = function (ast, ctx) {\n            return !ast.condition.visitExpression(this, ctx);\n        };\n        StatementInterpreter.prototype.visitAssertNotNullExpr = function (ast, ctx) {\n            return ast.condition.visitExpression(this, ctx);\n        };\n        StatementInterpreter.prototype.visitCastExpr = function (ast, ctx) {\n            return ast.value.visitExpression(this, ctx);\n        };\n        StatementInterpreter.prototype.visitFunctionExpr = function (ast, ctx) {\n            var paramNames = ast.params.map(function (param) { return param.name; });\n            return _declareFn(paramNames, ast.statements, ctx, this);\n        };\n        StatementInterpreter.prototype.visitDeclareFunctionStmt = function (stmt, ctx) {\n            var paramNames = stmt.params.map(function (param) { return param.name; });\n            ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n            if (stmt.hasModifier(exports.StmtModifier.Exported)) {\n                ctx.exports.push(stmt.name);\n            }\n            return null;\n        };\n        StatementInterpreter.prototype.visitBinaryOperatorExpr = function (ast, ctx) {\n            var _this = this;\n            var lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n            var rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n            switch (ast.operator) {\n                case exports.BinaryOperator.Equals:\n                    return lhs() == rhs();\n                case exports.BinaryOperator.Identical:\n                    return lhs() === rhs();\n                case exports.BinaryOperator.NotEquals:\n                    return lhs() != rhs();\n                case exports.BinaryOperator.NotIdentical:\n                    return lhs() !== rhs();\n                case exports.BinaryOperator.And:\n                    return lhs() && rhs();\n                case exports.BinaryOperator.Or:\n                    return lhs() || rhs();\n                case exports.BinaryOperator.Plus:\n                    return lhs() + rhs();\n                case exports.BinaryOperator.Minus:\n                    return lhs() - rhs();\n                case exports.BinaryOperator.Divide:\n                    return lhs() / rhs();\n                case exports.BinaryOperator.Multiply:\n                    return lhs() * rhs();\n                case exports.BinaryOperator.Modulo:\n                    return lhs() % rhs();\n                case exports.BinaryOperator.Lower:\n                    return lhs() < rhs();\n                case exports.BinaryOperator.LowerEquals:\n                    return lhs() <= rhs();\n                case exports.BinaryOperator.Bigger:\n                    return lhs() > rhs();\n                case exports.BinaryOperator.BiggerEquals:\n                    return lhs() >= rhs();\n                default:\n                    throw new Error(\"Unknown operator \" + ast.operator);\n            }\n        };\n        StatementInterpreter.prototype.visitReadPropExpr = function (ast, ctx) {\n            var result;\n            var receiver = ast.receiver.visitExpression(this, ctx);\n            result = receiver[ast.name];\n            return result;\n        };\n        StatementInterpreter.prototype.visitReadKeyExpr = function (ast, ctx) {\n            var receiver = ast.receiver.visitExpression(this, ctx);\n            var prop = ast.index.visitExpression(this, ctx);\n            return receiver[prop];\n        };\n        StatementInterpreter.prototype.visitLiteralArrayExpr = function (ast, ctx) {\n            return this.visitAllExpressions(ast.entries, ctx);\n        };\n        StatementInterpreter.prototype.visitLiteralMapExpr = function (ast, ctx) {\n            var _this = this;\n            var result = {};\n            ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n            return result;\n        };\n        StatementInterpreter.prototype.visitCommaExpr = function (ast, context) {\n            var values = this.visitAllExpressions(ast.parts, context);\n            return values[values.length - 1];\n        };\n        StatementInterpreter.prototype.visitAllExpressions = function (expressions, ctx) {\n            var _this = this;\n            return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n        };\n        StatementInterpreter.prototype.visitAllStatements = function (statements, ctx) {\n            for (var i = 0; i < statements.length; i++) {\n                var stmt = statements[i];\n                var val = stmt.visitStatement(this, ctx);\n                if (val instanceof ReturnValue) {\n                    return val;\n                }\n            }\n            return null;\n        };\n        return StatementInterpreter;\n    }());\n    function _declareFn(varNames, statements, ctx, visitor) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n        };\n    }\n    var CATCH_ERROR_VAR$2 = 'error';\n    var CATCH_STACK_VAR$2 = 'stack';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal module of the Angular compiler that begins with component types,\n     * extracts templates, and eventually produces a compiled version of the component\n     * ready for linking into an application.\n     *\n     * @security  When compiling templates at runtime, you must ensure that the entire template comes\n     * from a trusted source. Attacker-controlled data introduced by a template could expose your\n     * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n     */\n    var JitCompiler = /** @class */ (function () {\n        function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n            this._metadataResolver = _metadataResolver;\n            this._templateParser = _templateParser;\n            this._styleCompiler = _styleCompiler;\n            this._viewCompiler = _viewCompiler;\n            this._ngModuleCompiler = _ngModuleCompiler;\n            this._summaryResolver = _summaryResolver;\n            this._reflector = _reflector;\n            this._compilerConfig = _compilerConfig;\n            this._console = _console;\n            this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n            this._compiledTemplateCache = new Map();\n            this._compiledHostTemplateCache = new Map();\n            this._compiledDirectiveWrapperCache = new Map();\n            this._compiledNgModuleCache = new Map();\n            this._sharedStylesheetCount = 0;\n            this._addedAotSummaries = new Set();\n        }\n        JitCompiler.prototype.compileModuleSync = function (moduleType) {\n            return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n        };\n        JitCompiler.prototype.compileModuleAsync = function (moduleType) {\n            return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n        };\n        JitCompiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n        };\n        JitCompiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n        };\n        JitCompiler.prototype.getComponentFactory = function (component) {\n            var summary = this._metadataResolver.getDirectiveSummary(component);\n            return summary.componentFactory;\n        };\n        JitCompiler.prototype.loadAotSummaries = function (summaries) {\n            this.clearCache();\n            this._addAotSummaries(summaries);\n        };\n        JitCompiler.prototype._addAotSummaries = function (fn$$1) {\n            if (this._addedAotSummaries.has(fn$$1)) {\n                return;\n            }\n            this._addedAotSummaries.add(fn$$1);\n            var summaries = fn$$1();\n            for (var i = 0; i < summaries.length; i++) {\n                var entry = summaries[i];\n                if (typeof entry === 'function') {\n                    this._addAotSummaries(entry);\n                }\n                else {\n                    var summary = entry;\n                    this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n                }\n            }\n        };\n        JitCompiler.prototype.hasAotSummary = function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n        JitCompiler.prototype._filterJitIdentifiers = function (ids) {\n            var _this = this;\n            return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n        };\n        JitCompiler.prototype._compileModuleAndComponents = function (moduleType, isSync) {\n            var _this = this;\n            return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n                _this._compileComponents(moduleType, null);\n                return _this._compileModule(moduleType);\n            });\n        };\n        JitCompiler.prototype._compileModuleAndAllComponents = function (moduleType, isSync) {\n            var _this = this;\n            return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n                var componentFactories = [];\n                _this._compileComponents(moduleType, componentFactories);\n                return {\n                    ngModuleFactory: _this._compileModule(moduleType),\n                    componentFactories: componentFactories\n                };\n            });\n        };\n        JitCompiler.prototype._loadModules = function (mainModule, isSync) {\n            var _this = this;\n            var loading = [];\n            var mainNgModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n            // Note: for runtime compilation, we want to transitively compile all modules,\n            // so we also need to load the declared directives / pipes for all nested modules.\n            this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n                // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n                var moduleMeta = _this._metadataResolver.getNgModuleMetadata(nestedNgModule);\n                _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                    var promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                    if (promise) {\n                        loading.push(promise);\n                    }\n                });\n                _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                    .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n            });\n            return SyncAsync.all(loading);\n        };\n        JitCompiler.prototype._compileModule = function (moduleType) {\n            var ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n            if (!ngModuleFactory) {\n                var moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n                // Always provide a bound Compiler\n                var extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n                var outputCtx = createOutputContext();\n                var compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n                ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n                this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n            }\n            return ngModuleFactory;\n        };\n        /**\n         * @internal\n         */\n        JitCompiler.prototype._compileComponents = function (mainModule, allComponentFactories) {\n            var _this = this;\n            var ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n            var moduleByJitDirective = new Map();\n            var templates = new Set();\n            var transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n            transJitModules.forEach(function (localMod) {\n                var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n                _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                    moduleByJitDirective.set(dirRef, localModuleMeta);\n                    var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                    if (dirMeta.isComponent) {\n                        templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                        if (allComponentFactories) {\n                            var template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                            templates.add(template);\n                            allComponentFactories.push(dirMeta.componentFactory);\n                        }\n                    }\n                });\n            });\n            transJitModules.forEach(function (localMod) {\n                var localModuleMeta = _this._metadataResolver.getNgModuleMetadata(localMod);\n                _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                    var dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                    if (dirMeta.isComponent) {\n                        dirMeta.entryComponents.forEach(function (entryComponentType) {\n                            var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                            templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                        });\n                    }\n                });\n                localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                    if (!_this.hasAotSummary(entryComponentType.componentType)) {\n                        var moduleMeta = moduleByJitDirective.get(entryComponentType.componentType);\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    }\n                });\n            });\n            templates.forEach(function (template) { return _this._compileTemplate(template); });\n        };\n        JitCompiler.prototype.clearCacheFor = function (type) {\n            this._compiledNgModuleCache.delete(type);\n            this._metadataResolver.clearCacheFor(type);\n            this._compiledHostTemplateCache.delete(type);\n            var compiledTemplate = this._compiledTemplateCache.get(type);\n            if (compiledTemplate) {\n                this._compiledTemplateCache.delete(type);\n            }\n        };\n        JitCompiler.prototype.clearCache = function () {\n            // Note: don't clear the _addedAotSummaries, as they don't change!\n            this._metadataResolver.clearCache();\n            this._compiledTemplateCache.clear();\n            this._compiledHostTemplateCache.clear();\n            this._compiledNgModuleCache.clear();\n        };\n        JitCompiler.prototype._createCompiledHostTemplate = function (compType, ngModule) {\n            if (!ngModule) {\n                throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n            var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n            if (!compiledTemplate) {\n                var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n                assertComponent(compMeta);\n                var hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, compMeta.componentFactory.viewDefFactory);\n                compiledTemplate =\n                    new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n                this._compiledHostTemplateCache.set(compType, compiledTemplate);\n            }\n            return compiledTemplate;\n        };\n        JitCompiler.prototype._createCompiledTemplate = function (compMeta, ngModule) {\n            var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n            if (!compiledTemplate) {\n                assertComponent(compMeta);\n                compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n                this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n            }\n            return compiledTemplate;\n        };\n        JitCompiler.prototype._compileTemplate = function (template) {\n            var _this = this;\n            if (template.isCompiled) {\n                return;\n            }\n            var compMeta = template.compMeta;\n            var externalStylesheetsByModuleUrl = new Map();\n            var outputContext = createOutputContext();\n            var componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n            compMeta.template.externalStylesheets.forEach(function (stylesheetMeta) {\n                var compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n                externalStylesheetsByModuleUrl.set(stylesheetMeta.moduleUrl, compiledStylesheet);\n            });\n            this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n            var pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n            var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n            var compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n            var evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n            var viewClass = evalResult[compileResult.viewClassVar];\n            var rendererType = evalResult[compileResult.rendererTypeVar];\n            template.compiled(viewClass, rendererType);\n        };\n        JitCompiler.prototype._parseTemplate = function (compMeta, ngModule, directiveIdentifiers) {\n            var _this = this;\n            // Note: ! is ok here as components always have a template.\n            var preserveWhitespaces = compMeta.template.preserveWhitespaces;\n            var directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n            var pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n            return this._templateParser.parse(compMeta, compMeta.template.htmlAst, directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, compMeta.template), preserveWhitespaces);\n        };\n        JitCompiler.prototype._resolveStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n            var _this = this;\n            result.dependencies.forEach(function (dep, i) {\n                var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n                var nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n                dep.setValue(nestedStylesArr);\n            });\n        };\n        JitCompiler.prototype._resolveAndEvalStylesCompileResult = function (result, externalStylesheetsByModuleUrl) {\n            this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n            return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        };\n        JitCompiler.prototype._interpretOrJit = function (sourceUrl, statements) {\n            if (!this._compilerConfig.useJit) {\n                return interpretStatements(statements, this._reflector);\n            }\n            else {\n                return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n            }\n        };\n        return JitCompiler;\n    }());\n    var CompiledTemplate = /** @class */ (function () {\n        function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n            this.isHost = isHost;\n            this.compType = compType;\n            this.compMeta = compMeta;\n            this.ngModule = ngModule;\n            this.directives = directives;\n            this._viewClass = null;\n            this.isCompiled = false;\n        }\n        CompiledTemplate.prototype.compiled = function (viewClass, rendererType) {\n            this._viewClass = viewClass;\n            this.compMeta.componentViewType.setDelegate(viewClass);\n            for (var prop in rendererType) {\n                this.compMeta.rendererType[prop] = rendererType[prop];\n            }\n            this.isCompiled = true;\n        };\n        return CompiledTemplate;\n    }());\n    function assertComponent(meta) {\n        if (!meta.isComponent) {\n            throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n        }\n    }\n    function createOutputContext() {\n        var importExpr$$1 = function (symbol) {\n            return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n        };\n        return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols that the compiler needs.\n     */\n    var CompileReflector = /** @class */ (function () {\n        function CompileReflector() {\n        }\n        return CompileReflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a {@link UrlResolver} with no package prefix.\n     */\n    function createUrlResolverWithoutPackagePrefix() {\n        return new UrlResolver();\n    }\n    function createOfflineCompileUrlResolver() {\n        return new UrlResolver('.');\n    }\n    var UrlResolver = /** @class */ (function () {\n        function UrlResolverImpl(_packagePrefix) {\n            if (_packagePrefix === void 0) { _packagePrefix = null; }\n            this._packagePrefix = _packagePrefix;\n        }\n        /**\n         * Resolves the `url` given the `baseUrl`:\n         * - when the `url` is null, the `baseUrl` is returned,\n         * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n         * `baseUrl` and `url`,\n         * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n         * returned as is (ignoring the `baseUrl`)\n         */\n        UrlResolverImpl.prototype.resolve = function (baseUrl, url) {\n            var resolvedUrl = url;\n            if (baseUrl != null && baseUrl.length > 0) {\n                resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n            }\n            var resolvedParts = _split(resolvedUrl);\n            var prefix = this._packagePrefix;\n            if (prefix != null && resolvedParts != null &&\n                resolvedParts[_ComponentIndex.Scheme] == 'package') {\n                var path = resolvedParts[_ComponentIndex.Path];\n                prefix = prefix.replace(/\\/+$/, '');\n                path = path.replace(/^\\/+/, '');\n                return prefix + \"/\" + path;\n            }\n            return resolvedUrl;\n        };\n        return UrlResolverImpl;\n    }());\n    /**\n     * Extract the scheme of a URL.\n     */\n    function getUrlScheme(url) {\n        var match = _split(url);\n        return (match && match[_ComponentIndex.Scheme]) || '';\n    }\n    // The code below is adapted from Traceur:\n    // https://github.com/google/traceur-compiler/blob/9511c1dafa972bf0de1202a8a863bad02f0f95a8/src/runtime/url.js\n    /**\n     * Builds a URI string from already-encoded parts.\n     *\n     * No encoding is performed.  Any component may be omitted as either null or\n     * undefined.\n     *\n     * @param opt_scheme The scheme such as 'http'.\n     * @param opt_userInfo The user name before the '@'.\n     * @param opt_domain The domain such as 'www.google.com', already\n     *     URI-encoded.\n     * @param opt_port The port number.\n     * @param opt_path The path, already URI-encoded.  If it is not\n     *     empty, it must begin with a slash.\n     * @param opt_queryData The URI-encoded query data.\n     * @param opt_fragment The URI-encoded fragment identifier.\n     * @return The fully combined URI.\n     */\n    function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n        var out = [];\n        if (opt_scheme != null) {\n            out.push(opt_scheme + ':');\n        }\n        if (opt_domain != null) {\n            out.push('//');\n            if (opt_userInfo != null) {\n                out.push(opt_userInfo + '@');\n            }\n            out.push(opt_domain);\n            if (opt_port != null) {\n                out.push(':' + opt_port);\n            }\n        }\n        if (opt_path != null) {\n            out.push(opt_path);\n        }\n        if (opt_queryData != null) {\n            out.push('?' + opt_queryData);\n        }\n        if (opt_fragment != null) {\n            out.push('#' + opt_fragment);\n        }\n        return out.join('');\n    }\n    /**\n     * A regular expression for breaking a URI into its component parts.\n     *\n     * {@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n     * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n     * disambiguation method used by POSIX regular expressions, it is natural and\n     * commonplace to use a regular expression for parsing the potential five\n     * components of a URI reference.\n     *\n     * The following line is the regular expression for breaking-down a\n     * well-formed URI reference into its components.\n     *\n     * <pre>\n     * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n     *  12            3  4          5       6  7        8 9\n     * </pre>\n     *\n     * The numbers in the second line above are only to assist readability; they\n     * indicate the reference points for each subexpression (i.e., each paired\n     * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n     * For example, matching the above expression to\n     * <pre>\n     *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n     * </pre>\n     * results in the following subexpression matches:\n     * <pre>\n     *    $1 = http:\n     *    $2 = http\n     *    $3 = //www.ics.uci.edu\n     *    $4 = www.ics.uci.edu\n     *    $5 = /pub/ietf/uri/\n     *    $6 = <undefined>\n     *    $7 = <undefined>\n     *    $8 = #Related\n     *    $9 = Related\n     * </pre>\n     * where <undefined> indicates that the component is not present, as is the\n     * case for the query component in the above example. Therefore, we can\n     * determine the value of the five components as\n     * <pre>\n     *    scheme    = $2\n     *    authority = $4\n     *    path      = $5\n     *    query     = $7\n     *    fragment  = $9\n     * </pre>\n     *\n     * The regular expression has been modified slightly to expose the\n     * userInfo, domain, and port separately from the authority.\n     * The modified version yields\n     * <pre>\n     *    $1 = http              scheme\n     *    $2 = <undefined>       userInfo -\\\n     *    $3 = www.ics.uci.edu   domain     | authority\n     *    $4 = <undefined>       port     -/\n     *    $5 = /pub/ietf/uri/    path\n     *    $6 = <undefined>       query without ?\n     *    $7 = Related           fragment without #\n     * </pre>\n     * @internal\n     */\n    var _splitRe = new RegExp('^' +\n        '(?:' +\n        '([^:/?#.]+)' + // scheme - ignore special characters\n        // used by other URL parts such as :,\n        // ?, /, #, and .\n        ':)?' +\n        '(?://' +\n        '(?:([^/?#]*)@)?' + // userInfo\n        '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n        // digits, dashes, dots, percent\n        // escapes, and unicode characters.\n        '(?::([0-9]+))?' + // port\n        ')?' +\n        '([^?#]+)?' + // path\n        '(?:\\\\?([^#]*))?' + // query\n        '(?:#(.*))?' + // fragment\n        '$');\n    /**\n     * The index of each URI component in the return value of goog.uri.utils.split.\n     * @enum {number}\n     */\n    var _ComponentIndex;\n    (function (_ComponentIndex) {\n        _ComponentIndex[_ComponentIndex[\"Scheme\"] = 1] = \"Scheme\";\n        _ComponentIndex[_ComponentIndex[\"UserInfo\"] = 2] = \"UserInfo\";\n        _ComponentIndex[_ComponentIndex[\"Domain\"] = 3] = \"Domain\";\n        _ComponentIndex[_ComponentIndex[\"Port\"] = 4] = \"Port\";\n        _ComponentIndex[_ComponentIndex[\"Path\"] = 5] = \"Path\";\n        _ComponentIndex[_ComponentIndex[\"QueryData\"] = 6] = \"QueryData\";\n        _ComponentIndex[_ComponentIndex[\"Fragment\"] = 7] = \"Fragment\";\n    })(_ComponentIndex || (_ComponentIndex = {}));\n    /**\n     * Splits a URI into its component parts.\n     *\n     * Each component can be accessed via the component indices; for example:\n     * <pre>\n     * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n     * </pre>\n     *\n     * @param uri The URI string to examine.\n     * @return Each component still URI-encoded.\n     *     Each component that is present will contain the encoded value, whereas\n     *     components that are not present will be undefined or empty, depending\n     *     on the browser's regular expression implementation.  Never null, since\n     *     arbitrary strings may still look like path names.\n     */\n    function _split(uri) {\n        return uri.match(_splitRe);\n    }\n    /**\n      * Removes dot segments in given path component, as described in\n      * RFC 3986, section 5.2.4.\n      *\n      * @param path A non-empty path component.\n      * @return Path component with removed dot segments.\n      */\n    function _removeDotSegments(path) {\n        if (path == '/')\n            return '/';\n        var leadingSlash = path[0] == '/' ? '/' : '';\n        var trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n        var segments = path.split('/');\n        var out = [];\n        var up = 0;\n        for (var pos = 0; pos < segments.length; pos++) {\n            var segment = segments[pos];\n            switch (segment) {\n                case '':\n                case '.':\n                    break;\n                case '..':\n                    if (out.length > 0) {\n                        out.pop();\n                    }\n                    else {\n                        up++;\n                    }\n                    break;\n                default:\n                    out.push(segment);\n            }\n        }\n        if (leadingSlash == '') {\n            while (up-- > 0) {\n                out.unshift('..');\n            }\n            if (out.length === 0)\n                out.push('.');\n        }\n        return leadingSlash + out.join('/') + trailingSlash;\n    }\n    /**\n     * Takes an array of the parts from split and canonicalizes the path part\n     * and then joins all the parts.\n     */\n    function _joinAndCanonicalizePath(parts) {\n        var path = parts[_ComponentIndex.Path];\n        path = path == null ? '' : _removeDotSegments(path);\n        parts[_ComponentIndex.Path] = path;\n        return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n    }\n    /**\n     * Resolves a URL.\n     * @param base The URL acting as the base URL.\n     * @param to The URL to resolve.\n     */\n    function _resolveUrl(base, url) {\n        var parts = _split(encodeURI(url));\n        var baseParts = _split(base);\n        if (parts[_ComponentIndex.Scheme] != null) {\n            return _joinAndCanonicalizePath(parts);\n        }\n        else {\n            parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n        }\n        for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n            if (parts[i] == null) {\n                parts[i] = baseParts[i];\n            }\n        }\n        if (parts[_ComponentIndex.Path][0] == '/') {\n            return _joinAndCanonicalizePath(parts);\n        }\n        var path = baseParts[_ComponentIndex.Path];\n        if (path == null)\n            path = '/';\n        var index = path.lastIndexOf('/');\n        path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n        parts[_ComponentIndex.Path] = path;\n        return _joinAndCanonicalizePath(parts);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An interface for retrieving documents by URL that the compiler uses\n     * to load templates.\n     */\n    var ResourceLoader = /** @class */ (function () {\n        function ResourceLoader() {\n        }\n        ResourceLoader.prototype.get = function (url) { return ''; };\n        return ResourceLoader;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Extractor = /** @class */ (function () {\n        function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n            this.host = host;\n            this.staticSymbolResolver = staticSymbolResolver;\n            this.messageBundle = messageBundle;\n            this.metadataResolver = metadataResolver;\n        }\n        Extractor.prototype.extract = function (rootFiles) {\n            var _this = this;\n            var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n            return Promise\n                .all(ngModules.map(function (ngModule) { return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false); }))\n                .then(function () {\n                var errors = [];\n                files.forEach(function (file) {\n                    var compMetas = [];\n                    file.directives.forEach(function (directiveType) {\n                        var dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                        if (dirMeta && dirMeta.isComponent) {\n                            compMetas.push(dirMeta);\n                        }\n                    });\n                    compMetas.forEach(function (compMeta) {\n                        var html = compMeta.template.template;\n                        // Template URL points to either an HTML or TS file depending on\n                        // whether the file is used with `templateUrl:` or `template:`,\n                        // respectively.\n                        var templateUrl = compMeta.template.templateUrl;\n                        var interpolationConfig = InterpolationConfig.fromArray(compMeta.template.interpolation);\n                        errors.push.apply(errors, __spread(_this.messageBundle.updateFromTemplate(html, templateUrl, interpolationConfig)));\n                    });\n                });\n                if (errors.length) {\n                    throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n                }\n                return _this.messageBundle;\n            });\n        };\n        Extractor.create = function (host, locale) {\n            var htmlParser = new HtmlParser();\n            var urlResolver = createAotUrlResolver(host);\n            var symbolCache = new StaticSymbolCache();\n            var summaryResolver = new AotSummaryResolver(host, symbolCache);\n            var staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n            var staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n            var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n            var normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n            var elementSchemaRegistry = new DomElementSchemaRegistry();\n            var resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n            // TODO(vicb): implicit tags & attributes\n            var messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n            var extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n            return { extractor: extractor, staticReflector: staticReflector };\n        };\n        return Extractor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Processes `Target`s with a given set of directives and performs a binding operation, which\n     * returns an object similar to TypeScript's `ts.TypeChecker` that contains knowledge about the\n     * target.\n     */\n    var R3TargetBinder = /** @class */ (function () {\n        function R3TargetBinder(directiveMatcher) {\n            this.directiveMatcher = directiveMatcher;\n        }\n        /**\n         * Perform a binding operation on the given `Target` and return a `BoundTarget` which contains\n         * metadata about the types referenced in the template.\n         */\n        R3TargetBinder.prototype.bind = function (target) {\n            if (!target.template) {\n                // TODO(alxhub): handle targets which contain things like HostBindings, etc.\n                throw new Error('Binding without a template not yet supported');\n            }\n            // First, parse the template into a `Scope` structure. This operation captures the syntactic\n            // scopes in the template and makes them available for later use.\n            var scope = Scope.apply(target.template);\n            // Next, perform directive matching on the template using the `DirectiveBinder`. This returns:\n            //   - directives: Map of nodes (elements & ng-templates) to the directives on them.\n            //   - bindings: Map of inputs, outputs, and attributes to the directive/element that claims\n            //     them. TODO(alxhub): handle multiple directives claiming an input/output/etc.\n            //   - references: Map of #references to their targets.\n            var _a = DirectiveBinder.apply(target.template, this.directiveMatcher), directives = _a.directives, bindings = _a.bindings, references = _a.references;\n            // Finally, run the TemplateBinder to bind references, variables, and other entities within the\n            // template. This extracts all the metadata that doesn't depend on directive matching.\n            var _b = TemplateBinder.apply(target.template, scope), expressions = _b.expressions, symbols = _b.symbols, nestingLevel = _b.nestingLevel;\n            return new R3BoundTarget(target, directives, bindings, references, expressions, symbols, nestingLevel);\n        };\n        return R3TargetBinder;\n    }());\n    /**\n     * Represents a binding scope within a template.\n     *\n     * Any variables, references, or other named entities declared within the template will\n     * be captured and available by name in `namedEntities`. Additionally, child templates will\n     * be analyzed and have their child `Scope`s available in `childScopes`.\n     */\n    var Scope = /** @class */ (function () {\n        function Scope(parentScope) {\n            this.parentScope = parentScope;\n            /**\n             * Named members of the `Scope`, such as `Reference`s or `Variable`s.\n             */\n            this.namedEntities = new Map();\n            /**\n             * Child `Scope`s for immediately nested `Template`s.\n             */\n            this.childScopes = new Map();\n        }\n        /**\n         * Process a template (either as a `Template` sub-template with variables, or a plain array of\n         * template `Node`s) and construct its `Scope`.\n         */\n        Scope.apply = function (template) {\n            var scope = new Scope();\n            scope.ingest(template);\n            return scope;\n        };\n        /**\n         * Internal method to process the template and populate the `Scope`.\n         */\n        Scope.prototype.ingest = function (template) {\n            var _this = this;\n            if (template instanceof Template) {\n                // Variables on an <ng-template> are defined in the inner scope.\n                template.variables.forEach(function (node) { return _this.visitVariable(node); });\n                // Process the nodes of the template.\n                template.children.forEach(function (node) { return node.visit(_this); });\n            }\n            else {\n                // No overarching `Template` instance, so process the nodes directly.\n                template.forEach(function (node) { return node.visit(_this); });\n            }\n        };\n        Scope.prototype.visitElement = function (element) {\n            var _this = this;\n            // `Element`s in the template may have `Reference`s which are captured in the scope.\n            element.references.forEach(function (node) { return _this.visitReference(node); });\n            // Recurse into the `Element`'s children.\n            element.children.forEach(function (node) { return node.visit(_this); });\n        };\n        Scope.prototype.visitTemplate = function (template) {\n            var _this = this;\n            // References on a <ng-template> are defined in the outer scope, so capture them before\n            // processing the template's child scope.\n            template.references.forEach(function (node) { return _this.visitReference(node); });\n            // Next, create an inner scope and process the template within it.\n            var scope = new Scope(this);\n            scope.ingest(template);\n            this.childScopes.set(template, scope);\n        };\n        Scope.prototype.visitVariable = function (variable) {\n            // Declare the variable if it's not already.\n            this.maybeDeclare(variable);\n        };\n        Scope.prototype.visitReference = function (reference) {\n            // Declare the variable if it's not already.\n            this.maybeDeclare(reference);\n        };\n        // Unused visitors.\n        Scope.prototype.visitContent = function (content) { };\n        Scope.prototype.visitBoundAttribute = function (attr) { };\n        Scope.prototype.visitBoundEvent = function (event) { };\n        Scope.prototype.visitBoundText = function (text) { };\n        Scope.prototype.visitText = function (text) { };\n        Scope.prototype.visitTextAttribute = function (attr) { };\n        Scope.prototype.visitIcu = function (icu) { };\n        Scope.prototype.maybeDeclare = function (thing) {\n            // Declare something with a name, as long as that name isn't taken.\n            if (!this.namedEntities.has(thing.name)) {\n                this.namedEntities.set(thing.name, thing);\n            }\n        };\n        /**\n         * Look up a variable within this `Scope`.\n         *\n         * This can recurse into a parent `Scope` if it's available.\n         */\n        Scope.prototype.lookup = function (name) {\n            if (this.namedEntities.has(name)) {\n                // Found in the local scope.\n                return this.namedEntities.get(name);\n            }\n            else if (this.parentScope !== undefined) {\n                // Not in the local scope, but there's a parent scope so check there.\n                return this.parentScope.lookup(name);\n            }\n            else {\n                // At the top level and it wasn't found.\n                return null;\n            }\n        };\n        /**\n         * Get the child scope for a `Template`.\n         *\n         * This should always be defined.\n         */\n        Scope.prototype.getChildScope = function (template) {\n            var res = this.childScopes.get(template);\n            if (res === undefined) {\n                throw new Error(\"Assertion error: child scope for \" + template + \" not found\");\n            }\n            return res;\n        };\n        return Scope;\n    }());\n    /**\n     * Processes a template and matches directives on nodes (elements and templates).\n     *\n     * Usually used via the static `apply()` method.\n     */\n    var DirectiveBinder = /** @class */ (function () {\n        function DirectiveBinder(matcher, directives, bindings, references) {\n            this.matcher = matcher;\n            this.directives = directives;\n            this.bindings = bindings;\n            this.references = references;\n        }\n        /**\n         * Process a template (list of `Node`s) and perform directive matching against each node.\n         *\n         * @param template the list of template `Node`s to match (recursively).\n         * @param selectorMatcher a `SelectorMatcher` containing the directives that are in scope for\n         * this template.\n         * @returns three maps which contain information about directives in the template: the\n         * `directives` map which lists directives matched on each node, the `bindings` map which\n         * indicates which directives claimed which bindings (inputs, outputs, etc), and the `references`\n         * map which resolves #references (`Reference`s) within the template to the named directive or\n         * template node.\n         */\n        DirectiveBinder.apply = function (template, selectorMatcher) {\n            var directives = new Map();\n            var bindings = new Map();\n            var references = new Map();\n            var matcher = new DirectiveBinder(selectorMatcher, directives, bindings, references);\n            matcher.ingest(template);\n            return { directives: directives, bindings: bindings, references: references };\n        };\n        DirectiveBinder.prototype.ingest = function (template) {\n            var _this = this;\n            template.forEach(function (node) { return node.visit(_this); });\n        };\n        DirectiveBinder.prototype.visitElement = function (element) { this.visitElementOrTemplate(element.name, element); };\n        DirectiveBinder.prototype.visitTemplate = function (template) { this.visitElementOrTemplate('ng-template', template); };\n        DirectiveBinder.prototype.visitElementOrTemplate = function (tag, node) {\n            var _this = this;\n            // First, determine the HTML shape of the node for the purpose of directive matching.\n            // Do this by building up a `CssSelector` for the node.\n            var cssSelector = new CssSelector();\n            cssSelector.setElement(tag);\n            // Add attributes to the CSS selector.\n            var attrs = getAttrsForDirectiveMatching(node);\n            Object.getOwnPropertyNames(attrs).forEach(function (name) {\n                var value = attrs[name];\n                cssSelector.addAttribute(name, value);\n                // Treat the 'class' attribute specially.\n                if (name.toLowerCase() === 'class') {\n                    var classes = value.trim().split(/\\s+/g);\n                    classes.forEach(function (className) { return cssSelector.addClassName(className); });\n                }\n            });\n            // Next, use the `SelectorMatcher` to get the list of directives on the node.\n            var directives = [];\n            this.matcher.match(cssSelector, function (_, directive) { return directives.push(directive); });\n            if (directives.length > 0) {\n                this.directives.set(node, directives);\n            }\n            // Resolve any references that are created on this node.\n            node.references.forEach(function (ref) {\n                var dirTarget = null;\n                // If the reference expression is empty, then it matches the \"primary\" directive on the node\n                // (if there is one). Otherwise it matches the host node itself (either an element or\n                // <ng-template> node).\n                if (ref.value.trim() === '') {\n                    // This could be a reference to a component if there is one.\n                    dirTarget = directives.find(function (dir) { return dir.isComponent; }) || null;\n                }\n                else {\n                    // This is a reference to a directive exported via exportAs. One should exist.\n                    dirTarget =\n                        directives.find(function (dir) { return dir.exportAs !== null && dir.exportAs.some(function (value) { return value === ref.value; }); }) ||\n                            null;\n                    // Check if a matching directive was found, and error if it wasn't.\n                    if (dirTarget === null) {\n                        // TODO(alxhub): Return an error value here that can be used for template validation.\n                        throw new Error(\"Assertion error: failed to find directive with exportAs: \" + ref.value);\n                    }\n                }\n                if (dirTarget !== null) {\n                    // This reference points to a directive.\n                    _this.references.set(ref, { directive: dirTarget, node: node });\n                }\n                else {\n                    // This reference points to the node itself.\n                    _this.references.set(ref, node);\n                }\n            });\n            // Associate bindings on the node with directives or with the node itself.\n            // Inputs:\n            __spread(node.attributes, node.inputs).forEach(function (binding) {\n                var dir = directives.find(function (dir) { return dir.inputs.hasOwnProperty(binding.name); });\n                if (dir !== undefined) {\n                    _this.bindings.set(binding, dir);\n                }\n                else {\n                    _this.bindings.set(binding, node);\n                }\n            });\n            // Outputs:\n            node.outputs.forEach(function (binding) {\n                var dir = directives.find(function (dir) { return dir.outputs.hasOwnProperty(binding.name); });\n                if (dir !== undefined) {\n                    _this.bindings.set(binding, dir);\n                }\n                else {\n                    _this.bindings.set(binding, node);\n                }\n            });\n            // Recurse into the node's children.\n            node.children.forEach(function (child) { return child.visit(_this); });\n        };\n        // Unused visitors.\n        DirectiveBinder.prototype.visitContent = function (content) { };\n        DirectiveBinder.prototype.visitVariable = function (variable) { };\n        DirectiveBinder.prototype.visitReference = function (reference) { };\n        DirectiveBinder.prototype.visitTextAttribute = function (attribute) { };\n        DirectiveBinder.prototype.visitBoundAttribute = function (attribute) { };\n        DirectiveBinder.prototype.visitBoundEvent = function (attribute) { };\n        DirectiveBinder.prototype.visitBoundAttributeOrEvent = function (node) { };\n        DirectiveBinder.prototype.visitText = function (text) { };\n        DirectiveBinder.prototype.visitBoundText = function (text) { };\n        DirectiveBinder.prototype.visitIcu = function (icu) { };\n        return DirectiveBinder;\n    }());\n    /**\n     * Processes a template and extract metadata about expressions and symbols within.\n     *\n     * This is a companion to the `DirectiveBinder` that doesn't require knowledge of directives matched\n     * within the template in order to operate.\n     *\n     * Expressions are visited by the superclass `RecursiveAstVisitor`, with custom logic provided\n     * by overridden methods from that visitor.\n     */\n    var TemplateBinder = /** @class */ (function (_super) {\n        __extends(TemplateBinder, _super);\n        function TemplateBinder(bindings, symbols, nestingLevel, scope, template, level) {\n            var _this = _super.call(this) || this;\n            _this.bindings = bindings;\n            _this.symbols = symbols;\n            _this.nestingLevel = nestingLevel;\n            _this.scope = scope;\n            _this.template = template;\n            _this.level = level;\n            // Save a bit of processing time by constructing this closure in advance.\n            _this.visitNode = function (node) { return node.visit(_this); };\n            return _this;\n        }\n        /**\n         * Process a template and extract metadata about expressions and symbols within.\n         *\n         * @param template the nodes of the template to process\n         * @param scope the `Scope` of the template being processed.\n         * @returns three maps which contain metadata about the template: `expressions` which interprets\n         * special `AST` nodes in expressions as pointing to references or variables declared within the\n         * template, `symbols` which maps those variables and references to the nested `Template` which\n         * declares them, if any, and `nestingLevel` which associates each `Template` with a integer\n         * nesting level (how many levels deep within the template structure the `Template` is), starting\n         * at 1.\n         */\n        TemplateBinder.apply = function (template, scope) {\n            var expressions = new Map();\n            var symbols = new Map();\n            var nestingLevel = new Map();\n            // The top-level template has nesting level 0.\n            var binder = new TemplateBinder(expressions, symbols, nestingLevel, scope, template instanceof Template ? template : null, 0);\n            binder.ingest(template);\n            return { expressions: expressions, symbols: symbols, nestingLevel: nestingLevel };\n        };\n        TemplateBinder.prototype.ingest = function (template) {\n            if (template instanceof Template) {\n                // For <ng-template>s, process inputs, outputs, variables, and child nodes. References were\n                // processed in the scope of the containing template.\n                template.inputs.forEach(this.visitNode);\n                template.outputs.forEach(this.visitNode);\n                template.variables.forEach(this.visitNode);\n                template.children.forEach(this.visitNode);\n                // Set the nesting level.\n                this.nestingLevel.set(template, this.level);\n            }\n            else {\n                // Visit each node from the top-level template.\n                template.forEach(this.visitNode);\n            }\n        };\n        TemplateBinder.prototype.visitElement = function (element) {\n            // Vist the inputs, outputs, and children of the element.\n            element.inputs.forEach(this.visitNode);\n            element.outputs.forEach(this.visitNode);\n            element.children.forEach(this.visitNode);\n        };\n        TemplateBinder.prototype.visitTemplate = function (template) {\n            // First, visit the inputs, outputs of the template node.\n            template.inputs.forEach(this.visitNode);\n            template.outputs.forEach(this.visitNode);\n            // References are also evaluated in the outer context.\n            template.references.forEach(this.visitNode);\n            // Next, recurse into the template using its scope, and bumping the nesting level up by one.\n            var childScope = this.scope.getChildScope(template);\n            var binder = new TemplateBinder(this.bindings, this.symbols, this.nestingLevel, childScope, template, this.level + 1);\n            binder.ingest(template);\n        };\n        TemplateBinder.prototype.visitVariable = function (variable) {\n            // Register the `Variable` as a symbol in the current `Template`.\n            if (this.template !== null) {\n                this.symbols.set(variable, this.template);\n            }\n        };\n        TemplateBinder.prototype.visitReference = function (reference) {\n            // Register the `Reference` as a symbol in the current `Template`.\n            if (this.template !== null) {\n                this.symbols.set(reference, this.template);\n            }\n        };\n        // Unused template visitors\n        TemplateBinder.prototype.visitText = function (text) { };\n        TemplateBinder.prototype.visitContent = function (content) { };\n        TemplateBinder.prototype.visitTextAttribute = function (attribute) { };\n        TemplateBinder.prototype.visitIcu = function (icu) { };\n        // The remaining visitors are concerned with processing AST expressions within template bindings\n        TemplateBinder.prototype.visitBoundAttribute = function (attribute) { attribute.value.visit(this); };\n        TemplateBinder.prototype.visitBoundEvent = function (event) { event.handler.visit(this); };\n        TemplateBinder.prototype.visitBoundText = function (text) { text.value.visit(this); };\n        // These five types of AST expressions can refer to expression roots, which could be variables\n        // or references in the current scope.\n        TemplateBinder.prototype.visitPropertyRead = function (ast, context) {\n            this.maybeMap(context, ast, ast.name);\n            return _super.prototype.visitPropertyRead.call(this, ast, context);\n        };\n        TemplateBinder.prototype.visitSafePropertyRead = function (ast, context) {\n            this.maybeMap(context, ast, ast.name);\n            return _super.prototype.visitSafePropertyRead.call(this, ast, context);\n        };\n        TemplateBinder.prototype.visitPropertyWrite = function (ast, context) {\n            this.maybeMap(context, ast, ast.name);\n            return _super.prototype.visitPropertyWrite.call(this, ast, context);\n        };\n        TemplateBinder.prototype.visitMethodCall = function (ast, context) {\n            this.maybeMap(context, ast, ast.name);\n            return _super.prototype.visitMethodCall.call(this, ast, context);\n        };\n        TemplateBinder.prototype.visitSafeMethodCall = function (ast, context) {\n            this.maybeMap(context, ast, ast.name);\n            return _super.prototype.visitSafeMethodCall.call(this, ast, context);\n        };\n        TemplateBinder.prototype.maybeMap = function (scope, ast, name) {\n            // If the receiver of the expression isn't the `ImplicitReceiver`, this isn't the root of an\n            // `AST` expression that maps to a `Variable` or `Reference`.\n            if (!(ast.receiver instanceof ImplicitReceiver)) {\n                return;\n            }\n            // Check whether the name exists in the current scope. If so, map it. Otherwise, the name is\n            // probably a property on the top-level component context.\n            var target = this.scope.lookup(name);\n            if (target !== null) {\n                this.bindings.set(ast, target);\n            }\n        };\n        return TemplateBinder;\n    }(RecursiveAstVisitor$1));\n    /**\n     * Metadata container for a `Target` that allows queries for specific bits of metadata.\n     *\n     * See `BoundTarget` for documentation on the individual methods.\n     */\n    var R3BoundTarget = /** @class */ (function () {\n        function R3BoundTarget(target, directives, bindings, references, exprTargets, symbols, nestingLevel) {\n            this.target = target;\n            this.directives = directives;\n            this.bindings = bindings;\n            this.references = references;\n            this.exprTargets = exprTargets;\n            this.symbols = symbols;\n            this.nestingLevel = nestingLevel;\n        }\n        R3BoundTarget.prototype.getDirectivesOfNode = function (node) {\n            return this.directives.get(node) || null;\n        };\n        R3BoundTarget.prototype.getReferenceTarget = function (ref) {\n            return this.references.get(ref) || null;\n        };\n        R3BoundTarget.prototype.getConsumerOfBinding = function (binding) {\n            return this.bindings.get(binding) || null;\n        };\n        R3BoundTarget.prototype.getExpressionTarget = function (expr) {\n            return this.exprTargets.get(expr) || null;\n        };\n        R3BoundTarget.prototype.getTemplateOfSymbol = function (symbol) {\n            return this.symbols.get(symbol) || null;\n        };\n        R3BoundTarget.prototype.getNestingLevel = function (template) { return this.nestingLevel.get(template) || 0; };\n        R3BoundTarget.prototype.getUsedDirectives = function () {\n            var set = new Set();\n            this.directives.forEach(function (dirs) { return dirs.forEach(function (dir) { return set.add(dir); }); });\n            return Array.from(set.values());\n        };\n        return R3BoundTarget;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n    // This function call has a global side effects and publishes the compiler into global namespace for\n    // the late binding of the Compiler to the @angular/core for jit compilation.\n    publishFacade(_global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.core = core;\n    exports.CompilerConfig = CompilerConfig;\n    exports.preserveWhitespacesDefault = preserveWhitespacesDefault;\n    exports.isLoweredSymbol = isLoweredSymbol;\n    exports.createLoweredSymbol = createLoweredSymbol;\n    exports.Identifiers = Identifiers;\n    exports.JitCompiler = JitCompiler;\n    exports.ConstantPool = ConstantPool;\n    exports.DirectiveResolver = DirectiveResolver;\n    exports.PipeResolver = PipeResolver;\n    exports.NgModuleResolver = NgModuleResolver;\n    exports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\n    exports.InterpolationConfig = InterpolationConfig;\n    exports.NgModuleCompiler = NgModuleCompiler;\n    exports.ArrayType = ArrayType;\n    exports.AssertNotNull = AssertNotNull;\n    exports.BinaryOperatorExpr = BinaryOperatorExpr;\n    exports.BuiltinType = BuiltinType;\n    exports.CastExpr = CastExpr;\n    exports.ClassField = ClassField;\n    exports.ClassMethod = ClassMethod;\n    exports.ClassStmt = ClassStmt;\n    exports.CommaExpr = CommaExpr;\n    exports.CommentStmt = CommentStmt;\n    exports.ConditionalExpr = ConditionalExpr;\n    exports.DeclareFunctionStmt = DeclareFunctionStmt;\n    exports.DeclareVarStmt = DeclareVarStmt;\n    exports.Expression = Expression;\n    exports.ExpressionStatement = ExpressionStatement;\n    exports.ExpressionType = ExpressionType;\n    exports.ExternalExpr = ExternalExpr;\n    exports.ExternalReference = ExternalReference;\n    exports.FunctionExpr = FunctionExpr;\n    exports.IfStmt = IfStmt;\n    exports.InstantiateExpr = InstantiateExpr;\n    exports.InvokeFunctionExpr = InvokeFunctionExpr;\n    exports.InvokeMethodExpr = InvokeMethodExpr;\n    exports.JSDocCommentStmt = JSDocCommentStmt;\n    exports.LiteralArrayExpr = LiteralArrayExpr;\n    exports.LiteralExpr = LiteralExpr;\n    exports.LiteralMapExpr = LiteralMapExpr;\n    exports.MapType = MapType;\n    exports.NotExpr = NotExpr;\n    exports.ReadKeyExpr = ReadKeyExpr;\n    exports.ReadPropExpr = ReadPropExpr;\n    exports.ReadVarExpr = ReadVarExpr;\n    exports.ReturnStatement = ReturnStatement;\n    exports.ThrowStmt = ThrowStmt;\n    exports.TryCatchStmt = TryCatchStmt;\n    exports.Type = Type$1;\n    exports.WrappedNodeExpr = WrappedNodeExpr;\n    exports.WriteKeyExpr = WriteKeyExpr;\n    exports.WritePropExpr = WritePropExpr;\n    exports.WriteVarExpr = WriteVarExpr;\n    exports.Statement = Statement;\n    exports.TypeofExpr = TypeofExpr;\n    exports.collectExternalReferences = collectExternalReferences;\n    exports.EmitterVisitorContext = EmitterVisitorContext;\n    exports.ViewCompiler = ViewCompiler;\n    exports.getParseErrors = getParseErrors;\n    exports.isSyntaxError = isSyntaxError;\n    exports.syntaxError = syntaxError;\n    exports.Version = Version;\n    exports.TmplAstBoundAttribute = BoundAttribute;\n    exports.TmplAstBoundEvent = BoundEvent;\n    exports.TmplAstBoundText = BoundText;\n    exports.TmplAstContent = Content;\n    exports.TmplAstElement = Element;\n    exports.TmplAstReference = Reference;\n    exports.TmplAstTemplate = Template;\n    exports.TmplAstText = Text$2;\n    exports.TmplAstTextAttribute = TextAttribute;\n    exports.TmplAstVariable = Variable;\n    exports.jitExpression = jitExpression;\n    exports.compileInjector = compileInjector;\n    exports.compileNgModule = compileNgModule;\n    exports.compilePipeFromMetadata = compilePipeFromMetadata;\n    exports.makeBindingParser = makeBindingParser;\n    exports.parseTemplate = parseTemplate;\n    exports.compileBaseDefFromMetadata = compileBaseDefFromMetadata;\n    exports.compileComponentFromMetadata = compileComponentFromMetadata;\n    exports.compileDirectiveFromMetadata = compileDirectiveFromMetadata;\n    exports.parseHostBindings = parseHostBindings;\n    exports.publishFacade = publishFacade;\n    exports.VERSION = VERSION$1;\n    exports.TextAst = TextAst;\n    exports.BoundTextAst = BoundTextAst;\n    exports.AttrAst = AttrAst;\n    exports.BoundElementPropertyAst = BoundElementPropertyAst;\n    exports.BoundEventAst = BoundEventAst;\n    exports.ReferenceAst = ReferenceAst;\n    exports.VariableAst = VariableAst;\n    exports.ElementAst = ElementAst;\n    exports.EmbeddedTemplateAst = EmbeddedTemplateAst;\n    exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\n    exports.DirectiveAst = DirectiveAst;\n    exports.ProviderAst = ProviderAst;\n    exports.NgContentAst = NgContentAst;\n    exports.NullTemplateVisitor = NullTemplateVisitor;\n    exports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\n    exports.templateVisitAll = templateVisitAll;\n    exports.sanitizeIdentifier = sanitizeIdentifier;\n    exports.identifierName = identifierName;\n    exports.identifierModuleUrl = identifierModuleUrl;\n    exports.viewClassName = viewClassName;\n    exports.rendererTypeName = rendererTypeName;\n    exports.hostViewClassName = hostViewClassName;\n    exports.componentFactoryName = componentFactoryName;\n    exports.tokenName = tokenName;\n    exports.tokenReference = tokenReference;\n    exports.CompileStylesheetMetadata = CompileStylesheetMetadata;\n    exports.CompileTemplateMetadata = CompileTemplateMetadata;\n    exports.CompileDirectiveMetadata = CompileDirectiveMetadata;\n    exports.CompilePipeMetadata = CompilePipeMetadata;\n    exports.CompileShallowModuleMetadata = CompileShallowModuleMetadata;\n    exports.CompileNgModuleMetadata = CompileNgModuleMetadata;\n    exports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\n    exports.ProviderMeta = ProviderMeta;\n    exports.flatten = flatten;\n    exports.templateSourceUrl = templateSourceUrl;\n    exports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\n    exports.ngModuleJitUrl = ngModuleJitUrl;\n    exports.templateJitUrl = templateJitUrl;\n    exports.createAotUrlResolver = createAotUrlResolver;\n    exports.createAotCompiler = createAotCompiler;\n    exports.AotCompiler = AotCompiler;\n    exports.analyzeNgModules = analyzeNgModules;\n    exports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\n    exports.analyzeFile = analyzeFile;\n    exports.analyzeFileForInjectables = analyzeFileForInjectables;\n    exports.mergeAnalyzedFiles = mergeAnalyzedFiles;\n    exports.GeneratedFile = GeneratedFile;\n    exports.toTypeScript = toTypeScript;\n    exports.formattedError = formattedError;\n    exports.isFormattedError = isFormattedError;\n    exports.StaticReflector = StaticReflector;\n    exports.StaticSymbol = StaticSymbol;\n    exports.StaticSymbolCache = StaticSymbolCache;\n    exports.ResolvedStaticSymbol = ResolvedStaticSymbol;\n    exports.StaticSymbolResolver = StaticSymbolResolver;\n    exports.unescapeIdentifier = unescapeIdentifier;\n    exports.unwrapResolvedMetadata = unwrapResolvedMetadata;\n    exports.AotSummaryResolver = AotSummaryResolver;\n    exports.AstPath = AstPath;\n    exports.SummaryResolver = SummaryResolver;\n    exports.JitSummaryResolver = JitSummaryResolver;\n    exports.CompileReflector = CompileReflector;\n    exports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\n    exports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\n    exports.UrlResolver = UrlResolver;\n    exports.getUrlScheme = getUrlScheme;\n    exports.ResourceLoader = ResourceLoader;\n    exports.ElementSchemaRegistry = ElementSchemaRegistry;\n    exports.Extractor = Extractor;\n    exports.I18NHtmlParser = I18NHtmlParser;\n    exports.MessageBundle = MessageBundle;\n    exports.Serializer = Serializer;\n    exports.Xliff = Xliff;\n    exports.Xliff2 = Xliff2;\n    exports.Xmb = Xmb;\n    exports.Xtb = Xtb;\n    exports.DirectiveNormalizer = DirectiveNormalizer;\n    exports.ParserError = ParserError;\n    exports.ParseSpan = ParseSpan;\n    exports.AST = AST;\n    exports.Quote = Quote;\n    exports.EmptyExpr = EmptyExpr;\n    exports.ImplicitReceiver = ImplicitReceiver;\n    exports.Chain = Chain;\n    exports.Conditional = Conditional;\n    exports.PropertyRead = PropertyRead;\n    exports.PropertyWrite = PropertyWrite;\n    exports.SafePropertyRead = SafePropertyRead;\n    exports.KeyedRead = KeyedRead;\n    exports.KeyedWrite = KeyedWrite;\n    exports.BindingPipe = BindingPipe;\n    exports.LiteralPrimitive = LiteralPrimitive;\n    exports.LiteralArray = LiteralArray;\n    exports.LiteralMap = LiteralMap;\n    exports.Interpolation = Interpolation;\n    exports.Binary = Binary;\n    exports.PrefixNot = PrefixNot;\n    exports.NonNullAssert = NonNullAssert;\n    exports.MethodCall = MethodCall;\n    exports.SafeMethodCall = SafeMethodCall;\n    exports.FunctionCall = FunctionCall;\n    exports.ASTWithSource = ASTWithSource;\n    exports.TemplateBinding = TemplateBinding;\n    exports.NullAstVisitor = NullAstVisitor;\n    exports.RecursiveAstVisitor = RecursiveAstVisitor$1;\n    exports.AstTransformer = AstTransformer$1;\n    exports.AstMemoryEfficientTransformer = AstMemoryEfficientTransformer;\n    exports.visitAstChildren = visitAstChildren;\n    exports.ParsedProperty = ParsedProperty;\n    exports.ParsedEvent = ParsedEvent;\n    exports.ParsedVariable = ParsedVariable;\n    exports.BoundElementProperty = BoundElementProperty;\n    exports.Lexer = Lexer;\n    exports.Token = Token;\n    exports.EOF = EOF;\n    exports.isIdentifier = isIdentifier;\n    exports.isQuote = isQuote;\n    exports.SplitInterpolation = SplitInterpolation;\n    exports.TemplateBindingParseResult = TemplateBindingParseResult;\n    exports.Parser = Parser;\n    exports._ParseAST = _ParseAST;\n    exports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\n    exports.CompileMetadataResolver = CompileMetadataResolver;\n    exports.Text = Text$3;\n    exports.Expansion = Expansion;\n    exports.ExpansionCase = ExpansionCase;\n    exports.Attribute = Attribute;\n    exports.Element = Element$1;\n    exports.Comment = Comment;\n    exports.visitAll = visitAll$1;\n    exports.RecursiveVisitor = RecursiveVisitor$1;\n    exports.findNode = findNode;\n    exports.HtmlParser = HtmlParser;\n    exports.ParseTreeResult = ParseTreeResult;\n    exports.TreeError = TreeError;\n    exports.HtmlTagDefinition = HtmlTagDefinition;\n    exports.getHtmlTagDefinition = getHtmlTagDefinition;\n    exports.splitNsName = splitNsName;\n    exports.isNgContainer = isNgContainer;\n    exports.isNgContent = isNgContent;\n    exports.isNgTemplate = isNgTemplate;\n    exports.getNsPrefix = getNsPrefix;\n    exports.mergeNsAndName = mergeNsAndName;\n    exports.NAMED_ENTITIES = NAMED_ENTITIES;\n    exports.NGSP_UNICODE = NGSP_UNICODE;\n    exports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\n    exports.TypeScriptEmitter = TypeScriptEmitter;\n    exports.ParseLocation = ParseLocation;\n    exports.ParseSourceFile = ParseSourceFile;\n    exports.ParseSourceSpan = ParseSourceSpan;\n    exports.ParseError = ParseError;\n    exports.typeSourceSpan = typeSourceSpan;\n    exports.DomElementSchemaRegistry = DomElementSchemaRegistry;\n    exports.CssSelector = CssSelector;\n    exports.SelectorMatcher = SelectorMatcher;\n    exports.SelectorListContext = SelectorListContext;\n    exports.SelectorContext = SelectorContext;\n    exports.HOST_ATTR = HOST_ATTR;\n    exports.CONTENT_ATTR = CONTENT_ATTR;\n    exports.StylesCompileDependency = StylesCompileDependency;\n    exports.CompiledStylesheet = CompiledStylesheet;\n    exports.StyleCompiler = StyleCompiler;\n    exports.TemplateParseError = TemplateParseError;\n    exports.TemplateParseResult = TemplateParseResult;\n    exports.TemplateParser = TemplateParser;\n    exports.splitClasses = splitClasses;\n    exports.createElementCssSelector = createElementCssSelector;\n    exports.removeSummaryDuplicates = removeSummaryDuplicates;\n    exports.compileInjectable = compileInjectable;\n    exports.R3TargetBinder = R3TargetBinder;\n    exports.R3BoundTarget = R3BoundTarget;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=compiler.umd.js.map\n"]}