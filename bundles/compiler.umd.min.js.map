{"version":3,"sources":["compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","error","msg","Error","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","srcFileSuffix","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","error$$1","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","ifStmt","thenClause","elseClause","IfStmt","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractCommentsWithHash","_commentWithHashRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","form","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","BindingForm","TrySimple","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","invalid","compileDirective","outputCtx","definitionMapValues","templateFactory","createFactory","getOwnPropertyNames","inputs","mapToExpression","ClassStmt","ClassField","Static","Identifiers$1","defineDirective","ClassMethod","compileComponent","template","firstSelector","hasElementSelector","selectorAttributes","getAttrs","constantPool","getConstLiteral","templateTypeName","templateName","templateFunctionExpression","TemplateDefinitionBuilder","CONTEXT_NAME","ROOT_SCOPE","nestedScope","ngContentSelectors","buildTemplateFunction","features","lifecycle","NgOnChangesFeature","defineComponent","unsupported","feature","interpolate","bind1","bind2","bind3","bind4","bind5","bind6","bind7","bind8","bindV","elementRef","ElementRef","templateRef","TemplateRef","viewContainerRef","ViewContainerRef","dependency","isHost","tokenRef","injectElementRef","injectTemplateRef","injectViewContainerRef","inject","InstantiateExpr","invalid$1","findComponent","getContentProjection","projectIndexMap","ContentProjectionVisitor","parserSelectorToSimpleSelector","classes","classNames","parserSelectorToR3Selector","positive","negative","parseSelectorsToR3Selector","asLiteral","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","ConstantPool","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","originalValue","visitReference","VariableAst","visitVariable","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","templateUrl","htmlAst","externalStylesheets","animations","interpolation","toSummary","CompileDirectiveMetadata","hostListeners","guards","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","publicNames","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","_addResult","cssSel","current","inNot","exec","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltinType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","initializer","ClassGetter","visitDeclareClassStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","commentsWithHash","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","General","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","useIf","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","guardExpression","guardClause","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","FixupExpression","resolved","fixup","shared","literals","injectorDefinitions","directiveDefinitions","componentDefinitions","nextNameIndex","literal$$1","forceShared","keyOf","newValue","freshName","getDefinition","KeyVisitor","mapEntry","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","CORE$1","NEW_METHOD","HOST_BINDING_METHOD","createElement","elementEnd","elementProperty","elementAttribute","elementClass","elementStyle","containerCreate","containerEnd","containerRefreshStart","containerRefreshEnd","directiveCreate","directiveInput","textCreateBound","memory","projection","projectionDef","refreshComponent","directiveLifeCycle","BINDING_INSTRUCTION_MAP","BindingScope","referenceNameIndex","variableName","freshReferenceName","contextParameter","bindingScope","contextName","_dataIndex","_bindingContext","_referenceIndex","_temporaryAllocated","_prefix","_creationMode","_bindingMode","_hostMode","_refreshMode","_postfix","_projectionDefinitionIndex","variables_1","variable$$1","scopedName","declaration","contentProjections","_contentProjections","infos_1","info","projectionIndex","allocateDataSlot","instruction","creationMode","slot","_computeDirectivesArray","directiveIndexMap","directiveExpressions","typeReference","directivesArray","elementIndex","componentIndex","referenceDataSlots","nullNode","implicit","convertedBinding","bindingContext","_visitDirectives","directives_1","definitionOf","templateIndex","templateDirective","templateContext","templateVisitor","templateFunctionExpr","convertedPropertyBinding","projectionMap","selectorText","GeneratedFile","srcFileUrl","sourceOrStmts","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","useSummaries","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","_originalFileMemo","getOriginalName","getOutputName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllPartialModules","_emitPartialModule","directiveMetadata","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","declarationSymbol_1","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope$1","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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gkB,WAAW1zC,WAWxDksC,aAAa9tC,UAAU2L,QAMvB,SAAU9F,KAAMuuD,qBACY,KAApBA,kBAA8BA,iBAAkB,EACpD,IAAqBipC,OAAQ59F,KAAKw0D,WAAWE,YAAYvuD,kBAAkBC,MAC3E,IAAIw3F,MAAO,CACP,GAAqBzX,YAAap3E,SAAS6uF,MAAO/nD,WAAW1zC,SAC7D,IAAIgkF,WACA,MAAOA,YAGf,GAAIxxB,gBACA,KAAM,IAAIrwD,OAAM,8BAAgCoB,UAAUU,MAE9D,OAAO,OAEJioC,gBAiBP3e,kBAaJJ,iBAAgBiF,gBAAgBuiB,MAC5B,gBACA,cACA,gBAEJxnB,gBAAgBiF,gBAAgBlmB,OAAQ,YAExCihB,gBAAgBiF,gBAAgBwiB,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEznB,gBAAgBiF,gBAAgByiB,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAI6mD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZ1wD,yBAA0C,SAAUtjC,QAEpD,QAASsjC,4BACL,GAAIhF,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAqCjC,OApCA+oC,OAAM21D,WACNR,OAAOr3F,QAAQ,SAAU83F,aACrB,GAAqBv4F,SACjBgT,GAAKulF,YAAYn1F,MAAM,KAAMo1F,QAAUxlF,GAAG,GAAIylF,cAAgBzlF,GAAG,GAChD0lF,WAAaD,cAAcr1F,MAAM,KAClD+P,GAAKqlF,QAAQp1F,MAAM,KAAMu1F,UAAYxlF,GAAG,GAAIylF,UAAYzlF,GAAG,EAC/DwlF,WAAUv1F,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAOmpB,OAAM21D,QAAQ9+E,IAAInS,eAAiBrH,MACxF,IAAqB64F,WAAYD,WAAaj2D,MAAM21D,QAAQM,UAAUvxF,cAClEwxF,YACAz+F,OAAO+2B,KAAK0nE,WAAWp4F,QAAQ,SAAU+oB,MAAQxpB,KAAKwpB,MAAQqvE,UAAUrvE,QAE5EkvE,WAAWj4F,QAAQ,SAAUq4F,UACzB,GAAIA,SAASp9F,OAAS,EAClB,OAAQo9F,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACD94F,KAAK84F,SAASh5F,UAAU,IAAM43F,OAC9B,MACJ,KAAK,IACD13F,KAAK84F,SAASh5F,UAAU,IAAM63F,MAC9B,MACJ,KAAK,IACD33F,KAAK84F,SAASh5F,UAAU,IAAM+3F,MAC9B,MACJ,SACI73F,KAAK84F,UAAYlB,YAK9Bj1D,MAmNX,MA1PA9oC,WAAU8tC,yBAA0BtjC,QA+CpCsjC,yBAAyBxtC,UAAU4+F,YAMnC,SAAU3yF,QAASknB,SAAU0rE,aACzB,GAAIA,YAAYvtE,KAAK,SAAUwtE,QAAU,MAAOA,QAAO59F,OAAS+0C,iBAAiB/0C,OAC7E,OAAO,CAEX,IAAI+K,QAAQtJ,QAAQ,MAAQ,EAAG,CAC3B,GAAIqJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAI4yF,YAAYvtE,KAAK,SAAUwtE,QAAU,MAAOA,QAAO59F,OAAS80C,uBAAuB90C,OAGnF,OAAO,EAIf,SADyCzB,KAAK0+F,QAAQlyF,QAAQiB,gBAAkBzN,KAAK0+F,QAAiB,SAC3EhrE,WAO/Bqa,yBAAyBxtC,UAAU++F,WAKnC,SAAU9yF,QAAS4yF,aACf,GAAIA,YAAYvtE,KAAK,SAAUwtE,QAAU,MAAOA,QAAO59F,OAAS+0C,iBAAiB/0C,OAC7E,OAAO,CAEX,IAAI+K,QAAQtJ,QAAQ,MAAQ,EAAG,CAC3B,GAAIqJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAI4yF,YAAYvtE,KAAK,SAAUwtE,QAAU,MAAOA,QAAO59F,OAAS80C,uBAAuB90C,OAEnF,OAAO,EAGf,QAASzB,KAAK0+F,QAAQlyF,QAAQiB,gBA0BlCsgC,yBAAyBxtC,UAAU+zB,gBAcnC,SAAU9nB,QAASknB,SAAUC,aACrBA,cAEAD,SAAW1zB,KAAKu/F,kBAAkB7rE,WAItClnB,QAAUA,QAAQiB,cAClBimB,SAAWA,SAASjmB,aACpB,IAAqBqd,KAAM4E,gBAAgBljB,QAAU,IAAMknB,SAC3D,OAAI5I,QAGJA,IAAM4E,gBAAgB,KAAOgE,YACVa,gBAAgBC,OAMvCuZ,yBAAyBxtC,UAAUg/F,kBAInC,SAAU7rE,UAAY,MAAOyqE,eAAczqE,WAAaA,UAIxDqa,yBAAyBxtC,UAAUumF,+BAGnC,WAAc,MAAO,gBAKrB/4C,yBAAyBxtC,UAAUi/F,iBAInC,SAAU/9F,MACN,GAAIA,KAAKgM,cAAc6Q,WAAW,MAAO,CAKrC,OAASla,OAAO,EAAMC,IAJK,8BAAgC5C,KAAO,qDAC5CA,KAAK0B,MAAM,GAAK,cACtB1B,KAAO,sFAKvB,OAAS2C,OAAO,IAOxB2pC,yBAAyBxtC,UAAUk/F,kBAInC,SAAUh+F,MACN,GAAIA,KAAKgM,cAAc6Q,WAAW,MAAO,CAGrC,OAASla,OAAO,EAAMC,IAFK,+BAAiC5C,KAAO,qDAC7CA,KAAK0B,MAAM,GAAK,SAItC,OAASiB,OAAO,IAMxB2pC,yBAAyBxtC,UAAUyzB,qBAGnC,WAAc,MAAOxzB,QAAO+2B,KAAKv3B,KAAK0+F,UAKtC3wD,yBAAyBxtC,UAAUm/F,gCAInC,SAAUhsE,UACN,MAAOpxB,qBAAoBoxB,WAQ/Bqa,yBAAyBxtC,UAAUo/F,6BAMnC,SAAUC,cAAeC,iBAAkB57F,KACvC,GAAqBm3B,MAAO,GACP0kE,OAAS77F,IAAI+B,WAAW5C,OACxB4+D,SAA4B,IACjD,IAAIryC,uBAAuBiwE,gBAA0B,IAAR37F,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACPm3B,KAAO,SAEN,CACD,GAAqB2kE,mBAAoB97F,IAAIuH,MAAM,yBAC/Cu0F,oBAAoD,GAA/BA,kBAAkB,GAAGj+F,SAC1CkgE,SAAW,uCAAyC69B,iBAAmB,IAAM57F,KAIzF,OAASG,MAAO49D,SAAU1+D,MAAOw8F,OAAS1kE,OAEvC2S,0BACT8vD,uBAgLEmC,UAA2B,WAC3B,QAASA,aACLhgG,KAAKigG,eAAgB,EAgczB,MAhbAD,WAAUz/F,UAAU2/F,YAMpB,SAAUr0F,QAAS2kB,SAAU2vE,kBACJ,KAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmBrwE,wBAAwBlkB,QAIhE,OAHAA,SAAUgkB,cAAchkB,SACxBA,QAAU7L,KAAKqgG,kBAAkBx0F,UACI7L,KAAKsgG,cAAcz0F,QAAS2kB,SAAU2vE,eACpDv3F,OAAOw3F,kBAAkBv6F,KAAK,OAMzDm6F,UAAUz/F,UAAU8/F,kBAIpB,SAAUx0F,SAEN,MADAA,SAAU7L,KAAKugG,mCAAmC10F,SAC3C7L,KAAKwgG,8BAA8B30F,UAM9Cm0F,UAAUz/F,UAAUggG,mCAIpB,SAAU10F,SAEN,MAAOA,SAAQrJ,QAAQi+F,0BAA2B,WAE9C,IAAK,GADD/9F,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,OAAOc,GAAE,GAAK,OAOtBs9F,UAAUz/F,UAAUigG,8BAIpB,SAAU30F,SAEN,MAAOA,SAAQrJ,QAAQk+F,kBAAmB,WAEtC,IAAK,GADDh+F,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,IAAqBkvB,MAAOpuB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAKouB,QAStBkvE,UAAUz/F,UAAU+/F,cAMpB,SAAUz0F,QAAS80F,cAAeR,cAC9B,GAAqBS,eAAgB5gG,KAAK6gG,iCAAiCh1F,QAU3E,OARAA,SAAU7L,KAAK8gG,6BAA6Bj1F,SAC5CA,QAAU7L,KAAK+gG,kBAAkBl1F,SACjCA,QAAU7L,KAAKghG,yBAAyBn1F,SACxCA,QAAU7L,KAAKihG,2BAA2Bp1F,SACtC80F,gBACA90F,QAAU7L,KAAKkhG,gBAAgBr1F,QAAS80F,cAAeR,eAE3Dt0F,QAAUA,QAAU,KAAO+0F,cACpB/0F,QAAQzI,QAMnB48F,UAAUz/F,UAAUsgG,iCAIpB,SAAUh1F,SAEN,GACqBnJ,GADAy+F,EAAI,EAGzB,KADAC,0BAA0BrpE,UAAY,EACmB,QAAjDr1B,EAAI0+F,0BAA0BpgB,KAAKn1E,WAAoB,CAE3Ds1F,GAD4Bz+F,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,IACvD,OAEhB,MAAOy+F,IAMXnB,UAAUz/F,UAAUwgG,kBAIpB,SAAUl1F,SACN,MAAO7L,MAAKqhG,kBAAkBx1F,QAASy1F,gBAAiBthG,KAAKuhG,yBAMjEvB,UAAUz/F,UAAUygG,yBAIpB,SAAUn1F,SACN,MAAO7L,MAAKqhG,kBAAkBx1F,QAAS21F,uBAAwBxhG,KAAKyhG,gCAQxEzB,UAAUz/F,UAAU8gG,kBAMpB,SAAUx1F,QAAS61F,OAAQC,cAEvB,MAAO91F,SAAQrJ,QAAQk/F,OAAQ,WAE3B,IAAK,GADDh/F,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,IAAIc,EAAE,GAAI,CAGN,IAAK,GAFgBsV,OAAQtV,EAAE,GAAG8G,MAAM,KACnB23F,KACKp2F,EAAI,EAAGA,EAAIiN,MAAMlW,OAAQiJ,IAAK,CACpD,GAAqB0T,GAAIzG,MAAMjN,GAAG3H,MAClC,KAAKqb,EACD,KACJ0iF,GAAEp6F,KAAK46F,aAAaC,0BAA2BnjF,EAAG/b,EAAE,KAExD,MAAOy+F,GAAEt7F,KAAK,KAGd,MAAO+7F,2BAA4Bl/F,EAAE,MAUjDs9F,UAAUz/F,UAAUkhG,8BAMpB,SAAU56D,KAAMtV,KAAMb,QAClB,MAAIa,MAAKruB,QAAQ2+F,gBAAkB,EACxB7hG,KAAKuhG,uBAAuB16D,KAAMtV,KAAMb,QAGxCmW,KAAOtV,KAAOb,OAAS,KAAOa,KAAO,IAAMsV,KAAOnW,QASjEsvE,UAAUz/F,UAAUghG,uBAMpB,SAAU16D,KAAMtV,KAAMb,QAClB,MAAOmW,MAAOtV,KAAK/uB,QAAQq/F,cAAe,IAAMnxE,QAMpDsvE,UAAUz/F,UAAU0gG,2BAIpB,SAAUp1F,SACN,MAAOi2F,uBAAsBt5F,OAAO,SAAU9B,OAAQ0O,SAAW,MAAO1O,QAAOlE,QAAQ4S,QAAS,MAASvJ,UAQ7Gm0F,UAAUz/F,UAAU2gG,gBAMpB,SAAUr1F,QAAS80F,cAAeR,cAC9B,GAAIp3D,OAAQ/oC,IACZ,OAAOiwB,cAAapkB,QAAS,SAAUilB,MACnC,GAAqBN,UAAWM,KAAKN,SAChBC,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAKN,SAAS,GACdA,SACIuY,MAAMg5D,eAAejxE,KAAKN,SAAUmwE,cAAeR,aAAcp3D,MAAMk3D,gBAEtEnvE,KAAKN,SAASlS,WAAW,WAAawS,KAAKN,SAASlS,WAAW,cACpEwS,KAAKN,SAASlS,WAAW,UAAYwS,KAAKN,SAASlS,WAAW,gBAC9DmS,QAAUsY,MAAMm4D,gBAAgBpwE,KAAKL,QAASkwE,cAAeR,eAE1D,GAAIpvE,SAAQP,SAAUC,YAUrCuvE,UAAUz/F,UAAUwhG,eAOpB,SAAUvxE,SAAUmwE,cAAeR,aAAc6B,QAC7C,GAAIj5D,OAAQ/oC,IACZ,OAAOwwB,UAAShnB,MAAM,KACjB5D,IAAI,SAAU2rB,MAAQ,MAAOA,MAAKnuB,OAAOoG,MAAMy4F,wBAC/Cr8F,IAAI,SAAUs8F,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAU/+F,MAAM,EAW7D,QAVkC,SAAUg/F,aACxC,MAAIp5D,OAAMs5D,sBAAsBF,YAAaxB,eAClCqB,OACHj5D,MAAMu5D,0BAA0BH,YAAaxB,cAAeR,cAC5Dp3D,MAAMw5D,oBAAoBJ,YAAaxB,cAAeR,cAGnDgC,aAGIA,cAAcv5F,OAAOw5F,YAAYv8F,KAAK,OAExDA,KAAK,OAOdm6F,UAAUz/F,UAAU8hG,sBAKpB,SAAU7xE,SAAUmwE,eAEhB,OAD0B3gG,KAAKwiG,kBAAkB7B,eACtCt1F,KAAKmlB,WAMpBwvE,UAAUz/F,UAAUiiG,kBAIpB,SAAU7B,eACN,GAAqB8B,KAAM,MACNC,IAAM,KAE3B,OADA/B,eAAgBA,cAAcn+F,QAAQigG,IAAK,OAAOjgG,QAAQkgG,IAAK,OACxD,GAAIrtF,QAAO,KAAOsrF,cAAgB,IAAMgC,kBAAmB,MAQtE3C,UAAUz/F,UAAUgiG,oBAMpB,SAAU/xE,SAAUmwE,cAAeR,cAE/B,MAAOngG,MAAK4iG,0BAA0BpyE,SAAUmwE,cAAeR,eAQnEH,UAAUz/F,UAAUqiG,0BAMpB,SAAUpyE,SAAUmwE,cAAeR,cAG/B,GADA0C,gBAAgB9qE,UAAY,EACxB8qE,gBAAgBx3F,KAAKmlB,UAAW,CAChC,GAAqBsyE,aAAc9iG,KAAKigG,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAOnwE,UACFhuB,QAAQugG,4BAA6B,SAAUC,IAAKxyE,UACrD,MAAOA,UAAShuB,QAAQ,kBAAmB,SAAUie,EAAG6/C,OAAQ2iC,MAAO1iC,OACnE,MAAOD,QAASwiC,YAAcG,MAAQ1iC,UAGzC/9D,QAAQqgG,gBAAiBC,YAAc,KAEhD,MAAOnC,eAAgB,IAAMnwE,UAQjCwvE,UAAUz/F,UAAU+hG,0BAMpB,SAAU9xE,SAAUmwE,cAAeR,cAC/B,GAAIp3D,OAAQ/oC,KACSkjG,KAAO,kBAC5BvC,eAAgBA,cAAcn+F,QAAQ0gG,KAAM,SAAUziF,GAElD,IAAK,GADDzI,UACKpW,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCoW,MAAMpW,GAAK,GAAKC,UAAUD,GAE9B,OAAOoW,OAAM,IAEjB,IAAqBsd,UAAW,IAAMqrE,cAAgB,IACjCwC,mBAAqB,SAAU1kF,GAChD,GAAqB2kF,SAAU3kF,EAAErb,MACjC,KAAKggG,QACD,MAAO,EAEX,IAAI3kF,EAAEvb,QAAQ0+F,4BAA8B,EACxCwB,QAAUr6D,MAAM65D,0BAA0BnkF,EAAGkiF,cAAeR,kBAE3D,CAED,GAAqB5rD,GAAI91B,EAAEjc,QAAQqgG,gBAAiB,GACpD,IAAItuD,EAAEzyC,OAAS,EAAG,CACd,GAAqBu9C,SAAU9K,EAAE/oC,MAAM,kBACnC6zC,WACA+jD,QAAU/jD,QAAQ,GAAK/pB,SAAW+pB,QAAQ,GAAKA,QAAQ,KAInE,MAAO+jD,UAEUC,YAAc,GAAIC,cAAa9yE,SACpDA,UAAW6yE,YAAY5yE,SAmBvB,KAlBA,GAEqB1qB,KAFAw9F,eAAiB,GACjBttB,WAAa,EAEbutB,IAAM,sBAYNC,QAAUjzE,SAASttB,QAAQ0+F,4BAA8B,EAEzD8B,aAAeD,QACE,QAA9B19F,IAAMy9F,IAAIxiB,KAAKxwD,YAAqB,CACxC,GAAqByrE,WAAYl2F,IAAI,GAChB49F,OAASnzE,SAASrtB,MAAM8yE,WAAYlwE,IAAIX,OAAOhC,MACpEsgG,aAAcA,aAAeC,OAAOzgG,QAAQ0+F,4BAA8B,CAE1E2B,kBADkCG,YAAcP,mBAAmBQ,QAAUA,QAC9C,IAAM1H,UAAY,IACjDhmB,WAAautB,IAAIzrE,UAErB,GAAqBxG,MAAOf,SAAStqB,UAAU+vE,WAI/C,OAHAytB,aAAcA,aAAenyE,KAAKruB,QAAQ0+F,4BAA8B,EACxE2B,gBAAkBG,YAAcP,mBAAmB5xE,MAAQA,KAEpD8xE,YAAYO,QAAQL,iBAM/BvD,UAAUz/F,UAAUugG,6BAIpB,SAAUtwE,UACN,MAAOA,UAAShuB,QAAQqhG,oBAAqBC,sBACxCthG,QAAQuhG,aAAclC,gBAExB7B,aAEPsD,aAA8B,WAC9B,QAASA,cAAa9yE,UAClB,GAAIuY,OAAQ/oC,IACZA,MAAKorE,gBACLprE,KAAKoF,MAAQ,EAGborB,SAAWA,SAAShuB,QAAQ,gBAAiB,SAAUie,EAAGujF,MACtD,GAAqBC,WAAY,QAAUl7D,MAAM3jC,MAAQ,IAGzD,OAFA2jC,OAAMqiC,aAAarkE,KAAKi9F,MACxBj7D,MAAM3jC,QACC6+F,YAIXjkG,KAAKkkG,SAAW1zE,SAAShuB,QAAQ,4BAA6B,SAAUie,EAAG0jF,OAAQ1vF,KAC/E,GAAqBwvF,WAAY,QAAUl7D,MAAM3jC,MAAQ,IAGzD,OAFA2jC,OAAMqiC,aAAarkE,KAAK0N,KACxBs0B,MAAM3jC,QACC++F,OAASF,YAsBxB,MAfAX,cAAa/iG,UAAUqjG,QAIvB,SAAUnzE,SACN,GAAIsY,OAAQ/oC,IACZ,OAAOywB,SAAQjuB,QAAQ,gBAAiB,SAAUsoE,GAAI1lE,OAAS,MAAO2jC,OAAMqiC,cAAchmE,UAK9Fk+F,aAAa/iG,UAAUkwB,QAGvB,WAAc,MAAOzwB,MAAKkkG,UACnBZ,gBAEP7C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhBiC,qBAAuB,oBACvBM,aAAe,kDAGf9C,gBAAkB,GAAIjsF,QAAO,IAAMwsF,cAAgBuC,aAAc,OACjE5C,uBAAyB,GAAInsF,QAAO,IAAMyuF,qBAAuBM,aAAc,OAC/ExC,0BAA4BC,cAAgB,iBAC5CkB,4BAA8B,uCAC9BjB,uBACA,YACA,aACA,mBACA,eAKAG,qBAAuB,sCACvBU,kBAAoB,6BACpBE,gBAAkB,oBAClBkB,aAAe,WACfF,oBAAsB,mBACtB/zE,WAAa,uBAQbE,mBAAqB,+CAQrBO,QAAU,wDACVU,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAyB,WACzB,QAASA,SAAQP,SAAUC,SACvBzwB,KAAKwwB,SAAWA,SAChBxwB,KAAKywB,QAAUA,QAEnB,MAAOM,YA4BPW,wBAAyC,WACzC,QAASA,yBAAwBpB,cAAeO,QAC5C7wB,KAAKswB,cAAgBA,cACrBtwB,KAAK6wB,OAASA,OAElB,MAAOa,4BAqDP2yE,wBAAyC,WACzC,QAASA,yBAAwB5iG,KAAM+T,UAAW8wB,UAC9CtmC,KAAKyB,KAAOA,KACZzB,KAAKwV,UAAYA,UACjBxV,KAAKsmC,SAAWA,SAEpB,MAAO+9D,4BAEPC,mBAAoC,WACpC,QAASA,oBAAmB3mE,UAAW4mE,UAAWl+D,aAAcm+D,UAAWn7F,MACvErJ,KAAK29B,UAAYA,UACjB39B,KAAKukG,UAAYA,UACjBvkG,KAAKqmC,aAAeA,aACpBrmC,KAAKwkG,UAAYA,UACjBxkG,KAAKqJ,KAAOA,KAEhB,MAAOi7F,uBAEP31D,cAA+B,WAC/B,QAASA,eAAcsjB,cACnBjyD,KAAKiyD,aAAeA,aACpBjyD,KAAKykG,WAAa,GAAIzE,WAmG1B,MA5FArxD,eAAcpuC,UAAUi+B,iBAKxB,SAAUb,UAAWu4B,MACjB,GAAqBz3B,UAA8By3B,KAAc,QACjE,OAAOl2D,MAAK0kG,eAAe/mE,UAAWu4B,KAAM,GAAI7X,4BAC5CC,OAAQ7f,SAAS6f,OACjBC,UAAW9f,SAAS8f,UACpB/oC,UAAW7N,oBAAoBuuD,KAAK9vD,QACpCpG,KAAK2kG,eAAezuC,OAAO,IASnCvnB,cAAcpuC,UAAUqkG,cAOxB,SAAUjnE,UAAWu4B,KAAMzD,WAAY/rB,MAEnC,WADa,KAATA,OAAmBA,KAAO1mC,KAAK2kG,eAAezuC,OAC3Cl2D,KAAK0kG,eAAe/mE,UAAWu4B,KAAMzD,WAAY/rB,MAAM,IAMlEiI,cAAcpuC,UAAUokG,eAIxB,SAAUzuC,MACN,MAA0BA,MAAc,SAAEzX,gBAAkBtR,kBAAkBC,UAUlFuB,cAAcpuC,UAAUmkG,eAQxB,SAAU/mE,UAAWu4B,KAAMzD,WAAY/rB,KAAMm+D,uBACzC,GAAI97D,OAAQ/oC,KACS8kG,iBAAmBryC,WAAWnU,OAAO14C,IAAI,SAAUm/F,YAAc,MAAOl9E,SAAQkhB,MAAMi8D,cAAcD,WAAYr+D,SAChHL,eACrBosB,YAAWlU,UAAU13C,QAAQ,SAAUgtD,UACnC,GAAqBoxC,WAAYH,iBAAiBhjG,MAElDgjG,kBAAiB/9F,KAAsB,MACvCs/B,aAAat/B,KAAK,GAAIs9F,yBAAwB1yE,iBAAiB,MAAOkiC,SAAU,SAAUvwD,OAAS,MAAOwhG,kBAAiBG,WAAatnE,UAAUvX,WAAW9iB,WAIjK,IAAqBihG,WAAY5yE,iBAAiBkzE,sBAAwB3uC,KAAO,MAC5DvwC,KAAOO,SAASq+E,WAChC/jF,IAAImG,WAAWm+E,iBAAkB,GAAIp/D,WAAUzZ,cAAekgE,aAAaC,UAC3E7zD,WAAW,KAAMssE,uBAAyBrsE,aAAaC,QACxDD,aAAaC,MAAOD,aAAamN,UAGrC,OADAhI,WAAUhE,WAAW5yB,KAAK4e,MACnB,GAAI2+E,oBAAmB3mE,UAAW4mE,UAAWl+D,aAAcK,KAAM+rB,aAO5E9jB,cAAcpuC,UAAUykG,cAKxB,SAAU/iD,MAAOvb,MACb,MAAOA,MAAO1mC,KAAKykG,WAAWvE,YAAYj+C,MAvH/B,oBADH,kBAwHoEA,OAEzEtT,iBAyBP7c,sBAAwB,wBACxBozE,kBAAoB,GAAIhhF,MAAK,MAAO,WAAY,WAAY,SAAU,UAGtEihF,SAAW,wCACXC,aAAe,GAAI/vF,QAAO,KAAO8vF,SAAW,KAC5CE,kBAAoB,GAAIhwF,QAAO,IAAM8vF,SAAW,QAAS,KAkCzD/yE,kBAAmC,WACnC,QAASA,sBAmFT,MA5EAA,mBAAkB7xB,UAAUm8C,aAK5B,SAAUvkC,QAAS3U,SACf,MAAI0hG,mBAAkB7wE,IAAIlc,QAAQ1W,OAASmwB,2BAA2BzZ,QAAQ7K,OAGnE,GAAInD,SAAQgO,QAAQ1W,KAAMmI,SAAS5J,KAAMmY,QAAQ7K,OAAQ6K,QAAQ9N,SAAU8N,QAAQnO,WAAYmO,QAAQypC,gBAAiBzpC,QAAQ/N,eAEpI,GAAID,SAAQgO,QAAQ1W,KAAM0W,QAAQ7K,MAAO1D,SAAS5J,KAAMmY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQypC,gBAAiBzpC,QAAQ/N,gBAO3IgoB,kBAAkB7xB,UAAUohD,eAK5B,SAAUowB,UAAWvuE,SACjB,MAAOuuE,WAAUtwE,OAASqwB,sBAAwBigD,UAAY,MAOlE3/C,kBAAkB7xB,UAAUi7C,UAK5B,SAAUjrC,KAAM/M,SAEZ,MADkC+M,MAAKjN,MAAMkI,MAAM45F,cAExC,GAAItvE,MAAK/D,YAAYxhB,KAAKjN,OAAOd,QAAQ6iG,kBAAmB,KAAM90F,KAAKvG,YAE3E,MAOXooB,kBAAkB7xB,UAAUshD,aAK5B,SAAUowB,QAASzuE,SAAW,MAAOyuE,UAMrC7/C,kBAAkB7xB,UAAU+gD,eAK5B,SAAUq5B,UAAWn3E,SAAW,MAAOm3E,YAMvCvoD,kBAAkB7xB,UAAUkhD,mBAK5B,SAAUm5B,cAAep3E,SAAW,MAAOo3E,gBACpCxoD,qBAsBPU,cAAgB,OAAQ,MAAO,MAAO,MAAO,OAAQ,SA8BrDJ,gBAAiC,WACjC,QAASA,iBAAgB7oB,MAAOy7F,SAAUhzE,QACtCtyB,KAAK6J,MAAQA,MACb7J,KAAKslG,SAAWA,SAChBtlG,KAAKsyB,OAASA,OAElB,MAAOI,oBAEPK,eAAgC,SAAUtoB,QAE1C,QAASsoB,gBAAepoB,KAAMq3D,UAC1B,MAAOv3D,QAAO+pC,KAAKx0C,KAAM2K,KAAMq3D,WAAahiE,KAEhD,MAJAC,WAAU8yB,eAAgBtoB,QAInBsoB,gBACT6tC,YAMEnuC,UAA2B,WAC3B,QAASA,aACLzyB,KAAK2yB,YAAa,EAClB3yB,KAAKsyB,UA4ET,MArEAG,WAAUlyB,UAAUm8C,aAKpB,SAAUvkC,QAAS3U,SACf,MAAO,IAAI2G,SAAQgO,QAAQ1W,KAAM0W,QAAQ7K,MAAO1D,SAAS5J,KAAMmY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQypC,gBAAiBzpC,QAAQ/N,gBAO3IqoB,UAAUlyB,UAAUohD,eAKpB,SAAUowB,UAAWvuE,SAAW,MAAOuuE,YAMvCt/C,UAAUlyB,UAAUi7C,UAKpB,SAAUjrC,KAAM/M,SAAW,MAAO+M,OAMlCkiB,UAAUlyB,UAAUshD,aAKpB,SAAUowB,QAASzuE,SAAW,MAAOyuE,UAMrCx/C,UAAUlyB,UAAU+gD,eAKpB,SAAUqpB,IAAKnnE,SAEX,MADAxD,MAAK2yB,YAAa,EACC,UAAZg4C,IAAIvkE,KAAmBwsB,kBAAkB+3C,IAAK3qE,KAAKsyB,QACtDgB,mBAAmBq3C,IAAK3qE,KAAKsyB,SAOrCG,UAAUlyB,UAAUkhD,mBAKpB,SAAU8wB,QAAS/uE,SACf,KAAM,IAAIc,OAAM,0BAEbmuB,aAuDP8yE,mBACAC,QAAS,EACTC,aAAc,EACdC,UAAW,EAEfH,mBAAkBA,kBAAkBC,SAAW,UAC/CD,kBAAkBA,kBAAkBE,cAAgB,eACpDF,kBAAkBA,kBAAkBG,WAAa,WAIjD,IAAIC,eAA+B,WAC/B,QAASA,eAAclkG,KAAMkT,WAAYvO,KAAM4D,YAC3ChK,KAAKyB,KAAOA,KACZzB,KAAK2U,WAAaA,WAClB3U,KAAKoG,KAAOA,KACZpG,KAAKgK,WAAaA,WAClBhK,KAAK4lG,UAAY5lG,KAAKoG,OAASm/F,kBAAkBE,aACjDzlG,KAAKm9B,YAAcn9B,KAAKoG,OAASm/F,kBAAkBG,UAEvD,MAAOC,kBAKPE,cAA+B,WAC/B,QAASA,eAAcC,YAAatjC,qBAAsBuhB,gBAAiB/7C,MAAO+9D,eAC9E,GAAIh9D,OAAQ/oC,IACZA,MAAK8lG,YAAcA,YACnB9lG,KAAKwiE,qBAAuBA,qBAC5BxiE,KAAK+jF,gBAAkBA,gBACvB/jF,KAAK+lG,cAAgBA,cACrB/lG,KAAKgmG,YAAc,GAAI98E,KACvBlpB,KAAKimG,WAAa,GAAI/8E,KACtB8e,MAAMnhC,QAAQ,SAAUq/F,MAAQ,MAAOn9D,OAAMi9D,YAAYxlF,IAAI0lF,KAAKzkG,KAAMykG,QA8iB5E,MAziBAL,eAActlG,UAAU4lG,aAGxB,WAAc,MAAO1iG,OAAMwgB,KAAKjkB,KAAKimG,WAAWlkG,WAOhD8jG,cAActlG,UAAU6lG,gCAMxB,SAAU1hB,QAAS2hB,gBAAiBr8F,YAChC,GAAI++B,OAAQ/oC,IACZ,IAAI0kF,QAAQznC,eAAgB,CACxB,GAAqBqpD,gBAUrB,OATA9lG,QAAO+2B,KAAKmtD,QAAQznC,gBAAgBp2C,QAAQ,SAAU6sB,UAClD,GAAqB/e,YAAa+vE,QAAQznC,eAAevpB,SAC/B,iBAAf/e,YACPo0B,MAAMw9D,qBAAqB7yE,SAAU/e,YAAY,EAAM3K,cAAgBs8F,cAGvEv9D,MAAM8yB,aAAa,uCAA0CnoC,SAAW,8DAAkE/e,WAAa,YAAgBA,YAAa,IAAK3K,cAG1Ls8F,aAAa1gG,IAAI,SAAUgqB,MAAQ,MAAOmZ,OAAMy9D,yBAAyBH,gBAAiBz2E,QAErG,MAAO,OAOXi2E,cAActlG,UAAUkmG,6BAKxB,SAAU/hB,QAAS16E,YACf,GAAI++B,OAAQ/oC,IACZ,IAAI0kF,QAAQzlC,cAAe,CACvB,GAAqBynD,qBAUrB,OATAlmG,QAAO+2B,KAAKmtD,QAAQzlC,eAAep4C,QAAQ,SAAU6sB,UACjD,GAAqB/e,YAAa+vE,QAAQzlC,cAAcvrB,SAC9B,iBAAf/e,YACPo0B,MAAM49D,WAAWjzE,SAAU/e,WAAY3K,cAAgB08F,mBAGvD39D,MAAM8yB,aAAa,+BAAkCnoC,SAAW,8DAAkE/e,WAAa,YAAgBA,YAAa,IAAK3K,cAGlL08F,kBAEX,MAAO,OAOXb,cAActlG,UAAU47D,mBAKxB,SAAU74D,MAAO0G,YACb,GAAqB48F,YAAa58F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAyB5G,KAAK8lG,YAAY3pC,mBAAmB74D,MAAOsjG,WAAY5mG,KAAKwiE,qBAI1G,OAHI57D,MACA5G,KAAK6mG,8BAA8BjgG,IAAI0rB,OAAQtoB,YACnDhK,KAAK8mG,YAAYlgG,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADAtZ,MAAK67D,aAAa,GAAKviD,EAAGtP,YACnBhK,KAAK8lG,YAAYvpC,qBAAqB,QAASqqC,cAY9Df,cAActlG,UAAUwmG,2BASxB,SAAU9qC,YAAa34D,MAAO0G,WAAYg9F,qBAAsBC,YAAaC,YAEzE,IAAK,GADgB1xC,UAAWx1D,KAAKmnG,uBAAuBlrC,YAAa34D,MAAO0G,YACtDe,EAAI,EAAGA,EAAIyqD,SAAS1zD,OAAQiJ,IAAK,CACvD,GAAqB6qD,SAAUJ,SAASzqD,EACpC6qD,SAAQ6E,SACRysC,WAAWngG,KAAK,GAAIu1C,aAAYsZ,QAAQ3hD,IAAK2hD,QAAQn0D,KAAMuI,aAEtD4rD,QAAQjhD,WACb3U,KAAKonG,kBAAkBxxC,QAAQ3hD,IAAK2hD,QAAQjhD,WAAY3K,WAAYg9F,qBAAsBC,cAG1FD,qBAAqBjgG,MAAM6uD,QAAQ3hD,IAAK,KACxCjU,KAAKqnG,iBAAiBzxC,QAAQ3hD,IAAK,KAAMjK,WAAYg9F,qBAAsBC,gBAUvFpB,cAActlG,UAAU4mG,uBAMxB,SAAUlrC,YAAa34D,MAAO0G,YAC1B,GAAI++B,OAAQ/oC,KACS4mG,WAAa58F,WAAWD,MAAM/D,UACnD,KACI,GAAqBshG,gBAAiBtnG,KAAK8lG,YAAY9pC,sBAAsBC,YAAa34D,MAAOsjG,WAQjG,OAPA5mG,MAAK6mG,8BAA8BS,eAAeh1E,OAAQtoB,YAC1Ds9F,eAAetsC,iBAAiBn0D,QAAQ,SAAU+uD,SAC1CA,QAAQjhD,YACRo0B,MAAM+9D,YAAYlxC,QAAQjhD,WAAY3K,cAG9Cs9F,eAAe3yE,SAAS9tB,QAAQ,SAAU0gG,SAAWx+D,MAAM8yB,aAAa0rC,QAASv9F,WAAYy2D,gBAAgBC,WACtG4mC,eAAetsC,iBAE1B,MAAwB1hD,GAEpB,MADAtZ,MAAK67D,aAAa,GAAKviD,EAAGtP;+CAYlC67F,cAActlG,UAAU8mG,iBAQxB,SAAU5lG,KAAM6B,MAAO0G,WAAYg9F,qBAAsBC,aACjD1zE,kBAAkB9xB,OAClBA,KAAOA,KAAKyE,UAAU,GAClB5C,OACAtD,KAAK67D,aAAa,8LAC6F7xD,WAAYy2D,gBAAgBE,OAE/I3gE,KAAKwnG,gBAAgB/lG,KAAM6B,MAAO0G,WAAYg9F,qBAAsBC,cAGpEA,YAAYlgG,KAAK,GAAI4+F,eAAclkG,KAAMzB,KAAK8lG,YAAYvpC,qBAAqBj5D,MAAO,IAAKiiG,kBAAkBE,aAAcz7F,cAYnI67F,cAActlG,UAAUgmG,qBASxB,SAAU9kG,KAAMkT,WAAYqsB,OAAQh3B,WAAYg9F,qBAAsBC,aAClE,GAAqBQ,kBAAkB,CACnChmG,MAAK6c,WA/OS,aAgPdmpF,iBAAkB,EAClBhmG,KAAOA,KAAKyE,UAjPE,WAiP4BpE,SAErCyxB,kBAAkB9xB,QACvBgmG,iBAAkB,EAClBhmG,KAAOA,KAAKyE,UAAU,IAEtBuhG,gBACAznG,KAAKwnG,gBAAgB/lG,KAAMkT,WAAY3K,WAAYg9F,qBAAsBC,aAGzEjnG,KAAKonG,kBAAkB3lG,KAAMzB,KAAK0nG,cAAc/yF,WAAYqsB,OAAQh3B,YAAaA,WAAYg9F,qBAAsBC,cAW3HpB,cAActlG,UAAUonG,2BAQxB,SAAUlmG,KAAM6B,MAAO0G,WAAYg9F,qBAAsBC,aACrD,GAAqBjhF,MAAOhmB,KAAKm8D,mBAAmB74D,MAAO0G,WAC3D,SAAIgc,OACAhmB,KAAKonG,kBAAkB3lG,KAAMukB,KAAMhc,WAAYg9F,qBAAsBC,cAC9D,IAYfpB,cAActlG,UAAU6mG,kBAQxB,SAAU3lG,KAAMmF,IAAKoD,WAAYg9F,qBAAsBC,aACnDD,qBAAqBjgG,MAAMtF,KAAyBmF,IAAW,SAC/DqgG,YAAYlgG,KAAK,GAAI4+F,eAAclkG,KAAMmF,IAAK2+F,kBAAkBC,QAASx7F,cAU7E67F,cAActlG,UAAUinG,gBAQxB,SAAU/lG,KAAMkT,WAAY3K,WAAYg9F,qBAAsBC,aAI1D,GAAqBrgG,KAAM5G,KAAK0nG,cAAc/yF,YAAc,aAAa,EAAO3K,WAChFg9F,sBAAqBjgG,MAAMtF,KAAyBmF,IAAW,SAC/DqgG,YAAYlgG,KAAK,GAAI4+F,eAAclkG,KAAMmF,IAAK2+F,kBAAkBG,UAAW17F,cAQ/E67F,cAActlG,UAAUmnG,cAMxB,SAAUpkG,MAAOskG,cAAe59F,YAC5B,GAAqB48F,YAAa58F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAMghG,cACvB5nG,KAAK8lG,YAAYpqC,mBAAmBp4D,MAAOsjG,WAAY5mG,KAAKwiE,sBAC5DxiE,KAAK8lG,YAAYtqC,aAAal4D,MAAOsjG,WAAY5mG,KAAKwiE,qBAI1D,OAHI57D,MACA5G,KAAK6mG,8BAA8BjgG,IAAI0rB,OAAQtoB,YACnDhK,KAAK8mG,YAAYlgG,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADAtZ,MAAK67D,aAAa,GAAKviD,EAAGtP,YACnBhK,KAAK8lG,YAAYvpC,qBAAqB,QAASqqC,cAQ9Df,cAActlG,UAAUimG,yBAKxB,SAAUH,gBAAiBwB,WACvB,GAAIA,UAAU1qE,YACV,MAAO,IAAI0e,yBAAwBgsD,UAAUpmG,KAAMs5B,oBAAoBE,UAAW1G,gBAAgBC,KAAMqzE,UAAUlzF,WAAY,KAAMkzF,UAAU79F,WAElJ,IAAqBoxB,MAAO,KACP0sE,gBAA+B,GAC/BC,kBAAoB,KACpB/vF,MAAQ6vF,UAAUpmG,KAAK+H,MAnXrB,KAoXFw+F,qBAAoC,EAEzD,IAAIhwF,MAAMlW,OAAS,EACf,GAtXW,QAsXPkW,MAAM,GAAwB,CAC9B+vF,kBAAoB/vF,MAAM,GAC1BhY,KAAKioG,iCAAiCF,kBAAmBF,UAAU79F,YAAY,GAC/Eg+F,iBAAmBx0E,6BAA6BxzB,KAAK+jF,gBAAiBsiB,gBAAiB0B,mBAAmB,EAC1G,IAAqBG,gBAAiBH,kBAAkB7kG,QAAQ,IAChE,IAAIglG,gBAAkB,EAAG,CACrB,GAAqBC,IAAKJ,kBAAkB7hG,UAAU,EAAGgiG,gBACpCryC,OAASkyC,kBAAkB7hG,UAAUgiG,eAAiB,EAC3EH,mBAAoBl7F,eAAes7F,GAAItyC,QAE3CiyC,YAAc/sE,oBAAoBp6B,cA/X/B,SAiYEqX,MAAM,IACX+vF,kBAAoB/vF,MAAM,GAC1B8vF,YAAc/sE,oBAAoBG,MAClC8sE,kBAAoBzzE,gBAAgBC,OAnYjC,SAqYExc,MAAM,KACXojB,KAAOpjB,MAAMlW,OAAS,EAAIkW,MAAM,GAAK,KACrC+vF,kBAAoB/vF,MAAM,GAC1B8vF,YAAc/sE,oBAAoBI,MAClC6sE,kBAAoBzzE,gBAAgBlmB,OAU5C,OAN0B,QAAtB05F,oBACAA,kBAAoB/nG,KAAK+jF,gBAAgBwb,kBAAkBsI,UAAUpmG,MACrEumG,iBAAmBx0E,6BAA6BxzB,KAAK+jF,gBAAiBsiB,gBAAiB0B,mBAAmB,GAC1GD,YAAc/sE,oBAAoBC,SAClCh7B,KAAKioG,iCAAiCF,kBAAmBF,UAAU79F,YAAY,IAE5E,GAAI6xC,yBAAwBksD,kBAAmBD,YAAaE,iBAAiB,GAAIH,UAAUlzF,WAAYymB,KAAMysE,UAAU79F,aAUlI67F,cAActlG,UAAUomG,WAQxB,SAAUllG,KAAMkT,WAAY3K,WAAYg9F,qBAAsBoB,cACtD70E,kBAAkB9xB,OAClBA,KAAOA,KAAKiiC,OAAO,GACnB1jC,KAAKqoG,qBAAqB5mG,KAAMkT,WAAY3K,WAAYo+F,eAGxDpoG,KAAKsoG,YAAY7mG,KAAMkT,WAAY3K,WAAYg9F,qBAAsBoB,eAU7EvC,cAActlG,UAAU8nG,qBAOxB,SAAU5mG,KAAMkT,WAAY3K,WAAYo+F,cACpC,GAAqB/oD,SAAUt8C,cAActB,MAAOA,KAAM,KACrC40C,UAAYgJ,QAAQ,GACpBjiB,MAAQiiB,QAAQ,GAAG5xC,aACxC,IAAI2vB,MACA,OAAQA,OACJ,IAAK,QACL,IAAK,OACD,GAAqBx2B,KAAM5G,KAAKuoG,aAAa5zF,WAAY3K,WACzDo+F,cAAarhG,KAAK,GAAIg1C,eAAc1F,UAAW,KAAMjZ,MAAOx2B,IAAKoD,YACjE,MACJ,SACIhK,KAAK67D,aAAa,8CAAiDz+B,MAAQ,WAAeiZ,UAAY,yCAA2CrsC,gBAKzJhK,MAAK67D,aAAa,wCAA0CxlB,UAAY,4EAA6ErsC,aAW7J67F,cAActlG,UAAU+nG,YAQxB,SAAU7mG,KAAMkT,WAAY3K,WAAYg9F,qBAAsBoB,cAE1D,GAAIhvF,IAAKxW,aAAanB,MAAwB,KAAUA,OAAQoS,OAASuF,GAAG,GAAIi9B,UAAYj9B,GAAG,GAC1ExS,IAAM5G,KAAKuoG,aAAa5zF,WAAY3K,WACzDg9F,sBAAqBjgG,MAAuB,KAA6BH,IAAW,SACpFwhG,aAAarhG,KAAK,GAAIg1C,eAAc1F,UAAWxiC,OAAQ,KAAMjN,IAAKoD,cAStE67F,cAActlG,UAAUgoG,aAKxB,SAAUjlG,MAAO0G,YACb,GAAqB48F,YAAa58F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAM5G,KAAK8lG,YAAY5qC,YAAY53D,MAAOsjG,WAAY5mG,KAAKwiE,qBAIhF,OAHI57D,MACA5G,KAAK6mG,8BAA8BjgG,IAAI0rB,OAAQtoB,aAE9CpD,KAAOA,IAAIA,cAAeuvB,YAC3Bn2B,KAAK67D,aAAa,oCAAqC7xD,YAChDhK,KAAK8lG,YAAYvpC,qBAAqB,QAASqqC,cAE1D5mG,KAAK8mG,YAAYlgG,IAAKoD,YACfpD,KAEX,MAAwB0S,GAEpB,MADAtZ,MAAK67D,aAAa,GAAKviD,EAAGtP,YACnBhK,KAAK8lG,YAAYvpC,qBAAqB,QAASqqC,cAS9Df,cAActlG,UAAUs7D,aAMxB,SAAU3qD,QAASlH,WAAY0/B,WACb,KAAVA,QAAoBA,MAAQ+2B,gBAAgBE,OAChD3gE,KAAK+lG,cAAch/F,KAAK,GAAI65D,YAAW52D,WAAYkH,QAASw4B,SAOhEm8D,cAActlG,UAAUsmG,8BAKxB,SAAUv0E,OAAQtoB,YACd,IAAK,GAAIpI,IAAK,EAAG4mG,SAAWl2E,OAAQ1wB,GAAK4mG,SAAS1mG,OAAQF,KAAM,CAC5D,GAAI+iB,UAAW6jF,SAAS5mG,GACxB5B,MAAK67D,aAAal3C,SAASzT,QAASlH,cAQ5C67F,cAActlG,UAAUumG,YAKxB,SAAUlgG,IAAKoD,YACX,GAAI++B,OAAQ/oC,IACZ,IAAI4G,IAAK,CACL,GAAqB6hG,WAAY,GAAIC,cACrC9hG,KAAID,MAAM8hG,WACVA,UAAUzgE,MAAMnhC,QAAQ,SAAUD,IAAK+hG,UACnC,GAAqB5e,UAAWhhD,MAAMi9D,YAAYzlF,IAAIooF,SACjD5e,UAIDhhD,MAAMk9D,WAAWzlF,IAAImoF,SAAU5e,UAH/BhhD,MAAM8yB,aAAa,aAAe8sC,SAAW,uBAAwB,GAAI/yF,iBAAgB5L,WAAWD,MAAM61D,OAAOh5D,IAAI+D,KAAKZ,OAAQC,WAAWD,MAAM61D,OAAOh5D,IAAI+D,KAAKT,WAcnL27F,cAActlG,UAAU0nG,iCAMxB,SAAUv0E,SAAU1pB,WAAY4+F,QAC5B,GAAqBC,QAASD,OAAS5oG,KAAK+jF,gBAAgB0b,kBAAkB/rE,UAC1E1zB,KAAK+jF,gBAAgByb,iBAAiB9rE,SACtCm1E,QAAOzkG,OACPpE,KAAK67D,aAAgCgtC,OAAW,IAAG7+F,WAAYy2D,gBAAgBE,QAGhFklC,iBAEP6C,cAA+B,SAAUj+F,QAEzC,QAASi+F,iBACL,GAAI3/D,OAAmB,OAAXt+B,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,IAEhE,OADA+oC,OAAMf,MAAQ,GAAI9e,KACX6f,MAkBX,MAtBA9oC,WAAUyoG,cAAej+F,QAWzBi+F,cAAcnoG,UAAUiU,UAKxB,SAAU5N,IAAKpD,SAIX,MAHAxD,MAAKgoC,MAAMxnB,IAAI5Z,IAAInF,KAAMmF,KACzBA,IAAI6N,IAAI9N,MAAM3G,MACdA,KAAK4J,SAAShD,IAAIjF,KAAM6B,SACjB,MAEJklG,eACT/tC,qBAsCEmuC,iBAAmB,2GAsBnBryE,iBAAmB,WAInBf,WAAa,QACbqzE,kBAAoBl1E,YAAYC,MAAM,KAAK,GAC3C4C,qCAAuC,kEAEvC9B,iBAcAo0E,mBAAoC,SAAUv+F,QAE9C,QAASu+F,oBAAmB93F,QAASvG,KAAM++B,OACvC,MAAOj/B,QAAO+pC,KAAKx0C,KAAM2K,KAAMuG,QAASw4B,QAAU1pC,KAEtD,MAJAC,WAAU+oG,mBAAoBv+F,QAIvBu+F,oBACTpoC,YACEqoC,oBAAqC,WACrC,QAASA,qBAAoBC,YAAaC,UAAW72E,QACjDtyB,KAAKkpG,YAAcA,YACnBlpG,KAAKmpG,UAAYA,UACjBnpG,KAAKsyB,OAASA,OAElB,MAAO22E,wBAEPh7D,eAAgC,WAChC,QAASA,gBAAekkB,QAASqC,WAAYsxC,YAAa/hB,gBAAiB7xB,YAAa+rB,SAAUmrB,YAC9FppG,KAAKmyD,QAAUA,QACfnyD,KAAKw0D,WAAaA,WAClBx0D,KAAK8lG,YAAcA,YACnB9lG,KAAK+jF,gBAAkBA,gBACvB/jF,KAAKkyD,YAAcA,YACnBlyD,KAAKi+E,SAAWA,SAChBj+E,KAAKopG,WAAaA,WAgLtB,MApKAn7D,gBAAe1tC,UAAUuzB,MAUzB,SAAU9J,UAAWyU,SAAU1V,WAAYif,MAAOiY,QAASvB,YAAapR,qBACpE,GAAqB5mC,QAAS1G,KAAKqpG,SAASr/E,UAAWyU,SAAU1V,WAAYif,MAAOiY,QAASvB,YAAapR,qBACrF3Y,SAA8BjuB,OAAc,OAAEwc,OAAO,SAAUyB,UAAY,MAAOA,UAAS+kB,QAAU+2B,gBAAgBC,UAAYx9C,OAAOwR,cA9D7H,4EA8D8KgC,wCACzLpE,OAA4B5rB,OAAc,OAAEwc,OAAO,SAAUyB,UAAY,MAAOA,UAAS+kB,QAAU+2B,gBAAgBE,OAIxI,IAHIhsC,SAAS7yB,OAAS,GAClB9B,KAAKi+E,SAASxJ,KAAK,6BAA+B9/C,SAAS9uB,KAAK,OAEhEysB,OAAOxwB,OAAS,EAAG,CAEnB,KAAMyC,aAAY,2BADiB+tB,OAAOzsB,KAAK,MACaysB,QAEhE,OAASmM,SAA6B/3B,OAAmB,YAAGshC,MAA0BthC,OAAiB,YAY3GunC,eAAe1tC,UAAU8oG,SAUzB,SAAUr/E,UAAWyU,SAAU1V,WAAYif,MAAOiY,QAASvB,YAAapR,qBACpE,GAAqBg8D,iBAAsC,gBAAb7qE,UAA2Cz+B,KAAiB,YAAE8zB,MAAM2K,SAAUigB,aAAa,EAAM1+C,KAAKupG,uBAAuBv/E,YACvKyU,QAIJ,OAHK6O,uBACDg8D,gBAAkBr3E,kBAAkBq3E,kBAEjCtpG,KAAKwpG,aAAaxpG,KAAKypG,WAAWH,iBAAkBt/E,UAAWjB,WAAYif,MAAOiY,UAU7FhS,eAAe1tC,UAAUipG,aAQzB,SAAUt3E,kBAAmBlI,UAAWjB,WAAYif,MAAOiY,SACvD,GAAqBv5C,QACA4rB,OAASJ,kBAAkBI,OAC3B62E,YACrB,IAAIj3E,kBAAkBG,UAAUvwB,OAAS,EAAG,CACxC,GAAqB4nG,gBAAiB3zE,wBAAwBhN,YACzC4gF,UAAY5zE,wBAAwBiS,OACpC4hE,oBAAsB,GAAI7V,qBAAoB/zF,KAAKw0D,WAAYxqC,WAC/D9T,wBAAuC,EACxD8T,WAAUyU,UAAYzU,UAAUyU,SAASqgB,gBACzC5oC,qBACInM,MAAOigB,UAAUyU,SAASqgB,cAAc,GACxC50C,IAAK8f,UAAUyU,SAASqgB,cAAc,IAG9C,IAAqB+qD,eAAgB,GAAIhE,eAAc7lG,KAAK8lG,YAA8B,oBAAyB9lG,KAAK+jF,gBAAiB4lB,UAAWr3E,QAC/Hw3E,aAAe,GAAIC,sBAAqB/pG,KAAKw0D,WAAYx0D,KAAKmyD,QAASy3C,oBAAqBF,eAAgBG,cAAe7pG,KAAK+jF,gBAAiB9jC,QAAS3tB,OAC/K5rB,QAASkD,SAASkgG,aAAc53E,kBAAkBG,UAAW23E,uBAC7D13E,OAAOvrB,KAAK/E,MAAMswB,OAAQs3E,oBAAoBt3E,QAC9C62E,UAAUpiG,KAAK/E,MAAMmnG,UAAWU,cAAc1D,oBAG9Cz/F,UAGJ,OADA1G,MAAKiqG,wCAAwCvjG,OAAQ4rB,QACjDA,OAAOxwB,OAAS,EACT,GAAImnG,qBAAoBviG,OAAQyiG,UAAW72E,SAElDtyB,KAAKopG,YACLppG,KAAKopG,WAAWviG,QAAQ,SAAU2kC,WAAa9kC,OAASF,iBAAiBglC,UAAW9kC,UAEjF,GAAIuiG,qBAAoBviG,OAAQyiG,UAAW72E,UAOtD2b,eAAe1tC,UAAUkpG,WAKzB,SAAUv3E,kBAAmBg4E,YACV,KAAXA,SAAqBA,QAAS,EAClC,IAAqB53E,QAASJ,kBAAkBI,MAChD,IAAqB,GAAjBA,OAAOxwB,QAAeooG,OAAQ,CAE9B,GAAqBC,iBAAkB53E,YAAYL,kBAAkBG,UACrEC,QAAOvrB,KAAK/E,MAAMswB,OAAQ63E,gBAAgB73E,QAC1CJ,kBAAoB,GAAIC,iBAAgBg4E,gBAAgBtgG,MAAOyoB,QAEnE,MAAOJ,oBAMX+b,eAAe1tC,UAAUgpG,uBAIzB,SAAUv/E,WACN,GAAIA,UAAUyU,SACV,MAAOqjB,qBAAoBC,UAAU/3B,UAAUyU,SAASqgB,gBAWhE7Q,eAAe1tC,UAAU0pG,wCAMzB,SAAUvjG,OAAQ4rB,QACd,GAAqB83E,sBACrB1jG,QAAOwc,OAAO,SAAU/K,SAAW,QAAS,QAA6BskC,aACpE51C,QAAQ,SAAUsR,SACnB,MAAO,SAA6BskC,WAAW51C,QAAQ,SAAUS,WAC7D,GAAqB7F,MAAO6F,UAAU7F,IACtC,IAAI2oG,mBAAmBlnG,QAAQzB,MAAQ,EACnC2oG,mBAAmBrjG,KAAKtF,UAEvB,CACD,GAAqBkjB,UAAW,GAAIqkF,oBAAmB,eAAkBvnG,KAAO,6BAA+B6F,UAAU0C,WAAYy2D,gBAAgBE,MACrJruC,QAAOvrB,KAAK4d,gBAKrBspB,kBAEP87D,qBAAsC,WACtC,QAASA,sBAAqBpnF,UAAWxN,OAAQy0F,oBAAqB7gF,WAAYshF,eAAgBtmB,gBAAiBumB,SAAUvE,eACzH,GAAIh9D,OAAQ/oC,IACZA,MAAK2iB,UAAYA,UACjB3iB,KAAKmV,OAASA,OACdnV,KAAK4pG,oBAAsBA,oBAC3B5pG,KAAKqqG,eAAiBA,eACtBrqG,KAAK+jF,gBAAkBA,gBACvB/jF,KAAKsqG,SAAWA,SAChBtqG,KAAK+lG,cAAgBA,cACrB/lG,KAAKuqG,gBAAkB,GAAIlpB,iBAC3BrhF,KAAKwqG,gBAAkB,GAAIthF,KAC3BlpB,KAAKyqG,eAAiB,EAEtBzqG,KAAKuqB,oBAAsBq/E,oBAAoB5/E,UAAUE,YAAYpoB,OAAS,EAC9EinB,WAAWliB,QAAQ,SAAUsiB,UAAW/jB,OACpC,GAAqBorB,UAAWqD,YAAYC,MAAyB3K,UAAmB,SACxF4f,OAAMwhE,gBAAgBxoB,eAAevxD,SAAUrH,WAC/C4f,MAAMyhE,gBAAgBhqF,IAAI2I,UAAW/jB,SAyoB7C,MAjoBA2kG,sBAAqBxpG,UAAU+gD,eAK/B,SAAUq5B,UAAWn3E,SAAW,MAAO,OAMvCumG,qBAAqBxpG,UAAUkhD,mBAK/B,SAAUm5B,cAAep3E,SAAW,MAAO,OAM3CumG,qBAAqBxpG,UAAUi7C,UAK/B,SAAUjrC,KAAMigC,QACZ,GAAqB+K,gBAAoC/K,OAAOk6D,mBAAmB3B,mBAC9D4B,YAAc54E,YAAYxhB,KAAKjN,OAC/B0iB,KAAOhmB,KAAKqqG,eAAeluC,mBAAmBwuC,YAAgCp6F,KAAgB,WACnH,OAAOyV,MAAO,GAAIy1B,cAAaz1B,KAAMu1B,eAAmChrC,KAAgB,YACpF,GAAI+qC,SAAQqvD,YAAapvD,eAAmChrC,KAAgB,aAOpFw5F,qBAAqBxpG,UAAUohD,eAK/B,SAAUowB,UAAWvuE,SACjB,MAAO,IAAIm4C,SAAQo2B,UAAUtwE,KAAMswE,UAAUzuE,MAAOyuE,UAAU/nE,aAOlE+/F,qBAAqBxpG,UAAUshD,aAK/B,SAAUowB,QAASzuE,SAAW,MAAO,OAMrCumG,qBAAqBxpG,UAAUm8C,aAK/B,SAAUvkC,QAASq4B,QACf,GAAIzH,OAAQ/oC,KACS4qG,gBAAkB5qG,KAAKuqB,oBACvBvc,SAAWmK,QAAQ1W,KACnB4yD,iBAAmBrnD,gBAAgBmL,QACxD,IAAIk8C,iBAAiBjuD,OAAS6H,qBAAqBM,QAC/C8lD,iBAAiBjuD,OAAS6H,qBAAqBI,MAI/C,MAAO,KAEX,IAAIgmD,iBAAiBjuD,OAAS6H,qBAAqBS,YAC/CpD,qBAAqB+oD,iBAAiBnnD,UAGtC,MAAO,KAEX,IAAqB29F,mBACAC,2BACAC,0BACAC,eACAC,UACAC,mCACAC,0BACAC,uBACAC,oBAAqB,EACrB/9F,SACAg+F,kBAAoBl1E,WAAWje,QAASnY,KAAKmV,OAAOmhB,qBAAsB,SAAU5zB,EAAGiI,MAAQ,MAAOo+B,OAAM8yB,aAAan5D,EAAGiI,KAAM81D,gBAAgBC,UACvKvoD,SAAQ7K,MAAMzG,QAAQ,SAAU0G,MAC5B,GACqBg+F,wBACAtvC,YAFAuvC,WAAaziE,MAAM0iE,WAAWH,kBAAmB/9F,KAAMs9F,eAAgBC,wBAAyBG,OAAQF,uBAAwBC,aAGhIU,eAAiB3iE,MAAM4iE,wBAAwBp+F,KAAK9L,KACrEsnC,OAAM5zB,OAAOmhB,sBA7VT,YA6ViCo1E,gBACrC3iE,MAAM8yB,aAzVkB,4EAyV8BtuD,KAAKvD,WAAYy2D,gBAAgBC,SACvF6qC,uBAAyBh+F,KAAKjK,OAEzBooG,eAAeptF,WAhWT,OAiWXitF,uBAAyBh+F,KAAKjK,MAC9B24D,YAAcyvC,eAAexlG,UAlWlB,IAkWiDpE,QAAU,IAE1E,IAAqB8pG,oBAA+C,MAA1BL,sBACtCK,sBACIP,oBACAtiE,MAAM8yB,aAAa,mHAAoHtuD,KAAKvD,YAEhJqhG,oBAAqB,EACrBtiE,MAAMshE,eAAetD,2BAA4C,YAAkC,uBAA4Bx5F,KAAKvD,WAAYmhG,uBAAwBD,gCAAiCE,sBAExMI,YAAeI,qBAEhBt+F,MAAMvG,KAAKgiC,MAAM4Y,eAAep0C,KAAM,OACtCs9F,eAAe9jG,MAAMwG,KAAK9L,KAAM8L,KAAKjK,UAG7C,IAAqBuoG,oBAAqB52E,yBAAyBjnB,SAAU68F,gBACzEzxF,GAAKpZ,KAAK8rG,iBAAiB9rG,KAAKuqG,gBAAiBsB,oBAAqBE,eAAiB3yF,GAAG2P,WAAYijF,aAAe5yF,GAAG4yF,aACvGvvD,cACAwvD,wBAA0B,GAAI/nF,KAC9BgoF,cAAgBlsG,KAAKmsG,qBAAqBb,kBAAmBnzF,QAAQ1W,KAAMsqG,eAAgBjB,wBAAyBC,uBAA2C5yF,QAAmB,WAAGskC,WAAYwvD,yBACjMG,aAAepsG,KAAKqsG,2BAA2Bl0F,QAAQ1W,KAAMqpG,wBAAyBmB,yBACtFK,WAAa97D,OAAO86D,mBAAqBD,mBACzCkB,gBAAkB,GAAIvY,wBAAuBh0F,KAAK4pG,oBAAwCp5D,OAAuB,gBAAG87D,WAAYJ,cAAe5+F,MAAOmvC,WAAY6uD,kBAAmBV,gBAAoCzyF,QAAmB,YAC5O9N,SAAWT,SAASyqD,iBAAiBjnD,YAAco/F,qBAAuBxsG,KAAMmY,QAAQ9N,SAAUoiG,eAAehsG,OAAO6qG,kBAAmBY,cAAeZ,kBAAuC96D,OAAuB,gBAAI+7D,iBACjPA,iBAAgBlX,cAEhB,IAIqBqX,eAJAC,mBAAmD,MAA9Bt4C,iBAAiBhnD,UACvDwmB,YAAYC,MAAMugC,iBAAiBhnD,WAAW,GAC9Cw+F,mBACiBtwD,eAAoC/K,OAAOk6D,mBAAmBiC,mBAEnF,IAAIt4C,iBAAiBjuD,OAAS6H,qBAAqBE,WAC3CgK,QAAQ9N,WAAa8N,QAAQ9N,SAASuiG,MAAM/2E,mBAC5C71B,KAAK67D,aAAa,4CAAgE1jD,QAAmB,YAEzGu0F,cAAgB,GAAI/xE,cAAa36B,KAAKyqG,iBAAkBY,mBAAsC,KAAW9vD,eAAmCpjC,QAAmB,gBAE9J,IAAImzF,kBACLtrG,KAAK6sG,sCAAsCX,cAAejB,QAC1DjrG,KAAK8sG,gDAAgDZ,cAAeE,aAAiCj0F,QAAmB,YACxHu0F,cAAgB,GAAIlyE,qBAAoBltB,MAAO29F,OAAQxuD,WAAYuuD,YAAauB,gBAAgBQ,yBAA0BR,gBAAgB9W,mBAAoB8W,gBAAgB7X,4BAA6B6X,gBAAgB7vE,aAAcryB,SAAUghG,mBAAsC,KAAW9vD,eAAmCpjC,QAAmB,gBAEzV,CACDnY,KAAKgtG,qBAAqBhB,aAAc7zF,SACxCnY,KAAKitG,wBAAwBf,cAAkC/zF,QAAmB,WAClF,IAAqB+0F,kBAAmB7B,mBAAqB,KAAO76D,OAAOk6D,mBAAmBiC,mBAC9FD,eAAgB,GAAIhyE,YAAW1sB,SAAUV,MAAO8+F,aAAcnB,OAAQxuD,WAAY8vD,gBAAgBQ,yBAA0BR,gBAAgB9W,mBAAoB8W,gBAAgB7X,4BAA6B6X,gBAAgB7vE,aAAcryB,SAAUghG,mBAAqB,KAAO6B,iBAAkB/0F,QAAQnO,WAAYmO,QAAQ/N,eAAiB,MAEpV,GAAIihG,mBAAoB,CACpB,GAAqB8B,yBAA0BntG,KAAKuqB,oBAC/B6iF,iBAAmBn4E,yBAAyBwB,iBAAkB00E,wBAC/EkC,uBAAyBrtG,KAAK8rG,iBAAiB9rG,KAAKuqG,gBAAiB6C,kBAAkBrkF,WACtEukF,gCAAkC,GAAIppF,KACtCqpF,sBAAwBvtG,KAAKmsG,sBAAqB,EAAMh0F,QAAQ1W,KAAM4rG,uBAAwBnC,mCAAwD/yF,QAAmB,cAAOm1F,iCAChLE,qBAAuBxtG,KAAKqsG,2BAA2Bl0F,QAAQ1W,KAAMypG,gCAAiCoC,gCAC3HttG,MAAK8sG,gDAAgDS,sBAAuBC,qBAAyCr1F,QAAmB,WACxI,IAAqBs1F,yBAA0B,GAAIzZ,wBAAuBh0F,KAAK4pG,oBAAwCp5D,OAAuB,gBAAGA,OAAO86D,kBAAmBiC,6BAA+B,EAAMJ,wBAA4Ch1F,QAAmB,WAC/Qs1F,yBAAwBpY,eACxBqX,cAAgB,GAAIlyE,8BAAgC4wE,oBAAqBqC,wBAAwBV,yBAA0BU,wBAAwBhY,mBAAoBgY,wBAAwB/Y,4BAA6B+Y,wBAAwB/wE,cAAegwE,eAAgBnxD,eAAmCpjC,QAAmB,YAE7U,MAAOu0F,gBAYX3C,qBAAqBxpG,UAAUkrG,WAU/B,SAAUH,kBAAmB/9F,KAAMy5F,qBAAsBC,YAAamB,aAAcsF,WAAYxG,YAC5F,GAAqBzlG,MAAOzB,KAAK2rG,wBAAwBp+F,KAAK9L,MACzC6B,MAAQiK,KAAKjK,MACbqqG,QAAUpgG,KAAKvD,WACf4jG,UAAYnsG,KAAK+J,MAAMs9F,kBACvB0C,YAAa,CAClC,IAAkB,OAAdoC,UAEA,GADApC,YAAa,EACiB,MAA1BoC,UApdE,GAqdF5tG,KAAKqqG,eAAe9D,qBAAqBqH,UAzctC,GAyc+DtqG,OAAO,EAAOqqG,QAAS3G,qBAAsBC,iBAE9G,IAAI2G,UArdJ,GAsdD,GAAItC,kBAAmB,CACnB,GAAqB7jG,YAAammG,UA7cnC,EA8cC5tG,MAAK6tG,eAAepmG,WAAYnE,MAAOqqG,QAASzG,gBAGhDlnG,MAAK67D,aAAa,oDAAuD8xC,aAG5E,IAAIC,UA5dJ,GA4d2B,CAC5B,GAAqBnmG,YAAammG,UArd/B,EAsdH5tG,MAAK8tG,gBAAgBrmG,WAAYnE,MAAOqqG,QAASD,gBAE5CE,WA9dL,GA+dA5tG,KAAKqqG,eAAe1D,WAAWiH,UAzd5B,GAydqDtqG,MAAOqqG,QAAS3G,qBAAsBoB,cAEzFwF,UA/dD,IAgeJ5tG,KAAKqqG,eAAe9D,qBAAqBqH,UA5dtC,GA4d+DtqG,OAAO,EAAOqqG,QAAS3G,qBAAsBC,aAC/GjnG,KAAK+tG,sBAAsBH,UA7dxB,GA6diDtqG,MAAOqqG,QAAS3G,qBAAsBoB,eAErFwF,UAjeL,GAkeA5tG,KAAKqqG,eAAehD,iBAAiB5lG,KAAM6B,MAAOqqG,QAAS3G,qBAAsBC,aAE5E2G,UAheM,IAieX5tG,KAAKqqG,eAAe9D,qBAAqBqH,UAje9B,GAie+DtqG,OAAO,EAAOqqG,QAAS3G,qBAAsBC,aACvHjnG,KAAK+tG,sBAAsBH,UAlehB,GAkeiDtqG,MAAOqqG,QAAS3G,qBAAsBoB,eAE7FwF,UAleI,GAmeT5tG,KAAKqqG,eAAe9D,qBAAqBqH,UAnehC,GAme+DtqG,OAAO,EAAOqqG,QAAS3G,qBAAsBC,aAEhH2G,UAneC,KAoeN5tG,KAAKqqG,eAAe1D,WAAWiH,UApezB,IAoeqDtqG,MAAOqqG,QAAS3G,qBAAsBoB,kBAIrGoD,YAAaxrG,KAAKqqG,eAAe1C,2BAA2BlmG,KAAM6B,MAAOqqG,QAAS3G,qBAAsBC,YAK5G,OAHKuE,aACDxrG,KAAKqqG,eAAehD,iBAAiB5lG,KAAM6B,MAAOqqG,QAAS3G,qBAAsBC,aAE9EuE,YAMXzB,qBAAqBxpG,UAAUorG,wBAI/B,SAAUr2E,UACN,MAAO,UAAUjqB,KAAKiqB,UAAYA,SAASpvB,UAAU,GAAKovB,UAS9Dy0E,qBAAqBxpG,UAAUstG,eAO/B,SAAUpmG,WAAYnE,MAAO0G,WAAYk9F,YACjCz/F,WAAWvE,QAAQ,MAAQ,GAC3BlD,KAAK67D,aAAa,uCAA0C7xD,YAEhEk9F,WAAWngG,KAAK,GAAIu1C,aAAY70C,WAAYnE,MAAO0G,cASvD+/F,qBAAqBxpG,UAAUutG,gBAO/B,SAAUrmG,WAAYnE,MAAO0G,WAAY0jG,YACjCjmG,WAAWvE,QAAQ,MAAQ,GAC3BlD,KAAK67D,aAAa,wCAA2C7xD,YAEjE0jG,WAAW3mG,KAAK,GAAIinG,uBAAsBvmG,WAAYnE,MAAO0G,cAUjE+/F,qBAAqBxpG,UAAUwtG,sBAQ/B,SAAUtsG,KAAMkT,WAAY3K,WAAYg9F,qBAAsBoB,cAC1DpoG,KAAKqqG,eAAe1D,WAAWllG,KAAO,SAAUkT,WAAa,UAAW3K,WAAYg9F,qBAAsBoB,eAO9G2B,qBAAqBxpG,UAAUurG,iBAK/B,SAAUvB,gBAAiBsB,oBACvB,GAAI9iE,OAAQ/oC,KAIS+oB,WAAa,GAAItlB,OAAMzD,KAAKwqG,gBAAgB7M,MAE5CqO,cAAe,CAKpC,OAJAzB,iBAAgB/+F,MAAMqgG,mBAAoB,SAAUr7E,SAAUrH,WAC1DJ,WAA8BggB,MAAMyhE,gBAAgBjqF,IAAI4I,YAAgBA,UACxE6iF,aAAeA,cAAgBx7E,SAASmO,wBAGxC5V,WAAYA,WAAW7F,OAAO,SAAUqG,KAAO,QAASA,MACxDyiF,aAAcA,eActBjC,qBAAqBxpG,UAAU4rG,qBAW/B,SAAUb,kBAAmBj/F,YAAa0c,WAAYrnB,MAAOqpG,uBAAwBkD,kBAAmBC,iBAAkBC,+BACtH,GAAIplE,OAAQ/oC,KACSouG,kBAAoB,GAAIlqF,KACxB8F,UAA6B,KAC7BkiF,cAAgBnjF,WAAWnjB,IAAI,SAAUujB,WAC1D,GAAqBnf,YAAa,GAAI4L,iBAAgBq4F,kBAAkBlkG,MAAOkkG,kBAAkB/jG,IAAK,aAAe9C,eAAe+hB,UAAU/iB,MAC1I+iB,WAAUE,cACVW,UAAYb,UAEhB,IAAqBklF,wBACApxD,eAAoClU,MAAMshE,eAAejE,gCAAgCj9E,UAAW9c,YAAarC,WAGtIizC,gBAAiBlU,MAAMulE,yBAAyBjiG,YAAa4wC,eAC7D,IAAqBC,YAAgCnU,MAAMshE,eAAe5D,6BAA6Bt9E,UAAWnf,WAClH++B,OAAMwlE,6BAA6BplF,UAAU6U,OAAQt8B,MAAO2sG,oBAAqBF,+BACjFpD,uBAAuBlkG,QAAQ,SAAU2nG,aACJ,IAA5BA,WAAWlrG,MAAMxB,QAAgBqnB,UAAUE,aAC3CmlF,WAAWC,uBAAuBtlF,cACnC+kF,iBAAiBnnG,KAAK,GAAIo1C,cAAaqyD,WAAW/sG,KAAMghB,wBAAwB0G,UAAU/iB,KAAKkB,WAAYknG,WAAWlrG,MAAOkrG,WAAWxkG,aACxIokG,kBAAkBvxE,IAAI2xE,WAAW/sG,QAGzC,IAAqB8oB,qBAAsBwe,MAAMxe,mBAEjD,OADAwe,OAAMxe,qBAAuBpB,UAAUwB,QAAQ7oB,OACxC,GAAIk7C,cAAa7zB,UAAWklF,oBAAqBpxD,eAAgBC,WAAY3yB,oBAAqBvgB,aAgB7G,OAdA+gG,wBAAuBlkG,QAAQ,SAAU2nG,YACrC,GAAIA,WAAWlrG,MAAMxB,OAAS,EACrBssG,kBAAkB/5E,IAAIm6E,WAAW/sG,OAClCsnC,MAAM8yB,aAAa,iDAAsD2yC,WAAWlrG,MAAQ,IAAMkrG,WAAWxkG,gBAGhH,KAAKggB,UAAW,CACjB,GAAqB0kF,UAA4B,IAC7CpD,qBACAoD,SAAWhsF,gCAAgCqmB,MAAMpmB,UAAW4K,YAAYqT,cAE5EstE,iBAAiBnnG,KAAK,GAAIo1C,cAAaqyD,WAAW/sG,KAAMitG,SAAUF,WAAWlrG,MAAOkrG,WAAWxkG,gBAGhGkiG,eASXnC,qBAAqBxpG,UAAUguG,6BAO/B,SAAUF,oBAAqBM,WAAYC,0BAA2BT,+BAClE,GAAIE,oBAAqB,CACrB,GAAqBQ,oBAAqB,GAAI3lF,IAC9CylF,YAAW9nG,QAAQ,SAAUghG,WACzB,GAAqBnsE,WAAYmzE,mBAAmBtuF,IAAIsnF,UAAUpmG,KAC7Di6B,aAAaA,UAAUkqE,WAGxBiJ,mBAAmBruF,IAAIqnF,UAAUpmG,KAAMomG,aAG/CrnG,OAAO+2B,KAAK82E,qBAAqBxnG,QAAQ,SAAUioG,SAC/C,GAAqBC,QAASV,oBAAoBS,SAC7BjH,UAAYgH,mBAAmBtuF,IAAIwuF,OAEpDlH,aACAsG,8BAA8BtxE,IAAIgrE,UAAUpmG,MACvCw0B,kBAAkB4xE,UAAUlzF,aAC7Bi6F,0BAA0B7nG,KAAK,GAAI81C,2BAA0BiyD,QAASjH,UAAUpmG,KAAMomG,UAAUlzF,WAAYkzF,UAAU79F,kBAY1I+/F,qBAAqBxpG,UAAU8rG,2BAM/B,SAAUhgG,YAAa3K,MAAOuqG,yBAC1B,GAAIljE,OAAQ/oC,KACSgvG,oBAMrB,OALAttG,OAAMmF,QAAQ,SAAU+oB,MACfA,KAAKg2E,WAAcqG,wBAAwB53E,IAAIzE,KAAKnuB,OACrDutG,kBAAkBjoG,KAAKgiC,MAAMshE,eAAe7D,yBAAyBn6F,YAAaujB,SAGnF5vB,KAAKsuG,yBAAyBjiG,YAAa2iG,oBAMtDjF,qBAAqBxpG,UAAU0uG,yBAI/B,SAAUlmF,YACN,MAAOA,YAAW7F,OAAO,SAAUiG,WAAa,MAAOA,WAAUA,UAAUE,eAM/E0gF,qBAAqBxpG,UAAU2uG,6BAI/B,SAAUnmF,YACN,MAAO/oB,MAAKivG,yBAAyBlmF,YAChCnjB,IAAI,SAAUujB,WAAa,MAAS/hB,gBAAe+hB,UAAUA,UAAU/iB,SAOhF2jG,qBAAqBxpG,UAAU0sG,wBAK/B,SAAUlkF,WAAY/e,YAClB,GAAqBmlG,oBAAqBnvG,KAAKkvG,6BAA6BnmF,WACxEomF,oBAAmBrtG,OAAS,GAC5B9B,KAAK67D,aAAa,sJAEgBszC,mBAAmBtpG,KAAK,KAAOmE,aAazE+/F,qBAAqBxpG,UAAUysG,qBAU/B,SAAUhB,aAAc7zF,SACpB,GAAqBi3F,QAASj3F,QAAQ1W,KAAKe,QAAQ,WAAY,GAC/D,KAAKwpG,eAAiBhsG,KAAK+jF,gBAAgBub,WAAW8P,OAAQpvG,KAAKsqG,UAAW,CAC1E,GAAqBtoC,UAAW,IAAMotC,OAAS,6BAC/CptC,WACI,UAAYotC,OAAS,2EACrBA,OAAOlsG,QAAQ,MAAQ,EACvB8+D,UACI,UAAYotC,OAAS,gIAGzBptC,UACI,+FAERhiE,KAAK67D,aAAamG,SAA6B7pD,QAAmB,cAS1E4xF,qBAAqBxpG,UAAUusG,gDAM/B,SAAU/jF,WAAYqjF,aAAcpiG,YAChC,GAAI++B,OAAQ/oC,KACSmvG,mBAAqBnvG,KAAKkvG,6BAA6BnmF,WACxEomF,oBAAmBrtG,OAAS,GAC5B9B,KAAK67D,aAAa,uCAAyCszC,mBAAmBtpG,KAAK,KAAMmE,YAE7FoiG,aAAavlG,QAAQ,SAAU+oB,MAC3BmZ,MAAM8yB,aAAa,oBAAsBjsC,KAAKnuB,KAAO,2KAA8KuI,eAQ3O+/F,qBAAqBxpG,UAAUssG,sCAK/B,SAAU9jF,WAAYkiF,QAClB,GAAIliE,OAAQ/oC,KACSqvG,mBAAqB,GAAInrF,IAC9C6E,YAAWliB,QAAQ,SAAUsiB,WACzB3oB,OAAO+2B,KAAKpO,UAAUA,UAAUqzB,SAAS31C,QAAQ,SAAUqT,GACvD,GAAqBm8B,WAAYltB,UAAUA,UAAUqzB,QAAQtiC,EAC7Dm1F,oBAAmBxyE,IAAIwZ,eAG/B40D,OAAOpkG,QAAQ,SAAUyoG,OACD,MAAhBA,MAAMz7F,QAAmBw7F,mBAAmBh7E,IAAIi7E,MAAM7tG,OACtDsnC,MAAM8yB,aAAa,iBAAmByzC,MAAM1iG,SAAW,2KAA8K0iG,MAAMtlG,eASvP+/F,qBAAqBxpG,UAAU+tG,yBAK/B,SAAUjiG,YAAasiG,YACnB,GAAI5lE,OAAQ/oC,IAGZ,OAAO2uG,YAAWzrF,OAAO,SAAU2kF,WAC/B,GAAIA,UAAUzhG,OAAS20B,oBAAoBC,WACtC+N,MAAMg7C,gBAAgBob,YAAY9yF,YAAaw7F,UAAUpmG,KAAMsnC,MAAMuhE,UAAW,CACjF,GAAqBtoC,UAAW,kBAAoB6lC,UAAUpmG,KAAO,yCAA2C4K,YAAc,IAC1HA,aAAYiS,WAAW,OACvB0jD,UACI,YAAc6lC,UAAUpmG,KAAO,kMAG9B4K,YAAYnJ,QAAQ,MAAQ,IACjC8+D,UACI,YAAc31D,YAAc,yCAA2Cw7F,UAAUpmG,KAAO,gEACrE4K,YAAc,gOAGzC08B,MAAM8yB,aAAamG,SAAU6lC,UAAU79F,YAE3C,OAAQisB,kBAAkB4xE,UAAUvkG,UAS5CymG,qBAAqBxpG,UAAUs7D,aAM/B,SAAU3qD,QAASlH,WAAY0/B,WACb,KAAVA,QAAoBA,MAAQ+2B,gBAAgBE,OAChD3gE,KAAK+lG,cAAch/F,KAAK,GAAI65D,YAAW52D,WAAYkH,QAASw4B,SAEzDqgE,wBAEPwF,mBAAoC,WACpC,QAASA,uBAwFT,MAjFAA,oBAAmBhvG,UAAUm8C,aAK7B,SAAU91C,IAAK4pC,QACX,GAAqB6jB,kBAAmBrnD,gBAAgBpG,IACxD,IAAIytD,iBAAiBjuD,OAAS6H,qBAAqBM,QAC/C8lD,iBAAiBjuD,OAAS6H,qBAAqBI,OAC/CgmD,iBAAiBjuD,OAAS6H,qBAAqBS,WAI/C,MAAO,KAEX,IAAqB8gG,mBAAoB5oG,IAAI0G,MAAM1H,IAAI,SAAU2H,MAAQ,OAAQA,KAAK9L,KAAM8L,KAAKjK,SAC5EktB,SAAWyE,yBAAyBruB,IAAInF,KAAM+tG,mBAC9Cj0D,eAAiB/K,OAAOk6D,mBAAmBl6E,UAC3CnmB,SAAWT,SAAS5J,KAAM4G,IAAIyD,SAAU2/F,sBAC7D,OAAO,IAAItvE,YAAW9zB,IAAInF,KAAMmI,SAAS5J,KAAM4G,IAAI0G,uBAA4B,KAAWjD,SAAUkxC,eAAgB30C,IAAIoD,WAAYpD,IAAIwD,gBAO5ImlG,mBAAmBhvG,UAAUshD,aAK7B,SAAUowB,QAASzuE,SAAW,MAAO,OAMrC+rG,mBAAmBhvG,UAAUohD,eAK7B,SAAUowB,UAAWvuE,SACjB,MAAO,IAAIm4C,SAAQo2B,UAAUtwE,KAAMswE,UAAUzuE,MAAOyuE,UAAU/nE,aAOlEulG,mBAAmBhvG,UAAUi7C,UAK7B,SAAUjrC,KAAMigC,QACZ,GAAqB+K,gBAAoC/K,OAAOk6D,mBAAmB3B,kBACnF,OAAO,IAAIztD,SAAQ/qC,KAAKjN,MAAOi4C,eAAmChrC,KAAgB,aAOtFg/F,mBAAmBhvG,UAAU+gD,eAK7B,SAAUq5B,UAAWn3E,SAAW,MAAOm3E,YAMvC40B,mBAAmBhvG,UAAUkhD,mBAK7B,SAAUm5B,cAAep3E,SAAW,MAAOo3E,gBACpC20B,sBASPvB,sBAAuC,WACvC,QAASA,uBAAsBvsG,KAAM6B,MAAO0G,YACxChK,KAAKyB,KAAOA,KACZzB,KAAKsD,MAAQA,MACbtD,KAAKgK,WAAaA,WAgBtB,MARAgkG,uBAAsBztG,UAAUkuG,uBAKhC,SAAUtlF,WACN,OAAkE,IAA3D0L,cAAc1L,UAAU2L,UAAU5xB,QAAQlD,KAAKsD,QAEnD0qG,yBAiBPvB,eAAgC,WAChC,QAASA,gBAAenB,kBAAmBmE,uBAAwBC,wBAAyBnD,iBACxFvsG,KAAKsrG,kBAAoBA,kBACzBtrG,KAAKyvG,uBAAyBA,uBAC9BzvG,KAAK0vG,wBAA0BA,wBAC/B1vG,KAAKusG,gBAAkBA,gBAiD3B,MAzCAE,gBAAehsG,OAMf,SAAU6qG,kBAAmBviF,WAAYwjF;oFACrC,GAAqBlqB,SAAU,GAAIhB,iBACdsuB,uBAA0C,KAC1C3lF,UAAYjB,WAAWrK,KAAK,SAAUyK,WAAa,MAAOA,WAAUA,UAAUE,aACnG,IAAIW,UAEA,IAAK,GADgBuV,oBAAwCvV,UAAUb,UAAmB,SAAEoW,mBAClEx0B,EAAI,EAAGA,EAAIw0B,mBAAmBz9B,OAAQiJ,IAAK,CACjE,GAAqBylB,UAAW+O,mBAAmBx0B,EAClC,OAAbylB,SACAm/E,uBAAyB5kG,EAGzBs3E,QAAQN,eAAeluD,YAAYC,MAAMyL,mBAAmBx0B,IAAKA,GAI7E,MAAO,IAAI0hG,gBAAenB,kBAAmBjpB,QAASstB,uBAAwBpD,kBAMlFE,eAAelsG,UAAUmqG,mBAIzB,SAAUl6E,UACN,GAAqBo/E,oBAMrB,OALA5vG,MAAKyvG,uBAAuBjkG,MAAMglB,SAAU,SAAUA,SAAU+qB,gBAAkBq0D,iBAAiB7oG,KAAKw0C,kBACxGq0D,iBAAiBn7E,OACmB,MAAhCz0B,KAAK0vG,yBACLE,iBAAiB7oG,KAAK/G,KAAK0vG,yBAExBE,iBAAiB9tG,OAAS,EAAI8tG,iBAAiB,GAAK,MAExDnD,kBAuBPzC,sBAAwB,GAAIyC,iBAAe,EAAM,GAAIprB,iBAAmB,KAAM,MAC9EmrB,qBAAuB,GAAI+C,oBA+D3BM,iBAAkC,WAClC,QAASA,qBAGT,MADAA,kBAAiBP,MAAQppF,SAAS,UAC3B2pF,oBAMPn3E,2BAA4C,WAC5C,QAASA,4BAA2BvT,MAAO2qF,cACvC9vG,KAAKmlB,MAAQA,MACbnlB,KAAK8vG,aAAeA,aAExB,MAAOp3E,+BA0EPY,6BAA8C,WAC9C,QAASA,8BAA6BnU,MAAO6T,aACzCh5B,KAAKmlB,MAAQA,MACbnlB,KAAKg5B,YAAcA,YAEvB,MAAOM,iCAGPF,aAEA22E,QAAS,EAGT12E,UAAW,EAEfD,aAAYA,YAAY22E,SAAW,UACnC32E,YAAYA,YAAYC,WAAa,WAqErC,IAAIzB,QACA3I,UAAW,EACXC,WAAY,EAEhB0I,OAAMA,MAAM3I,WAAa,YACzB2I,MAAMA,MAAM1I,YAAc,YAkC1B,IAm8HI9V,IAn8HAmgB,qBAAsC,SAAU9uB,QAEhD,QAAS8uB,sBAAqBy2E,mBAC1B,GAAIjnE,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAEjC,OADA+oC,OAAMinE,kBAAoBA,kBACnBjnE,MA+CX,MAnDA9oC,WAAUs5B,qBAAsB9uB,QAWhC8uB,qBAAqBh5B,UAAUiU,UAK/B,SAAU5N,IAAKpD,SACX,GAAIulC,OAAQ/oC,KACS2B,MAAQiF,IAAI6N,KAAK7L,OAAOhC,IAAIjF,MAAMiE,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAMoiC,MAAOvlC,UACpG,OAAO,IAAIysG,qBAAoBrpG,IAAI+D,KAAMhJ,KAAM3B,KAAKgwG,kBAAkBx4E,oBAAoB5wB,IAAInF,KAAME,KAAKG,UAO7Gy3B,qBAAqBh5B,UAAU4T,kBAK/B,SAAUvN,IAAKpD,SACX,GAAIulC,OAAQ/oC,KACS2B,KAAOiF,IAAI4M,YAAY5N,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAMoiC,MAAOvlC,UACzF,OAAO,IAAIysG,qBAAoBrpG,IAAI+D,KAAMhJ,KAAM3B,KAAKgwG,kBAAkB54E,4BAA4BxwB,IAAI4M,YAAY1R,UAOtHy3B,qBAAqBh5B,UAAU6T,gBAK/B,SAAUxN,IAAKpD,SACX,GAAIulC,OAAQ/oC,KACS2B,KAAOiF,IAAI7E,OAAO6D,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAMoiC,MAAOvlC,UACpF,OAAO,IAAIysG,qBAAoBrpG,IAAI+D,KAAMhJ,KAAM3B,KAAKgwG,kBAAkB14E,0BAA0B1wB,IAAI2wB,QAEjGgC,sBACTqhC,gBACEnjC,gBAAiC,WACjC,QAASA,iBAAgBy4E,eAAgBC,kBAAmBp5E,UAAWC,uBACnEh3B,KAAKkwG,eAAiBA,eACtBlwG,KAAKmwG,kBAAoBA,kBACzBnwG,KAAK+2B,UAAYA,UACjB/2B,KAAKg3B,sBAAwBA,sBAC7Bh3B,KAAKowG,SAAW,GAAIlnF,KACpBlpB,KAAKqwG,WAAa,GAAInnF,KACtBlpB,KAAKswG,kBAAoB,EACzBtwG,KAAK83B,eAAiB,EA2wB1B,MApwBAL,iBAAgBl3B,UAAU6S,YAK1B,SAAUxM,IAAKkzB,MACX,GAAqByjC,GACrB,QAAQ32D,IAAIszD,WACR,IAAK,IACDqD,GAAK8vB,eAAeM,IACpB,MACJ,KAAK,IACDpwB,GAAK8vB,eAAeK,KACpB,MACJ,KAAK,IACDnwB,GAAK8vB,eAAeQ,QACpB,MACJ,KAAK,IACDtwB,GAAK8vB,eAAeO,MACpB,MACJ,KAAK,IACDrwB,GAAK8vB,eAAeS,MACpB,MACJ,KAAK,KACDvwB,GAAK8vB,eAAeU,GACpB,MACJ,KAAK,KACDxwB,GAAK8vB,eAAeW,EACpB,MACJ,KAAK,KACDzwB,GAAK8vB,eAAeC,MACpB,MACJ,KAAK,KACD/vB,GAAK8vB,eAAeE,SACpB,MACJ,KAAK,MACDhwB,GAAK8vB,eAAeG,SACpB,MACJ,KAAK,MACDjwB,GAAK8vB,eAAeI,YACpB,MACJ,KAAK,IACDlwB,GAAK8vB,eAAeY,KACpB,MACJ,KAAK,IACD1wB,GAAK8vB,eAAec,MACpB,MACJ,KAAK,KACD5wB,GAAK8vB,eAAea,WACpB,MACJ,KAAK,KACD3wB,GAAK8vB,eAAee,YACpB,MACJ,SACI,KAAM,IAAI9pF,OAAM,yBAA2BsC,IAAIszD,WAEvD,MAAOlgC,4BAA2BF,KAAM,GAAIk1D,oBAAmBzxB,GAAIv9D,KAAKuwG,OAAO3pG,IAAIyM,KAAMukB,MAAM1I,YAAalvB,KAAKuwG,OAAO3pG,IAAI0M,MAAOskB,MAAM1I,eAO7IuI,gBAAgBl3B,UAAUgT,WAK1B,SAAU3M,IAAKkzB,MAEX,MADAD,qBAAoBC,KAAMlzB,KACnB5G,KAAK4J,SAAShD,IAAI4M,YAAasmB,OAO1CrC,gBAAgBl3B,UAAUkT,iBAK1B,SAAU7M,IAAKkzB,MAEX,MAAOE,4BAA2BF,KADL95B,KAAKuwG,OAAO3pG,IAAIqI,UAAW2oB,MAAM1I,YAChBw/D,YAAY1uF,KAAKuwG,OAAO3pG,IAAI8M,QAASkkB,MAAM1I,YAAalvB,KAAKuwG,OAAO3pG,IAAI+M,SAAUikB,MAAM1I,eAO1IuI,gBAAgBl3B,UAAUiU,UAK1B,SAAU5N,IAAKkzB,MACX,KAAM,IAAIx1B,OAAM,yEAA2EsC,IAAInF,OAOnGg2B,gBAAgBl3B,UAAUqT,kBAK1B,SAAUhN,IAAKkzB,MACX,GACqB02E,UADAC,cAAgBzwG,KAAK4J,SAAShD,IAAIjF,KAAMi2B,MAAM1I,WAQnE,OALIshF,UADA5pG,cAAeqpG,qBACJrpG,IAAIioB,UAAU4hF,eAGdzwG,KAAKuwG,OAA0B3pG,IAAW,OAAGgxB,MAAM1I,YAAY1C,OAAOikF,eAE9Ez2E,2BAA2BF,KAAM02E,WAO5C/4E,gBAAgBl3B,UAAUuT,sBAK1B,SAAUlN,IAAKkzB,MAEX,MADAC,sBAAqBD,KAAMlzB,KACpB5G,KAAKmwG,mBAOhB14E,gBAAgBl3B,UAAUwT,mBAK1B,SAAUnN,IAAKkzB,MACXC,qBAAqBD,KAAMlzB,IAE3B,KAAK,GADgBjF,OAAQkmB,QAAQjhB,IAAI4M,YAAY1R,SAC3BiJ,EAAI,EAAGA,EAAInE,IAAIozD,QAAQl4D,OAAS,EAAGiJ,IACzDpJ,KAAKoF,KAAK8gB,QAAQjhB,IAAIozD,QAAQjvD,KAC9BpJ,KAAKoF,KAAK/G,KAAKuwG,OAAO3pG,IAAI4M,YAAYzI,GAAI6sB,MAAM1I,YAGpD,OADAvtB,MAAKoF,KAAK8gB,QAAQjhB,IAAIozD,QAAQpzD,IAAIozD,QAAQl4D,OAAS,KAC/C9B,KAAKg3B,sBACEh3B,KAAKg3B,sBAAsBr1B,MAE/BiF,IAAI4M,YAAY1R,QAAU,EAC7BskB,WAAWmH,YAAYgyD,mBAAmB/yD,OAAO7qB,MACjDykB,WAAWmH,YAAYwS,aAAavT,QAAQ7qB,KAAK,GAAIglB,WAAWhlB,KAAKwB,MAAM,OAOnFs0B,gBAAgBl3B,UAAUyT,eAK1B,SAAUpN,IAAKkzB,MACX,GAAqB42E,cAAe1wG,KAAK2wG,iBAAiB/pG,IAC1D,OAAI8pG,cACO1wG,KAAK4wG,kBAAkBhqG,IAAK8pG,aAAc52E,MAG1CE,2BAA2BF,KAAM95B,KAAKuwG,OAAO3pG,IAAIxE,IAAKw1B,MAAM1I,YAAYjb,IAAIjU,KAAKuwG,OAAO3pG,IAAIqN,IAAK2jB,MAAM1I,eAQtHuI,gBAAgBl3B,UAAU2T,gBAK1B,SAAUtN,IAAKkzB,MACX,GAAqB13B,KAAMpC,KAAKuwG,OAAO3pG,IAAIxE,IAAKw1B,MAAM1I,YACjCjb,IAAMjU,KAAKuwG,OAAO3pG,IAAIqN,IAAK2jB,MAAM1I,YACjC5rB,MAAQtD,KAAKuwG,OAAO3pG,IAAItD,MAAOs0B,MAAM1I,WAC1D,OAAO8K,4BAA2BF,KAAM13B,IAAI6R,IAAIA,KAAKuM,IAAIld,SAO7Dm0B,gBAAgBl3B,UAAU4T,kBAK1B,SAAUvN,IAAKkzB,MACX,KAAM,IAAIx1B,OAAM,4EAOpBmzB,gBAAgBl3B,UAAU6T,gBAK1B,SAAUxN,IAAKkzB,MACX,KAAM,IAAIx1B,OAAM,0EAOpBmzB,gBAAgBl3B,UAAU8T,sBAK1B,SAAUzN,IAAKkzB,MAGX,GAAqB1zB,MAAqB,OAAdQ,IAAItD,WAAgCY,KAAd0C,IAAItD,QAAqC,IAAdsD,IAAItD,QAAgC,IAAdsD,IAAItD,MACnGopB,kBACAxoB,EACJ,OAAO81B,4BAA2BF,KAAMjS,QAAQjhB,IAAItD,MAAO8C,QAM/DqxB,gBAAgBl3B,UAAUswG,UAI1B,SAAUpvG,MAAQ,MAAOzB,MAAKkwG,eAAeY,SAASrvG,OAMtDg2B,gBAAgBl3B,UAAU+T,gBAK1B,SAAU1N,IAAKkzB,MACX,GAAIlzB,IAAI2N,mBAAoB4kD,mBAAgC,QAAZvyD,IAAInF,KAAgB,CAChE,GAAqBE,MAAyB3B,KAAK4J,SAAShD,IAAIjF,KAAMi2B,MAAM1I,WAC5E,IAAmB,GAAfvtB,KAAKG,OACL,KAAM,IAAIwC,OAAM,2DAA6D3C,KAAKG,QAAU,QAEhG,OAA0BH,MAAK,GAAK02B,KAAKpM,cAE7C,GAAqBykF,cAAe1wG,KAAK2wG,iBAAiB/pG,IAC1D,IAAI8pG,aACA,MAAO1wG,MAAK4wG,kBAAkBhqG,IAAK8pG,aAAc52E,KAGjD,IAAqBn4B,MAAO3B,KAAK4J,SAAShD,IAAIjF,KAAMi2B,MAAM1I,YACrCxoB,OAAS,KACT6N,SAAWvU,KAAKuwG,OAAO3pG,IAAI2N,SAAUqjB,MAAM1I,WAChE,IAAI3a,WAAavU,KAAKmwG,kBAAmB,CACrC,GAAqBY,SAAU/wG,KAAK6wG,UAAUjqG,IAAInF,KAC9CsvG,WACArqG,OAASqqG,QAAQvkF,OAAO7qB,OAMhC,MAHc,OAAV+E,SACAA,OAAS6N,SAASg6E,WAAW3nF,IAAInF,KAAME,OAEpCq4B,2BAA2BF,KAAMpzB,SAQhD+wB,gBAAgBl3B,UAAUmU,eAK1B,SAAU9N,IAAKkzB,MACX,MAAOE,4BAA2BF,KAAM7S,IAAIjnB,KAAKuwG,OAAO3pG,IAAI+N,WAAYijB,MAAM1I,eAOlFuI,gBAAgBl3B,UAAUqU,mBAK1B,SAAUhO,IAAKkzB,MACX,MAAOE,4BAA2BF,KAAM3S,cAAcnnB,KAAKuwG,OAAO3pG,IAAI+N,WAAYijB,MAAM1I,eAO5FuI,gBAAgBl3B,UAAUsU,kBAK1B,SAAUjO,IAAKkzB,MACX,GAAqB42E,cAAe1wG,KAAK2wG,iBAAiB/pG,IAC1D,IAAI8pG,aACA,MAAO1wG,MAAK4wG,kBAAkBhqG,IAAK8pG,aAAc52E,KAGjD,IAAqBpzB,QAAS,KACT6N,SAAWvU,KAAKuwG,OAAO3pG,IAAI2N,SAAUqjB,MAAM1I,WAOhE,OANI3a,YAAavU,KAAKmwG,oBAClBzpG,OAAS1G,KAAK6wG,UAAUjqG,IAAInF,OAElB,MAAViF,SACAA,OAAS6N,SAASqb,KAAKhpB,IAAInF,OAExBu4B,2BAA2BF,KAAMpzB,SAQhD+wB,gBAAgBl3B,UAAUuU,mBAK1B,SAAUlO,IAAKkzB,MACX,GAAqBvlB,UAAWvU,KAAKuwG,OAAO3pG,IAAI2N,SAAUqjB,MAAM1I,WAChE,IAAI3a,WAAavU,KAAKmwG,kBAAmB,CAErC,GAD+BnwG,KAAK6wG,UAAUjqG,IAAInF,MAE9C,KAAM,IAAI6C,OAAM,6CAGxB,MAAO01B,4BAA2BF,KAAMvlB,SAASqb,KAAKhpB,IAAInF,MAAM+e,IAAIxgB,KAAKuwG,OAAO3pG,IAAItD,MAAOs0B,MAAM1I,eAOrGuI,gBAAgBl3B,UAAU0U,sBAK1B,SAAUrO,IAAKkzB,MACX,MAAO95B,MAAK4wG,kBAAkBhqG,IAAK5G,KAAK2wG,iBAAiB/pG,KAAMkzB,OAOnErC,gBAAgBl3B,UAAUyU,oBAK1B,SAAUpO,IAAKkzB,MACX,MAAO95B,MAAK4wG,kBAAkBhqG,IAAK5G,KAAK2wG,iBAAiB/pG,KAAMkzB,OAOnErC,gBAAgBl3B,UAAUqJ,SAK1B,SAAUnD,KAAMqzB,MACZ,GAAIiP,OAAQ/oC,IACZ,OAAOyG,MAAKb,IAAI,SAAUgB,KAAO,MAAOmiC,OAAMwnE,OAAO3pG,IAAKkzB,SAO9DrC,gBAAgBl3B,UAAUwU,WAK1B,SAAUnO,IAAKkzB,MACX,KAAM,IAAIx1B,OAAM,gEAAkEsC,IAAIqyD,wBAA0B,eAAiBryD,IAAIsyD,WAOzIzhC,gBAAgBl3B,UAAUgwG,OAK1B,SAAU3pG,IAAKkzB,MACX,GAAqBpzB,QAAS1G,KAAKqwG,WAAW9vF,IAAI3Z,IAClD,OAAIF,UAEI1G,KAAKowG,SAAS7vF,IAAI3Z,MAAQA,KAAKD,MAAM3G,KAAM85B,OAQvDrC,gBAAgBl3B,UAAUqwG,kBAM1B,SAAUhqG,IAAK8pG,aAAc52E,MAoCzB,GAAqBk3E,mBAAoBhxG,KAAKuwG,OAAOG,aAAan8F,SAAUqjB,MAAM1I,YAC7D+hF,cAA6B,EAC9CjxG,MAAKkxG,eAAeR,aAAan8F,YAGjC08F,UAAYjxG,KAAKmxG,oBAEjBH,kBAAoBC,UAAUzwF,IAAIwwF,mBAElChxG,KAAKqwG,WAAW7vF,IAAIkwF,aAAan8F,SAAU08F,WAE/C,IAAqBhiG,WAAY+hG,kBAAkBthB,SAG/CghB,wBAAwBp2C,gBACxBt6D,KAAKowG,SAAS5vF,IAAIkwF,aAAc,GAAIr2C,YAAWq2C,aAAa/lG,KAAM+lG,aAAan8F,SAAUm8F,aAAajvG,KAAMivG,aAAa/uG,OAGzH3B,KAAKowG,SAAS5vF,IAAIkwF,aAAc,GAAIp3C,cAAao3C,aAAa/lG,KAAM+lG,aAAan8F,SAAUm8F,aAAajvG,MAG5G,IAAqB2vG,QAASpxG,KAAKuwG,OAAO3pG,IAAKgxB,MAAM1I,WASrD,OANAlvB,MAAKowG,SAAStzE,OAAO4zE,cAEjBO,WACAjxG,KAAKqxG,iBAAiBJ,WAGnBj3E,2BAA2BF,KAAM7qB,UAAUy/E,YAAY7mE,QAAQ,MAAOupF,UAMjF35E,gBAAgBl3B,UAAUowG,iBAI1B,SAAU/pG,KACN,GAAImiC,OAAQ/oC,KACS2G,MAAQ,SAAUpD,QAASqD,KAC5C,OAAQmiC,MAAMqnE,SAAS7vF,IAAI3Z,MAAQA,KAAKD,MAAMpD,SAElD,OAAOqD,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAO,OACxB2M,WAIA,SAAU3M,KAAO,MAAO,OACxB6M,iBAIA,SAAU7M,KAAO,MAAO,OACxBgN,kBAIA,SAAUhN,KAAO,MAAO,OACxBkN,sBAIA,SAAUlN,KAAO,MAAO,OACxBmN,mBAIA,SAAUnN,KAAO,MAAO,OACxBoN,eAIA,SAAUpN,KAAO,MAAOD,OAAM3G,KAAM4G,IAAIxE,MACxC8R,gBAIA,SAAUtN,KAAO,MAAO,OACxBuN,kBAIA,SAAUvN,KAAO,MAAO,OACxBwN,gBAIA,SAAUxN,KAAO,MAAO,OACxByN,sBAIA,SAAUzN,KAAO,MAAO,OACxB0N,gBAIA,SAAU1N,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI2N,WACxCC,UAIA,SAAU5N,KAAO,MAAO,OACxB8N,eAIA,SAAU9N,KAAO,MAAO,OACxBgO,mBAIA,SAAUhO,KAAO,MAAO,OACxBiO,kBAIA,SAAUjO,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI2N,WACxCO,mBAIA,SAAUlO,KAAO,MAAO,OACxBmO,WAIA,SAAUnO,KAAO,MAAO,OACxBoO,oBAIA,SAAUpO,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI2N,WAAa3N,KACrDqO,sBAIA,SAAUrO,KACN,MAAOD,OAAM3G,KAAM4G,IAAI2N,WAAa3N,QAQhD6wB,gBAAgBl3B,UAAU2wG,eAI1B,SAAUtqG,KACN,GAAImiC,OAAQ/oC,KACS2G,MAAQ,SAAUpD,QAASqD,KAC5C,MAAOA,OAAQmiC,MAAMqnE,SAAS7vF,IAAI3Z,MAAQA,KAAKD,MAAMpD,UAEpC+tG,UAAY,SAAU/tG,QAASqD,KAChD,MAAOA,KAAIirB,KAAK,SAAUjrB,KAAO,MAAOD,OAAMpD,QAASqD,OAE3D,OAAOA,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAOD,OAAM3G,KAAM4G,IAAIyM,OAAS1M,MAAM3G,KAAM4G,IAAI0M,QACjEC,WAIA,SAAU3M,KAAO,OAAO,GACxB6M,iBAIA,SAAU7M,KACN,MAAOD,OAAM3G,KAAM4G,IAAIqI,YAActI,MAAM3G,KAAM4G,IAAI8M,UACjD/M,MAAM3G,KAAM4G,IAAI+M,WAExBC,kBAIA,SAAUhN,KAAO,OAAO,GACxBkN,sBAIA,SAAUlN,KAAO,OAAO,GACxBmN,mBAIA,SAAUnN,KAAO,MAAO0qG,WAAUtxG,KAAM4G,IAAI4M,cAC5CQ,eAIA,SAAUpN,KAAO,OAAO,GACxBsN,gBAIA,SAAUtN,KAAO,OAAO,GACxBuN,kBAIA,SAAUvN,KAAO,OAAO,GACxBwN,gBAIA,SAAUxN,KAAO,OAAO,GACxByN,sBAIA,SAAUzN,KAAO,OAAO,GACxB0N,gBAIA,SAAU1N,KAAO,OAAO,GACxB4N,UAIA,SAAU5N,KAAO,OAAO,GACxB8N,eAIA,SAAU9N,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI+N,aACxCC,mBAIA,SAAUhO,KAAO,MAAOD,OAAM3G,KAAM4G,IAAI+N,aACxCE,kBAIA,SAAUjO,KAAO,OAAO,GACxBkO,mBAIA,SAAUlO,KAAO,OAAO,GACxBmO,WAIA,SAAUnO,KAAO,OAAO,GACxBoO,oBAIA,SAAUpO,KAAO,OAAO,GACxBqO,sBAIA,SAAUrO,KAAO,OAAO,MAMhC6wB,gBAAgBl3B,UAAU4wG,kBAG1B,WACI,GAAqBI,YAAavxG,KAAKswG,mBAEvC,OADAtwG,MAAK83B,eAAiBlb,KAAKC,IAAI7c,KAAKswG,kBAAmBtwG,KAAK83B,gBACrD,GAAI3R,aAAYqT,cAAcx5B,KAAK+2B,UAAWw6E,cAMzD95E,gBAAgBl3B,UAAU8wG,iBAI1B,SAAUJ,WAEN,GADAjxG,KAAKswG,oBACDW,UAAUxvG,MAAQ+3B,cAAcx5B,KAAK+2B,UAAW/2B,KAAKswG,mBACrD,KAAM,IAAIhsG,OAAM,aAAe2sG,UAAUxvG,KAAO,2BAGjDg2B,mBAePR,qBAAsC,WACtC,QAASA,yBAgBT,MAVAA,sBAAqB12B,UAAUuwG,SAI/B,SAAUrvG,MACN,MAAIA,QAASouG,iBAAiBP,MAAM7tG,KACzBouG,iBAAiBP,MAErB,MAEJr4E,wBA6BPg5E,oBAAqC,SAAUxlG,QAE/C,QAASwlG,qBAAoBtlG,KAAMhJ,KAAMktB,WACrC,GAAIka,OAAQt+B,OAAO+pC,KAAKx0C,KAAM2K,KAAM,KAAMhJ,OAAS3B,IAGnD,OAFA+oC,OAAMpnC,KAAOA,KACbonC,MAAMla,UAAYA,UACXka,MAEX,MAPA9oC,WAAUgwG,oBAAqBxlG,QAOxBwlG,qBACT11C,cAgBE9rB,kBAAmC,WACnC,QAASA,mBAAkBtC,QAASxpB,WAChC3iB,KAAKmsC,QAAUA,QACfnsC,KAAK2iB,UAAYA,UAqDrB,MA5BA8rB,mBAAkBluC,UAAUi+B,iBAe5B,SAAUgzE,YAAaxnF,UAAWyU,SAAU0qE,UAAWsI,sBAAuB3mF,KAC1E,GAAIie,OAAQ/oC,KACSgoC,MAAQ,GAAI9e,IACjCigF,WAAUtiG,QAAQ,SAAU4X,GAAK,MAAOupB,OAAMxnB,IAAI/B,EAAEhd,KAAMgd,EAAErY,KAAKkB,YACjE,IAAqBoqG,mBAAoB,EACpBC,mBAAqB,SAAUnhE,OAAQ0O,QACxD,GAAqB0yD,mBAAoBF,mBACzC,OAAO,IAAIG,aAAY9oE,MAAMoD,QAASpD,MAAMpmB,UAAW8uF,sBAAuBjhE,OAAQxmB,UAAU5jB,KAAKkB,UAAW0iB,UAAUgX,OAAQ4wE,kBAAmB5pE,MAAOkX,OAAQp0B,IAAK6mF,qBAExJpuG,QAAUouG,mBAAmB,QAElD,OADApuG,SAAQqG,YAAa60B,UACdl7B,QAAQqkE,MAAM4pC,cAElB/iE,qBAGPqjE,uBAAwC,WACxC,QAASA,2BAkBT,MAZAA,wBAAuBvxG,UAAUuwG,SAIjC,SAAUrvG,MACN,MAAIA,QAASouG,iBAAiBP,MAAM7tG,KAGzBykB,SAhBI,QAkBR,MAEJ4rF,0BAEPC,gBAAkB,GAAID,wBACtBD,YAA6B,WAC7B,QAASA,aAAY1lE,QAASxpB,UAAW8uF,sBAAuBjhE,OAAQxmB,UAAWgoF,gBAAiBJ,kBAAmB5pE,MAAOkX,OAAQp0B,IAAK6mF,oBACvI3xG,KAAKmsC,QAAUA,QACfnsC,KAAK2iB,UAAYA,UACjB3iB,KAAKyxG,sBAAwBA,sBAC7BzxG,KAAKwwC,OAASA,OACdxwC,KAAKgqB,UAAYA,UACjBhqB,KAAKgyG,gBAAkBA,gBACvBhyG,KAAK4xG,kBAAoBA,kBACzB5xG,KAAKgoC,MAAQA,MACbhoC,KAAKk/C,OAASA,OACdl/C,KAAK8qB,IAAMA,IACX9qB,KAAK2xG,mBAAqBA,mBAC1B3xG,KAAKiyG,cAAgB,GAAI/oF,KACzBlpB,KAAK28C,aACL38C,KAAKqK,YACLrK,KAAKkyG,WACLlyG,KAAKmyG,WA2aT,MAraAN,aAAYtxG,UAAU6xG,aAItB,SAAUhsG,MACN,GAAqB4lF,QAUrB,MARIA,QADA5lF,OAASpG,KAAKgqB,WAAahqB,KAAKgyG,gBApDrB,OAuDN5rG,eAAgBoB,cACXxH,KAAKyxG,sBAAsBlxF,IAAIna,MAxD9B,QA8DX,KAAM,IAAI9B,OAAM,yDAA2Dw5C,KAAKp4C,UAAUU,MAE9F,OAAO4lF,UAMX6lB,YAAYtxG,UAAU8xG,wBAItB,SAAUzrG,KAEN,IAAK,GADgBF,QAAS1G,KAAKk/C,OAAO/7C,QACjCvB,GAAK,EAAGwX,GAAKxS,IAAImiB,WAAYnnB,GAAKwX,GAAGtX,OAAQF,KAElD,IAAK,GADDunB,WAAY/P,GAAGxX,IACV2X,GAAK,EAAGQ,GAAKoP,UAAU6U,OAAQzkB,GAAKQ,GAAGjY,OAAQyX,KAAM,CAC1D,GAAIhX,OAAQwX,GAAGR,IACM+4F,MAAQnpF,UAAUA,UAAU+1B,OAAO38C,MAAMu6C,cAC9D,IAAIw1D,MAAO,CACP,GAAqBC,OAAkB,UAAVD,KAC7B5rG,QAAOK,MACHurG,MAAOA,MACPC,MAAOA,MACP59F,YAAgCnR,QAASxD,KAAKgqB,UAAW1mB,MAAOf,MAAMe,UAKtF,MAAOoD,SAOXmrG,YAAYtxG,UAAUqJ,SAKtB,SAAU+yC,UAAWriB,UACjBt6B,KAAK28C,UAAYA,UACjBn2C,iBAAiBxG,KAAMs6B,WAO3Bu3E,YAAYtxG,UAAUqnE,MAKtB,SAAU4pC,YAAagB,kBACnB,GAAIzpE,OAAQ/oC,SACa,KAArBwyG,mBAA+BA,qBACnCxyG,KAAKqK,SAASxD,QAAQ,SAAU81B,OAAS,MAAOA,OAAMirC,MAAM4pC,YAAagB,mBACzE,IAAqBC,YAAavsF,SAzHnB,QAyH8C1F,IAAIoM,WAAW2L,WAAWtM,eAClEymF,aAAe,CAgBpC,IAfA1yG,KAAKkyG,QAAQrrG,QAAQ,SAAU8N,YAC3B,GAAIyE,IAAK2vB,MAAM4pE,2BAA2Bh+F,YAAa3K,WAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC/FyzB,UAAY,GAAK27E,eACjBE,aAAepvG,UAAYulC,MAAM/e,UAAY+e,MAAQgpE,gBACtEx4F,GAAKsf,uBAAuB+5E,aAAc1sF,SAAS6iB,MAAMqpE,aAAa5uG,UAAWF,MAAOyzB,UAAWqC,YAAY22E,SAAU5qF,MAAQ5L,GAAG4L,MAAO6T,YAAczf,GAAGyf,WAChK7T,OAAMpe,KAAK,GAAIqzB,qBAAoBpB,cACnCy5E,UAAU1rG,KAAK/E,MAAMywG,UAAWttF,MAAMvf,IAAI,SAAU+f,MAAQ,MAAOD,oCAAmCC,KAAM3b,iBAEhHhK,KAAKmyG,QAAQtrG,QAAQ,SAAUuS,IAC3B,GAAIpP,YAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC5CyzB,UAAY,GAAK27E,eACjBE,aAAepvG,UAAYulC,MAAM/e,UAAY+e,MAAQgpE,gBACtE5sF,MAAQwR,qBAAqBi8E,aAAc1sF,SAAS6iB,MAAMqpE,aAAa5uG,UAAWF,MAAOyzB,WAAW5R,KACxGstF,WAAU1rG,KAAK/E,MAAMywG,UAAWttF,MAAMvf,IAAI,SAAU+f,MAAQ,MAAOD,oCAAmCC,KAAM3b,iBAE5GhK,KAAKk/C,OAAOp9C,OAAQ,CAEpB,IAAK,GADgB+wG,qBAAkB3uG,GAC9BtC,GAAK,EAAGwX,GAAKpZ,KAAKk/C,OAAQt9C,GAAKwX,GAAGtX,OAAQF,KAAM,CACrD,GAAI0wG,OAAQl5F,GAAGxX,IACX2X,GAAKvZ,KAAK2yG,2BAA2BL,MAAM39F,YAAanR,QAAU+V,GAAG/V,QAASF,MAAQiW,GAAGjW,MACxEyzB,UAAY,GAAK27E,eACjBE,aAAepvG,UAAYxD,KAAKgqB,UAAYhqB,KAAO+xG,gBAGpEh4F,GAAK8e,uBAAuB+5E,aAAc1sF,SAASlmB,KAAKoyG,aAAa5uG,UAAWF,MAAOyzB,UAAWqC,YAAYC,WAAYlU,MAAQpL,GAAGoL,MAAO6T,YAAcjf,GAAGif,WACjK,IAAoB,GAAhB7T,MAAMrjB,OAAa,CACnB,GAAqBgxG,aAAcR,MAAMC,MAAQv5E,YAAch5B,KAAK8qB,IAAI1E,WAAWksF,MAAMA,OAAO9lF,QAAQwM,aACxG65E,iBAAkBA,gBAAkBA,gBAAgBzvD,IAAI0vD,aAAeA,aAG3ED,kBACAJ,WAAa,GAAI7qF,QAAOirF,gBAAiBJ,aAGjD,GAAqBM,UAAW,SAAWvB,YAAc,IAAMxxG,KAAK4xG,kBAC/CoB,YAAc,GAAIthB,qBAAoBqhB,YAAcN,UAEzE,OADAD,kBAAiBzrG,KAAKisG,aACfR,kBAOXX,YAAYtxG,UAAUm7C,eAKtB,SAAU90C,IAAKpD,SACX,GAAIulC,OAAQ/oC,IAC2C4G,KAAS,MACA,IAC1D4M,YAAY3M,QAAQ,SAAUmf,MAChC,MAAO+iB,OAAMmpE,QAAQnrG,MAAOvD,QAASulC,MAAM/e,UAAW1mB,MAAO0iB,KAAMhc,WAAYpD,IAAIoD,gBAQ3F6nG,YAAYtxG,UAAUq8C,sBAKtB,SAAUh2C,IAAKpD,SAKX,GAJAxD,KAAKizG,uBAAuBrsG,KAIxB5G,KAAKmsC,QAAQ+mE,sBAAuB,CAKpC,GAAqBh0D,QAASl/C,KAAKqyG,wBAAwBzrG,KACtCusG,aAAenzG,KAAK2xG,mBAAmB3xG,KAAMk/C,OAClEl/C,MAAKqK,SAAStD,KAAKosG,cACnBA,aAAavpG,SAAShD,IAAI+1C,UAAW/1C,IAAIyD,YAQjDwnG,YAAYtxG,UAAUm8C,aAKtB,SAAU91C,IAAKpD,SACX,GAAIulC,OAAQ/oC,IACZA,MAAKizG,uBAAuBrsG,IAI5BA,KAAIo3B,OAAOn3B,QAAQ,SAAUg0B,UACzBkO,MAAMmpE,QAAQnrG,MAAOvD,QAASulC,MAAM/e,UAAW1mB,MAAOu3B,SAASv3B,MAAO0G,WAAY6wB,SAAS7wB,eAE/FxD,iBAAiBxG,KAAM4G,IAAIyD,WAM/BwnG,YAAYtxG,UAAU0yG,uBAItB,SAAUrsG,KACN,GAAImiC,OAAQ/oC,IACZ4G,KAAImiB,WAAWliB,QAAQ,SAAUi0B,QAAUiO,MAAMoU,eAAeriB,UAChEl0B,IAAI61C,WAAW51C,QAAQ,SAAUU,KAC7B,GAAqB6rG,eAAiC,IAKlDA,eADA7rG,IAAIjE,OAASiE,IAAIjE,MAAMmE,YAAcshC,MAAMoD,QAAQ+mE,sBACnC3rG,IAAIjE,MAAMmE,WAAWH,UAGrBklF,gBAAgBrzC,QAEpCpQ,MAAMkpE,cAAczxF,IAAIjZ,IAAI9F,KAAM2xG,iBAEtCxsG,IAAI41C,QAAQ31C,QAAQ,SAAUwsG,WAC1BtqE,MAAMopE,QAAQprG,MAAOvD,QAASulC,MAAM/e,UAAW1mB,MAAO+vG,UAAUr3D,QAAShyC,WAAYqpG,UAAUrpG,gBAOvG6nG,YAAYtxG,UAAU48C,eAItB,SAAUriB,QACN,GAAIiO,OAAQ/oC,KACSilF,QAAUnqD,OAAO3R,UAAU/iB,KAAKkB,SACrDwzB,QAAOkD,OAAOn3B,QAAQ,SAAUtE,OAC5B,MAAOwmC,OAAMmpE,QAAQnrG,MAAOvD,QAASulC,MAAM/e,UAAW1mB,MAAOf,MAAMe,MAAO0G,WAAYzH,MAAMyH,eAK5FhK,KAAKmsC,QAAQ+mE,wBACbp4E,OAAOmiB,eAAep2C,QAAQ,SAAUg0B,UACpC,MAAOkO,OAAMmpE,QAAQnrG,MAAOvD,QAASyhF,QAAS3hF,MAAOu3B,SAASv3B,MAAO0G,WAAY6wB,SAAS7wB,eAE9F8wB,OAAOoiB,WAAWr2C,QAAQ,SAAUysG,cAChC,MAAOvqE,OAAMopE,QAAQprG,MACjBvD,QAASyhF,QACT3hF,MAAOgwG,aAAat3D,QACpBhyC,WAAYspG,aAAatpG,iBASzC6nG,YAAYtxG,UAAUuwG,SAItB,SAAUrvG,MACN,GAAIA,MAAQouG,iBAAiBP,MAAM7tG,KAC/B,MAAOykB,UAASlmB,KAAKoyG,aAAa5lB,gBAAgBrzC,SAEtD,KAAK,GAAqBo6D,aAAcvzG,KAAMuzG,YAAaA,YAAcA,YAAY/iE,OAAQ,CACzF,GAAqB4iE,mBAAgB,EAGrC,IAAqB,OADrBA,cAAgBG,YAAYtB,cAAc1xF,IAAI9e,OACnB,CAEO8xG,YAAY52D,UAAUj+B,KAAK,SAAU80F,QAAU,MAAOA,QAAO/xG,OAASA,SAEhG2xG,cAAgB5mB,gBAAgBrzC,SAGxC,GAAqB,MAAjBi6D,cACA,MAAOltF,UAASlmB,KAAKoyG,aAAagB,gBAG1C,MAAO,OAMXvB,YAAYtxG,UAAUkzG,cAItB,SAAUhyG,MACN,GAAqBykG,MAAOlmG,KAAKgoC,MAAMznB,IAAI9e,KAC3C,KAAKykG,KACD,KAAM,IAAI5hG,OAAM,sCAAwC7C,KAAO,mBAAqBzB,KAAKgqB,UAE7F,OAAOhqB,MAAKoyG,aAAalM,OAM7B2L,YAAYtxG,UAAUoyG,2BAItB,SAAUh+F,YACN,GAAIo0B,OAAQ/oC,IACZ,QACIgK,WAAY2K,WAAW3K,WACvBxG,QAASmR,WAAWnR,QACpBF,MAAO6zB,gCACHC,4BAA6B,SAAUC,UACnC,MAAO,UAAU11B,MACb,GAAqBqN,KAAM2X,WAAWhlB,KAGtC,OAAOonC,OAAMoD,QAAQ+mE,sBAAwBlkG,IAAMA,IAAIqpB,KAAKpM,gBAGpEqL,0BAA2B,SAAUC,MACjC,MAAO,UAAUx1B,QACb,GAAqBgwF,SAAUx6D,KAAK3xB,IAAI,SAAUsU,EAAGnP,GACjD,OACIkJ,IAAKiG,EAAEjG,IACP3Q,MAAOvB,OAAOgJ,GACdic,OAAQ9M,EAAE8M,UAGGphB,IAAMihB,WAAWkrE,QAGtC,OAAOhpD,OAAMoD,QAAQ+mE,sBAAwBttG,IAAMA,IAAIyyB,KAAKpM,gBAGpEuL,oBAAqB,SAAU/1B,KAAM41B,UACjC,MAAO,UAAU11B,MAMb,MAFIukB,UAD4B6iB,MAAMoD,QAAQ+mE,sBACjCnqE,MAAM0qE,cAAchyG,MACpBsnC,MAAMqpE,aAAa5lB,gBAAgBrzC,UAChCo1C,WAAW,YAAa5sF,SAGjDgT,WAAWrR,SAQtBuuG,YAAYtxG,UAAU88C,eAKtB,SAAUz2C,IAAKpD,WAMfquG,YAAYtxG,UAAUi7C,UAKtB,SAAU50C,IAAKpD,WAMfquG,YAAYtxG,UAAUw8C,uBAKtB,SAAUn2C,IAAKpD,WAMfquG,YAAYtxG,UAAU87C,eAKtB,SAAUz1C,IAAKpD,WAMfquG,YAAYtxG,UAAUg8C,cAKtB,SAAU31C,IAAKpD,WAMfquG,YAAYtxG,UAAU27C,WAKtB,SAAUt1C,IAAKpD,WAMfquG,YAAYtxG,UAAUu7C,qBAKtB,SAAUl1C,IAAKpD,WAMfquG,YAAYtxG,UAAUq7C,UAKtB,SAAUh1C,IAAKpD,WACRquG,eAcP/1E,aAAe,QACfC,WAAa,QAEb23E,kBAAmC,WACnC,QAASA,mBAAkBC,aAAcC,iBACrC5zG,KAAK2zG,aAAeA,aACpB3zG,KAAK4zG,gBAAkBA,gBAE3B,MAAOF,sBAEPnlE,aAA8B,WAC9B,QAASA,cAAaimB,YAClBx0D,KAAKw0D,WAAaA,WAiDtB,MAvCAjmB,cAAahuC,UAAUi+B,iBAQvB,SAAUb,UAAW3T,UAAWyU,SAAU6f,OAAQ6qD,WAC9C,GAAIpgE,OAAQ/oC,KACS0xG,kBAAoB,EACpBl1E,eAAiBD,mBAAmBkC,UACpCo1E,2BAA0C,EAC/D,KAAK7pF,UAAUgX,OAAQ,CACnB,GAAqB8yE,YAAgC9pF,UAAmB,SACnD+pF,mBACjBD,YAAWj1D,YAAci1D,WAAWj1D,WAAW/8C,QAC/CiyG,iBAAiBhtG,KAAK,GAAIggB,iBAAgB,YAAa8D,wBAAwB8S,UAAWm2E,WAAWj1D,aAAa,GAEtH,IAAqBm1D,oBAAqB9tF,SAASle,iBAAiBgiB,UAAU5jB,KAAKkB,WACnFusG,wBAA4CG,mBAAwB,KACpEr2E,UAAUhE,WAAW5yB,KAAKitG,mBACrBxzF,IAAI4F,WAAWmH,YAAYgzD,qBAAqB/zD,QAAQ,GAAI1F,iBACzD,GAAIC,iBAAgB,gBAAiBc,QAAQisF,WAAWr1D,gBAAgB,GACxE,GAAI13B,iBAAgB,SAAUu3B,QAAQ,GACtC,GAAIv3B,iBAAgB,OAAQ,GAAID,gBAAeitF,mBAAmB,QAErEx7E,WAAWhS,WAAWgH,YAAYizD,gBAAiBhoD,aAAaC,MAAOD,aAAamN,YAE7F,GAAqBgsE,oBAAqB,SAAUnhE,QAChD,GAAqBohE,mBAAoBF,mBACzC,OAAO,IAAIuC,eAAclrE,MAAMyrB,WAAY72B,UAAW6S,OAAQxmB,UAAW4nF,kBAAmBzI,UAAW3sE,eAAgBm1E,qBAEtGpuG,QAAUouG,mBAAmB,KAGlD,OAFApuG,SAAQqG,YAAa60B,WACpBrlB,GAAKukB,UAAUhE,YAAY5yB,KAAK/E,MAAMoX,GAAI7V,QAAQqkE,SAC5C,GAAI8rC,mBAAkBnwG,QAAQwvG,SAAUc,uBAC/C,IAAIz6F,KAEDm1B,gBAEP2lE,UAAYhuF,SAAS,MACrBiW,SAAWjW,SAAS,MACpBgW,UAAYhW,SAAS,OACrBiuF,SAAWjuF,SAAS,OACpBkuF,eAAiBluF,SAAS,MAC1BmuF,kBAAoBnuF,SAAS,MAC7B+tF,cAA+B,WAC/B,QAASpC,aAAYlvF,UAAWgb,UAAW6S,OAAQxmB,UAAW4nF,kBAAmBzI,UAAW3sE,eAAgBm1E,oBACxG3xG,KAAK2iB,UAAYA,UACjB3iB,KAAK29B,UAAYA,UACjB39B,KAAKwwC,OAASA,OACdxwC,KAAKgqB,UAAYA,UACjBhqB,KAAK4xG,kBAAoBA,kBACzB5xG,KAAKmpG,UAAYA,UACjBnpG,KAAKw8B,eAAiBA,eACtBx8B,KAAK2xG,mBAAqBA,mBAC1B3xG,KAAK6J,SACL7J,KAAKs0G,oBAAsB9zG,OAAOC,OAAO,MACzCT,KAAKu0G,eAAiB/zG,OAAOC,OAAO,MACpCT,KAAK28C,aACL38C,KAAKqK,YAILrK,KAAK8H,SAAW9H,KAAK4xG,kBAAoB,EACrC3lF,aACExF,eAAekX,UAAUvX,WAAWpmB,KAAKgqB,UAAU5jB,KAAKkB,YAC9DtH,KAAK+yG,SAAWlrG,cAAc7H,KAAKgqB,UAAU5jB,KAAKkB,UAAWtH,KAAK4xG,mBAi+BtE,MA19BAC,aAAYtxG,UAAUqJ,SAKtB,SAAU+yC,UAAWriB,UACjB,GAAIyO,OAAQ/oC,IAUZ,IATAA,KAAK28C,UAAYA,UAEZ38C,KAAKwwC,QACNxwC,KAAKmpG,UAAUtiG,QAAQ,SAAUq/F,MACzBA,KAAKpwD,OACL/M,MAAMurE,oBAAoBpO,KAAKzkG,MAAQsnC,MAAMyrE,YAAY,KAAMtO,UAItElmG,KAAKwwC,OAAQ,CACd,GAAqBikE,YAAa13E,mBAAmB/8B,KAAKw8B,eAC1Dx8B,MAAKgqB,UAAUE,YAAYrjB,QAAQ,SAAUsjB,MAAOuqF,YAEhD,GAAqBrqF,SAAUqqF,WAAa,EACvB5M,YAAc39E,MAAM8qB,MAAQ,EAAgB,EAC5C/pB,MAAQ,UAAgCmS,4BAA4Bo3E,WAAYpqF,QAASF,MAAM8qB,MACpHlM,OAAMl/B,MAAM9C,KAAK,WACb,OACIiD,WAAY,KACZ2qG,UAAWzpF,MACX0pF,QAASxuF,WAAWmH,YAAYyyD,UAAUxzD,QACtC3E,QAAQqD,OAAQrD,QAAQwC,SACxB,GAAIvD,iBAAgB,GAAIC,iBAAgBoD,MAAMyhE,aAAc/jE,QAAQigF,cAAc,YAMtGthG,iBAAiBxG,KAAMs6B,UACnBt6B,KAAKwwC,SAA+B,IAApBlW,SAASx4B,QAAgBu4B,wBAAwBC,YAEjEt6B,KAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAY,KACZ2qG,UAAW,EACXC,QAASxuF,WAAWmH,YAAYsyD,WAAWrzD,QACvC3E,QAAQ,GAAe+E,UAAWA,UAAW/E,QAAQ,SAUzEgqF,YAAYtxG,UAAUqnE,MAItB,SAAU4qC,sBACmB,KAArBA,mBAA+BA,qBACnCxyG,KAAKqK,SAASxD,QAAQ,SAAU81B,OAAS,MAAOA,OAAMirC,MAAM4qC,mBAC5D,IAAIp5F,IAAKpZ,KAAK60G,yBAA0BC,oBAAsB17F,GAAG07F,oBAAqBC,sBAAwB37F,GAAG27F,sBAAuBC,aAAe57F,GAAG47F,aACrIC,iBAAmBj1G,KAAKk1G,gBAAgBJ,qBACxCK,mBAAqBn1G,KAAKk1G,gBAAgBH,uBAC1CK,UAAY,CAC5Bp1G,MAAKwwC,QAAUxwC,KAAKgqB,UAAU4rB,kBAAoBH,wBAAwBC,SAC3E0/D,WAAa,EAEjB,IAAqBpC,aAAc,GAAIthB,qBAAoB1xF,KAAK+yG,UAAW,GAAI/mF,SAA2BkoF,UAAe,QAAM,GAAIznF,iBAAgBrG,WAAWmH,YAAYoyD,SAASnzD,QAC3K3E,QAAQutF,WACRzuF,WAAWquF,cACXG,mBACAF,qBACE1uF,WAAWgH,YAAYkzD,gBAA4C,IAA3BzgF,KAAK4xG,mBAA2Bp5E,aAAamN,aAE/F,OADA6sE,kBAAiBzrG,KAAKisG,aACfR,kBAMXX,YAAYtxG,UAAU20G,gBAItB,SAAUG,aACN,GAAqBC,SACrB,IAAID,YAAYvzG,OAAS,EAAG,CACxB,GAAqByzG,cAChBv1G,KAAKgqB,UAAUgX,QAAU9b,iBAAiBmwF,aAAahhF,IAAuB8/E,SAAc,OAC7FoB,SAASxuG,KAAKotG,SAAS3zF,IAAI2b,SAASvM,KAAK,cAAc2I,WAAWv4B,KAAK8H,WAE3EwtG,SAAWjuF,IACP,GAAI2E,SAA2BkQ,UAAe,KAAGxP,eACjD,GAAIV,SAA2BmQ,SAAc,KAAGzP,gBACjD6oF,SAAS3sG,OAAOysG,aAAc3oF,mBAGjC4oF,UAAW1oF,SAEf,OAAO0oF,WAOXzD,YAAYtxG,UAAU88C,eAKtB,SAAUz2C,IAAKpD,SAEXxD,KAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChB2qG,UAAW,EACXC,QAASxuF,WAAWmH,YAAY+yD,cAAc9zD,QAC1C3E,QAAQjhB,IAAI20C,gBAAiB1zB,QAAQjhB,IAAIxB,aAUzDysG,YAAYtxG,UAAUi7C,UAKtB,SAAU50C,IAAKpD,SAGXxD,KAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChB2qG,UAAW,EACXC,QAASxuF,WAAWmH,YAAYuyD,SAAStzD,QACrC3E,SANsB,GAOtBA,QAAQjhB,IAAI20C,gBACZ50B,YAAYkB,QAAQjhB,IAAItD,eAUxCuuG,YAAYtxG,UAAUm7C,eAKtB,SAAU90C,IAAKpD,SACX,GAAIulC,OAAQ/oC,KACSi8B,UAAYj8B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,KACjC,IAAqByuG,eAAkC5uG,IAAS,MAC3C6uG,MAA0BD,cAAiB,IAC3CE,0BAA4BD,MAAMjiG,YAAY5N,IAAI,SAAUogB,KAAM2vF,cACnF,MAAO5sE,OAAM6sE,6BAA8B35E,UAAWA,UAAW05E,aAAcA,aAAc3rG,WAAYpD,IAAIoD,WAAYxG,QAAS2wG,SAAU7wG,MAAO0iB,SAIlI6vF,WAAa55E,SAClCj8B,MAAK6J,MAAMoyB,WAAa,WACpB,OACIjyB,WAAYpD,IAAIoD,WAChB2qG,UAAW,EACXC,QAASxuF,WAAWmH,YAAYuyD,SAAStzD,QACrC3E,QAAQguF,YACRhuF,QAAQjhB,IAAI20C,gBACZ50B,WAAW8uF,MAAMz7C,QAAQp0D,IAAI,SAAUd,GAAK,MAAO+iB,SAAQ/iB,QAE/DgxG,eAAgBJ,6BAS5B7D,YAAYtxG,UAAUq8C,sBAKtB,SAAUh2C,IAAKpD,SACX,GAAIulC,OAAQ/oC,KACSi8B,UAAYj8B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,KACjC,IAAIqS,IAAKpZ,KAAK+1G,wBAAwB95E,UAAWr1B,KAAMskB,MAAQ9R,GAAG8R,MAAO8qF,iBAAmB58F,GAAG48F,iBAAkB94D,WAAa9jC,GAAG8jC,WAC5Gi2D,aAAenzG,KAAK2xG,mBAAmB3xG,KAC5DA,MAAKqK,SAAStD,KAAKosG,cACnBA,aAAavpG,SAAShD,IAAI+1C,UAAW/1C,IAAIyD,SACzC,IAAqB4rG,YAAaj2G,KAAK6J,MAAM/H,OAASm6B,UAAY,CAKlEj8B,MAAK6J,MAAMoyB,WAAa,WACpB,OACIjyB,WAAYpD,IAAIoD,WAChB2qG,UAAW,EAAsBzpF,MACjC0pF,QAASxuF,WAAWmH,YAAYsyD,WAAWrzD,QACvC3E,QAAQqD,OACR8qF,iBACAnuF,QAAQjhB,IAAI20C,gBACZ1zB,QAAQouF,YACRltE,MAAMmtE,4BAA4Bj6E,UAAWihB,YAC7Ch3B,SAASitF,aAAaJ,eAUtClB,YAAYtxG,UAAUm8C,aAKtB,SAAU91C,IAAKpD,SACX,GAAIulC,OAAQ/oC,KACSi8B,UAAYj8B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,KAEjC,IAAqBqoG,QAAS7iG,cAAc3F,IAAInF,MAAQ,KAAOmF,IAAInF,KAC/D2X,GAAKpZ,KAAK+1G,wBAAwB95E,UAAWr1B,KAAMskB,MAAQ9R,GAAG8R,MAAOirF,WAAa/8F,GAAG+8F,WAAYH,iBAAmB58F,GAAG48F,iBAAkBI,gBAAkBh9F,GAAGi9F,aAAcn5D,WAAa9jC,GAAG8jC,WAC3Ko5D,aACAZ,6BACAa,aACrB,IAAInH,OAAQ,CACR,GAAqBiH,cAAezvG,IAAIo3B,OACnCp4B,IAAI,SAAUi1B,UACf,OACIr3B,QAA0B,SAC1Bq3B,SAAUA,SACVC,OAAyB,QAG5BlyB,OAAOwtG,gBACRC,cAAav0G,SACb4zG,0BACIW,aAAazwG,IAAI,SAAUqvD,YAAa0gD,cACpC,MAAO5sE,OAAM6sE,6BACTpyG,QAASyxD,YAAYzxD,QACrBy4B,UAAWA,UACX05E,aAAcA,aACd3rG,WAAYirD,YAAYp6B,SAAS7wB,WACjC1G,MAAO2xD,YAAYp6B,SAASv3B,UAGxCgzG,UAAYD,aAAazwG,IAAI,SAAUqvD,aAAe,MAAOr6B,mBAAkBq6B,YAAYp6B,SAAUo6B,YAAYn6B,WAErHy7E,WAAaJ,WAAWvwG,IAAI,SAAUwT,IAClC,GAAIvF,QAASuF,GAAG,GAAIi9B,UAAYj9B,GAAG,EACnC,OAAOuN,aAAYkB,QAAQhU,QAASgU,QAAQwuB,eAGpD7vC,iBAAiBxG,KAAM4G,IAAIyD,SAC3B,IAAqB4rG,YAAaj2G,KAAK6J,MAAM/H,OAASm6B,UAAY,EAC7Cu6E,QAAU5vG,IAAImiB,WAAWrK,KAAK,SAAUoc,QAAU,MAAOA,QAAO3R,UAAUE,cAC1EotF,iBAAoC,UACpCC,SAA4B,SAC7CF,WACAE,SAAW12G,KAAK29B,UAAUvX,WAAWowF,QAAQrtF,UAAUg2B,mBACvDs3D,iBAAmBz2G,KAAK29B,UAAUvX,WAAWowF,QAAQrtF,UAAUi2B,cAInE,IAAqBy2D,YAAa55E,SAClCj8B,MAAK6J,MAAMoyB,WAAa,WACpB,OACIjyB,WAAYpD,IAAIoD,WAChB2qG,UAAW,EAAsBzpF,MACjC0pF,QAASxuF,WAAWmH,YAAYqyD,YAAYpzD,QACxC3E,QAAQguF,YACRhuF,QAAQqD,OACR8qF,iBACAnuF,QAAQjhB,IAAI20C,gBACZ1zB,QAAQouF,YACRpuF,QAAQunF,QACRA,OAAS/zE,cAAcz0B,KAAOgmB,UAC9B0pF,UAAUx0G,OAAS6kB,WAAW2vF,WAAa1pF,UAC3C2pF,WAAWz0G,OAAS6kB,WAAW4vF,YAAc3pF,UAC7Cmc,MAAMmtE,4BAA4Bj6E,UAAWihB,YAC7Cw5D,SACAD,mBAEJX,eAAgBJ,6BAS5B7D,YAAYtxG,UAAUw1G,wBAKtB,SAAU95E,UAAWr1B,KACjB,GAAImiC,OAAQ/oC,KACSkrB,MAAQ,CACzBtkB,KAAI6zB,mBACJvP,OAAS,SAEb,IAAqBirF,YAAa,GAAIjtF,IACtCtiB,KAAI41C,QAAQ31C,QAAQ,SAAUyoG,OAC1B,GAAIl2F,IAAK6jB,0BAA0BqyE,MAAO,MAAO7tG,KAAO2X,GAAG3X,KAAMoS,OAASuF,GAAGvF,MAC7EsiG,YAAW31F,IAAIgd,qBAAqB3pB,OAAQpS,OAAQoS,OAAQpS,SAEhEmF,IAAImiB,WAAWliB,QAAQ,SAAUi0B,QAC7BA,OAAOoiB,WAAWr2C,QAAQ,SAAUyoG,OAChC,GAAIl2F,IAAK6jB,0BAA0BqyE,MAAOx0E,QAASr5B,KAAO2X,GAAG3X,KAAMoS,OAASuF,GAAGvF,MAC/EsiG,YAAW31F,IAAIgd,qBAAqB3pB,OAAQpS,OAAQoS,OAAQpS,UAGpE,IAAqB40G,iBACAn5D,aACrBl9C,MAAK22G,uCAAuC/vG,IAAImiB,YAChDniB,IAAI6hB,UAAU5hB,QAAQ,SAAUokB,YAAaU;0DACzC,GAAqBmP,YAA0B,GAC1B87E,aAA4B,EAOjD,IANAhwG,IAAImiB,WAAWliB,QAAQ,SAAUgwG,YAAa9rG,GACtC8rG,YAAY1tF,UAAU/iB,KAAKkB,YAAcc,eAAe6iB,YAAYtlB,SACpEm1B,OAAS+7E,YACTD,SAAW7rG,KAGf+vB,OAAQ,CACR,GAAI1hB,IAAK2vB,MAAM+tE,gBAAgB7rF,YAAa6P,OAAQ87E,SAAU36E,UAAWr1B,IAAI61C,WAAY71C,IAAI81B,aAAcy5E,WAA+BptE,MAAMvM,eAAejc,IAAqB,MAAW61F,gBAAkBh9F,GAAGi9F,aAAcU,cAAgB39F,GAAG8jC,UACrPm5D,cAAatvG,KAAK/E,MAAMq0G,aAAcD,iBACtCl5D,WAAWn2C,KAAK/E,MAAMk7C,WAAY65D,mBAGlChuE,OAAMiuE,eAAe/rF,YAAarkB,IAAI81B,eAG9C,IAAqBu6E,mBAoCrB,OAnCArwG,KAAI81B,aAAa71B,QAAQ,SAAU2E,OAC/B,GAAqB0hF,eAA6B,EAC9C9kF,gBAAeoD,MAAMlI,SACrBylC,MAAMpmB,UAAUC,yBAAyB2K,YAAYmT,YACrDwsD,UAAY,EAEP9kF,eAAeoD,MAAMlI,SAC1BylC,MAAMpmB,UAAUC,yBAAyB2K,YAAYuT,kBACrDosD,UAAY,EAEP9kF,eAAeoD,MAAMlI,SAC1BylC,MAAMpmB,UAAUC,yBAAyB2K,YAAYqT,eACrDssD,UAAY,GAEC,MAAbA,WACA+pB,gBAAgBlwG,KAAK4f,YAAYkB,QAAQrc,MAAM6e,SAAUxC,QAAQqlE,gBAGzEtmF,IAAI61C,WAAW51C,QAAQ,SAAUU,KAC7B,GAAqB2lF,eAA6B,EAC7C3lF,KAAIjE,MAGA8E,eAAeb,IAAIjE,SACxBylC,MAAMpmB,UAAUC,yBAAyB2K,YAAYqT,eACrDssD,UAAY,GAJZA,UAAY,EAMC,MAAbA,YACAnkD,MAAMwrE,eAAehtG,IAAI9F,MAAQw6B,UACjCg7E,gBAAgBlwG,KAAK4f,YAAYkB,QAAQtgB,IAAI9F,MAAOomB,QAAQqlE,iBAGpEtmF,IAAI41C,QAAQ31C,QAAQ,SAAUwsG,WAC1Bn2D,WAAWn2C,MAAOvD,QAAS2wG,SAAUj3E,SAAUm2E,UAAWv4E,OAAyB,UAGnF5P,MAAOA,MACPirF,WAAY1yG,MAAMwgB,KAAKkyF,WAAWp0G,UAClCi0G,iBAAkBiB,gBAAgBn1G,OAAS6kB,WAAWswF,iBAAmBrqF,UACzEypF,aAAcA,aACdn5D,WAAYA,aAcpB20D,YAAYtxG,UAAUu2G,gBAWtB,SAAU7rF,YAAa6P,OAAQpQ,eAAgBwsF,iBAAkB7iB,KAAM33D,aAAcy5E,WAAY74E,UAC7F,GAAIyL,OAAQ/oC,KACSi8B,UAAYj8B,KAAK6J,MAAM/H,MAE5C9B,MAAK6J,MAAM9C,KAAsB,MACjC+zB,OAAO3R,UAAUwB,QAAQ9jB,QAAQ,SAAUsjB,MAAOuqF,YAC9C,GAAqBrqF,SAAUyQ,OAAOvQ,oBAAsBmqF,WACvCxpF,MAAQ,SAAkCmS,4BAA4BC,SAAUjT,QAASF,MAAM8qB,OAC/F6yD,YAAc39E,MAAM8qB,MAAQ,EAAgB,CACjElM,OAAMl/B,MAAM9C,KAAK,WACb,OACIiD,WAAY8wB,OAAO9wB,WACnB2qG,UAAWzpF,MACX0pF,QAASxuF,WAAWmH,YAAYyyD,UAAUxzD,QACtC3E,QAAQqD,OAAQrD,QAAQwC,SACxB,GAAIvD,iBAAgB,GAAIC,iBAAgBoD,MAAMyhE,aAAc/jE,QAAQigF,cAAc,WASlG,IAAqBmO,YAAaj2G,KAAK6J,MAAM/H,OAASm6B,UAAY,EAC9D7iB,GAAKpZ,KAAKm3G,0BAA0BlsF,YAAayR,cAAexR,MAAQ9R,GAAG8R,MAAO+rF,gBAAkB79F,GAAG69F,gBAAiB1rF,aAAenS,GAAGmS,aAAcC,SAAWpS,GAAGoS,QAC1K6oE,MAAKxtF,QAAQ,SAAUU,KACfA,IAAIjE,OAAS8E,eAAeb,IAAIjE,SAAW8E,eAAe6iB,YAAYtlB,SACtEojC,MAAMwrE,eAAehtG,IAAI9F,MAAQw6B,UACjCg7E,gBAAgBlwG,KAAK4f,YAAYkB,QAAQtgB,IAAI9F,MAAOomB,QAAQ,SAGhEiT,OAAO3R,UAAUE,cACjB6B,OAAS,MAEb,IAAqBorF,WAAYx7E,OAAOkD,OAAOp4B,IAAI,SAAUi1B,SAAUoiC,YACnE,GAAqBm6C,UAAWzwF,YAAYkB,QAAQo1C,YAAap1C,QAAQgT,SAASiiB,gBAElF,OAAO,IAAI/1B,iBAAgB8T,SAASiiB,cAAes6D,UAAU,KAE5Cb,cACA7xB,QAAU5pD,OAAO3R,SACtC3oB,QAAO+2B,KAAKmtD,QAAQloC,SAAS31C,QAAQ,SAAU6sB,UAC3C,GAAqB2iB,WAAYquC,QAAQloC,QAAQ9oB,SAC7CyiF,YAAW9hF,IAAIgiB,YAEfkgE,WAAWxvG,KAAK,GAAIggB,iBAAgB2M,SAAU7L,QAAQwuB,YAAY,KAG1E,IAAqBghE,gCACjBv8E,OAAOkD,OAAOl8B,SAAmB,OAARopB,OAAuD,KAChFmsF,2BACIv8E,OAAOkD,OAAOp4B,IAAI,SAAUrD,MAAOozG,cAC/B,MAAO5sE,OAAM6sE,6BACT35E,UAAWA,UACX05E,aAAcA,aACd3rG,WAAYzH,MAAMyH,WAClBxG,QAAS2wG,SACT7wG,MAAOf,MAAMe,UAI7B,IAAqBg0G,gBAAiBlxF,WAAWmH,YAAY8yD,WAAW7zD,QAAQ2P,SAAUtU,QAAQoU,aAC7Eo6E,aAAev7E,OAAOmiB,eAAer3C,IAAI,SAAUi1B,UACpE,OACIr3B,QAAS8zG,eACTx8E,OAAQA,OACRD,SAAUA,YAGGqiB,WAAapiB,OAAOoiB,WAAWt3C,IAAI,SAAU0tG,cAC9D,OACI9vG,QAAS8zG,eACTp6E,SAAUo2E,aAAcx4E,OAAQA,UAKnB+6E,WAAa55E,SAmBlC,OAlBAj8B,MAAK6J,MAAMoyB,WAAa,WACpB,OACIjyB,WAAY8wB,OAAO9wB,WACnB2qG,UAAW,MAA4BzpF,MACvC0pF,QAASxuF,WAAWmH,YAAYwyD,cAAcvzD,QAC1C3E,QAAQguF,YACRhuF,QAAQqD,OACR+rF,gBAAgBn1G,OAAS6kB,WAAWswF,iBAAmBrqF,UACvD/E,QAAQouF,YACR1qF,aACAC,SACA8qF,UAAUx0G,OAAS,GAAIglB,gBAAewvF,WAAa1pF,UACnD2pF,WAAWz0G,OAAS,GAAIglB,gBAAeyvF,YAAc3pF,YAEzD2qF,iBAAkBF,2BAClBluF,UAAW2R,OAAO3R,UAAU/iB,QAG3BiwG,aAAcA,aAAcn5D,WAAYA,aAOrD20D,YAAYtxG,UAAUy2G,eAKtB,SAAU/rF,YAAayR,cACnB18B,KAAKw3G,iBAAiBx3G,KAAKm3G,0BAA0BlsF,YAAayR,gBAMtEm1E,YAAYtxG,UAAUo2G,uCAItB,SAAU5tF,YACN,GAAqB0uF,kBAAmB1uF,WAAWrK,KAAK,SAAUoc,QAAU,MAAOA,QAAO3R,UAAUE,aACpG,IAAIouF,kBAAoBA,iBAAiBtuF,UAAUgE,gBAAgBrrB,OAAQ,CACvE,GAAIsX,IAAK8T,oCAAoCltB,KAAK2iB,UAAW3iB,KAAK29B,UAAW,KAA4B85E,iBAAiBtuF,UAAUgE,iBAAkB5B,aAAenS,GAAGmS,aAAcC,SAAWpS,GAAGoS,SAAUN,MAAQ9R,GAAG8R,MAAOO,UAAYrS,GAAGqS,SAC/OzrB,MAAKw3G,kBACDjsF,aAAcA,aACdC,SAAUA,SACVN,MAAOA,MACPO,UAAWA,UACXwrF,mBACAjtG,WAAYytG,iBAAiBztG,eAQzC6nG,YAAYtxG,UAAUi3G,iBAItB,SAAUxiE,MAC2Bh1C,KAAK6J,MAAM/H,MAI5C9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYgrC,KAAKhrC,WACjB2qG,UAAW3/D,KAAK9pB,MAChB0pF,QAASxuF,WAAWmH,YAAYvC,aAAawB,QACzC3E,QAAQmtB,KAAK9pB,OACb8pB,KAAKiiE,gBAAgBn1G,OAAS6kB,WAAWquB,KAAKiiE,iBAAmBrqF,UACjEooB,KAAKvpB,UAAWupB,KAAKzpB,aAAcypB,KAAKxpB,eAUxDqmF,YAAYtxG,UAAU42G,0BAKtB,SAAUlsF,YAAayR,cACnB,GACqBu6E,mBACrBv6E,cAAa71B,QAAQ,SAAU2E,OACvBpD,eAAeoD,MAAMlI,SAAW8E,eAAe6iB,YAAYtlB,QAC3DsxG,gBAAgBlwG,KAAK4f,YAAYkB,QAAQrc,MAAM6e,SAAUxC,QAAQ,OAGzE,IAAIzO,IAAK4R,YAAYhrB,KAAK29B,UAAW1S,aAAcM,aAAenS,GAAGmS,aAAcC,SAAWpS,GAAGoS,SAAUksF,cAAgBt+F,GAAG8R,MAAOO,UAAYrS,GAAGqS,SACpJ,QACIP,MATyB,EASVwsF,cACfT,gBAAiBA,gBACjB1rF,aAAcA,aACdC,SAAUA,SACVC,UAAWA,UACXzhB,WAAYihB,YAAYjhB,aAOhC6nG,YAAYtxG,UAAUuwG,SAItB,SAAUrvG,MACN,GAAIA,MAAQouG,iBAAiBP,MAAM7tG,KAC/B,MAAOouG,kBAAiBP,KAG5B,KAAK,GADgBqI,cAAex7E,SACVo3E,YAAcvzG,KAAMuzG,YAAaA,YAAcA,YAAY/iE,OACjFmnE,aAAeA,aAAa/nF,KAAK,UAAUyI,KAAKpM,cAAe,CAE/D,GAAqB2rF,cAAerE,YAAYgB,eAAe9yG,KAC/D,IAAoB,MAAhBm2G,aACA,MAAOxxF,YAAWmH,YAAY8yD,WAAW7zD,QAAQmrF,aAAc9vF,QAAQ+vF,eAG3E,IAAqBpE,QAASD,YAAY52D,UAAUj+B,KAAK,SAAU80F,QAAU,MAAOA,QAAO/xG,OAASA,MACpG,IAAI+xG,OAAQ,CACR,GAAqBqE,UAAWrE,OAAOlwG,OArtB3B,WAstBZ,OAAOq0G,cAAa/nF,KAAK,WAAWA,KAAKioF,WAGjD,MAAO,OAOXhG,YAAYtxG,UAAUu3G,6BAKtB,SAAU9tG,WAAYqtB,UAClB,GAAiB,IAAbA,SAAgB,CAChB,GAAqB0gF,aAAc3xF,WAAWmH,YAAYiyD,YAC1D,OAAO,YAAc,MAAOu4B,cAEhC,GAAqBlC,YAAa71G,KAAK6J,MAAM/H,MAW7C,OAVA9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZ2qG,UAAW,GACXC,QAASxuF,WAAWmH,YAAY0yD,cAAczzD,QAC1C3E,QAAQguF,YACRhuF,QAAQwP,eAIb,SAAU11B,MAAQ,MAAOq6B,eAAc65E,WAAYl0G,QAO9DkwG,YAAYtxG,UAAUy3G,2BAKtB,SAAUhuG,WAAYutB,MAClB,GAAoB,IAAhBA,KAAKz1B,OAAc,CACnB,GAAqBm2G,aAAc7xF,WAAWmH,YAAYkyD,UAC1D,OAAO,YAAc,MAAOw4B,cAEhC,GAAqBryG,KAAMihB,WAAW0Q,KAAK3xB,IAAI,SAAU0T,EAAGvO,GAAK,MAAQ9I,aAAaqX,GAAKhW,MAAOukB,QAAQ9c,QACrF8qG,WAAa71G,KAAK6J,MAAM/H,MAW7C,OAVA9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZ2qG,UAAW,GACXC,QAASxuF,WAAWmH,YAAY2yD,eAAe1zD,QAC3C3E,QAAQguF,YACRjwG,SAIL,SAAUjE,MAAQ,MAAOq6B,eAAc65E,WAAYl0G,QAQ9DkwG,YAAYtxG,UAAU23G,qBAMtB,SAAUvjG,WAAYlT,KAAM41B,UACxB,GAAqB6uE,MAA0BlmG,KAAKmpG,UAAUzqF,KAAK,SAAUurE,aAAe,MAAOA,aAAYxoF,OAASA,MACxH,IAAIykG,KAAKpwD,KAAM,CACX,GAAqBqiE,cAAen4G,KAAK6J,MAAM/H,MAC/C9B,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAY2K,WAAW3K,WACvB2qG,UAAW,IACXC,QAASxuF,WAAWmH,YAAY4yD,aAAa3zD,QACzC3E,QAAQswF,cACRtwF,QAAQwP,cAOpB,KAFA,GAAqB+gF,cAAej8E,SACfk8E,YAAcr4G,KAC5Bq4G,YAAY7nE,QACf6nE,YAAcA,YAAY7nE,OAC1B4nE,aAAeA,aAAaxoF,KAAK,UAAUyI,KAAKpM,aAEpD,IAAqBqsF,eAAgBD,YAAY/D,oBAAoB7yG,MAChD82G,gBAAkBnyF,WAAWmH,YAAY8yD,WAAW7zD,QAAQ4rF,aAAcvwF,QAAQywF,gBACvG,OAAO,UAAU32G,MACb,MAAOy6B,iBAAgBznB,WAAWsnB,UAAWtnB,WAAWghG,aAAc35E,cAAcm8E,cAAeI,iBAAiB3vG,OAAOjH,SAI/H,GAAqBs6B,WAAYj8B,KAAKw0G,YAAY7/F,WAAW3K,WAAYk8F,MACpDsS,gBAAkBpyF,WAAWmH,YAAY8yD,WAAW7zD,QAAQ2P,SAAUtU,QAAQoU,YACnG,OAAO,UAAUt6B,MACb,MAAOy6B,iBAAgBznB,WAAWsnB,UAAWtnB,WAAWghG,aAAc6C,gBAAgBjqB,WAAW,YAAa5sF,SAS1HkwG,YAAYtxG,UAAUi0G,YAKtB,SAAUxqG,WAAYk8F,MAClB,GAAIn9D,OAAQ/oC,KACSi8B,UAAYj8B,KAAK6J,MAAM/H,OACvBopB,MAAQ,CAC7Bg7E,MAAK9/F,KAAKyiB,eAAehiB,QAAQ,SAAUskB,eAEnCA,gBAAkBhI,eAAeE,YACjC6H,OAASE,wBAAwBD,iBAGzC,IAAqBkB,UAAW65E,KAAK9/F,KAAKkmB,OAAO1mB,IAAI,SAAU6yG,OAAS,MAAOtsF,QAAO4c,MAAMpL,UAAW86E,QAYvG,OATAz4G,MAAK6J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZ2qG,UAAW,GACXC,QAASxuF,WAAWmH,YAAY6yD,SAAS5zD,QACrC3E,QAAQqD,OAAQ6d,MAAMpL,UAAUvX,WAAW8/E,KAAK9/F,KAAKkB,WAAYqf,WAAW0F,eAIjF4P,WAWX41E,YAAYtxG,UAAUq1G,4BAStB,SAAUjhG,YACN,GAAIo0B,OAAQ/oC,IACZ,QACIi8B,UAAWtnB,WAAWsnB,UACtB05E,aAAchhG,WAAWghG,aACzB3rG,WAAY2K,WAAW3K,WACvBxG,QAASmR,WAAWnR,QACpBF,MAAO6zB,gCACHC,4BAA6B,SAAUC,UACnC,MAAO0R,OAAM+uE,6BAA6BnjG,WAAW3K,WAAYqtB,WAErEC,0BAA2B,SAAUC,MACjC,MAAOwR,OAAMivE,2BAA2BrjG,WAAW3K,WAAYutB,OAEnEC,oBAAqB,SAAU/1B,KAAM41B,UACjC,MAAO0R,OAAMmvE,qBAAqBvjG,WAAYlT,KAAM41B,YAEzD1iB,WAAWrR,SAMtBuuG,YAAYtxG,UAAUs0G,uBAGtB,WA+BI,QAAS6D,wBAAuBz8E,UAAWjyB,WAAYwJ,YAAamlG,iBAChE,GAAqBtD,gBACAjpF,MAAQ5Y,YAAY5N,IAAI,SAAUwT,IACnD,GAAIpP,YAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC5CyzB,UAAY,GAAK6hF,qBACjBhG,aAAepvG,UAAY2wG,SAAW0E,KAAO,KAC9Dt/F,GAAKsf,uBAAuB+5E,aAAcpvG,QAASF,MAAOyzB,UAAWqC,YAAY22E,SAAU5qF,MAAQ5L,GAAG4L,MAAO6T,YAAczf,GAAGyf,WAElI,OADAq8E,aAAYtuG,KAAK/E,MAAMqzG,YAAalwF,MAAMvf,IAAI,SAAU+f,MAAQ,MAAOD,oCAAmCC,KAAM3b,eACzG+b,oCAAoCiT,YAAahvB,aAK5D,QAHIwJ,YAAY1R,QAAU62G,kBACtBtD,YAAYtuG,KAAK2e,mCAAmCsW,cAAcC,UAAW7P,OAAO6N,SAAUjwB,aAE3FqrG,YA3CX,GAAqBwD,MAAO74G,KACP44G,mBAAqB,EACrB9D,uBACAC,yBACAC,aAAeh1G,KAAK6J,MAAMjE,IAAI,SAAUnG,QAASw8B,WAClE,GAAI7iB,IAAK3Z,UAAWm1G,QAAUx7F,GAAGw7F,QAASD,UAAYv7F,GAAGu7F,UAAW4C,iBAAmBn+F,GAAGm+F,iBAAkBzB,eAAiB18F,GAAG08F,eAAgB9rG,WAAaoP,GAAGpP,UAehK,OAdI8rG,iBACAhB,oBAAoB/tG,KAAK/E,MAAM8yG,oBAAqB4D,uBAAuBz8E,UAAWjyB,WAAY8rG,gBAAgB,IAElHyB,kBACAxC,sBAAsBhuG,KAAK/E,MAAM+yG,sBAAuB2D,uBAAuBz8E,UAAWjyB,WAAYutG,kBAA+B,OAAZ5C,WAA2D,IAUjL5uF,oCAH2C,EAAZ4uF,UAClC,GAAIziB,YAAWgiB,UAAU1nF,WAAWA,WAAYooF,UAChDA,QACuD5qG,aAE/D,QAAS8qG,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnHnD,YAAYtxG,UAAU21G,4BAKtB,SAAUj6E,UAAW68E,UACjB,GAAI/vE,OAAQ/oC,KACS+4G,oBACAC,wBAA0B,CAC/CF,UAASjyG,QAAQ,SAAUuS,IACvB,GAAI5V,SAAU4V,GAAG5V,QAAS05B,SAAW9jB,GAAG8jB,SAAUpC,OAAS1hB,GAAG0hB,OACzC/D,UAAY,GAAKiiF,0BACjBpG,aAAepvG,UAAY2wG,SAAWprE,MAAQ,KAC/DxvB,GAAKod,qBAAqBi8E,aAAcpvG,QAAS05B,SAAS8e,QAASjlB,WAAY5R,MAAQ5L,GAAG4L,MAAO2qF,aAAev2F,GAAGu2F,aAClGmJ,UAAY9zF,KAC7B2qF,eACAmJ,UAAUlyG,KAAKstG,kBAAkB7zF,IAAIsvF,aAAa1sD,IAAIixD,oBAAoBp6E,SAE9E,IAAIlgB,IAAKkjB,0BAA0BC,SAAUpC,QAASo+E,YAAcn/F,GAAGlG,OAAQwiC,UAAYt8B,GAAGtY,KACzE03G,cAAgB37E,qBAAqB07E,YAAa7iE,UACvE0iE,kBAAiBhyG,KAAK2e,mCAAmC,GAAIkC,QAAOC,QAAQsxF,eAAejqB,UAAUklB,gBAAiB6E,WAAY/7E,SAASlzB,cAE/I,IAAqBovG,cACrB,IAAIL,iBAAiBj3G,OAAS,EAAG,CAC7B,GAAqByzG,WAAYlB,kBAAkB7zF,IAAIqH,SAAQ,IAAO0Q,WAAW60D,aAC5EptF,KAAKgqB,UAAUgX,QAAU9b,iBAAiB6zF,kBAAkB1kF,IAAuB8/E,SAAc,OAClGoB,SAASxuG,KAAKotG,SAAS3zF,IAAI2b,SAASvM,KAAK,cAAc2I,WAAWv4B,KAAK8H,WAE3EsxG,cAAgB/xF,IACZ,GAAI2E,SAA2BmQ,SAAc,KAAGzP,eAChD,GAAIV,SAA2BooF,eAAoB,KAAG1nF,eACtD,GAAIV,SAA2B6jF,iBAAiBP,MAAW,KAAG5iF,gBAC/D6oF,SAAS3sG,OAAOmwG,kBAAmB,GAAItsF,iBAAgB4nF,qBAAsB3nF,mBAGhF0sF,eAAgBxsF,SAEpB,OAAOwsF,gBAOXvH,YAAYtxG,UAAU48C,eAKtB,SAAUv2C,IAAKpD,WAMfquG,YAAYtxG,UAAUw8C,uBAKtB,SAAUn2C,IAAKpD,WAMfquG,YAAYtxG,UAAU87C,eAKtB,SAAUz1C,IAAKpD,WAMfquG,YAAYtxG,UAAUg8C,cAKtB,SAAU31C,IAAKpD,WAMfquG,YAAYtxG,UAAU27C,WAKtB,SAAUt1C,IAAKpD,WAMfquG,YAAYtxG,UAAUu7C,qBAKtB,SAAUl1C,IAAKpD,WAMfquG,YAAYtxG,UAAUq7C,UAKtB,SAAUh1C,IAAKpD,WACRquG,eA6NPwH,gBAAiC,SAAU5uG,QAE3C,QAAS4uG,iBAAgBC,UACrB,GAAIvwE,OAAQt+B,OAAO+pC,KAAKx0C,KAAMs5G,SAASlzG,OAASpG,IAEhD,OADA+oC,OAAMuwE,SAAWA,SACVvwE,MAsCX,MA1CA9oC,WAAUo5G,gBAAiB5uG,QAW3B4uG,gBAAgB94G,UAAU0lB,gBAK1B,SAAU1iB,QAASC,SACf,MAAOxD,MAAKs5G,SAASrzF,gBAAgB1iB,QAASC,UAMlD61G,gBAAgB94G,UAAUykB,aAI1B,SAAU1L,GACN,MAAOA,aAAa+/F,kBAAmBr5G,KAAKs5G,SAASt0F,aAAa1L,EAAEggG,WAMxED,gBAAgB94G,UAAUg5G,MAI1B,SAAU5kG,YACN3U,KAAKs5G,SAAW3kG,WAChB3U,KAAKw5G,QAAS,GAEXH,iBACTnqF,YAME8iB,aAA8B,WAC9B,QAASA,gBACLhyC,KAAK25B,cACL35B,KAAKy5G,SAAW,GAAIvwF,KACpBlpB,KAAK05G,oBAAsB,GAAIxwF,KAC/BlpB,KAAK25G,qBAAuB,GAAIzwF,KAChClpB,KAAK45G,qBAAuB,GAAI1wF,KAChClpB,KAAK65G,cAAgB,EAwGzB,MAjGA7nE,cAAazxC,UAAUw+B,gBAKvB,SAAU+6E,WAAYC,aAClB,GAAqB9lG,KAAMjU,KAAKg6G,MAAMF,YACjBP,MAAQv5G,KAAKy5G,SAASl5F,IAAItM,KAC1BgmG,UAAW,CAMhC,IALKV,QACDA,MAAQ,GAAIF,iBAAgBS,YAC5B95G,KAAKy5G,SAASj5F,IAAIvM,IAAKslG,OACvBU,UAAW,IAETA,WAAaV,MAAMC,QAAYS,UAAYF,YAAc,CAE3D,GAAqBlkD,QAAS71D,KAAKk6G,WACnCl6G,MAAK25B,WAAW5yB,KAAKmf,SAAS2vC,QAAQr1C,IAAIs5F,YAAYvhF,WAAW7L,eAAgB8L,aAAaC,SAC9F8gF,MAAMA,MAAMrzF,SAAS2vC,SAEzB,MAAO0jD,QAQXvnE,aAAazxC,UAAU45G,cAMvB,SAAU/zG,KAAMmP,KAAMuV,KAClB,GAAqB29D,cAAuB,GAARlzE,KAChCvV,KAAK45G,qBACG,GAARrkG,KAA4BvV,KAAK25G,qBAAuB35G,KAAK05G,oBAC5CH,MAAQ9wB,aAAaloE,IAAIna,KAC9C,IAAKmzG,OAOA,IAAKA,MAAMC,OAAQ,CACpB,GAAqBl6C,QAASt/D,KAAKk6G,WACnCl6G,MAAK25B,WAAW5yB,KAAKmf,SAASo5C,QAAQ9+C,IAAI+4F,MAAMD,UAAU/gF,WAAW7L,eAAgB8L,aAAaC,SAClG8gF,MAAMA,MAAMrzF,SAASo5C,cAVb,CACR,GAAqB4/B,UAAmB,GAAR3pF,KAC5B,iBACQ,GAARA,KAA4B,iBAAmB,eACnDgkG,OAAQ,GAAIF,iBAAgBvuF,IAAI1E,WAAWhgB,MAAMwpB,KAAKsvE,WACtDzW,aAAajoE,IAAIpa,KAAMmzG,OAO3B,MAAOA,QAkBXvnE,aAAazxC,UAAU6wE,WASvB,SAAUtkE,QAAU,MAAO,GAAKA,OAAS9M,KAAK65G,iBAI9C7nE,aAAazxC,UAAU25G,UAGvB,WAAc,MAAOl6G,MAAKoxE,WA9JR,OAmKlBp/B,aAAazxC,UAAUy5G,MAIvB,SAAUrlG,YACN,MAAOA,YAAWsR,gBAAgB,GAAIm0F,YAAc,OAEjDpoE,gBAEPooE,WAA4B,WAC5B,QAASA,cACLp6G,KAAKmwF,iBAAmB1yD,QACxBz9B,KAAKqwF,kBAAoB5yD,QACzBz9B,KAAKuwF,kBAAoB9yD,QACzBz9B,KAAKywF,mBAAqBhzD,QAC1Bz9B,KAAK8wF,sBAAwBrzD,QAC7Bz9B,KAAK+wF,wBAA0BtzD,QAC/Bz9B,KAAKixF,qBAAuBxzD,QAC5Bz9B,KAAKqxF,qBAAuB5zD,QAC5Bz9B,KAAKsxF,aAAe7zD,QACpBz9B,KAAKuxF,uBAAyB9zD,QAC9Bz9B,KAAKwxF,cAAgB/zD,QACrBz9B,KAAKyxF,kBAAoBh0D,QACzBz9B,KAAK4xF,wBAA0Bn0D,QAC/Bz9B,KAAK6xF,kBAAoBp0D,QACzBz9B,KAAK8xF,iBAAmBr0D,QACxBz9B,KAAKmyF,eAAiB10D,QAoD1B,MA9CA28E,YAAW75G,UAAU2wF,iBAIrB,SAAUtqF,KACN,MAAO,IAA2B,gBAAdA,KAAItD,MAAqB,IAAMsD,IAAItD,MAAQ,IAAMsD,IAAItD,QAM7E82G,WAAW75G,UAAUyxF,sBAIrB,SAAUprF,KACN,GAAImiC,OAAQ/oC,IACZ,OAAO,IAAM4G,IAAImrF,QAAQnsF,IAAI,SAAU8Z,OAAS,MAAOA,OAAMuG,gBAAgB8iB,MAAO,QAAUljC,KAAK,KAAO,KAM9Gu0G,WAAW75G,UAAU0xF,oBAIrB,SAAUrrF,KACN,GAAImiC,OAAQ/oC,KACSq6G,SAAW,SAAU36F,OACtC,MAAOA,OAAMzL,IAAM,IAAMyL,MAAMpc,MAAM2iB,gBAAgB8iB,MAAO,MAEhE,OAAO,IAAMniC,IAAImrF,QAAQnsF,IAAIy0G,UAAUx0G,KAAK,MAMhDu0G,WAAW75G,UAAU4wF,kBAIrB,SAAUvqF,KACN,MAAOA,KAAItD,MAAMkgC,WAAa,MAAQ58B,IAAItD,MAAMkgC,WAAa,IAAM58B,IAAItD,MAAM7B,KACzE,MAAQmF,IAAItD,MAAMyuC,QAAQtwC,MAE3B24G,cAyBPE,cAA+B,WAC/B,QAASA,eAAcpoD,YAAaghB,cAAeC,eAAgB8G,aAC/C,KAAZA,UAAsBA,QAAU,MACpCj6E,KAAKkyD,YAAcA,YACnBlyD,KAAKkzE,cAAgBA,cACrBlzE,KAAKmzE,eAAiBA,eACtBnzE,KAAKi6E,QAAUA,QACfj6E,KAAKszE,aA0ET,MAlEAgnC,eAAc/5G,UAAUg6G,mBAMxB,SAAU18B,KAAM/0E,IAAKoN,qBACjB,GAAqBskG,kBAAmBx6G,KAAKkyD,YAAYp+B,MAAM+pD,KAAM/0E,KAAK,EAAMoN,oBAChF,IAAIskG,iBAAiBloF,OAAOxwB,OACxB,MAAO04G,kBAAiBloF,MAE5B,IAAqBmoF,kBAAmB78F,gBAAgB48F,iBAAiBnoF,UAAWnc,oBAAqBlW,KAAKkzE,cAAelzE,KAAKmzE,eAClI,OAAIsnC,kBAAiBnoF,OAAOxwB,OACjB24G,iBAAiBnoF,SAE3BlZ,GAAKpZ,KAAKszE,WAAWvsE,KAAK/E,MAAMoX,GAAIqhG,iBAAiBv6F,aAEtD,IAAI9G,KAORkhG,cAAc/5G,UAAUm6G,YAGxB,WAAc,MAAO16G,MAAKszE,WAM1BgnC,cAAc/5G,UAAU23E,MAKxB,SAAUyF,WAAYg9B,eAClB,GAAqBz6F,aACA06F,cAAgB,GAAIC,oBAEzC76G,MAAKszE,UAAUzsE,QAAQ,SAAUqK,SAC7B,GAAqB5H,IAAKq0E,WAAWvlE,OAAOlH,QACvCgP,UAAS7Z,eAAeiD,KAIxB8P,GAAK8G,SAAS5W,IAAIgiE,SAASvkE,KAAK/E,MAAMoX,GAAIlI,QAAQo6D,SAHnDprD,SAAS5W,IAAM4H,OAKnB,IAAIkI,KAGR,IAAqB0hG,SAAUt6G,OAAO+2B,KAAKrX,UAAUta,IAAI,SAAU0D,IAC/D,GAAqBg1E,QAASX,WAAWtH,iBAAiBn2D,SAAS5W,KAC9CyxG,IAAM76F,SAAS5W,IACfO,MAAQy0E,OAASs8B,cAAclhC,QAAQqhC,IAAIlxG,MAAOy0E,QAAUy8B,IAAIlxG,MAChEmxG,mBAAqB,GAAI7vC,SAAQthE,YAAekxG,IAAIxiG,QAASwiG,IAAIv9F,YAAalU,GAKnG,OAJA0xG,oBAAmB1vC,QAAUyvC,IAAIzvC,QAC7BqvC,eACAK,mBAAmB1vC,QAAQzkE,QAAQ,SAAUkP,QAAU,MAAOA,QAAOnO,SAAW+yG,cAAc5kG,OAAOnO,YAElGozG,oBAEX,OAAOr9B,YAAWzF,MAAM4iC,QAAS96G,KAAKi6E,UAEnCqgC,iBAEPO,oBAAqC,SAAUpwG,QAE/C,QAASowG,uBACL,MAAkB,QAAXpwG,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,KA2D/D,MA7DAC,WAAU46G,oBAAqBpwG,QAS/BowG,oBAAoBt6G,UAAUm5E,QAK9B,SAAU7vE,MAAOy0E,QACb,GAAIv1C,OAAQ/oC,IACZ,OAAOs+E,QAASz0E,MAAMjE,IAAI,SAAUmL,GAAK,MAAOA,GAAEpK,MAAMoiC,MAAOu1C,UAAcz0E,OAOjFgxG,oBAAoBt6G,UAAUsqE,oBAK9B,SAAUC,GAAIwT,QACV,GAAIv1C,OAAQ/oC,KACS+qE,UAA+BuT,OAAOv+D,aAAa+qD,GAAGC,WACtDC,UAAYF,GAAGE,UAA+BsT,OAAOv+D,aAAa+qD,GAAGE,WAAeF,GAAGE,UACvF3gE,SAAWygE,GAAGzgE,SAASzE,IAAI,SAAUmL,GAAK,MAAOA,GAAEpK,MAAMoiC,MAAOu1C,SACrF,OAAO,IAAIxS,gBAAehB,GAAGlrD,IAAKkrD,GAAGx9D,MAAOy9D,UAAWC,UAAW3gE,SAAUygE,GAAG9B,OAAQ8B,GAAG9gE,aAO9F6wG,oBAAoBt6G,UAAU0qE,iBAK9B,SAAUH,GAAIwT,QACV,MAAO,IAAIvS,aAAYjB,GAAGxnE,MAA0Bg7E,OAAOv+D,aAAa+qD,GAAGrpE,MAASqpE,GAAG9gE,aAO3F6wG,oBAAoBt6G,UAAU2qE,oBAK9B,SAAUJ,GAAIwT,QACV,MAAO,IAAItS,gBAAelB,GAAGxnE,MAA0Bg7E,OAAOv+D,aAAa+qD,GAAGrpE,MAASqpE,GAAG9gE,aAEvF6wG,qBACT5uC,cAaEgvC,OAAS,gBACT58E,cAA+B,WAC/B,QAAS9Q,gBA6CT,MA1CAA,aAAY2tF,WAAa,IACzB3tF,YAAY4tF,oBAAsB,IAElC5tF,YAAY6tF,eAAkB35G,KAAM,KAAM+hC,WAAYy3E,QACtD1tF,YAAY8tF,YAAe55G,KAAM,KAAM+hC,WAAYy3E,QACnD1tF,YAAY+tF,iBAAoB75G,KAAM,KAAM+hC,WAAYy3E,QACxD1tF,YAAYguF,kBAAqB95G,KAAM,KAAM+hC,WAAYy3E,QACzD1tF,YAAYiuF,cAAiB/5G,KAAM,KAAM+hC,WAAYy3E,QACrD1tF,YAAYkuF,cAAiBh6G,KAAM,KAAM+hC,WAAYy3E,QACrD1tF,YAAYmuF,iBAAoBj6G,KAAM,KAAM+hC,WAAYy3E,QACxD1tF,YAAYouF,cAAiBl6G,KAAM,KAAM+hC,WAAYy3E,QACrD1tF,YAAYquF,uBAA0Bn6G,KAAM,MAAO+hC,WAAYy3E,QAC/D1tF,YAAYsuF,qBAAwBp6G,KAAM,MAAO+hC,WAAYy3E,QAC7D1tF,YAAYuuF,iBAAoBr6G,KAAM,KAAM+hC,WAAYy3E,QACxD1tF,YAAYhd,MAAS9O,KAAM,KAAM+hC,WAAYy3E,QAC7C1tF,YAAYwuF,gBAAmBt6G,KAAM,KAAM+hC,WAAYy3E,QACvD1tF,YAAYyuF,iBAAoBv6G,KAAM,KAAM+hC,WAAYy3E,QACxD1tF,YAAY4jB,MAAS1vC,KAAM,KAAM+hC,WAAYy3E,QAC7C1tF,YAAYyS,OAAUv+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY0S,OAAUx+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY2S,OAAUz+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY4S,OAAU1+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY6S,OAAU3+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY8S,OAAU5+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY+S,OAAU7+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAYgT,OAAU9+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAYiT,OAAU/+B,KAAM,MAAO+hC,WAAYy3E,QAC/C1tF,YAAY0uF,QAAWx6G,KAAM,KAAM+hC,WAAYy3E,QAC/C1tF,YAAY2uF,YAAez6G,KAAM,KAAM+hC,WAAYy3E,QACnD1tF,YAAY4uF,eAAkB16G,KAAM,MAAO+hC,WAAYy3E,QACvD1tF,YAAY6uF,kBAAqB36G,KAAM,KAAM+hC,WAAYy3E,QACzD1tF,YAAY8uF,oBAAuB56G,KAAM,KAAM+hC,WAAYy3E,QAC3D1tF,YAAY2T,kBAAqBz/B,KAAM,oBAAqB+hC,WAAYy3E,QACxE1tF,YAAY4T,mBAAsB1/B,KAAM,qBAAsB+hC,WAAYy3E,QAC1E1tF,YAAY6T,wBAA2B3/B,KAAM,0BAA2B+hC,WAAYy3E,QACpF1tF,YAAY8T,QAAW5/B,KAAM,UAAW+hC,WAAYy3E,QACpD1tF,YAAYqS,iBAAoBn+B,KAAM,mBAAoB+hC,WAAYy3E,QACtE1tF,YAAY+Q,iBACR78B,KAAM,mBACN+hC,WAAYy3E,QAEhB1tF,YAAYoS,oBAAuBl+B,KAAM,sBAAuB+hC,WAAYy3E,QACrE1tF,eAiBP6R,aAAe,MAyGfk9E,yBAA2BljG,MAC3BA,GAAG2hB,oBAAoBC,UAAYqD,cAAci9E,gBACjDliG,GAAG2hB,oBAAoBp6B,WAAa09B,cAAck9E,iBAClDniG,GAAG2hB,oBAAoBG,OAASmD,cAAcm9E,aAC9CpiG,GAAG2hB,oBAAoBI,OAASkD,cAAco9E,aAC9CriG,IA6BAmjG,aAA8B,WAC9B,QAASA,cAAa/rE,QAClBxwC,KAAKwwC,OAASA,OACdxwC,KAAK4F,IAAM,GAAIsjB,KACflpB,KAAKw8G,mBAAqB,EA2D9B,MArDAD,cAAah8G,UAAUggB,IAIvB,SAAU9e,MAEN,IADA,GAAqBq/E,SAAU9gF,KACxB8gF,SAAS,CACZ,GAAqBx9E,OAAQw9E,QAAQl7E,IAAI2a,IAAI9e,KAC7C,IAAa,MAAT6B,MAGA,MADAtD,MAAK4F,IAAI4a,IAAI/e,KAAM6B,OACZA,KAEXw9E,SAAUA,QAAQtwC,OAEtB,MAAO,OAOX+rE,aAAah8G,UAAUigB,IAKvB,SAAU/e,KAAMg7G,cAIZ,OAHCz8G,KAAK4F,IAAIyuB,IAAI5yB,OACV2C,MAAM,YAAc3C,KAAO,sCAAwCzB,KAAK4F,IAAI2a,IAAI9e,OACpFzB,KAAK4F,IAAI4a,IAAI/e,KAAMykB,SAASu2F,eACrBz8G,MAKXu8G,aAAah8G,UAAU++B,YAGvB,WAAc,MAAO,IAAIi9E,cAAav8G,OAItCu8G,aAAah8G,UAAUm8G,mBAGvB,WAGI,IAFA,GAAqB57B,SAAU9gF,KAExB8gF,QAAQtwC,QACXswC,QAAUA,QAAQtwC,MACtB,OA5Le,KA4LgBswC,QAAQ07B,sBAEpCD,gBAEPl9E,WAAa,GAAIk9E,cAAa,MAAM/7F,IAAI,SAAU,UAClD2e,0BAA2C,WAC3C,QAASA,2BAA0BxB,UAAWmB,aAAcnc,UAAWg6F,iBAAkBC,aAAclzE,MAAOnK,mBAAoBs9E,YAAa59E,kBAC7H,KAAVyK,QAAoBA,MAAQ,GAChC1pC,KAAK29B,UAAYA,UACjB39B,KAAK8+B,aAAeA,aACpB9+B,KAAK2iB,UAAYA,UACjB3iB,KAAK28G,iBAAmBA,iBACxB38G,KAAK48G,aAAeA,aACpB58G,KAAK0pC,MAAQA,MACb1pC,KAAKu/B,mBAAqBA,mBAC1Bv/B,KAAK68G,YAAcA,YACnB78G,KAAKi/B,aAAeA,aACpBj/B,KAAK88G,WAAa,EAClB98G,KAAK+8G,gBAAkB,EACvB/8G,KAAKg9G,gBAAkB,EACvBh9G,KAAKi9G,qBAAsB,EAC3Bj9G,KAAKk9G,WACLl9G,KAAKm9G,iBACLn9G,KAAKo9G,gBACLp9G,KAAKq9G,aACLr9G,KAAKs9G,gBACLt9G,KAAKu9G,YACLv9G,KAAKw9G,2BAA6B,EAClCx9G,KAAK6/B,YAAcA,YACnB7/B,KAAKy9B,QAAU8D,UAEfvhC,KAAKq8C,eAAiB9a,UACtBvhC,KAAKu8C,cAAgBhb,UACrBvhC,KAAKk8C,WAAa3a,UAClBvhC,KAAK87C,qBAAuBva,UAC5BvhC,KAAK47C,UAAYra,UAEjBvhC,KAAKm9C,eAAiB5b,UACtBvhC,KAAK+8C,uBAAyBxb,UAoZlC,MA7YApC,2BAA0B5+B,UAAUi/B,sBAKpC,SAAU/4B,KAAMk2C,WAEZ,IAAK,GAAI/6C,IAAK,EAAG67G,YAAc9gE,UAAW/6C,GAAK67G,YAAY37G,OAAQF,KAAM,CACrE,GAAI87G,aAAcD,YAAY77G,IACT66G,aAAeiB,YAAYj8G,KAC3BkT,WAAauR,SAASlmB,KAAK28G,kBAAkB/sF,KAAK8tF,YAAYp6G,OA/OtE,aAgPQq6G,WAAa39G,KAAK48G,aAAaF,qBAC/BkB,YAAc13F,SAASy3F,YAAYn9F,IAAI7L,YAAY4jB,WAAW7L,eAC/E8L,aAAaC,OAGjBz4B,MAAK48G,aAAap8F,IAAIi8F,aAAckB,YAEpC39G,KAAKo9G,aAAar2G,KAAK62G,aAG3B,GAAI59G,KAAKu/B,oBAAsBv/B,KAAKu/B,mBAAmBz9B,OAAS,EAAG,CAC/D,GAAqB+7G,oBAAqBp8E,qBAAqBh7B,KAAMzG,KAAKu/B,mBAE1E,IADAv/B,KAAK89G,oBAAsBD,mBACvBA,mBAAmBlgB,KAAO,EAAG,CAC7B,GAAqBogB,WACrBt6G,OAAMwgB,KAAK45F,mBAAmB97G,UAAU8E,QAAQ,SAAUm3G,MAClDA,KAAKxtF,WACLutF,QAAQC,KAAK54G,MAAQ,GAAK44G,KAAKxtF,WAGvC,IAAqBytF,iBAAkBj+G,KAAKw9G,2BAA6Bx9G,KAAKk+G,mBACzD5zB,YAAcziE,QAAQo2F,mBAC1CF,QAAQlsF,KAAK,SAAUvuB,OAAS,OAAQA,SAAac,MAAM,gDACxD25G,QAAQj8G,OAAS,GACjBwoF,WAAWvjF,KAAK/G,KAAK29B,UAAUmB,aAAaC,gBAAgBoD,UAAU47E,UAA8C,IAExH/9G,KAAKm+G,YAAYn8G,MAAMhC,MAAOA,KAAKm9G,cAAe,KAAM9+E,cAAc89E,eAAevzG,OAAO0hF,cAGpG9jF,iBAAiBxG,KAAMyG,KACvB,IAAqB23G,cAAep+G,KAAKm9G,cAAcr7G,OAAS,GAC3D2lB,OAAOvB,SA3RK,MA2RyBlmB,KAAKm9G,kBAE/C,OAAO91F,KACH,GAAI2E,SAAQhsB,KAAK28G,iBAAkB,MAAO,GAAI3wF,SA9RjC,KA8R6DohE,YAC3EptF,KAAKk9G,QAAQt0G,OAAOw1G,aAAcp+G,KAAKo9G,aAAcp9G,KAAKq9G,UAAWr9G,KAAKs9G,aAAct9G,KAAKu9G,UAAW7wF,cAAe,KAAM1sB,KAAKi/B,eAMzIE,0BAA0B5+B,UAAUuwG,SAIpC,SAAUrvG,MAAQ,MAAOzB,MAAK48G,aAAar8F,IAAI9e,OAK/C09B,0BAA0B5+B,UAAU88C,eAIpC,SAAUz2C,KACN,GAAqBo3G,MAA0Bh+G,KAAK89G,oBAAoBv9F,IAAI3Z,IAC5Eo3G,OAAQ55G,MAAM,YAAcwC,IAAIoD,WAAa,mDAC7C,IAAqBq0G,MAAOr+G,KAAKk+G,mBACZ5zB,YAAcziE,QAAQw2F,MAAOx2F,QAAQ7nB,KAAKw9G,4BAC5C,KAAfQ,KAAK54G,OACLklF,WAAWvjF,KAAK8gB,QAAQm2F,KAAK54G,QAEjCpF,KAAKm+G,YAAYn8G,MAAMhC,MAAOA,KAAKm9G,cAAev2G,IAAIoD,WAAYq0B,cAAc69E,YAAYtzG,OAAO0hF,cAMvGnrD,0BAA0B5+B,UAAU+9G,wBAIpC,SAAUv1F,YACN,GAAIggB,OAAQ/oC,KACSu+G,kBAAoB,GAAIr1F,KACxBs1F,qBAAuBz1F,WAAW7F,OAAO,SAAUiG,WAAa,OAAQA,UAAUA,UAAUE,cAAgBzjB,IAAI,SAAUujB,WAE3I,MADAo1F,mBAAkB/9F,IAAI2I,UAAUA,UAAU/iB,KAAKkB,UAAWyhC,MAAMm1E,oBACzDn1E,MAAM01E,cAAct1F,UAAUA,UAAU/iB,KAAKkB,YAExD,QACIo3G,gBAAiBF,qBAAqB18G,OAClC9B,KAAK8+B,aAAaC,gBAAgBpY,WAAW63F,uBAA2D,GACxG32F,QAAQ,MACZ02F,kBAAmBA,oBAO3Bp/E,0BAA0B5+B,UAAUm8C,aAIpC,SAAU91C,KACN,GAAImiC,OAAQ/oC,KAES2+G,aAAe3+G,KAAKk+G,mBACpBU,mBAAiB16G,GACjB26G,mBAAqB,GAAI31F,KAEzBc,UAAYwX,cAAc56B,IAAImiB,YAC9B+1F,SAAWj3F,QAAQ,KAAM6E,eACzB49D,YAAcziE,QAAQ82F,cAEvC30F,YACAsgE,WAAWvjF,KAAK/G,KAAKy+G,cAAcz0F,UAAUb,UAAU/iB,KAAKkB,YAC5Ds3G,eAAiB5+G,KAAKk+G,oBAGtB5zB,WAAWvjF,KAAK8gB,QAAQjhB,IAAInF,MAIhC,KAAK,GADgByzB,eACZtzB,GAAK,EAAGwX,GAAKxS,IAAI0G,MAAO1L,GAAKwX,GAAGtX,OAAQF,KAAM,CACnD,GAAI2L,MAAO6L,GAAGxX,GACdszB,YAAWnuB,KAAK8gB,QAAQta,KAAK9L,MAAOomB,QAAQta,KAAKjK,QAErDgnF,WAAWvjF,KAAKmuB,WAAWpzB,OAAS,EAChC9B,KAAK8+B,aAAaC,gBAAgBpY,WAAWuO,aAAiD,GAC9F4pF,SAEJ,IAAIvlG,IAAKvZ,KAAKs+G,wBAAwB13G,IAAImiB,YAAa21F,gBAAkBnlG,GAAGmlG,gBAAiBH,kBAAoBhlG,GAAGglG,iBAOpH,IANAj0B,WAAWvjF,KAAKw3G,kBAAkB5gB,KAAO,EAAI+gB,gBAAkBI,UAC3D90F,WAA+B,MAAlB40F,gBAEbL,kBAAkB/9F,IAAIwJ,UAAUb,UAAU/iB,KAAKkB,UAAWs3G,gBAG1Dh4G,IAAI61C,YAAc71C,IAAI61C,WAAW36C,OAAS,EAAG,CAC7C,GAAqB26C,YAAan0C,QAAQ1B,IAAI61C,WAAW72C,IAAI,SAAU0B,WACnE,GAAqB+2G,MAAOt1E,MAAMm1E,kBAClCW,oBAAmBr+F,IAAIlZ,UAAU7F,KAAM48G,KAEvC,IAAqB5B,cAAe1zE,MAAM6zE,aAAaF,oBAKvD,OAJA3zE,OAAMq0E,aAAar2G,KAAKmf,SAASu2F,aAAc/vF,eAC1ClM,IAAI4F,WAAWiY,cAAc49E,QAAQzvF,QAAQ3E,QAAQw2F,SACrD9lF,WAAW7L,eAAgB8L,aAAaC,SAC7CsQ,MAAM6zE,aAAap8F,IAAIlZ,UAAU7F,KAAMg7G,eAC/Bn1G,UAAU7F,KAAM6F,UAAU80C,kBAClCx2C,IAAI,SAAUtC,OAAS,MAAOukB,SAAQvkB,QAC1CgnF,YAAWvjF,KAAK/G,KAAK8+B,aAAaC,gBAAgBpY,WAAW81B,aAAiD,QAG9G6tC,YAAWvjF,KAAK+3G,SAGpB,MAAOx0B,WAAWA,WAAWxoF,OAAS,KAAOg9G,UACzCx0B,WAAW72C,KAGfzzC,MAAKm+G,YAAYn8G,MAAMhC,MAAOA,KAAKm9G,cAAev2G,IAAIoD,WAAYq0B,cAAc+8E,eAAexyG,OAAO0hF,YAGtG,KAAK,GAFgBy0B,UAAW74F,SAASlmB,KAAK28G,kBAErC5iG,GAAK,EAAGM,GAAKzT,IAAIo3B,OAAQjkB,GAAKM,GAAGvY,OAAQiY,KAAM,CACpD,GAAIxX,OAAQ8X,GAAGN,GACXxX,OAAM46B,aACNn9B,KAAK6/B,YAAY,aAGrB,IAAqBm/E,kBAAmBnmF,uBAAuB74B,KAAM++G,SAAUx8G,MAAMe,MAAOtD,KAAKi/G,iBAAkB7lF,YAAYC,UAAW0G,cACzIzlB,GAAKta,KAAKo9G,cAAcr2G,KAAK/E,MAAMsY,GAAI0kG,iBAAiB75F,MACzD,IACqBg5F,cADgBt2F,QAAQ82F,cAAe92F,QAAQtlB,MAAMd,MAAOu9G,iBAAiBhmF,YAC/DsjF,wBAAwB/5G,MAAM6D,MAC7D+3G,aAEAn+G,KAAKm+G,YAAYn+G,KAAKo9G,aAAc76G,MAAMyH,WAAYm0G,YAAat2F,QAAQ82F,cAAe92F,QAAQtlB,MAAMd,MAAOu9G,iBAAiBhmF,aAGhIh5B,KAAK6/B,YAAY,WAAa9E,oBAAoBx4B,MAAM6D,OAIhEpG,KAAKk/G,iBAAiBt4G,IAAImiB,WAAYg2F,SAAUJ,aAAcJ,mBAE9D/3G,iBAAiBxG,KAAM4G,IAAIyD,UAE3BrK,KAAKm+G,YAAYn+G,KAAKm9G,cAAev2G,IAAIwD,eAAiBxD,IAAIoD,WAAYq0B,cAAcg9E,WACxF,IAAI/gG,KASR6kB,0BAA0B5+B,UAAU2+G,iBAOpC,SAAUn2F,WAAYg2F,SAAU9iF,UAAWsiF,mBACvC,IAAK,GAAI38G,IAAK,EAAGu9G,aAAep2F,WAAYnnB,GAAKu9G,aAAar9G,OAAQF,KAAM,CAWxE,IAAK,GAVDunB,WAAYg2F,aAAav9G,IACR8oB,eAAiB6zF,kBAAkBh+F,IAAI4I,UAAUA,UAAU/iB,KAAKkB,WAGhE0tD,cAAgB7rC,UAAUA,UAAU/iB,KAAKkB,UACzCiO,KAAO4T,UAAUA,UAAUE,YAAc,EAAoB,EAKzEjQ,GAAK,EAAGG,GAAK4P,UAAU6U,OAAQ5kB,GAAKG,GAAGzX,OAAQsX,KAAM,CAC1D,GAAI7W,OAAQgX,GAAGH,IACM4lG,iBAAmBnmF,uBAAuB74B,KAAM++G,SAAUx8G,MAAMe,MAAOtD,KAAKi/G,iBAAkB7lF,YAAYC,UAAW0G,cACzIhmB,GAAK/Z,KAAKo9G,cAAcr2G,KAAK/E,MAAM+X,GAAIilG,iBAAiB75F,OACzDnlB,KAAKm+G,YAAYn+G,KAAKo9G,aAAcj0F,UAAUnf,WAAYq0B,cAAci9E,gBAAiBzzF,QAAQoU,WAAYpU,QAAQtlB,MAAM08B,cAAe7Y,WAAWiY,cAAc8S,MAAM3kB,QAAQwyF,iBAAiBhmF,eAGtMh5B,KAAKq9G,UAAUt2G,KAAK/G,KAAKo/G,aAAapqD,cAAez/C,MAChDg5E,WAAWlwD,cAAc88E,qBAAsBtzF,QAAQ6C,gBAAiB7C,QAAQoU,aAChFhC,UAELj6B,KAAKm+G,YAAYn+G,KAAKs9G,aAAcn0F,UAAUnf,WAAYq0B,cAAc+9E,iBAAkBv0F,QAAQ6C,gBAAiB7C,QAAQoU,YAE/H,GAAIliB,KAMRolB,0BAA0B5+B,UAAUq8C,sBAIpC,SAAUh2C,KACN,GAAqBy4G,eAAgBr/G,KAAKk+G,mBACrBv9E,YAAc3gC,KAAK2iB,UAAUC,yBAAyB2K,YAAYqT,aAClE0+E,kBAAoB14G,IAAImiB,WAAWrK,KAAK,SAAUyK,WACnE,MAAOA,WAAUA,UAAU/iB,KAAKkmB,OAAOuF,KAAK,SAAUkP,YAClD,MAA2B,OAApBA,WAAWp7B,OAAkByC,eAAe24B,WAAWp7B,QAAUg7B,gBAG3Dk8E,YAAc78G,KAAK68G,aAAeyC,mBAAqBA,kBAAkBn2F,UAAU/iB,KAAKkB,UAAU7F,KACnHzB,KAAK68G,YAAc,IAAMyC,kBAAkBn2F,UAAU/iB,KAAKkB,UAAU7F,KACpE,KACiBw9B,aAAe49E,YAAcA,YAAc,aAAewC,cAAgB,YAAcA,cACxFE,gBAAkB,MAAQv/G,KAAK0pC,MAChDtwB,GAAKpZ,KAAKs+G,wBAAwB13G,IAAImiB,YAAa21F,gBAAkBtlG,GAAGslG,gBAAiBH,kBAAoBnlG,GAAGmlG,iBAEpHv+G,MAAKm+G,YAAYn+G,KAAKm9G,cAAev2G,IAAIoD,WAAYq0B,cAAcq9E,gBAAiB7zF,QAAQw3F,eAAgBX,gBAAiBx4F,SAAS+Y,eAEtIj/B,KAAKm+G,YAAYn+G,KAAKs9G,aAAc12G,IAAIoD,WAAYq0B,cAAcu9E,sBAAuB/zF,QAAQw3F,gBAEjGr/G,KAAKk/G,iBAAiBt4G,IAAImiB,WAAY7C,SAASlmB,KAAK28G,kBAAmB0C,cAAed,mBAEtFv+G,KAAKm+G,YAAYn+G,KAAKs9G,aAAc12G,IAAIoD,WAAYq0B,cAAcw9E,oBAElE,IAAqB2D,iBAAkB,GAAIrgF,2BAA0Bn/B,KAAK29B,UAAW39B,KAAK8+B,aAAc9+B,KAAK2iB,UAAW48F,gBAAiBv/G,KAAK48G,aAAat9E,cAAet/B,KAAK0pC,MAAQ,EAAG1pC,KAAKu/B,mBAAoBs9E,YAAa59E,cAC3MwgF,qBAAuBD,gBAAgBhgF,sBAAsB54B,IAAIyD,SAAUzD,IAAI+1C;wSACpG38C,MAAKu9G,SAASx2G,KAAK04G,qBAAqBlnF,WAAW0G,aAAc,QAMrEE,0BAA0B5+B,UAAUm7C,eAIpC,SAAU90C,KACN,GAAqBq1B,WAAYj8B,KAAKk+G,kBAEtCl+G,MAAKm+G,YAAYn+G,KAAKm9G,cAAev2G,IAAIoD,WAAYq0B,cAAc9tB,KAAMsX,QAAQoU,YAEjFj8B,KAAKm+G,YAAYn+G,KAAKs9G,aAAc12G,IAAIoD,WAAYq0B,cAAc29E,gBAAiBn0F,QAAQoU,WAAYj8B,KAAKmxC,KAAKjrB,SAASkZ,cAAex4B,IAAItD,MAAOsD,IAAIoD,cAM5Jm1B,0BAA0B5+B,UAAUi7C,UAIpC,SAAU50C,KAEN5G,KAAKm+G,YAAYn+G,KAAKm9G,cAAev2G,IAAIoD,WAAYq0B,cAAc9tB,KAAMsX,QAAQ7nB,KAAKk+G,oBAAqBr2F,QAAQjhB,IAAItD,SAK3H67B,0BAA0B5+B,UAAU29G,iBAGpC,WAAc,MAAOl+G,MAAK88G,cAI1B39E,0BAA0B5+B,UAAU0+G,eAGpC,WAAc,MAAO,GAAKj/G,KAAK+8G,mBAQ/B59E,0BAA0B5+B,UAAU49G,YAOpC,SAAUxkF,WAAYhvB,KAAMrD,WAExB,IAAK,GADDggB,WACK1lB,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpC0lB,OAAO1lB,GAAK,GAAKC,UAAUD,GAE/B+3B,YAAW5yB,KAAKqf,WAAW9e,UAAW,KAAMqD,MAAM6hB,OAAOlF,OAAQ3c,MAAMsvB,WAM3EkF,0BAA0B5+B,UAAUk+G,cAIpC,SAAUr4G,MAAQ,MAAOpG,MAAK29B,UAAUvX,WAAWhgB,OAMnD+4B,0BAA0B5+B,UAAU6+G,aAKpC,SAAUh5G,KAAMmP,MACZ,MAAOvV,MAAK8+B,aAAaq7E,cAAc/zG,KAAMmP,KAAMvV,KAAK29B,YAK5DwB,0BAA0B5+B,UAAU4Z,KAGpC,WAOI,MANKna,MAAKi9G,sBACNj9G,KAAKk9G,QAAQn2G,KAAKmf,SAplBT,KAolBkC+F,aAAc,MACpDzL,IAAIqH,YAAQ3jB,KACZq0B,WAAWtM,eAChBjsB,KAAKi9G,qBAAsB,GAExB/2F,SAzlBM,OAgmBjBiZ,0BAA0B5+B,UAAUs4B,uBAKpC,SAAUkmF,SAAUz7G,OAChB,GAAqBo8G,0BAA2B7mF,uBAAuB74B,KAAM++G,SAAUz7G,MAAOtD,KAAKi/G,iBAAkB7lF,YAAYC,UAAW0G,YAE5I,QADC3mB,GAAKpZ,KAAKs9G,cAAcv2G,KAAK/E,MAAMoX,GAAIsmG,yBAAyBv6F,OAC1Du6F,yBAAyB1mF,WAChC,IAAI5f,KAQR+lB,0BAA0B5+B,UAAU4wC,KAMpC,SAAU4tE,SAAUz7G,MAAO0G,YACvB,MAAOhK,MAAK64B,uBAAuBkmF,SAAUz7G,QAE1C67B,6BA2DPwC,yBAA0C,SAAUl3B,QAEpD,QAASk3B,0BAAyBg+E,cAAepgF,oBAC7C,GAAIwJ,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAIjC,OAHA+oC,OAAM42E,cAAgBA,cACtB52E,MAAMxJ,mBAAqBA,mBAC3BwJ,MAAM3jC,MAAQ,EACP2jC,MAqBX,MA3BA9oC,WAAU0hC,yBAA0Bl3B,QAYpCk3B,yBAAyBphC,UAAU88C,eAInC,SAAUz2C,KACN,GAAqBg5G,cAAe5/G,KAAKu/B,mBAAmB34B,IAAIxB,MAEhE,IADgB,MAAhBw6G,cAAwBx7G,MAAM,qCAAuCwC,IAAIxB,MAAQ,OAASwB,KACrFg5G,cAAiC,MAAjBA,aAGhB,CACD,GAAqB59B,cAAenuD,YAAYC,MAAM8rF,aACtD5/G,MAAK2/G,cAAcn/F,IAAI5Z,KAAOxB,MAAOpF,KAAKoF,QAASorB,SAAU0R,2BAA2B8/C,oBAJxFhiF,MAAK2/G,cAAcn/F,IAAI5Z,KAAOxB,MAAO,KAOtCu8B,0BACT4b,6BAmEEsiE,cAA+B,WAC/B,QAASA,eAAcC,WAAYv9E,WAAYw9E,eAC3C//G,KAAK8/G,WAAaA,WAClB9/G,KAAKuiC,WAAaA,WACW,gBAAlBw9E,gBACP//G,KAAK+V,OAASgqG,cACd//G,KAAKmlB,MAAQ,OAGbnlB,KAAK+V,OAAS,KACd/V,KAAKmlB,MAAQ46F,eAyBrB,MAlBAF,eAAct/G,UAAUykB,aAIxB,SAAUD,OACN,MAAI/kB,MAAKuiC,aAAexd,MAAMwd,aAG1BviC,KAAK+V,OACE/V,KAAK+V,SAAWgP,MAAMhP,OAEd,MAAfgP,MAAMI,OAKHF,iBAAoCjlB,KAAW,MAAsB+kB,MAAY,SAErF86F,iBAmGPG,qBAAsC,WACtC,QAASA,sBAAqBl8E,OAAQF,UAClC5jC,KAAK8jC,OAASA,OACd9jC,KAAK4jC,SAAWA,SAEpB,MAAOo8E,yBAkBPxzE,qBAAsC,WACtC,QAASA,sBAAqB3F,KAAMo5E,kBAAmB/7E,gBAAiBg8E,eACpElgH,KAAK6mC,KAAOA,KACZ7mC,KAAKigH,kBAAoBA,kBACzBjgH,KAAKkkC,gBAAkBA,gBACvBlkC,KAAKkgH,cAAgBA,cACrBlgH,KAAKmgH,cAAgB,GAAIj3F,KACzBlpB,KAAKogH,gBAAkB,GAAIl3F,KAC3BlpB,KAAKqgH,kBAAoB,GAAIn8F,KAC7BlkB,KAAKsgH,SAAW,GAAIp3F,KACpBlpB,KAAKugH,oBAAsB,GAAIr3F,KAC/BlpB,KAAKwgH,eAAiB,GAAIt3F,KAC1BlpB,KAAKygH,2BAA6B,GAAIv3F,KAirB1C,MA3qBAsjB,sBAAqBjsC,UAAU8nC,cAI/B,SAAUq4E,cACN,GAAIA,aAAa9iE,QAAQ97C,OAAS,EAC9B,MAA0B9B,MAAK2gH,sBAAsBD,aAKzD,IAAqBE,mBAAuC5gH,KAAK6gH,0BAA0BH,aAC3F,IAAIE,kBACA,MAAOA,kBAEX,IAAqBE,iBAAkB9gH,KAAKogH,gBAAgB7/F,IAAImgG,aAChE,OAAII,mBAMJ9gH,KAAK+gH,iBAAiBL,aAAa94G,UACT5H,KAAKogH,gBAAgB7/F,IAAImgG,gBAsBvDl0E,qBAAqBjsC,UAAUygH,YAW/B,SAAUN,aAAcO,cAEpB,OADqB,KAAjBA,eAA2BA,cAAe,GAC1CP,aAAa9iE,QAAQ97C,OAAQ,CAC7B,GAAqBo/G,YAAalhH,KAAKumC,gBAAgBm6E,aAAa94G,SAAU84G,aAAaj/G,MACtE0/G,aAAenhH,KAAKghH,YAAYE,WAAYD,aACjE,OAAOE,cACHnhH,KAAKumC,gBAAgB46E,aAAav5G,SAAUu5G,aAAa1/G,KAAMi/G,aAAa9iE,SAC5E,KAER,GAAqBwjE,oBAAqBp/F,6BAA6B0+F,aAAa94G,SACpF,IAAIw5G,qBAAuBV,aAAa94G,SAAU,CAC9C,GAAqBy5G,gBAAiBj/F,6BAA6Bs+F,aAAaj/G,MAC3Dy/G,WAAalhH,KAAKumC,gBAAgB66E,mBAAoBC,eAAgBX,aAAa9iE,SACnFujE,aAAenhH,KAAKghH,YAAYE,WAAYD,aACjE,OAAOE,cACHnhH,KAAKumC,gBAAgBxkB,sBAAsBo/F,aAAav5G,UAAWsa,kBAAkBi/F,aAAa1/G,MAAOy/G,WAAWtjE,SACpH,KAER,GAAqBl3C,QAAUu6G,cAAgBjhH,KAAKkkC,gBAAgB88E,YAAYN,eAAkB,IAIlG,OAHKh6G,UACDA,OAA4B1G,KAAKsgH,SAAS//F,IAAImgG,eAE3Ch6G,QAcX8lC,qBAAqBjsC,UAAU+gH,gBAO/B,SAAUZ,cACN,MAAO1gH,MAAKugH,oBAAoBhgG,IAAImgG,eAAiBA,aAAa94G,UAYtE4kC,qBAAqBjsC,UAAUghH,aAM/B,SAAUb,cAKN,GAAIn/F,gBAAgBm/F,aAAa94G,UAC7B,MAAO,KAGX,KADA,GAAqB48B,gBAAiBb,uBAAuB3jC,KAAKqoC,cAAcq4E,eACzEl8E,gBAAkBA,eAAeZ,mBAAoBp8B,eACxDg9B,eAAiBb,uBAAuB3jC,KAAKqoC,cAAc7D,eAAeZ,UAE9E,OAAQY,iBAAkBA,eAAeZ,UAAYY,eAAeZ,SAAS49E,OAAU,MAM3Fh1E,qBAAqBjsC,UAAUkhH,mBAI/B,SAAU75G,UACN,MAAO5H,MAAKygH,2BAA2BlgG,IAAI3Y,WAAa,MAO5D4kC,qBAAqBjsC,UAAUmhH,eAK/B,SAAUC,aAAcC,cACpBD,aAAa9jE,kBACb+jE,aAAa/jE,kBACb79C,KAAKsgH,SAAS9/F,IAAImhG,aAAcC,eAOpCp1E,qBAAqBjsC,UAAUshH,4BAK/B,SAAUhgG,SAAU2hB,YAChBxjC,KAAKygH,2BAA2BjgG,IAAIqB,SAAU2hB,aAalDgJ,qBAAqBjsC,UAAUuhH,eAM/B,SAAUjgG,UACN7hB,KAAKmgH,cAAcrjF,OAAOjb,UAC1B7hB,KAAKqgH,kBAAkBvjF,OAAOjb,SAC9B,IAAqBuiB,SAAUpkC,KAAKwgH,eAAejgG,IAAIsB,SACvD,IAAIuiB,QAAS,CACTpkC,KAAKwgH,eAAe1jF,OAAOjb,SAC3B,KAAK,GAAIjgB,IAAK,EAAGmgH,UAAY39E,QAASxiC,GAAKmgH,UAAUjgH,OAAQF,KAAM,CAC/D,GAAIkiC,QAASi+E,UAAUngH,GACvB5B,MAAKogH,gBAAgBtjF,OAAOgH,QAC5B9jC,KAAKsgH,SAASxjF,OAAOgH,QACrB9jC,KAAKugH,oBAAoBzjF,OAAOgH,WAU5C0I,qBAAqBjsC,UAAUyhH,gBAK/B,SAAUrnE,IACN,GAAqBsnE,UAAWjiH,KAAKkgH,aACrClgH,MAAKkgH,cAAgB,YACrB,KACI,MAAOvlE,MAEX,QACI36C,KAAKkgH,cAAgB+B,WAO7Bz1E,qBAAqBjsC,UAAUogH,sBAI/B,SAAUD,cACN,GAAqB9iE,SAAU8iE,aAAa9iE,QACvBskE,mBAAqBliH,KAAKqoC,cAAcroC,KAAKumC,gBAAgBm6E,aAAa94G,SAAU84G,aAAaj/G,MACtH,KAAKygH,mBACD,MAAO,KAEX,IAAqBC,cAAex+E,uBAAuBu+E,mBAAmBt+E,SAC9E,IAAIu+E,uBAAwB36G,cACxB,MAAO,IAAIw4G,sBAAqBU,aAAc1gH,KAAKumC,gBAAgB47E,aAAav6G,SAAUu6G,aAAa1gH,KAAMm8C,SAE5G,KAAIukE,cAA4C,UAA5BA,aAAat+E,WAKjC,CAED,IAAK,GADgBvgC,OAAQ6+G,aACHp3G,EAAI,EAAGA,EAAI6yC,QAAQ97C,QAAUwB,MAAOyH,IAC1DzH,MAAQA,MAAMs6C,QAAQ7yC,GAE1B,OAAO,IAAIi1G,sBAAqBU,aAAcp9G,OAT9C,MAAI6+G,cAAaC,SAA8B,IAAnBxkE,QAAQ97C,OACzB,GAAIk+G,sBAAqBU,aAAcyB,aAAaC,QAAQxkE,QAAQ,KAU5E,MAMXpR,qBAAqBjsC,UAAUsgH,0BAI/B,SAAUH,cACN,GAAqBh8E,SAAU1kC,KAAKkkC,gBAAgB0hD,eAAe86B,aACnE,OAAOh8E,SAAU,GAAIs7E,sBAAqBU,aAAch8E,QAAQd,UAAY,MAmBhF4I,qBAAqBjsC,UAAUgmC,gBAS/B,SAAUyX,gBAAiBv8C,KAAMm8C,SAC7B,MAAO59C,MAAKigH,kBAAkB1/F,IAAIy9B,gBAAiBv8C,KAAMm8C,UAgB7DpR,qBAAqBjsC,UAAU2nC,cAO/B,SAAUtgC,UACN,GAAqBg8B,UAAW5jC,KAAKqiH,kBAAkBz6G,SACvD,SAAIg8B,SAAmB,UACZpjC,OAAO+2B,KAAKqM,SAAmB,UAAG/R,KAAK,SAAUywF,aACpD,GAAqB5iG,OAAQkkB,SAAmB,SAAE0+E,YAClD,OAAO5iG,QAA8B,UAArBA,MAAMmkB,YAA0BnkB,MAAM6iG,cASlE/1E,qBAAqBjsC,UAAU6nC,aAI/B,SAAUxgC,UACN,GAAqB46G,gBAAiBxiH,KAAKkkC,gBAAgBkE,aAAaxgC,SACxE,IAAI46G,eACA,MAAOA,eAIXxiH,MAAK+gH,iBAAiBn5G,SACtB,IAAqB66G,mBAMrB,OALAziH,MAAKogH,gBAAgBv5G,QAAQ,SAAU29B,gBAC/BA,eAAeV,OAAOl8B,WAAaA,UACnC66G,gBAAgB17G,KAAKy9B,eAAeV,UAGrC2+E,iBAMXj2E,qBAAqBjsC,UAAUwgH,iBAI/B,SAAUn5G,UACN,GAAImhC,OAAQ/oC,IACZ,KAAIA,KAAKqgH,kBAAkBhsF,IAAIzsB,UAA/B,CAGA5H,KAAKqgH,kBAAkBxjF,IAAIj1B,SAC3B,IAAqBw4G,oBACAx8E,SAAW5jC,KAAKqiH,kBAAkBz6G,SAOvD,IANIg8B,SAAmB,UAGnB5jC,KAAKygH,2BAA2BjgG,IAAI5Y,SAAUg8B,SAAmB,UAGjEA,SAAkB,QAsClB,IAAK,GADD8+E,QAAS1iH,KACJ4B,GAAK,EAAGwX,GAAKwqB,SAAkB,QAAGhiC,GAAKwX,GAAGtX,OAAQF,KAAM,CAC7D,GAAI+gH,cAAevpG,GAAGxX,KAtCZ,SAAU+gH,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAO/7G,QAAQ,SAAUg8G,cAClC,GAAqB1gG,WAEjBA,YADwB,gBAAjB0gG,cACMA,aAGAA,aAAajmB,GAE9Bz6E,WAAashB,mBAAmBthB,WAChC,IAAqB2gG,SAAU3gG,UACH,iBAAjB0gG,gBACPC,QAAUr/E,mBAAmBo/E,aAAaphH,MAE9C,IAAqBshH,gBAAiBh6E,MAAMi6E,cAAcL,aAAa1+F,KAAMrc,SAC7E,IAAIm7G,eAAgB,CAChB,GAAqBnB,cAAe74E,MAAMxC,gBAAgBw8E,eAAgBD,SACrDnB,aAAe54E,MAAMxC,gBAAgB3+B,SAAUua,WACpEi+F,iBAAgBr5G,KAAKgiC,MAAMk6E,aAAatB,aAAcC,sBAI7D,CAED,GAAqBmB,gBAAiBL,OAAOM,cAAcL,aAAa1+F,KAAMrc,SAC9E,IAAIm7G,eAAgB,CACqBL,OAAOt6E,aAAa26E,gBAC3Cl8G,QAAQ,SAAU+6G,cAC5B,GAAqBD,cAAe54E,MAAMxC,gBAAgB3+B,SAAUg6G,aAAangH,KACjF2+G,iBAAgBr5G,KAAKgiC,MAAMk6E,aAAatB,aAAcC,oBAQ1De,cAMhB,GAAI/+E,SAAmB,SAAG,CAEtB,GAAqBs/E,uBAAwB,GAAIh/F,KAAI1jB,OAAO+2B,KAAKqM,SAAmB,UAAGh+B,IAAI69B,qBACtE0/E,UAAYv/E,SAAkB,WACnDpjC,QAAO+2B,KAAKqM,SAAmB,UAAG/8B,QAAQ,SAAUy7G,aAChD,GAAqBh6E,YAAa1E,SAAmB,SAAE0+E,aAClC7gH,KAAOgiC,mBAAmB6+E,aAC1Bx+E,OAASiF,MAAMxC,gBAAgB3+B,SAAUnG,MACzC2hH,OAASD,UAAU98G,eAAei8G,cAAgBa,UAAUb,YACjF,IAAIc,OAAQ,CAIR,GAAqBC,gBAAiBt6E,MAAMi6E,cAAcI,OAAQx7G,SAC7Dy7G,gBAIDt6E,MAAMw3E,oBAAoB//F,IAAIsjB,OAAQu/E,gBAHtCt6E,MAAMu6E,YAAY,GAAIh/G,OAAM,wCAA0C8+G,OAAS,SAAWx7G,WAMlGw4G,gBAAgBr5G,KAAKgiC,MAAMw6E,qBAAqBz/E,OAAQl8B,SAAUs7G,sBAAuB56E,eAGjG83E,gBAAgBv5G,QAAQ,SAAU29B,gBAAkB,MAAOuE,OAAMq3E,gBAAgB5/F,IAAIgkB,eAAeV,OAAQU,kBAC5GxkC,KAAKwgH,eAAehgG,IAAI5Y,SAAUw4G,gBAAgBx6G,IAAI,SAAU4+B,gBAAkB,MAAOA,gBAAeV,YAS5G0I,qBAAqBjsC,UAAUgjH,qBAO/B,SAAU5B,aAAc6B,aAAcC,oBAAqB7/E,UACvD,GAAImF,OAAQ/oC,IAMZ,IAAIA,KAAKkkC,gBAAgBc,cAAc28E,aAAa/5G,WAAag8B,UAClC,UAA3BA,SAAqB,WAAe,CACpC,GAAqB8/E,oBAAsB7/E,WAAY,QAAS29E,MAAO59E,SAAS49E,MAChF,OAAO,IAAIxB,sBAAqB2B,aAAc+B,mBAElD,GAAqBC,mBACAC,gBAAkB,WAUnC,MATKD,qBAKDA,kBACI56E,MAAMlC,KAAKg9E,cAAcL,aAAahhH,QAAQ,uBAAwB,OACjEA,QAAQ,wBAAwB,MAEtCmhH,mBAEU9K,KAAO74G,KACxB8jH,qBAAsC,SAAUr5G,QAEhD,QAASq5G,wBACL,MAAkB,QAAXr5G,QAAmBA,OAAOzI,MAAMhC,KAAM6B,YAAc7B,KAkE/D,MApEAC,WAAU6jH,qBAAsBr5G,QAShCq5G,qBAAqBvjH,UAAUsD,eAK/B,SAAU+B,IAAKm+G,gBACX,GAAqBC,UAAWp+G,IAAgB,UAChD,IAAiB,aAAbo+G,SAAyB,CACzB,GAAqBC,QAASF,eAAejiH,MAC7CiiH,gBAAeh9G,KAAK/E,MAAM+hH,eAAiBn+G,IAAgB,eAC3D,IAAqBc,QAAS+D,OAAOlK,UAAUsD,eAAe2wC,KAAKx0C,KAAM4F,IAAKm+G,eAE9E,OADAA,gBAAejiH,OAASmiH,OACjBv9G,OAEN,GAAiB,cAAbs9G,SAsCJ,MAAiB,UAAbA,SACE/hH,YAAa2D,KAAOic,SAAU+hG,oBAG9Bn5G,OAAOlK,UAAUsD,eAAe2wC,KAAKx0C,KAAM4F,IAAKm+G,eAzCvD,IAAqBpkH,QAASiG,IAAY,OACrBiwD,OAASjwD,IAAU,KAAI69B,mBAAmB79B,IAAU,MAAKA,IAAU,IACxF,KAAKiwD,OACD,MAAO,KAEX,IAAqBjuD,cAAW,EAChC,OAAIjI,SACAiI,SAA8BixG,KAAKmK,cAAcrjH,OAAQgiH,aAAa/5G,UACjEA,UAUDi8B,WAAY,WACZC,OAAQ+0E,KAAKtyE,gBAAgB3+B,SAAUiuD,QACvC7rB,KAAMpkC,IAAU,KAChB5C,UAAW4C,IAAe,UAC1Bic,SAAU+hG,oBAZN//E,WAAY,QACZ3yB,QAAS,qBAAuBvR,OAAS,gBAAkBgiH,aAAa/5G,SAAW,IACnFoiC,KAAMpkC,IAAU,KAChB5C,UAAW4C,IAAe,UAC1Bic,SAAU+hG,oBAWbG,eAAe7gH,QAAQ2yD,SAAW,GAE9BhyB,WAAY,YAAapiC,KAAMo0D,QAGpC4tD,oBAAoBpvF,IAAIwhC,QACjBgjD,KAAKtyE,gBAAgBi9E,aAAc3tD,YAD9C,IAcLiuD,sBACTtpE,kBACmB0pE,gBAAkB7gH,WAAWugC,SAAU,GAAIkgF,0BAC3CK,yBAA2BxgF,uBAAuBugF,gBACvE,OAAIC,oCAAoC38G,cAC7BxH,KAAKijH,aAAatB,aAAcwC,0BAEpC,GAAInE,sBAAqB2B,aAAcuC,kBAOlD13E,qBAAqBjsC,UAAU0iH,aAK/B,SAAUtB,aAAcC,cAWpB,MAVAD,cAAa9jE,kBACb+jE,aAAa/jE,kBACT79C,KAAKkkC,gBAAgBc,cAAc28E,aAAa/5G,WAChD5H,KAAKkkC,gBAAgBc,cAAc48E,aAAah6G,WAKhD5H,KAAKsgH,SAAS9/F,IAAIohG,aAAc5hH,KAAKghH,YAAYW,eAAiBA,cAE/D,GAAI3B,sBAAqB2B,aAAcC,eAQlDp1E,qBAAqBjsC,UAAU+iH,YAM/B,SAAU3+F,SAAUnhB,QAASgH,MACzB,IAAIxK,KAAKkgH,cAIL,KAAMv7F,SAHN3kB,MAAKkgH,cAAcv7F,SAAWnhB,SAAWA,QAAQoE,UAAa4C,OAUtEgiC,qBAAqBjsC,UAAU8hH,kBAI/B,SAAU1iH,QACN,GAAqBykH,gBAAiBpkH,KAAKmgH,cAAc5/F,IAAI5gB,OAC7D,KAAKykH,eAAgB,CACjB,GAAqBC,iBAAkBrkH,KAAK6mC,KAAKy9E,eAAe3kH,OAChE,IAAI0kH,gBAAiB,CACjB,GAAqBE,eAAgB,CACrCF,iBAAgBx9G,QAAQ,SAAU29G,IAC1BA,IAAMA,GAAY,QAAID,eACtBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACMvgF,WAAY,SAAUm1C,QAjpBb,EAipBgDr5E,OAAQA,OAAQikC,cAjpBhE,GAmpBfwgF,eAAwB,QAA+B,CACvD,GAAqBK,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiBzkH,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqBykH,eAAwB,QAAI,cACxGpkH,MAAKsjH,YAAY,GAAIh/G,OAAMmgH,eAE/BzkH,KAAKmgH,cAAc3/F,IAAI7gB,OAAQykH,gBAEnC,MAAOA,iBAQX53E,qBAAqBjsC,UAAUmkH,kBAM/B,SAAU/kH,OAAQwiB,WAAYwiG,gBAC1B,GAAqB/8G,UAAW5H,KAAKgjH,cAAcrjH,OAAQglH,eAC3D,OAAK/8G,UAKE5H,KAAKumC,gBAAgB3+B,SAAUua,aAJlCniB,KAAKsjH,YAAY,GAAIh/G,OAAM,4BAA8B3E,QAAUglH,eAAiB,gBAChFA,eAAiB,MACd3kH,KAAKumC,gBAAgB,SAAW5mC,OAAQwiB,cASvDqqB,qBAAqBjsC,UAAUyiH,cAK/B,SAAUrjH,OAAQglH,gBACd,IACI,MAAO3kH,MAAK6mC,KAAK+9E,qBAAqBjlH,OAAQglH,gBAElD,MAAwBrrG,GACpB0zB,QAAQ5oC,MAAM,6BAA+BzE,OAAS,sBAAwBglH,gBAC9E3kH,KAAKsjH,YAAYhqG,MAAGpV,GAAWygH,gBAEnC,MAAO,OAEJn4E,wBA6FPjI,iBAAkC,SAAU95B,QAE5C,QAAS85B,kBAAiBJ,eAAgBD,gBAAiBF,aACvD,GAAI+E,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAWjC,OAVA+oC,OAAM5E,eAAiBA,eACvB4E,MAAM7E,gBAAkBA,gBACxB6E,MAAM/E,YAAcA,YACpB+E,MAAM3E,WACN2E,MAAM87E,cAAgB,GAAI37F,KAC1B6f,MAAM+7E,aAAe,GAAI57F,KACzB6f,MAAMg8E,yBAA2B,GAAI77F,KACrC6f,MAAMi8E,sBACNj8E,MAAMhE,mCAAqC,GAAI7b,KAC/C6f,MAAMvF,WAAaW,eAAes9E,mBAAmBz9E,aAC9C+E,MAoOX,MAjPA9oC,WAAUskC,iBAAkB95B,QAmB5B85B,iBAAiBhkC,UAAUkkC,WAI3B,SAAUC,SACN,GAAIqE,OAAQ/oC,KACSilH,mBAAqBjlH,KAAK+kC,mCAAmCxkB,IAAImkB,QAAQZ,QACzEohF,iBAAmBllH,KAAK+kH,yBAAyBxkG,IAAImkB,QAAQZ,OAQlF,IAPKmhF,qBACDA,oBAAuBnhF,OAAQY,QAAQZ,OAAQF,aAAU1/B,IACzDlE,KAAK+kC,mCAAmCvkB,IAAIkkB,QAAQZ,OAAQmhF,oBAC5DC,kBAAqBphF,OAAQ9jC,KAAKmlH,aAAazgF,QAAQZ,OAAQ,IAC/D9jC,KAAKglH,mBAAmBj+G,KAAKm+G,kBAC7BllH,KAAK+kH,yBAAyBvkG,IAAIkkB,QAAQZ,OAAQohF,oBAEjDD,mBAAmBrhF,UAAYc,QAAQd,SAAU,CAClD,GAAqBwhF,YAAa1gF,QAAQd,YAC1C,IAA8B,UAA1BwhF,WAAWvhF,WAAwB,CASnC,GAAqBwhF,WACrB7kH,QAAO+2B,KAAK6tF,YAAYv+G,QAAQ,SAAU6sB,UACrB,eAAbA,WACA2xF,QAAQ3xF,UAAY0xF,WAAW1xF,aAGvC0xF,WAAaC,YAERz/E,QAAOw/E,cACPv/E,eAAeu/E,aAAgBt/E,uBAAuBs/E,cAGvDA,YACIvhF,WAAY,QACZ3yB,QAAS,8CAQrB,IAFA+zG,mBAAmBrhF,SAAWwhF,WAC9BF,iBAAiBthF,SAAW5jC,KAAKmlH,aAAaC,WAAY,GACtDA,qBAAsB59G,eACtBxH,KAAKkkC,gBAAgBc,cAAcogF,WAAWx9G,UAAW,CACzD,GAAqB09G,mBAAoBtlH,KAAKokC,QAA2BpkC,KAAK6kH,cAActkG,IAAI6kG,YAC3F9iG,iBAAgBgjG,kBAAkB7jH,OAOnCzB,KAAK8kH,aAAatkG,IAAI8kG,kBAAmB5gF,QAAQZ,SAI7D,IAAKmhF,mBAAmB7+G,MAAQs+B,QAAQt+B,OACpC6+G,mBAAmB7+G,KAAOs+B,QAAQt+B,KAIlC8+G,iBAAiB9+G,KAAOpG,KAAKmlH,aAAazgF,QAAQt+B,KAAM,GAGpDs+B,QAAQt+B,KAAKq5C,cAAgBtB,mBAAmB/8C,UAAU,CAC1D,GAAqBmkH,iBAAoC7gF,QAAY,IACrE6gF,iBAAgB3lE,mBAAmBh3C,OAAO28G,gBAAgB1lE,eAAeh5C,QAAQ,SAAUyC,IACvF,GAAqBw6B,QAASx6B,GAAGhC,SACjC,IAAIyhC,MAAM7E,gBAAgBc,cAAclB,OAAOl8B,YAC1CmhC,MAAMhE,mCAAmC1Q,IAAIyP,QAAS,CACvD,GAAqB0hF,WAAYz8E,MAAM7E,gBAAgB0hD,eAAe9hD,OAClE0hF,YACAz8E,MAAMtE,WAAW+gF,gBAUzCjhF,iBAAiBhkC,UAAU8e,UAG3B,WACI,GAAI0pB,OAAQ/oC,KACS80B,WA4BrB,QAAS6P,KA3BmBmZ,KAAKp4C,WAC7B89B,WAAYxjC,KAAKwjC,WACjBiiF,UAAWzlH,KAAKglH,mBAChB5gF,QAASpkC,KAAKokC,QAAQx+B,IAAI,SAAUk+B,OAAQ1+B,OACxC0+B,OAAO+Z,iBACP,IAAqByiE,cAA4B,EACjD,IAAIv3E,MAAM7E,gBAAgBc,cAAclB,OAAOl8B,UAAW,CACtD,GAAqB89G,gBAAiB38E,MAAM+7E,aAAavkG,IAAIujB,OAC7D,IAAI4hF,eACApF,SAA8Bv3E,MAAM87E,cAActkG,IAAImlG,oBAErD,CACD,GAAqBhhF,SAAUqE,MAAMhE,mCAAmCxkB,IAAIujB,OACvEY,UAAYA,QAAQd,UAA4C,cAAhCc,QAAQd,SAASC,aAClDy8E,SAAWx8E,OAAOriC,KAAO,IAAM2D,MAC/B0vB,SAAS/tB,MAAO+8B,OAAQA,OAAQhP,SAAUwrF,aAItD,OACIqF,SAAUvgH,MACV3D,KAAMqiC,OAAOriC,KACbmG,SAAUmhC,MAAM7E,gBAAgB0hF,kBAAkB9hF,OAAOl8B,SAAUmhC,MAAM/E,aACzEs8E,SAAUA,cAIDxrF,SAAUA,WAOnCyP,iBAAiBhkC,UAAU4kH,aAK3B,SAAU7hH,MAAO4nB,OACb,MAAO7nB,YAAWC,MAAOtD,KAAMkrB,QAOnCqZ,iBAAiBhkC,UAAUwD,WAK3B,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cAAc,CAC/B,GAAqB05G,YAAalhH,KAAKmkC,eAAeoC,gBAAgBjjC,MAAMsE,SAAUtE,MAAM7B,KAE5F,QAASkkH,SADoB3lH,KAAK6lH,kBAAkB3E,WAAY19G,SACtCo6C,QAASt6C,MAAMs6C,WAUjDrZ,iBAAiBhkC,UAAUslH,kBAO3B,SAAU3E,WAAYh2F,OAClB,GAAqB9lB,OAAQpF,KAAK6kH,cAActkG,IAAI2gG,YAC/Bx8E,QAAU,IAC/B,IAAY,EAARxZ,OACAlrB,KAAKkkC,gBAAgBc,cAAck8E,WAAWt5G,UAAW,CACzD,GAAI5H,KAAK+kC,mCAAmC1Q,IAAI6sF,YAG5C,MAAwB,MAE5Bx8E,SAAU1kC,KAAK8lH,YAAY5E,YACvBx8E,SAAWA,QAAQd,mBAAoBp8B,gBAEvCpC,MAAQpF,KAAK6lH,kBAAkBnhF,QAAQd,SAAU1Y,OAEjDwZ,QAAU,UAGb,IAAa,MAATt/B,MAGL,MAAOA,MAWX,OARa,OAATA,QACAA,MAAQpF,KAAKokC,QAAQtiC,OACrB9B,KAAKokC,QAAQr9B,KAAKm6G,aAEtBlhH,KAAK6kH,cAAcrkG,IAAI0gG,WAAY97G,OAC/Bs/B,SACA1kC,KAAKykC,WAAWC,SAEbt/B,OAMXm/B,iBAAiBhkC,UAAUulH,YAI3B,SAAUhiF,QACN,GAAqBY,SAAU1kC,KAAKkkC,gBAAgB0hD,eAAe9hD,OACnE,KAAKY,QAAS,CAIV,GAAqBF,gBAAiBxkC,KAAKmkC,eAAekE,cAAcvE,OACpEU,kBACAE,SAAYZ,OAAQU,eAAeV,OAAQF,SAAUY,eAAeZ,WAG5E,MAAOc,UAEJH,kBACTiW,kBACE3V,iBAAkC,WAClC,QAASA,kBAAiBlH,UAAWwG,eAAgBD,iBACjDlkC,KAAK29B,UAAYA,UACjB39B,KAAKmkC,eAAiBA,eACtBnkC,KAAKkkC,gBAAkBA,gBACvBlkC,KAAKg1C,QAwMT,MAjMAnQ,kBAAiBtkC,UAAUukC,cAK3B,SAAUJ,QAASd,UACf5jC,KAAKg1C,KAAKjuC,MAAO29B,QAASA,QAASd,SAAUA,SAAUmiF,WAAW,KAMtElhF,iBAAiBtkC,UAAU0kC,WAI3B,SAAUP,SACN1kC,KAAKg1C,KAAKjuC,MAAO29B,QAASA,QAASd,SAAU,KAAMmiF,WAAW,KAMlElhF,iBAAiBtkC,UAAU8e,UAI3B,SAAU2mG,aAGN,IAAK,GAFDj9E,OAAQ/oC,KACSimH,iBAAmB,GAAI/8F,KACnCtnB,GAAK,EAAGskH,cAAgBF,YAAapkH,GAAKskH,cAAcpkH,OAAQF,KAAM,CAC3E,GAAIwX,IAAK8sG,cAActkH,IAAKkiC,OAAS1qB,GAAG0qB,OAAQhP,SAAW1b,GAAG0b,QAC9DmxF,kBAAiBzlG,IAAIsjB,OAAQhP,UAGjC,IAAK,GADgBqxF,iBAAkB,GAAIjiG,KAClC3K,GAAK,EAAGQ,GAAK/Z,KAAKg1C,KAAMz7B,GAAKQ,GAAGjY,OAAQyX,KAAM,CACnD,GAAIc,IAAKN,GAAGR,IAAKmrB,QAAUrqB,GAAGqqB,QAASd,SAAWvpB,GAAGupB,SAAUmiF,UAAY1rG,GAAG0rG,SAC9E,IAAIrhF,QAAQ+a,cAAgBtB,mBAAmB/8C,SAAU,CAKrD+kH,gBAAgBtpF,IAAI6H,QAAQt+B,KAAKkB,UAEjC,KAAK,GADgB4hF,YAA8B,QAC1C5uE,GAAK,EAAGqjC,GAAKurC,WAAWphD,QAASxtB,GAAKqjC,GAAG77C,OAAQwY,KAAM,CAC5D,GAAI6uE,KAAMxrC,GAAGrjC,GACb6rG,iBAAgBtpF,IAAIssD,IAAI7hF,YAGhC,IAAKy+G,UAAW,CACkB7jG,kBAAkBwiB,QAAQt+B,KAAKkB,UAAU7F,KACvE+jC,6BAA4BxlC,KAAK29B,UAAW+G,QAAQt+B,KAAKkB,UAAWtH,KAAKomH,yBAAyB1hF,QAA0B,YAGpIyhF,gBAAgBt/G,QAAQ,SAAUw/G,gBAC9B,GAAIt9E,MAAM7E,gBAAgBc,cAAcqhF,eAAez+G,UAAW,CAC9D,GAAqBktB,UAAWmxF,iBAAiB1lG,IAAI8lG,iBAAmBA,eAAe5kH,KAClE6kH,gBAAkBpkG,kBAAkB4S,SACzDiU,OAAMpL,UAAUhE,WAAW5yB,KAAKmf,SAASogG,iBACpC9lG,IAAIuoB,MAAMw9E,oBAAoBF,iBAC9B9tF,WAAW,MAAOC,aAAamN,gBAShDd,iBAAiBtkC,UAAU6lH,yBAK3B,SAAU1hF,QAASd,UACf,GAAImF,OAAQ/oC,KACSwT,aAAexT,KAAKwmH,iBAAiB9hF,UACrCjc,YACrB,IAAImb,mBAAoB+b,yBACpBnsC,YAAYzM,KAAK/E,MAAMwR,YAIvBowB,SAAS0F,mBAAmB1gC,OAAOg7B,SAAS2F,eACvC3jC,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAClCsB,OAAOg7B,SAAShB,iBAAiBkF,QAAQliC,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAC3E4b,OAAO,SAAU3b,KAAO,MAAOA,OAAQq8B,SAASx9B,KAAKkB,aACrD1B,IAAI,SAAU2B,KAAO,MAAOwhC,OAAMw9E,oBAAoBh/G,QAG3DkhB,UAAYmb,SAASnb,cAEpB,IAAIic,QAAQ+a,cAAgBtB,mBAAmBt9C,UAAW,CAC3D,GAAqBsmF,YAA8B,OACnD1+D,WAAY0+D,WAAW1+D,UAAU7f,OAAOu+E,WAAW19D,eAWvD,MALAjW,aAAYzM,KAAK/E,MAAMwR,YAAaiV,UAAUvF,OAAO,SAAU8E,UAAY,QAASA,SAASI,WAAaxiB,IAAI,SAAUoiB,UACpH,MAAO+gB,OAAMy9E,kBACT/mE,YAAatB,mBAAmBC,WAAYh4C,KAAM4hB,SAASI,cAG5DzB,WAAWnT,cAMtBqxB,iBAAiBtkC,UAAUgmH,oBAI3B,SAAUE,YACN,GAAqBC,mBAAoB1mH,KAAKmkC,eAAeoC,gBAAgBxkB,sBAAsB0kG,WAAW7+G,UAAWsa,kBAAkBukG,WAAWhlH,MACtJ,OAAOzB,MAAK29B,UAAUvX,WAAWsgG,oBAMrC7hF,iBAAiBtkC,UAAUimH,iBAI3B,SAAUxxE,MACN,GAAqBrX,WAAY39B,KAAK29B,SA+DtC,OAAOt6B,YAAW2xC,KAAM,IA9DS,WAC7B,QAAS2xE,gBA2DT,MApDAA,aAAYpmH,UAAUoD,WAKtB,SAAUqL,IAAKxL,SACX,GAAIulC,OAAQ/oC,IACZ,OAAO2mB,YAAW3X,IAAIpJ,IAAI,SAAU8Z,OAAS,MAAOrc,YAAWqc,MAAOqpB,MAAOvlC,aAOjFmjH,YAAYpmH,UAAUsD,eAKtB,SAAU+B,IAAKpC,SACX,GAAIulC,OAAQ/oC,IACZ,OAAO,IAAI8mB,gBAAetmB,OAAO+2B,KAAK3xB,KAAKA,IAAI,SAAUqO,KAAO,MAAO,IAAI8S,iBAAgB9S,IAAK5Q,WAAWuC,IAAIqO,KAAM80B,MAAOvlC,UAAU,OAO1ImjH,YAAYpmH,UAAUuD,eAKtB,SAAUR,MAAOE,SAAW,MAAOqkB,SAAQvkB,QAM3CqjH,YAAYpmH,UAAUwD,WAKtB,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cACjB,MAAOm2B,WAAUvX,WAAW9iB,MAG5B,MAAM,IAAIgB,OAAM,oCAAsChB,QAGvDqjH,gBAEgC,OAExC9hF,oBAEPQ,qBAAsC,SAAU56B,QAEhD,QAAS46B,sBAAqBF,YAAajB,iBACvC,GAAI6E,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAGjC,OAFA+oC,OAAM5D,YAAcA,YACpB4D,MAAM7E,gBAAkBA,gBACjB6E,MAqDX,MA1DA9oC,WAAUolC,qBAAsB56B,QAYhC46B,qBAAqB9kC,UAAU+kC,YAK/B,SAAUF,gBAAiBT,MACvB,GAAIoE,OAAQ/oC,KACSg1C,KAAO8I,KAAKhqB,MAAM6Q,MAClBiiF,cACrB5mH,MAAKokC,QAAU4Q,KAAK5Q,QAAQx+B,IAAI,SAAUihH,kBACtC,MAAO99E,OAAM5D,YAAY5kB,IAAIwoB,MAAM7E,gBAAgB4iF,oBAAoBD,iBAAiBj/G,SAAUw9B,iBAAkByhF,iBAAiBplH,QAEzIuzC,KAAK5Q,QAAQv9B,QAAQ,SAAUggH,iBAAkBzhH,OAC7C,GAAqB0+B,QAASiF,MAAM3E,QAAQh/B,OACvBk7G,SAAWuG,iBAAiBvG,QACzB,iBAAbA,UACPsG,YAAY7/G,MAAO+8B,OAAQA,OAAQw8E,SAAUv3E,MAAM3E,QAAQk8E,YAElC,gBAAbA,WACZsG,YAAY7/G,MAAO+8B,OAAQA,OAAQw8E,SAAUv3E,MAAM5D,YAAY5kB,IAAIS,kBAAkBokB,iBAAkBk7E,aAG/G,IAAqBmF,WAA8BpiH,WAAW2xC,KAAKywE,UAAWzlH,KAAM,KACpF,QAASwjC,WAAYwR,KAAKxR,WAAYiiF,UAAWA,UAAWnF,SAAUsG,cAO1EvhF,qBAAqB9kC,UAAUsD,eAK/B,SAAU+B,IAAKpC,SACX,GAAI,YAAcoC,KAAK,CACnB,GAAqBs7G,YAAalhH,KAAKokC,QAAQx+B,IAAc,UACxCg4C,QAAUh4C,IAAa,OAC5C,OAAOg4C,SAAQ97C,OAAS9B,KAAKmlC,YAAY5kB,IAAI2gG,WAAWt5G,SAAUs5G,WAAWz/G,KAAMm8C,SAC/EsjE,WAGJ,MAAOz2G,QAAOlK,UAAUsD,eAAe2wC,KAAKx0C,KAAM4F,IAAKpC,UAGxD6hC,sBACTmV,kBAoCEusE,eACAC,MAAO,EACPC,UAAW,EACXntE,IAAK,EAETitE,eAAcA,cAAcC,OAAS,QACrCD,cAAcA,cAAcE,WAAa,YACzCF,cAAcA,cAAcjtE,KAAO,KACnC,IAAIpL,aAA6B,WAC7B,QAASA,aAAYyjB,QAAS+0D,SAAUC,MAAO3yD,WAAY4yD,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,mBAAoBC,kBAAmBC,eAAgB5jC,iBAAkB6jC,iBACnM3nH,KAAKmyD,QAAUA,QACfnyD,KAAKknH,SAAWA,SAChBlnH,KAAKmnH,MAAQA,MACbnnH,KAAKw0D,WAAaA,WAClBx0D,KAAKonH,kBAAoBA,kBACzBpnH,KAAKqnH,gBAAkBA,gBACvBrnH,KAAKsnH,eAAiBA,eACtBtnH,KAAKunH,cAAgBA,cACrBvnH,KAAKwnH,mBAAqBA,mBAC1BxnH,KAAKynH,kBAAoBA,kBACzBznH,KAAK0nH,eAAiBA,eACtB1nH,KAAK8jF,iBAAmBA,iBACxB9jF,KAAK2nH,gBAAkBA,gBACvB3nH,KAAK4nH,kBAAoB,GAAI1+F,KAC7BlpB,KAAK6nH,eAAiB,GAAI3+F,KAmxB9B,MA9wBAwlB,aAAYnuC,UAAU8xD,WAGtB,WAAcryD,KAAKonH,kBAAkB/0D,cAKrC3jB,YAAYnuC,UAAUunH,mBAItB,SAAUC,WACN,GAAIh/E,OAAQ/oC,KACSgoH,cAAgB9gF,4BAA4B6gF,UAAW/nH,KAAKmnH,MAAOnnH,KAAK2nH,gBAAiB3nH,KAAKonH,kBAInH,OAHAY,eAAcpgF,UAAU/gC,QAAQ,SAAUghC,UACtC,MAAOkB,OAAMq+E,kBAAkB5/B,qCAAqC3/C,SAASzhC,KAAKkB,WAAW,KAE1F0gH,eAMXt5E,YAAYnuC,UAAU0nH,oBAItB,SAAUF,WACN,GAAIh/E,OAAQ/oC,KACSgoH,cAAgB9gF,4BAA4B6gF,UAAW/nH,KAAKmnH,MAAOnnH,KAAK2nH,gBAAiB3nH,KAAKonH,kBACnH,OAAOtsE,SACFF,IAAIotE,cAAcpgF,UAAUhiC,IAAI,SAAUiiC,UAC3C,MAAOkB,OAAMq+E,kBAAkB5/B,qCAAqC3/C,SAASzhC,KAAKkB,WAAW,MAE5Ff,KAAK,WAAc,MAAOyhH,kBAMnCt5E,YAAYnuC,UAAU2nH,aAItB,SAAUrmG,UACN,GAAqB6lB,cAAe1nC,KAAK6nH,eAAetnG,IAAIsB,SAM5D,OALK6lB,gBACDA,aACIC,YAAY3nC,KAAKmnH,MAAOnnH,KAAK2nH,gBAAiB3nH,KAAKonH,kBAAmBvlG,UAC1E7hB,KAAK6nH,eAAernG,IAAIqB,SAAU6lB,eAE/BA,cAMXgH,YAAYnuC,UAAU4nH,uBAItB,SAAUtmG,UACN,GAAIknB,OAAQ/oC,KACSooH,gBACA/lF,KAAOriC,KAAKkoH,aAAarmG,WAM1C7hB,KAAKknH,SAASmB,wBAA0BhmF,KAAKtZ,WAAWjnB,QAAUugC,KAAK2F,MAAMlmC,QAC7EugC,KAAK4F,YAAYnmC,QAAUugC,KAAKuF,UAAU9lC,QAAUugC,KAAK8F,yBACzDigF,aAAarhH,KAAKia,kBAAkBqhB,KAAKxgB,UAAU,IAC/C7hB,KAAKknH,SAASoB,uBACdF,aAAarhH,KAAKgb,sBAAsBsgB,KAAKxgB,UAAU,IAG/D,IAAqBukB,YAAahlB,uBAAuBD,sBAAsBkhB,KAAKxgB,UAAU,GAAM,GAoBpG,OAnBAwgB,MAAKtZ,WAAWliB,QAAQ,SAAU0hH,WAC9B,GAAqBt/G,UAA8B8/B,MAAMq+E,kBAAkBlhC,kCAAkCqiC,WAAa3kF,QACrH36B,UAASogB,aAKdpgB,SAAkB,SAAEs1C,UAAU13C,QAAQ,SAAUgtD,UAC5C,GAAqB20D,eAAgBz/E,MAAMo+E,MAAMn7E,uBAAuB6nB,SAAUxxB,KAAKxgB,SACvF,KAAK2mG,cACD,KAAMjkH,aAAY,6BAA+BsvD,SAAW,gBAAkBxxB,KAAKxgB,SAEvF,IAAqBskB,YAAgCl9B,SAAkB,SAAEw1C,eAAiB1V,MAAMopB,QAAQjlB,wBAA0BC,kBAAkBC,QACpJg7E,cAAarhH,KAAKy/B,iBAAiBgiF,cAAeriF,UAAWC,aACzD2C,MAAMm+E,SAASmB,wBACfD,aAAarhH,KAAKy/B,iBAAiBgiF,eAAgBriF,UAAWC,iBAInEgiF,cAOX15E,YAAYnuC,UAAUkoH,cAKtB,SAAUC,YAAaC,kBACnB,GAAqBhrF,WAAY39B,KAAK4oH,qBAAqBF,YAC3D,IAAIA,YAAYlnG,SAAS,iBAAkB,CACvC,IAAKmnG,iBACD,KAAM,IAAIrkH,OAAM,6EAA+EokH,YAEnG,IAAqBG,cAAe7oH,KAAKkoH,aAAaS,iBACtD3oH,MAAK8oH,qBAAqBnrF,UAAWkrF,aAAc9B,cAAcC,WAEhE,IAAI0B,YAAYlnG,SAAS,kBAC1B,GAAIxhB,KAAKknH,SAASoB,sBAAuB,CACrC,IAAKK,iBACD,KAAM,IAAIrkH,OAAM,6EAA+EokH,YAEnG,IAAqBG,cAAe7oH,KAAKkoH,aAAaS,iBACtD5iF,kBAAiBpI,WACjBkrF,aAAajhF,UAAU/gC,QAAQ,SAAUghC,UAErCtC,iBAAiB5H,UAAWkK,SAASzhC,KAAKkB,kBAI7CohH,aAAYlnG,SAAS,gBAC1BukB,iBAAiBpI,UAOrB,OAAO39B,MAAK+oH,qBAAqB,UAAWprF,YAOhD+Q,YAAYnuC,UAAUyoH,kBAKtB,SAAUN,YAAaC,kBACnB,GAAqBE,cAAe7oH,KAAKkoH,aAAaS,kBACjChrF,UAAY39B,KAAK4oH,qBAAqBF,YAI3D,OAHIA,aAAYlnG,SAAS,kBACrBxhB,KAAK8oH,qBAAqBnrF,UAAWkrF,aAAc9B,cAAcE,WAE9DtpF,UAAUhE,WAAW73B,OAAS,EACjC9B,KAAK+oH,qBAAqBF,aAAahnG,SAAU8b,WACjD,MAMR+Q,YAAYnuC,UAAU0oH,eAItB,SAAUriF,WACN,GAAImC,OAAQ/oC,KACSunC,MAAQX,UAAUhhC,IAAI,SAAUic,UAAY,MAAOknB,OAAMm/E,aAAarmG,YACtEqnG,kBAMrB,OALA3hF,OAAM1gC,QAAQ,SAAUw7B,MACpB,MAAOA,MAAKuF,UAAU/gC,QAAQ,SAAUghC,UACpC,MAAOqhF,iBAAgBniH,KAAKgiC,MAAMq+E,kBAAkB5/B,qCAAqC3/C,SAASzhC,KAAKkB,WAAW,QAGnHwzC,QAAQF,IAAIsuE,iBAAiB3iH,KAAK,SAAUka,GAAK,MAAO+oB,yBAAwBjC,UAM3FmH,YAAYnuC,UAAU4oH,cAItB,SAAUviF,WACN,GAAImC,OAAQ/oC,KACSunC,MAAQX,UAAUhhC,IAAI,SAAUic,UAAY,MAAOknB,OAAMm/E,aAAarmG,WAM3F,OALA0lB,OAAM1gC,QAAQ,SAAUw7B,MACpB,MAAOA,MAAKuF,UAAU/gC,QAAQ,SAAUghC,UACpC,MAAOkB,OAAMq+E,kBAAkB5/B,qCAAqC3/C,SAASzhC,KAAKkB,WAAW,OAG9FkiC,wBAAwBjC,QAQnCmH,YAAYnuC,UAAUuoH,qBAMtB,SAAUnrF,UAAW0E,KAAM+mF,WACvB,GAAIrgF,OAAQ/oC,KACSwxG,YAAc,CACnCnvE,MAAKuF,UAAU/gC,QAAQ,SAAU6wF,aAAc2xB,eAO3CtgF,MAAM0+E,kBAAkBxvB,WAAWt6D,UAAW+5D,aAAatxF,KAAKkB,UAKhE,IAAqBme,oBAAqBiyE,aAAa90D,iBAAiB7Z,WAAWnjB,IAAI,SAAU1F,GAAK,MAAOA,GAAEoH,YAAcsB,OAAO8uF,aAAa90D,iBAAiBoF,MAAMpiC,IAAI,SAAU1F,GAAK,MAAOA,GAAEoH,YAAeowF,aAAa33C,gBAAgBn6C,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,YAAeowF,aAAa13C,gBAAgBp6C,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,YAAeyhC,MAAMugF,+BAA+B/7F,YAAYqT,YAAarT,YAAYmT,cACla+wE,sBAAwB,GAAIvoF,IACjDzD,oBAAmB5e,QAAQ,SAAUU,IAAKgiH,WACtC9X,sBAAsBjxF,IAAIjZ,IAAK,QAAU8hH,cAAgB,IAAME,aAEnE9X,sBAAsB5qG,QAAQ,SAAUmlF,QAAS1kF,WAC7Cq2B,UAAUhE,WAAW5yB,KAAKmf,SAAS8lE,SAC9BxrE,IAAIoM,UAAUyL,KAAKpM,eACnBsM,WAAW9R,eAAekX,UAAUvX,WAAW9e,UAA4B,MAA4C,QAE5H8hH,UAAYrC,cAAcE,WAE1BvvB,aAAapuD,mBAAmBziC,QAAQ,SAAU2iH;2FAC9C,GAAqBvgH,UAAW8/B,MAAMq+E,kBAAkBngC,qBAAqBuiC,MAAMliH,UAC9E2B,UAASogB,cAGdmoF,cACAzoE,MAAM0gF,sBAAsB9rF,UAAW10B,SAAS7C,KAAKkB,UAAU7F,KAAO,SAAW+vG,YAAa9Z,aAAc3uD,MAAMq+E,kBAAkBvhC,yBAAyB58E,WAAYA,SAAS7C,MAAOqrG,uBACzL1oE,MAAM0gF,sBAAsB9rF,UAAW10B,SAAS7C,KAAKkB,UAAU7F,KAAO,IAAM+vG,YAAa9Z,aAAczuF,SAAUyuF,aAAa90D,iBAAiB7Z,WAAY0oF,4BAInI,IAAhC9zE,UAAUhE,WAAW73B,QACrBikC,iBAAiBpI,YAOzB+Q,YAAYnuC,UAAU+oH,8BAItB,SAAU7sE,YAEN,IAAK,GADgB/1C,WACZ9E,GAAK,EAAG8nH,aAAejtE,WAAY76C,GAAK8nH,aAAa5nH,OAAQF,KAAM,CACxE,GAAI0F,WAAYoiH,aAAa9nH,IACR+D,MAAQ+c,gCAAgC1iB,KAAKw0D,WAAYltD,UAC1E3B,OAAM8B,YACNf,OAAOK,KAAKpB,MAAM8B,WAAWH,WAGrC,MAAOZ,SAWXgoC,YAAYnuC,UAAUkpH,sBAStB,SAAU3+F,IAAK0mF,YAAa9nG,WAAYT,SAAU8f,WAAY0oF,uBAC1D,GAAIr4F,IAAKpZ,KAAK2pH,eAAe1gH,SAAUS,WAAYqf,YAAa6gG,eAAiBxwG,GAAGqlB,SAAU0qE,UAAY/vF,GAAG4uB,OAC5GzuB,GAAKuR,IAAI6O,YAAY5yB,KAAK/E,MAAMuX,GAAIvZ,KAAKwnH,mBAAmBhpF,iBAAiBgzE,YAAavoG,SAAU2gH,eAAgBzgB,UAAWsI,sBAAuB3mF,KACvJ,IAAIvR,KAORm1B,YAAYnuC,UAAUspH,kBAKtB,SAAU7B,cAAe7vC,QACrB,GAAIpvC,OAAQ/oC,KACSsyB,UACAqa,WAAa,GAAIE,YAEjBi9E,cAAgB,GAAIxP,eAAc3tE,iBAAoBwrC,OAe3E,IAdA6vC,cAAczgF,MAAM1gC,QAAQ,SAAUw7B,MAClC,GAAqB0nF,aACrB1nF,MAAKtZ,WAAWliB,QAAQ,SAAUmuD,eAC9B,GAAqB0vB,SAAU37C,MAAMq+E,kBAAkBngC,qBAAqBjyB,cACxE0vB,UAAWA,QAAQr7D,aACnB0gG,UAAUhjH,KAAK29E,WAGvBqlC,UAAUljH,QAAQ,SAAUoC,UACxB,GAAqB40E,MAA6C50E,SAAkB,SAAW,SAC1EiN,oBAAsB4rC,oBAAoBC,UAA6B94C,SAAkB,SAAE61C,cAChHxsB,QAAOvrB,KAAK/E,MAAMswB,OAA2Bw3F,cAAcvP,mBAAmB18B,KAAMx7C,KAAKxgB,SAAU3L,0BAGvGoc,OAAOxwB,OACP,KAAM,IAAIwC,OAAMguB,OAAO1sB,IAAI,SAAU0T,GAAK,MAAOA,GAAEtT,aAAeH,KAAK,MAE3E,OAAOikH,gBAMXp7E,YAAYnuC,UAAUypH,sBAItB,SAAU5wG,IACN,GAAI2vB,OAAQ/oC,KACRmpC,0BAA4B/vB,GAAG+vB,yBAEnC,OAFsE/vB,IAAGmuB,MAE5D/+B,OAAO,SAAU24F,EAAG9+D,MAE7B,MADA8+D,GAAEp6F,KAAK/E,MAAMm/F,EAAGp4D,MAAMkhF,mBAAmB5nF,KAAKxgB,SAAUsnB,0BAA2B9G,KAAKtZ,WAAYsZ,KAAK2F,MAAO3F,KAAKuF,UAAWvF,KAAK4F,cAC9Hk5D,QAYfzyD,YAAYnuC,UAAU0pH,mBAStB,SAAUpoG,SAAUsnB,0BAA2BpgB,WAAYif,MAAOJ,UAAWK,aACzE,GAAIc,OAAQ/oC,KAESwD,QAAUxD,KAAK4oH,qBAAqB/mG,SAezD,OAbAkH,YAAWliB,QAAQ,SAAUmuD,eACzB,GAAqBk1D,mBAAoBnhF,MAAMq+E,kBAAkBngC,qBAAqBjyB,cACtF,IAAIk1D,kBAAkB7gG,YAAa,CAC/B,GAAqB1pB,QAA4BwpC,0BAA0B5oB,IAAIy0C,cAC/Er1D,SACIyE,MAAM,8CAAgDgD,eAAe8iH,kBAAkB9jH,MAAQ,IACnG,IAAIwjH,gBAAiB7gF,MAAM4gF,eAAeO,kBAAmBvqH,OAAQA,OAAOijC,iBAAiB7Z,YAAY0V,QACzGD,kBAAiBh7B,QAAS0mH,kBAAmBN,eAAgB7gF,MAAMyrB,gBAGnE92B,kBAAiBl6B,QAAS0mH,kBAAmBnhF,MAAMyrB,cAGvDhxD,QAAQm2B,aACE9X,SAAUA,SAAU8X,WAAYn2B,QAAQs7B,aAAanF,WAAW/wB,OAAOpF,QAAQm2B,kBAQjG+U,YAAYnuC,UAAU4pH,aAItB,SAAUnC,eACN,GAAIj/E,OAAQ/oC,KACRmpC,0BAA4B6+E,cAAc7+E,yBAI9C,OAAO7gC,SAJ0E0/G,cAAczgF,MACpD3hC,IAAI,SAAUy8B,MACrD,MAAO0G,OAAMqhF,iBAAiB/nF,KAAKxgB,SAAUsnB,0BAA2B9G,KAAKtZ,WAAYsZ,KAAK2F,MAAO3F,KAAKuF,UAAWvF,KAAK4F,iBAalIyG,YAAYnuC,UAAU6pH,iBAStB,SAAUtK,WAAY32E,0BAA2BpgB,WAAYif,MAAOJ,UAAWK,aAC3E,GAAIc,OAAQ/oC,KACSomC,WAAahlB,uBAAuBD,sBAAsB2+F,YAAY,GAAM,IAC5EuK,kBACA1sF,UAAY39B,KAAK4oH,qBAAqB5nG,kBAAkB8+F,YAAY,GA+BzF,IA9BAuK,eAAetjH,KAAK/E,MAAMqoH,eAAgBrqH,KAAKsqH,eAAexK,WAAY/2F,WAAYif,MAAOJ,UAAWK,YAAatK,YAErHiK,UAAU/gC,QAAQ,SAAU6wF,cAAgB,MAAO3uD,OAAMwhF,eAAe5sF,UAAW+5D,gBAEnF3uE,WAAWliB,QAAQ,SAAUo+E,SACzB,GAAqBh8E,UAAW8/B,MAAMq+E,kBAAkBngC,qBAAsC,QAC9F,IAAKh+E,SAASogB,YAAd,CAGA,GAAqBwe,UAAWsB,0BAA0B5oB,IAAI0kE,QAC9D,KAAKp9C,SACD,KAAM,IAAIvjC,OAAM,6DAA+D8C,eAAe6B,SAAS7C,MAAQ,IAGnH,IAAqBokH,qBAAsBzhF,MAAMu+E,eAAe9oF,iBAAiBb,UAAW10B,SAG5FA,UAAkB,SAAE21C,oBAAoB/3C,QAAQ,SAAU4jH,gBAGtD,GAAqB/jF,MAAOqC,MAAMu+E,eAAe3iB,eAAe17F,SAChEohH,gBAAetjH,KAAKgiC,MAAM2hF,eAAe5K,WAAY72G,SAAUwhH,eAAgB/jF,KAAMN,aACjF2C,MAAMm+E,SAASmB,wBACfgC,eAAetjH,KAAKgiC,MAAM2hF,eAAe5K,WAAY72G,SAAUwhH,gBAAiB/jF,KAAMN,cAI1D2C,OAAM4hF,kBAAkBhtF,UAAW10B,SAAU4+B,SAAUA,SAASjF,iBAAiB7Z,WAAYyhG,oBAAqBpkF,WACtJ2C,OAAM6hF,yBAAyBjtF,UAAW10B,SAAU4+B,SAAUzB,eAE9DzI,UAAUhE,WAAW73B,OAAS,GAAK9B,KAAKknH,SAASmB,uBAAwB,CACzE,GAAqBwC,WAAY7qH,KAAK+oH,qBAAqBjJ,WAAYniF,UACvE0sF,gBAAezwF,QAAQixF,WAE3B,MAAOR,iBAWX37E,YAAYnuC,UAAU+pH,eAStB,SAAUtmF,YAAajb,WAAYif,MAAOJ,UAAWK,YAAa6iF,cAC9D,GAAI/hF,OAAQ/oC,KACS+qH,gBAAkB/qH,KAAK2nH,gBAAgBv/E,aAAapE,aACpEp+B,IAAI,SAAUk+B,QAAU,MAAOiF,OAAM4+E,gBAAgBt/E,cAAcvE,UACnDknF,SAAWpjF,UAAUhiC,IAAI,SAAUyD,MACpD,OACIq7B,QAA4BqE,MAAMq+E,kBAAkBhgC,mBAAmB/9E,KAAKjD,KAAKkB,WACjFs8B,SAA6BmF,MAAMq+E,kBAAkBz+E,oBAAoBt/B,KAAKjD,KAAKkB,cAExFsB,OAAOmgB,WAAWnjB,IAAI,SAAU2B,KAC/B,OACIm9B,QAA4BqE,MAAMq+E,kBAAkBlgC,oBAAoB3/E,KACxEq8B,SAA6BmF,MAAMq+E,kBAAkBngC,qBAAqB1/E,QAE9EygC,MAAMpiC,IAAI,SAAU2B,KACpB,OACIm9B,QAA4BqE,MAAMq+E,kBAAkBp9B,eAAeziF,KACnEq8B,SAA6BmF,MAAMq+E,kBAAkBv9B,gBAAgBtiF,QAEzE0gC,YAAYriC,IAAI,SAAU2B,KAC1B,OACIm9B,QAA4BqE,MAAMq+E,kBAAkB59B,qBAAqBjiF,KACzEq8B,SAA6BmF,MAAMq+E,kBAAkB59B,qBAAqBjiF,KAAOnB,SAGpE6kH,gBAAkBjrH,KAAKknH,SAASoB,sBACjDtoH,KAAK4oH,qBAAqB7mG,sBAAsBiiB,aAAa,IAC7D,KACA5qB,GAAK2qB,mBAAmBC,YAAainF,gBAAiBjrH,KAAK8jF,iBAAkB9jF,KAAK2nH,gBAAiBoD,gBAAiBC,UAAWrmF,KAAOvrB,GAAGurB,IAAiBvrB,IAAG0b,SACxJjuB,QAAQ,SAAU6Y,OACvBorG,aAAanxF,WAAW5yB,KAAKmf,SAASxG,MAAMoV,UAAUtU,IAAIsqG,aAAa1kG,WAAW1G,MAAMokB,SAASvL,WAAW,MACxGC,aAAamN,aAGrB,IAAqBulF,aAAc,GAAIrL,eAAc77E,YAAapiB,gBAAgBoiB,aAAcW,MAC3Ej+B,QAAUwkH,YAI/B,OAHID,kBACAvkH,OAAOK,KAAK/G,KAAK+oH,qBAAqB/kF,YAAainF,kBAEhDvkH,QAOXgoC,YAAYnuC,UAAUgqH,eAKtB,SAAU5sF,UAAWkK,UACjB,GAAqBpf,aACrB,IAAIzoB,KAAKknH,SAAS/uC,OAAQ,CACtB,GAAqBgzC,kBAAmBnrH,KAAKknH,SAAS/uC,OAAO31E,QAAQ,KAAM,IAC3EimB,WAAU1hB,MACNpB,MAAO+c,gCAAgC1iB,KAAKw0D,WAAYjnC,YAAY8xD,WACpEn3D,SAAUijG,mBAGdnrH,KAAKknH,SAASp6E,YACdrkB,UAAU1hB,MACNpB,MAAO+c,gCAAgC1iB,KAAKw0D,WAAYjnC,YAAY+xD,qBACpEp3D,SAAUloB,KAAKknH,SAASp6E,aAGhC9sC,KAAKynH,kBAAkBhwB,QAAQ95D,UAAWkK,SAAUpf,YASxDimB,YAAYnuC,UAAUqqH,yBAOtB,SAAUjtF,UAAW10B,SAAU4+B,SAAUzB,YACrC,GAAqBglF,UAAWprH,KAAKonH,kBAAkBvhC,yBAAyB58E,UAC3DoiH,mBAAqBrrH,KAAK2qH,kBAAkBhtF,UAAWytF,SAAUvjF,UAAW5+B,SAAS7C,MAAO,KAAMggC,YAClHutE,aACgB2X,eAAiBpjH,qBAAqBe,SAAS7C,KAAKkB,WACpDikH,cACrB,KAAK,GAAqB73F,YAAYzqB,UAAS+0B,OAAQ,CACnD,GAAqBiB,cAAeh2B,SAAS+0B,OAAOtK,SAEpD63F,aAAYxkH,KAAK,GAAIggB,iBAAgB2M,SAAU7L,QAAQoX,eAAe,IAE1E,GAAqBusF,gBACrB,KAAK,GAAqB93F,YAAYzqB,UAASuzC,QAAS,CACpD,GAAqBvd,cAAeh2B,SAASuzC,QAAQ9oB,SAErD83F,cAAazkH,KAAK,GAAIggB,iBAAgB2M,SAAU7L,QAAQoX,eAAe,IAE3EtB,UAAUhE,WAAW5yB,KAAKmf,SAASolG,gBAC9B9qG,IAAI4F,WAAWmH,YAAYmzD,wBAAwBl0D,QACpD3E,QAAQ5e,SAASunB,UAAWmN,UAAUvX,WAAWnd,SAAS7C,KAAKkB,WAC/D4e,SAASmlG,oBAAqB,GAAIvkG,gBAAeykG,aACjD,GAAIzkG,gBAAe0kG,cACnB7kG,WAA8B1d,SAAkB,SAAEs2B,mBAAmB35B,IAAI,SAAU4qB,UAAY,MAAO3I,SAAQ2I,gBAE7G+H,WAAWhS,WAAWgH,YAAYyY,kBAAsCvf,eAAekX,UAAUvX,WAAWnd,SAAS7C,KAAKkB,cAAiB6kF,aAAaC,SAAU5zD,aAAaC,MAAOD,aAAamN,aAW5M+I,YAAYnuC,UAAUoqH,kBAStB,SAAUhtF,UAAW10B,SAAU4+B,SAAU4jF,qBAAsBC,gBAAiBtlF,YAC5E,GAAIhtB,IAAKpZ,KAAK2pH,eAAe1gH,SAAU4+B,SAAU4jF,sBAAuB7B,eAAiBxwG,GAAGqlB,SAAU0qE,UAAY/vF,GAAG4uB,MAChG2jF,WAAaD,gBAAkBxlG,SAASwlG,gBAAgBnnB,WAAa59E,eACrEilG,WAAa5rH,KAAKunH,cAAc/oF,iBAAiBb,UAAW10B,SAAU2gH,eAAgB+B,WAAYxiB,UAIvH,OAHIuiB,kBACAzlF,wBAAwBjmC,KAAK2nH,gBAAiB+D,gBAAiB1rH,KAAKsnH,eAAe3iB,eAAe17F,UAAWm9B,YAE1GwlF,YAQXl9E,YAAYnuC,UAAUopH,eAMtB,SAAU1gH,SAAU4+B,SAAU4jF,sBAC1B,GAAI1iF,OAAQ/oC,IACZ,IAAIA,KAAK4nH,kBAAkBvzF,IAAIprB,SAAS7C,KAAKkB,WACzC,MAA0BtH,MAAK4nH,kBAAkBrnG,IAAItX,SAAS7C,KAAKkB,UAEvE,IAAqBgmC,qBAA0D,SAAsB,SAAEA,oBAClFvkB,WAAa0iG,qBAAqB7lH,IAAI,SAAU2jB,KAAO,MAAOwf,OAAMq+E,kBAAkBlgC,oBAAoB39D,IAAIjiB,aAC9G0gC,MAAQH,SAASjF,iBAAiBoF,MAAMpiC,IAAI,SAAUsgG,MAAQ,MAAOn9D,OAAMq+E,kBAAkBp9B,eAAekc,KAAK5+F,aACjHZ,OAAS1G,KAAKqnH,gBAAgBvzF,MAAM7qB,SAAgDA,SAAkB,SAAU,QAAG8f,WAAYif,MAAOH,SAASoY,QAASl3C,kBAAkB8+B,SAASzhC,KAAM6C,SAA6BA,SAAkB,UAAIqkC,oBAEjQ,OADAttC,MAAK4nH,kBAAkBpnG,IAAIvX,SAAS7C,KAAKkB,UAAWZ,QAC7CA,QAMXgoC,YAAYnuC,UAAUqoH,qBAItB,SAAU92E,aACN,GAAI/I,OAAQ/oC,IA0BZ,QAAS25B,cAAgBmY,YAAaA,YAAa1rB,WAzBd,SAAU0d,OAAQzd,WAAY46F,cAG/D,OAFmB,KAAf56F,aAAyBA,WAAa,UACrB,KAAjB46F,eAA2BA,cAAe,KACxCn9E,iBAAkBt8B,eACpB,KAAM,IAAIlD,OAAM,sCAAwCw5C,KAAKp4C,UAAUo+B,QAE3E,IAAqB09E,OAAQz4E,MAAM4+E,gBAAgBpG,aAAaz9E,SAAW,EACvE1qB,GAAK2vB,MAAM4+E,gBAAgB3G,YAAYl9E,OAAQm9E,eAAiBn9E,OAAQl8B,SAAWwR,GAAGxR,SAAUnG,KAAO2X,GAAG3X,KAAMm8C,QAAUxkC,GAAGwkC,QAC5GiuE,aAAe9iF,MAAM+iF,sBAAsBlkH,SAAUkqC,aAKrDi6E,cAAgBhjF,MAAM+iF,sBAAsBh6E,YAAaA,aACzDtO,WAAaqoF,eAAiBE,cAAgB,KAAOF,aAMrDG,mBAAqB3lG,eACrB4lG,uBAAyBzK,MAAQwK,mBAAmBlqH,OACpDoqH,cAAgBF,mBAAmBpjH,OAAO,GAAInF,OAAMwoH,wBAAwBE,KAAKlgG,cACtG,OAAO2xB,SAAQp1C,OAAO,SAAUwd,KAAMomG,YAAc,MAAOpmG,MAAK4J,KAAKw8F,aAAkChmG,WAAW,GAAIgrE,mBAAkB5tD,WAAY/hC,KAAM,MAAOyqH,iBAEvFptF,aAAc,GAAIkT,gBAOpGtD,YAAYnuC,UAAUurH,sBAKtB,SAAUO,iBAAkBC,oBACxB,MAAOtsH,MAAK8jF,iBAAiB29B,mBAAmB4K,mBAC5CrsH,KAAK2nH,gBAAgBlG,mBAAmB4K,mBACxCrsH,KAAKmnH,MAAMoF,qBAAqBF,iBAAkBC,qBAU1D59E,YAAYnuC,UAAUmqH,eAQtB,SAAU5K,WAAY72G,SAAUujH,mBAAoBhoB,UAAWp+D,YAC3D,GAAqBzI,WAAY39B,KAAK4oH,qBAAqBpiF,iBAAoCgmF,mBAA6B,UAAGhoB,UAAWp+D,aACrHqmF,mBAAqBzsH,KAAKsnH,eAAe1iB,cAAcjnE,UAAW10B,SAAUujH,mBAAoBhoB,UAErH,OADAv+D,yBAAwBjmC,KAAK2nH,gBAAiB8E,mBAAoBjoB,UAAWp+D,YACtEpmC,KAAK+oH,qBAAqBjJ,WAAYniF,YAOjD+Q,YAAYnuC,UAAUwoH,qBAKtB,SAAUjJ,WAAYh1F,KAClB,MAAO,IAAI+0F,eAAcC,WAAYh1F,IAAIgnB,YAAahnB,IAAI6O,aAO9D+U,YAAYnuC,UAAUmiC,eAKtB,SAAUgqF,WAAYtlF,iBA2BlB,QAASulF,gBAAe7oF,OAAQ8oF,WAAYjqF,eAKxC,OAJmB,KAAfiqF,aAAyBA,WAAa,GAAI1oG,UACxB,KAAlBye,gBAA4BA,kBAG5BiqF,WAAWv4F,IAAIyP,UAAYA,OAAOriC,KAClC,MAAOkhC,cAEXiqF,YAAW/vF,IAAIiH,OAEf,KAAK,GADgB+oF,YAAanqF,eAAkCm2E,KAAKuO,kBAAkBz+E,oBAAoB7E,QAAQ,GAAS+0E,KAAKrkD,YAC5H5yD,GAAK,EAAGkrH,aAAeD,WAAYjrH,GAAKkrH,aAAahrH,OAAQF,KAAM,CACxE,GAAImrH,WAAYD,aAAalrH,GAC7B+gC,eAAc57B,KAAKgmH,WACnBJ,eAAeI,UAAUxpF,iBAAkBqpF,WAAYjqF,eAE3D,MAAOA,eAzCX,GAAqBk2E,MAAO74G,IAC5B,IAAI0sH,WAAY,CAEZ,MAAOC,gBADuBzpF,eAAewpF,WAAY1sH,KAAKw0D,YAAYjxB,kBAGzE,GAAI6D,gBAAiB,CAEtB,IAAK,GADgBzE,kBACZ/gC,GAAK,EAAGwX,GAAKguB,gBAAgBQ,UAAWhmC,GAAKwX,GAAGtX,OAAQF,KAG7D,IAAK,GAFDimC,UAAWzuB,GAAGxX,IACGirH,WAAanqF,eAAemF,SAAU7nC,KAAKw0D,YACvDj7C,GAAK,EAAGyzG,aAAeH,WAAYtzG,GAAKyzG,aAAalrH,OAAQyX,KAAM,CACxE,GAAIwzG,WAAYC,aAAazzG,GAC7BopB,eAAc57B,KAAKgmH,WAG3B,MAAOpqF,eAGP,KAAM,IAAIr+B,OAAM,yDA0BjBoqC,eA+RPrE,kBAAoB,qBA6DpB4iF,aAAe,gBAEfxhF,WAAa,WACbyhF,QACArpF,WAAY,UAEZspF,UAAY,WACZC,QAAU,UACVC,cAAgB,GAAInpG,MAAKipG,UAAW,aAAc,SAclDzgF,gBAAiC,WACjC,QAASA,iBAAgBxI,gBAAiBC,eAAgBmpF,qBAAsBC,uBAAwBrN,mBACvE,KAAzBoN,uBAAmCA,6BACR,KAA3BC,yBAAqCA,0BACzC,IAAIxkF,OAAQ/oC,IACZA,MAAKkkC,gBAAkBA,gBACvBlkC,KAAKmkC,eAAiBA,eACtBnkC,KAAKkgH,cAAgBA,cACrBlgH,KAAKwtH,gBAAkB,GAAItkG,KAC3BlpB,KAAKytH,cAAgB,GAAIvkG,KACzBlpB,KAAK0tH,eAAiB,GAAIxkG,KAC1BlpB,KAAK2tH,YAAc,GAAIzkG,KACvBlpB,KAAK4tH,YAAc,GAAI1kG,KACvBlpB,KAAK6tH,cAAgB,GAAI3kG,KACzBlpB,KAAK8tH,2BAA6B,GAAI5kG,KACtClpB,KAAK+tH,wCAA0C,GAAI7kG,KACnDlpB,KAAKguH,0BACLV,qBAAqBzmH,QAAQ,SAAUonH,IACnC,MAAOllF,OAAMmlF,gCAAgCnlF,MAAMxC,gBAAgB0nF,GAAGrmH,SAAUqmH,GAAGxsH,MAAOwsH,GAAG79E,QAEjGm9E,uBAAuB1mH,QAAQ,SAAUsnH,IAAM,MAAOplF,OAAMqlF,kBAAkBrlF,MAAMxC,gBAAgB4nF,GAAGvmH,SAAUumH,GAAG1sH,MAAO0sH,GAAG9mG,MAC9HrnB,KAAK+tH,wCAAwCvtG,IAAI29B,mBAAmBt9C,WAAYgO,gBAAiBC,kBACjG9O,KAAK+tH,wCAAwCvtG,IAAI29B,mBAAmBp9C,MAAO80C,aAC3E71C,KAAK+tH,wCAAwCvtG,IAAI29B,mBAAmB/8C,UAAWk1C,iBAC/Et2C,KAAK+tH,wCAAwCvtG,IAAI29B,mBAAmBC,YAAa1H,iBAAkBb,WAAYhnC,gBAAiBC,gBAAiBwnC,iBAm5BrJ,MA74BA5J,iBAAgBnsC,UAAUgmF,mBAI1B,SAAU6D,YACN,GAAqBs2B,cAAe1gH,KAAKquH,sBAAsBjkC,WAC/D,OAAOpqF,MAAKmkC,eAAem9E,gBAAgBZ,eAO/Ch0E,gBAAgBnsC,UAAUqiB,yBAK1B,SAAUrb,IAAKo9G,gBACX,GAAqB1wG,SAAM/P,EAC3B,KAAKygH,eAAgB,CACjB1wG,IAAM1M,IAAIi8B,WAAa,IAAMj8B,IAAI9F,IACjC,IAAqB6sH,qBAAsBtuH,KAAK8tH,2BAA2BvtG,IAAItM,IAC/E,IAAIq6G,oBACA,MAAOA,qBAEf,GAAqBC,WAAYvuH,KAAKmkC,eAAeugF,kBAAqCn9G,IAAe,WAAsBA,IAAS,KAAGo9G,gBACtHW,kBAAoBtlH,KAAKquH,sBAAsBE,UAQpE,OAPK5J,kBACD3kH,KAAKmkC,eAAe09E,4BAA4B0M,UAAU3mH,SAA6BL,IAAe,YACtGvH,KAAKmkC,eAAeu9E,eAAe4D,kBAAmBiJ,YAEtDt6G,KACAjU,KAAK8tH,2BAA2BttG,IAAIvM,IAAKqxG,mBAEtCA,mBAQX54E,gBAAgBnsC,UAAUiuH,gBAM1B,SAAUh5G,UAAW/T,KAAMkjH,gBACvB,MAAO3kH,MAAKquH,sBAAsBruH,KAAKmkC,eAAeugF,kBAAkBlvG,UAAW/T,KAAMkjH,kBAO7Fj4E,gBAAgBnsC,UAAUkuH,mBAK1B,SAAUj5G,UAAW/T,MACjB,GAAIsnC,OAAQ/oC,IACZ,OAAOA,MAAKmkC,eAAe69E,gBAAgB,WAAc,MAAOj5E,OAAMylF,gBAAgBh5G,UAAW/T,SAMrGirC,gBAAgBnsC,UAAU8tH,sBAI1B,SAAUvqF,QACN,GAAqBU,gBAAiBxkC,KAAKmkC,eAAekE,cAAcvE,OACxE,IAAIU,eAAgB,CAChB,GAAqBkqF,kBAAmBlqF,eAAeZ,QAIvD,IAHI8qF,kBAAoD,aAAhCA,iBAAiB7qF,aACrC6qF,iBAAmBA,iBAAiB5qF,QAEpC4qF,2BAA4BlnH,cAC5B,MAAOxH,MAAKquH,sBAAsB7pF,eAAeZ,UAGzD,MAAOE,SAMX4I,gBAAgBnsC,UAAUm0D,YAI1B,SAAUtuD,MACN,GAAqBsuD,aAAc10D,KAAKwtH,gBAAgBjtG,IAAIna,KAC5D,KAAKsuD,YAAa,CACdA,cACA,IAAqBi6D,eAAgB3uH,KAAK4uH,gBAAgBxoH,MACrCyoH,WAAa7uH,KAAK8uH,eAAe1oH,KAAMuoH,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoB/uH,KAAK00D,YAAYm6D,WAC1Dn6D,aAAY3tD,KAAK/E,MAAM0yD,YAAaq6D,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmBhvH,KAAKivH,SAAS7oH,KAAMuoH,cAA0B,YACjEj6D,YAAY3tD,KAAK/E,MAAM0yD,YAAas6D,mBAEpCH,aAAe7uH,KAAKkkC,gBAAgBc,cAAc5+B,KAAKwB,WACvD5H,KAAKkkC,gBAAgBc,cAAc6pF,WAAWjnH,UAAW,CACzD,GAAqB88B,SAAU1kC,KAAKkkC,gBAAgB0hD,eAAeipC,WACnE,IAAInqF,SAAWA,QAAQt+B,KAAM,CACzB,GAAqB8oH,yBAA6ClvH,KAAK+tH,wCAAwCxtG,IAAuBmkB,QAAQt+B,KAAiB,YAC9G8oH,yBAAwBr9F,KAAK,SAAUs9F,cAAgB,MAAOH,kBAAiBn9F,KAAK,SAAU03D,KAAO,MAAO4lC,cAAahtH,SAASonF,UAE/KvpF,KAAKsjH,YAAYz3E,oBAAoBrB,cAAc,SAAWpkC,KAAK3E,KAAO,OAAS2E,KAAKwB,SAAW,mBAAqBu2C,mBAAuCzZ,QAAQt+B,KAAkB,aAAK,qEAAkElC,GAAW,gBAAkBgrH,wBAAwBtpH,IAAI,SAAUQ,MAAQ,MAAOA,MAAKlE,iBAAmB2D,KAAK,QAAU,2BAA4BO,MAAOA,OAIxapG,KAAKwtH,gBAAgBhtG,IAAIpa,KAAMsuD,YAAYxxC,OAAO,SAAUqmE,KAAO,QAASA,OAEhF,MAAO70B,cAMXhoB,gBAAgBnsC,UAAUs0D,aAI1B,SAAUzuD,MACN,GAAI2iC,OAAQ/oC,KACS60D,aAAe70D,KAAKytH,cAAcltG,IAAIna,KAC3D,KAAKyuD,aAAc,CACf,GAAqB85D,eAAgB3uH,KAAK4uH,gBAAgBxoH,KAC1DyuD,gBACA,IAAqBg6D,YAAa7uH,KAAK8uH,eAAe1oH,KAAMuoH,cAC5D,IAAIE,WAAY,CACZ,GAAqBO,sBAAuBpvH,KAAK60D,aAAag6D,WAC9DruH,QAAO+2B,KAAK63F,sBAAsBvoH,QAAQ,SAAUwoH,YAC/B,aAAiBA,YAAcD,qBAAqBC,cAG7E,GAAqBC,WAAYX,cAAuB,WACxDnuH,QAAO+2B,KAAK+3F,WAAWzoH,QAAQ,SAAU6sB,UACrC,GAAqB67F,UAAWD,UAAU57F,UACrB9D,KAAO,SACvBlR,KAAK,SAAU/F,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1D4pG,aACA,cAAiB7uF,WAClC6uF,WAAWx7G,KAAK/E,MAAMugH,WAA6B,aAAiB7uF,WAExE,aAAiBA,UAAY6uF,WACzB3yF,MAAQA,KAAiB,YACzB2yF,WAAWx7G,KAAK/E,MAAMugH,WAAYx5E,MAAMkmF,SAAS7oH,KAAMwpB,KAAiB,eAGhF5vB,KAAKytH,cAAcjtG,IAAIpa,KAAMyuD,cAEjC,MAAOA,eAMXnoB,gBAAgBnsC,UAAU+pF,WAI1B,SAAUlkF,MACN,GAAI2iC,OAAQ/oC,IACZ,MAAMoG,eAAgBoB,eAElB,MADAxH,MAAKsjH,YAAY,GAAIh/G,OAAM,uBAAyBw5C,KAAKp4C,UAAUU,MAAQ,gCAAiCA,QAGhH,KACI,GAAqBopH,cAAexvH,KAAK0tH,eAAentG,IAAIna,KAC5D,KAAKopH,aAAc,CACf,GAAqBb,eAAgB3uH,KAAK4uH,gBAAgBxoH,MACrCyoH,WAAa7uH,KAAK8uH,eAAe1oH,KAAMuoH,eACvC/wE,QAAU+wE,cAAgBA,cAAuB,QAAI,KACrDc,SAAW7xE,QAAUA,QAAkB,SAAI,IAChE,IAAI6xE,SAAU,CACV,GAAqBr/E,MAAO,SAA8B1xB,KAAK,SAAU/F,GAAK,MAA0B,eAAnBA,EAAc,aAC9E+2G,kBAAsCt/E,KAAkB,eACxDu/E,sBAA0C3vH,KAAKivH,SAAS7oH,KAAMgqC,KAA0B,wBAC7Go/E,iBACAE,kBAAkB7oH,QAAQ,SAAU+oH,aAAcxqH,OAC9C,GAAqByqH,iBACAC,UAAY/mF,MAAMgnF,YAAY3pH,KAAMwpH,aACrDE,YACAD,aAAa9oH,KAAK+oH,UACtB,IAAqBvN,YAAaoN,sBAAwBA,sBAAsBvqH,OAAS,IACrFm9G,aACAsN,aAAa9oH,KAAK/E,MAAM6tH,aAActN,YAE1C,aAAiBx7G,KAAK8oH,oBAGrBhB,cACLW,aAAexvH,KAAKsqF,WAAWukC,YAE9BW,gBACDA,iBAEJxvH,KAAK0tH,eAAeltG,IAAIpa,KAAMopH,cAElC,MAAOA,cAEX,MAAwBl2G,GAEpB,KADA0zB,SAAQ5oC,MAAM,kBAAoB05C,KAAKp4C,UAAUU,MAAQ,eAAiBkT,GACpEA,IAOdozB,gBAAgBnsC,UAAUyvH,aAI1B,SAAU5pH,MACN,GAAqB6pH,aAAcjwH,KAAK2tH,YAAYptG,IAAIna,KACxD,KAAK6pH,YAAa,CACd,GAAqBtB,eAAgB3uH,KAAK4uH,gBAAgBxoH,KAC1D6pH,eACA,IAAqBpB,YAAa7uH,KAAK8uH,eAAe1oH,KAAMuoH,cAC5D,IAAIE,WAAY,CACZ,GAAqBqB,qBAAsBlwH,KAAKgwH,aAAanB,WAC7DruH,QAAO+2B,KAAK24F,qBAAqBrpH,QAAQ,SAAUwoH,YAC9B,YAAgBA,YAAca,oBAAoBb,cAG3E,GAAqBc,WAAYxB,cAAuB,WACxDnuH,QAAO+2B,KAAK44F,WAAWtpH,QAAQ,SAAU6sB,UACrC,GAAqB67F,UAAWY,UAAUz8F,UACrB08F,SAAW,SAA8Bv+F,KAAK,SAAUlZ,GAAK,MAA0B,UAAnBA,EAAc,YACvG,aAAgB+a,UAA6B,YAAgBA,WAAa08F,WAE9EpwH,KAAK2tH,YAAYntG,IAAIpa,KAAM6pH,aAE/B,MAAOA,cAMXvjF,gBAAgBnsC,UAAU8vH,eAI1B,SAAUjqH,MACN,GAAqBkqH,eAAgBtwH,KAAK4tH,YAAYrtG,IAAIna,KAC1D,KAAKkqH,cAAe,CAChB,GAAqB3B,eAAgB3uH,KAAK4uH,gBAAgBxoH,MACrCmqH,iBAAmB5B,cAAuB,WAC/D2B,eAAgB9vH,OAAO+2B,KAAKg5F,kBAC5BvwH,KAAK4tH,YAAYptG,IAAIpa,KAAMkqH,eAE/B,MAAOA,gBAOX5jF,gBAAgBnsC,UAAUuuH,eAK1B,SAAU1oH,KAAMuoH,eACZ,GAAqBE,YAAa7uH,KAAK+vH,YAAY3pH,KAAMuoH,cAAuB,QAChF,IAAIE,qBAAsBrnH,cACtB,MAAOqnH,aAQfniF,gBAAgBnsC,UAAUsiB,iBAK1B,SAAUzc,KAAMoqH,YACNpqH,eAAgBoB,eAClBxH,KAAKsjH,YAAY,GAAIh/G,OAAM,6BAA+Bw5C,KAAKp4C,UAAUU,MAAQ,gCAAiCA,KAEtH,KACI,QAASpG,KAAKgwH,aAAa5pH,MAAMoqH,YAErC,MAAwBl3G,GAEpB,KADA0zB,SAAQ5oC,MAAM,kBAAoB05C,KAAKp4C,UAAUU,MAAQ,eAAiBkT,GACpEA,IAOdozB,gBAAgBnsC,UAAU2+C,OAI1B,SAAU94C,MACN,KAAMA,eAAgBoB,eAElB,MADAxH,MAAKsjH,YAAY,GAAIh/G,OAAM,mBAAqBw5C,KAAKp4C,UAAUU,MAAQ,gCAAiCA,QAK5G,KAAK,GAFgBkqH,eAAgBtwH,KAAKqwH,eAAejqH,MACpCM,UACZ9E,GAAK,EAAG6uH,gBAAkBH,cAAe1uH,GAAK6uH,gBAAgB3uH,OAAQF,KAAM,CACjF,GAAIi0D,QAAS46D,gBAAgB7uH,GAC7B,IAAIi0D,OAAOr0C,SA3WC,aA2W4B,CACpC,GAAqB09E,UAAWrpC,OAAOnyB,OAAO,EAAGmyB,OAAO/zD,OA5WhD,YA4W2EA,QAC9DwB,UAAQ,EACzB47F,UAAS19E,SA7WhB,UA8WO09E,SAAWrpC,OAAOnyB,OAAO,EAAGw7D,SAASp9F,OA9W5C,QA8W4DA,QACrDwB,MA/WP,SAkXOA,MAAQtD,KAAKumC,gBAAgBngC,KAAKwB,SAAUxB,KAAK3E,MAAOo0D,SAE5DnvD,OAAOw4F,UAAY57F,OAG3B,MAAOoD,SAOXgmC,gBAAgBnsC,UAAU2tH,gCAK1B,SAAU9nH,KAAMgqC,MACZpwC,KAAK6tH,cAAcrtG,IAAIpa,KAAM,SAAU5C,QAAS7B,MAAQ,MAAO,KAAKyuC,KAAKe,KAAKnvC,MAAMouC,UAAO,IAAQxnC,OAAOjH,WAO9G+qC,gBAAgBnsC,UAAU6tH,kBAK1B,SAAUhoH,KAAMihB,IACZrnB,KAAK6tH,cAAcrtG,IAAIpa,KAAM,SAAU5C,QAAS7B,MAAQ,MAAO0lB,IAAGrlB,UAAMkC,GAAWvC,SAKvF+qC,gBAAgBnsC,UAAUytH,wBAG1B,WACIhuH,KAAK0wH,eAAiB1wH,KAAKwuH,gBAAgBvB,aAAc,kBACzDjtH,KAAK2wH,YAAc3wH,KAAKwuH,gBAAgBvB,aAAc,eACtDjtH,KAAK6iC,OAAS7iC,KAAKyuH,mBAraN,kBAqayC,UACtDzuH,KAAK2+E,6BACD3+E,KAAKwuH,gBAAgBvB,aAAc,gCACvCjtH,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,QAASp2E,YACjF72C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,cAAev2E,kBACvF12C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,QAASt2E,YACjF32C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,YAAar2E,gBACrF52C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,UAAWx4E,cACnFz0C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,YAAax2E,gBACrFz2C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,aAAcp4E,iBACtF70C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,gBAAiB73E,oBACzFp1C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,mBAAoBl4E,uBAC5F/0C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,aAAc33E,iBACtFt1C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,gBAAiB53E,oBACzFr1C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,SAAUl3E,aAClF/1C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,UAAWh3E,cACnFj2C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,QAASp3E,YACjF71C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,eAAgB/2E,mBACxFl2C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,gBAAiB72E,oBACzFp2C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,aAAcp+G,iBACtF7O,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,aAAcn+G,iBACtF9O,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,YAAa32E,gBAErFt2C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,QAASp2E,YACjF72C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,QAASt2E,YACjF32C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,YAAar2E,gBACrF52C,KAAKkuH,gCAAgCluH,KAAKwuH,gBAAgBvB,aAAc,YAAax2E,iBAkBzF/J,gBAAgBnsC,UAAUgmC,gBAS1B,SAAUyX,gBAAiBv8C,KAAMm8C,SAC7B,MAAO59C,MAAKmkC,eAAeoC,gBAAgByX,gBAAiBv8C,KAAMm8C,UAQtElR,gBAAgBnsC,UAAUwvH,YAM1B,SAAUvsH,QAASF,OACf,GAAqBstH,kBAAmB5wH,KAAKkgH,aAC7ClgH,MAAKkgH,cAAgB,SAAUv7F,SAAU9C,WACzC,IAAqBnb,QAAS1G,KAAKivH,SAASzrH,QAASF,MAErD,OADAtD,MAAKkgH,cAAgB0Q,iBACdlqH,QAQXgmC,gBAAgBnsC,UAAU0uH,SAM1B,SAAUzrH,QAASF,OAYf,QAASutH,mBAAkBrtH,QAASF,MAAOwtH,MAAOr0E,YAK9C,QAASs0E,uBAAsBrQ,cAC3B,GAAqBl8E,gBAAiBq0E,KAAK10E,eAAekE,cAAcq4E,aACxE,OAAOl8E,gBAAiBA,eAAeZ,SAAW,KAMtD,QAASotF,iBAAgB1tH,OACrB,MAAOutH,mBAAkBrtH,QAASF,MAAOwtH,MAAO,GAMpD,QAASG,gBAAe3tH,OACpB,MAAOutH,mBAAkBrtH,QAASF,MAAOwtH,MAAOr0E,WAAa,GAOjE,QAASy0E,gBAAeC,cAAe7tH,OACnC,GAAI6tH,gBAAkB3tH,QAElB,MAAOqtH,mBAAkBM,cAAe7tH,MAAOwtH,MAAQ,EAAGr0E,WAE9D,KACI,MAAOo0E,mBAAkBM,cAAe7tH,MAAOwtH,MAAQ,EAAGr0E,YAE9D,MAAwBnjC,GACpB,IAAIqxB,gBAAgBrxB,GAkBhB,KAAMA,EAdN,IAAqB83G,YAAa93G,EAAEwwB,MAAQ,eAAqCxwB,EAAS,OAAE7X,KAAO,IAAO6pC,aAAahyB,GAClGorB,QAAU,IAAMysF,cAAc1vH,KAAO,KAAO2vH,WAC5CtnF,OAAU54B,QAASwzB,QAASn6B,SAAU+O,EAAE/O,SAAU4/B,KAAM7wB,EAAEwwB,MAG/E+uE,MAAKz0G,OACD8M,QAASoI,EAAEpI,QACXu5B,OAAQnxB,EAAEmxB,OACVjnC,QAAS8V,EAAE9V,QAASsmC,MAAOA,MAC3BhG,OAAQqtF,eACT3tH,UAef,QAAS6tH,cAAaC,eAAgBC,eAAgB5vH,KAAM6vH,kBACxD,GAAID,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC1DE,QAAQlxG,IAAI+wG,iBACZzY,KAAKz0G,OACD8M,QAAS,6BACTwzB,QAAS,WAAa4sF,eAAe7vH,KAAO,gBAC5C6B,MAAOiuH,gBACRD,eAEP,KACI,GAAqBI,SAAUH,eAAsB,KACrD,IAAIG,UAAqB,GAATZ,OAAoC,SAAtBY,QAAQ7tF,YAAwB,CAC1D,GAAqBymD,YAAainC,eAA2B,WACxCI,SAAWJ,eAAeI,QAC/ChwH,MAAOA,KAAKiE,IAAI,SAAUs0B,KAAO,MAAOg3F,gBAAe1tH,QAAS02B,OAC3Dt0B,IAAI,SAAUs0B,KAAO,MAAOqQ,cAAarQ,SAAOh2B,GAAYg2B,MAC7Dy3F,UAAYA,SAAS7vH,OAASH,KAAKG,QACnCH,KAAKoF,KAAK/E,MAAML,KAAMgwH,SAASxuH,MAAMxB,KAAKG,QAAQ8D,IAAI,SAAUtC,OAAS,MAAO2rH,UAAS3rH,UAE7FmuH,QAAQjxG,IAAI8wG,gBAAgB,EAE5B,KAAK,GADgBM,eAAgBC,eAAejqD,QAC1B78D,EAAI,EAAGA,EAAIu/E,WAAWxoF,OAAQiJ,IACpD6mH,cAAchyH,OAAO0qF,WAAWv/E,GAAIpJ,KAAKoJ,GAE7C,IACqB+mH,UADAC,SAAWC,KAEhC,KACIA,MAAQJ,cAAcK,OACtBH,SAAWZ,eAAeI,eAAgBI,SAE9C,QACIM,MAAQD,SAEZ,MAAOD,WAGf,QACIL,QAAQ30F,OAAOw0F,iBAGvB,GAAc,IAAVR,MAIA,MAAO5D,OAEX,IAAqB3iH,cAAWrG,EAChC,IAAIstH,kBAAmD,YAA/BA,iBAAiB3tF,WAA0B,CAC/D,GAAqBmG,MAAOwnF,iBAAiBxnF,KACxBhnC,UAAYwuH,iBAAiBxuH,UAC7B6e,SAAW2vG,iBAAiB3vG,QACjC,OAAZA,UAA4B,MAARmoB,MAA6B,MAAbhnC,YACpCuH,UAAasX,SAAUA,SAAUmoB,KAAMA,KAAMC,OAAQjnC,YAG7D61G,KAAKz0G,OACD8M,QAASg6B,4BACT1nC,QAAS8tH,eACThuH,MAAOiuH,eAAgBhnH,SAAUA,UAClC/G,SAMP,QAASyrH,UAASt6G,YACd,GAAI+2B,YAAY/2B,YACZ,MAAOA,WAEX,IAAIA,qBAAsBlR,OAAO,CAE7B,IAAK,GADgByuH,aACZtwH,GAAK,EAAGwX,GAAK,WAAiCxX,GAAKwX,GAAGtX,OAAQF,KAAM,CACzE,GAAI8G,MAAO0Q,GAAGxX,GAEd,IAAI8G,MAA4B,WAApBA,KAAKm7B,WAAyB,CAGtC,GAAqBsuF,aAAcnB,gBAAgBtoH,KAAKiM,WACxD,IAAIlR,MAAMC,QAAQyuH,aAAc,CAC5B,IAAK,GAAI54G,IAAK,EAAG64G,cAAgBD,YAAa54G,GAAK64G,cAActwH,OAAQyX,KAAM,CAC3E,GAAI84G,YAAaD,cAAc74G,GAC/B24G,UAASnrH,KAAKsrH,YAElB,UAGR,GAAqBC,SAAUrD,SAASvmH,KACpC6hC,cAAa+nF,UAGjBJ,SAASnrH,KAAKurH,SAElB,MAAOJ,UAEX,GAAIv9G,qBAAsBnN,cAAc,CAGpC,GAAImN,aAAekkG,KAAK6X,gBAAkB7X,KAAKgV,cAAcx5F,IAAI1f,aAC5D8nC,WAAa,IAAM9nC,WAAWipC,QAAQ97C,OACvC,MAAO6S,WAGP,IAAqB+rG,cAAe/rG,WACf49G,iBAAmBxB,sBAAsBrQ,aAC9D,OAAwB,OAApB6R,iBACOrB,eAAexQ,aAAc6R,kBAG7B7R,aAInB,GAAI/rG,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqB+rG,kBAAe,EACpC,QAAQ/rG,WAAuB,YAC3B,IAAK,QACD,GAAqBtB,MAAO47G,SAASt6G,WAAiB,KACtD,IAAI41B,aAAal3B,MACb,MAAOA,KACX,IAAqBC,OAAQ27G,SAASt6G,WAAkB,MACxD,IAAI41B,aAAaj3B,OACb,MAAOA,MACX,QAAQqB,WAAqB,UACzB,IAAK,KACD,MAAOtB,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KAED,MAAmB27G,UADcA,SAASt6G,WAAsB,WACpCA,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqB69G,SAAUvD,SAASt6G,WAAoB,QAC5D,IAAI41B,aAAaioF,SACb,MAAOA,QACX,QAAQ79G,WAAqB,UACzB,IAAK,IACD,MAAO69G,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAAczB,gBAAgBr8G,WAAuB,YACrDvP,MAAQ4rH,gBAAgBr8G,WAAkB,MAC/D,OAAI89G,cAAe/mF,YAAYtmC,OACpBqtH,YAAYrtH,OAChB,IACX,KAAK,SACD,GAAqBstH,QAAS/9G,WAAmB,OAC5Bg+G,cAAgBnvH,QAChBovH,aAAe3D,SAASt6G,WAAuB,WACpE,IAAIi+G,uBAAwBprH,cAAc,CACtC,GAAqBo2C,SAAUg1E,aAAah1E,QAAQh1C,OAAO8pH,OAC3DC,eACI9Z,KAAKtyE,gBAAgBqsF,aAAahrH,SAAUgrH,aAAanxH,KAAMm8C,QACnE,IAAqB20E,kBAAmBxB,sBAAsB4B,cAC9D,OAAwB,OAApBJ,iBACOrB,eAAeyB,cAAeJ,kBAG9BI,cAGf,MAAIC,eAAgBlnF,YAAYgnF,QACrBxB,eAAeyB,cAAeC,aAAaF,SAC/C,IACX,KAAK,YAID,GAAqBpzD,QAAS3qD,WAAiB,KAC1Bk+G,WAAab,MAAM9lH,QAAQozD,OAChD,IAAIuzD,YAAchB,eAAeiB,QAC7B,MAAOD,WAEX,MACJ,KAAK,WACD,IACI,MAAO5D,UAASt6G,WAAWmvB,QAE/B,MAAwBxqB,GAYpB,KARIqxB,iBAAgBrxB,IAA6B,MAAvB3E,WAAWkN,UACd,MAAnBlN,WAAWq1B,MAAwC,MAAxBr1B,WAAW3R,YACtCsW,EAAE/O,UACEsX,SAAUlN,WAAWkN,SACrBmoB,KAAMr1B,WAAWq1B,KACjBC,OAAQt1B,WAAW3R,YAGrBsW,EAEd,IAAK,QAEL,IAAK,WACD,MAAO9V,QACX,KAAK,MACL,IAAK,OAGD,IADAk9G,aAAemQ,kBAAkBrtH,QAASmR,WAAuB,WAAGm8G,MAAQ,EAAoB,aACpEtpH,cAAc,CACtC,GAAIk5G,eAAiB7H,KAAK6X,gBAAkBhQ,eAAiB7H,KAAK8X,YAK9D,MAAOntH,QAEX,IAAqBuvH,gBAAiBp+G,WAAsB,cACvCka,UAAYgqF,KAAKgV,cAActtG,IAAImgG,aACxD,IAAI7xF,UAAW,CACX,GAAqBltB,MAAOoxH,eAAentH,IAAI,SAAUs0B,KAAO,MAAOg3F,gBAAe1tH,QAAS02B,OAC1Ft0B,IAAI,SAAUs0B,KAAO,MAAOqQ,cAAarQ,SAAOh2B,GAAYg2B,KACjE,OAAOrL,WAAUrrB,QAAS7B,MAK1B,MAAO0vH,cAAa3Q,aADkBqQ,sBAAsBrQ,cACVqS,eAAgBp+G,WAAuB,YAGjG,MAAOu4G,OACX,KAAK,QACD,GAAqBh8G,SAAUyD,WAAWzD,OAgB1C,OAf0B,OAAtByD,WAAiB,KACjBkkG,KAAKz0G,OACD8M,QAASA,QACT1N,QAASmR,WAAWnR,QACpBF,MAAOqR,WACPpK,UACIsX,SAAUlN,WAAqB,SAC/Bq1B,KAAMr1B,WAAiB;qBACvBs1B,OAAQt1B,WAAsB,YAEnCnR,SAGHq1G,KAAKz0G,OAAQ8M,QAASA,QAAS1N,QAASmR,WAAWnR,SAAWA,SAE3D0pH,MACX,KAAK,SACD,MAAOv4G,YAEf,MAAO,MAEX,MAAO42B,cAAa52B,WAAY,SAAUrR,MAAO7B,MAC7C,GAAI4rH,cAAch5F,IAAI5yB,MAAO,CACzB,GAAIA,OAAS0rH,WAAaC,UAAWz4G,YAAY,CAG7C,GAAqBo0E,SAAUkmC,SAASt6G,WAAWo0E,QACnD,IAAIA,UAAY8vB,KAAKh2E,QAAUkmD,SAAW8vB,KAAKl6B,6BAC3C,MAAOswC,UAAS3rH,OAGxB,MAAO2tH,gBAAe3tH,OAE1B,MAAO2rH,UAAS3rH,SAGxB,MAAO4pH,QAEX,MAAO+B,UAAS3rH,OAjYpB,GAmYqBoD,QAnYAmyG,KAAO74G,KACPgyH,MAAQH,eAAe7rE,MACvByrE,QAAU,GAAIvoG,IAkYnC,KACIxiB,OAASmqH,kBAAkBrtH,QAASF,MAAO,EAAG,GAElD,MAAwBgW,GACpB,IAAItZ,KAAKkgH,cAIL,KAAMr0E,qBAAoBvyB,EAAG9V,QAH7BxD,MAAKsjH,YAAYhqG,EAAG9V,SAM5B,IAAI+mC,aAAa7jC,QAGjB,MAAOA,SAMXgmC,gBAAgBnsC,UAAUquH,gBAI1B,SAAUxoH,MACN,GAAqBo+B,gBAAiBxkC,KAAKmkC,eAAekE,cAAcjiC,KACxE,OAAOo+B,iBAAkBA,eAAeZ,SAAWY,eAAeZ,UAC5DC,WAAY,UAQtB6I,gBAAgBnsC,UAAU+iH,YAM1B,SAAU3+F,SAAUnhB,QAASgH,MACzB,IAAIxK,KAAKkgH,cAIL,KAAMv7F,SAHN3kB,MAAKkgH,cAAcr0E,oBAAoBlnB,SAAUnhB,SAAWA,SAAWA,QAAQoE,UAAa4C,OAWpGkiC,gBAAgBnsC,UAAU6D,MAK1B,SAAUgV,GAAI45G,kBACV,GAAI9hH,SAAUkI,GAAGlI,QAASwzB,QAAUtrB,GAAGsrB,QAAS+F,OAASrxB,GAAGqxB,OAAQlgC,SAAW6O,GAAG7O,SAAU/G,QAAU4V,GAAG5V,QAA2BsgC,QAAV1qB,GAAG9V,MAAgB8V,GAAG0qB,QAAQgG,MAAQ1wB,GAAG0wB,KACnK9pC,MAAKsjH,YAAY94E,cAAct5B,QAASwzB,QAAS+F,OAAQlgC,SAAUu5B,OAAQtgC,QAASsmC,OAAQkpF,mBAEzFtmF,mBAEPhC,eAAiB,kBAmCjBG,+BAAiC,kCACjCC,yBAA2B,2BAC3BC,0BAA4B,8BAC5BC,uBAAyB,yBACzBE,4BAA8B,8BAC9BC,0BAA4B,8BAC5BC,qBAAuB,uBA8HvBymF,eAAgC,WAChC,QAAStV,iBAsBT,MAjBAA,cAAa30C,MAGb,WACI,GAAqBkZ,SAAU,GAAI53D,IACnC,QACItpB,OAAQ,SAAU6B,KAAM6B,OAEpB,MADAw9E,SAAQtgE,IAAI/e,KAAM6B,OACXtD,MAEXiyH,KAAM,WACF,MAAOnxC,SAAQ6c,KAAO,EAAI,GAAIs1B,gBAAenyC,SAAWy7B,aAAav2D,SAIjFu2D,aAAauW,WACbvW,aAAav2D,OAAU95C,QAAS,SAAUzK,MAAQ,MAAO86G,cAAauW,UAC/DvW,gBAEP0W,eAAgC,SAAUxoH,QAE1C,QAASwoH,gBAAez9D,UACpB,GAAIzsB,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAEjC,OADA+oC,OAAMysB,SAAWA,SACVzsB,MAaX,MAjBA9oC,WAAUgzH,eAAgBxoH,QAU1BwoH,eAAe1yH,UAAU2L,QAIzB,SAAUzK,MACN,MAAOzB,MAAKw1D,SAASnhC,IAAI5yB,MAAQzB,KAAKw1D,SAASj1C,IAAI9e,MAAQowH,eAAeiB,SAEvEG,gBACTpB,gBAoDEtlF,mBAAoC,WACpC,QAASA,oBAAmB1F,KAAMo5E,mBAC9BjgH,KAAK6mC,KAAOA,KACZ7mC,KAAKigH,kBAAoBA,kBACzBjgH,KAAKkzH,aAAe,GAAIhqG,KACxBlpB,KAAKmzH,gBAAkB,GAAIjqG,KAC3BlpB,KAAKsgH,SAAW,GAAIp3F,KACpBlpB,KAAKygH,2BAA6B,GAAIv3F,KAqJ1C,MA/IAqjB,oBAAmBhsC,UAAUykC,cAI7B,SAAUp9B,UAIN,OAAQ5H,KAAK6mC,KAAKY,aAAapmB,yBAAyBzZ,YAO5D2kC,mBAAmBhsC,UAAUqlH,kBAK7B,SAAUh+G,SAAUwrH,sBAChB,MAAOpzH,MAAK6mC,KAAK++E,kBAAkBh+G,SAAUwrH,uBAOjD7mF,mBAAmBhsC,UAAUumH,oBAK7B,SAAUjlG,SAAUwxG,sBAChB,MAAOrzH,MAAK6mC,KAAKigF,oBAAoBjlG,SAAUwxG,uBAMnD9mF,mBAAmBhsC,UAAUqlF,eAI7B,SAAU86B,cACN,GAAqB4S,YAAa5S,aAAa9iE,QAAQ97C,OACnD9B,KAAKigH,kBAAkB1/F,IAAImgG,aAAa94G,SAAU84G,aAAaj/G,MAC/Di/G,aACiBh8E,QAAU1kC,KAAKkzH,aAAa3yG,IAAI+yG,WAKrD,OAJK5uF,WACD1kC,KAAKuzH,iBAAiB7S,aAAa94G,UACnC88B,QAA6B1kC,KAAKkzH,aAAa3yG,IAAImgG,eAE/C4S,aAAe5S,cAAgBh8E,SAAY,MAMvD6H,mBAAmBhsC,UAAU6nC,aAI7B,SAAUxgC,UACN,MAAI5H,MAAKuzH,iBAAiB3rH,UACfnE,MAAMwgB,KAAKjkB,KAAKkzH,aAAa37F,QAAQrU,OAAO,SAAU4gB,QAAU,MAAOA,QAAOl8B,WAAaA,WAE/F,MAMX2kC,mBAAmBhsC,UAAUygH,YAI7B,SAAUN,cAEN,MADAA,cAAa7iE,kBACa79C,KAAKsgH,SAAS//F,IAAImgG,eAUhDn0E,mBAAmBhsC,UAAUkhH,mBAK7B,SAAU4K,kBACN,MAAOrsH,MAAKygH,2BAA2BlgG,IAAI8rG,mBAAqB,MAMpE9/E,mBAAmBhsC,UAAUkkC,WAI7B,SAAUC,SAAW1kC,KAAKkzH,aAAa1yG,IAAIkkB,QAAQZ,OAAQY,UAK3D6H,mBAAmBhsC,UAAUgzH,iBAI7B,SAAU3rH,UACN,GAAImhC,OAAQ/oC,KACSwzH,WAAaxzH,KAAKmzH,gBAAgB5yG,IAAI3Y,SAC3D,IAAkB,MAAd4rH,WACA,MAAOA,WAEX,IAAqB7uF,MAAO,IAC5B,IAAI3kC,KAAKglC,cAAcp9B,UAAW,CAC9B,GAAqB6rH,iBAAkB7xG,gBAAgBha,SACvD,KACI+8B,KAAO3kC,KAAK6mC,KAAKi/E,YAAY2N,iBAEjC,MAAwBn6G,GAEpB,KADA0zB,SAAQ5oC,MAAM,8BAAgCqvH,iBACxCn6G,GAKd,GAFAk6G,WAAqB,MAAR7uF,KACb3kC,KAAKmzH,gBAAgB3yG,IAAI5Y,SAAU4rH,YAC/B7uF,KAAM,CACN,GAAIvrB,IAAK8rB,qBAAqBllC,KAAKigH,kBAAmBjgH,KAAM4H,SAAU+8B,MAAOnB,WAAapqB,GAAGoqB,WAAYiiF,UAAYrsG,GAAGqsG,UAAWnF,SAAWlnG,GAAGknG,QACjJmF,WAAU5+G,QAAQ,SAAU69B,SAAW,MAAOqE,OAAMmqF,aAAa1yG,IAAIkkB,QAAQZ,OAAQY,WACjFlB,YACAxjC,KAAKygH,2BAA2BjgG,IAAI5Y,SAAU47B,YAElD88E,SAASz5G,QAAQ,SAAUy5G,UAAYv3E,MAAMu3E,SAAS9/F,IAAI8/F,SAASx8E,OAAQw8E,SAASA,YAExF,MAAOkT,aAEJjnF,sBA2EPmnF,gBAAiC,WACjC,QAASA,oBAET,MAAOA,oBAEPC,mBAAoC,WACpC,QAASA,sBACL3zH,KAAK4zH,WAAa,GAAI1qG,KAwE1B,MAnEAyqG,oBAAmBpzH,UAAUykC,cAG7B,WAAc,OAAO,GAKrB2uF,mBAAmBpzH,UAAUqlH,kBAI7B,SAAU/jG,UAAY,MAAOA,WAK7B8xG,mBAAmBpzH,UAAUumH,oBAI7B,SAAUjlG,UAAY,MAAOA,WAK7B8xG,mBAAmBpzH,UAAUqlF,eAI7B,SAAUt+E,WACN,MAAOtH,MAAK4zH,WAAWrzG,IAAIjZ,YAAc,MAK7CqsH,mBAAmBpzH,UAAU6nC,aAG7B,WAAc,UAKdurF,mBAAmBpzH,UAAUygH,YAI7B,SAAU15G,WAAa,MAAOA,YAK9BqsH,mBAAmBpzH,UAAUkhH,mBAI7B,SAAU5/F,UAAY,MAAO,OAK7B8xG,mBAAmBpzH,UAAUkkC,WAI7B,SAAUC,SAAW1kC,KAAK4zH,WAAWpzG,IAAIkkB,QAAQZ,OAAQY,UAClDivF,sBA2CP7kF,kBAAmC,WACnC,QAASA,mBAAkB0B,OAAQqjF,SAAUl+F,UAAWsZ,MACpDjvC,KAAKwwC,OAASA,OACdxwC,KAAK6zH,SAAWA,SAChB7zH,KAAK21B,UAAYA,UACjB31B,KAAKivC,KAAOA,KACZjvC,KAAKN,WAWT,MANAovC,mBAAkBvuC,UAAU8uC,yBAG5B,WACI,MAAO,IAAIP,mBAAkB9uC,KAAMA,KAAK6zH,SAAU7zH,KAAK21B,UAAW,GAAIzM,OAEnE4lB,qBAEPglF,YAA6B,WAC7B,QAASA,aAAYxwH,OACjBtD,KAAKsD,MAAQA,MAEjB,MAAOwwH,gBAoDP/kF,qBAAsC,WACtC,QAASA,sBAAqBpsB,WAC1B3iB,KAAK2iB,UAAYA,UA2jBrB,MArjBAosB,sBAAqBxuC,UAAUwzH,SAI/B,SAAUntH,KAAO,MAAOgoB,4BAA2BhoB,MAMnDmoC,qBAAqBxuC,UAAU8xF,oBAK/B,SAAU1sE,KAAMmF,KAKZ,MAJAA,KAAImkB,KAAKzuB,IAAImF,KAAKlkB,KAAMkkB,KAAKriB,MAAM2iB,gBAAgBjmB,KAAM8qB,MACrDnF,KAAK2mE,YAAY9zD,aAAamN,WAC9B7a,IAAIprB,QAAQqH,KAAK4e,KAAKlkB,MAEnB,MAOXstC,qBAAqBxuC,UAAU8vF,kBAK/B,SAAUrqE,KAAM8E,KAGZ,IAFA,GAAqBxnB,OAAQ0iB,KAAK1iB,MAAM2iB,gBAAgBjmB,KAAM8qB,KACzCkpG,QAAUlpG,IACb,MAAXkpG,SAAiB,CACpB,GAAIA,QAAQ/kF,KAAK5a,IAAIrO,KAAKvkB,MAEtB,MADAuyH,SAAQ/kF,KAAKzuB,IAAIwF,KAAKvkB,KAAM6B,OACrBA,KAEX0wH,SAA6BA,QAAe,OAEhD,KAAM,IAAI1vH,OAAM,yBAA2B0hB,KAAKvkB,OAOpDstC,qBAAqBxuC,UAAU4vF,iBAK/B,SAAUvpF,IAAKkkB,KACX,GAAqBkhE,SAA6BplF,IAAS,IAC3D,IAAmB,MAAfA,IAAIspF,QACJ,OAAQtpF,IAAIspF,SACR,IAAKL,YAAWE,MACZ,MAAOjlE,KAAI+oG,SAASx/E,SACxB,KAAKw7C,YAAWC,KACZ,MAAOhlE,KAAI+oG,QACf,KAAKhkC,YAAWG,WACZhE,QAAUioC,iBACV,MACJ,KAAKpkC,YAAWI,WACZjE,QAAUkoC,iBACV,MACJ,SACI,KAAM,IAAI5vH,OAAM,4BAA8BsC,IAAIspF,SAI9D,IADA,GAAqB8jC,SAAUlpG,IACb,MAAXkpG,SAAiB,CACpB,GAAIA,QAAQ/kF,KAAK5a,IAAI23D,SACjB,MAAOgoC,SAAQ/kF,KAAK1uB,IAAIyrE,QAE5BgoC,SAA6BA,QAAe,OAEhD,KAAM,IAAI1vH,OAAM,yBAA2B0nF,UAO/Cj9C,qBAAqBxuC,UAAUgwF,kBAK/B,SAAUvqE,KAAM8E,KACZ,GAAqBvW,UAAWyR,KAAKzR,SAAS0R,gBAAgBjmB,KAAM8qB,KAC/C1lB,MAAQ4gB,KAAK5gB,MAAM6gB,gBAAgBjmB,KAAM8qB,KACzCxnB,MAAQ0iB,KAAK1iB,MAAM2iB,gBAAgBjmB,KAAM8qB,IAE9D,OADAvW,UAASnP,OAAS9B,MACXA,OAOXyrC,qBAAqBxuC,UAAUkwF,mBAK/B,SAAUzqE,KAAM8E,KACZ,GAAqBvW,UAAWyR,KAAKzR,SAAS0R,gBAAgBjmB,KAAM8qB,KAC/CxnB,MAAQ0iB,KAAK1iB,MAAM2iB,gBAAgBjmB,KAAM8qB,IAE9D,OADAvW,UAASyR,KAAKvkB,MAAQ6B,MACfA,OAOXyrC,qBAAqBxuC,UAAUuwF,sBAK/B,SAAU9qE,KAAM8E,KACZ,GAEqBpkB,QAFA6N,SAAWyR,KAAKzR,SAAS0R,gBAAgBjmB,KAAM8qB,KAC/CnpB,KAAO3B,KAAKyzF,oBAAoBztE,KAAKrkB,KAAMmpB,IAEhE,IAAoB,MAAhB9E,KAAKkqE,QACL,OAAQlqE,KAAKkqE,SACT,IAAKQ,eAAcC,YACfjqF,OAAS6N,SAAS3L,OAAO5G,MAAMuS,SAAU5S,KACzC,MACJ,KAAK+uF,eAAcE,oBACflqF,OAAS6N,SAAS4/G,WAAYhqF,KAAMxoC,KAAK,IACzC,MACJ,KAAK+uF,eAAcG,KACfnqF,OAAS6N,SAAS48B,KAAKnvC,MAAMuS,SAAU5S,KACvC,MACJ,SACI,KAAM,IAAI2C,OAAM,0BAA4B0hB,KAAKkqE,aAIzDxpF,QAAS6N,SAA4ByR,KAAU,MAAGhkB,MAAMuS,SAAU5S,KAEtE,OAAO+E,SAOXqoC,qBAAqBxuC,UAAUwwF,wBAK/B,SAAUprE,KAAMmF,KACZ,GAAqBnpB,MAAO3B,KAAKyzF,oBAAoB9tE,KAAKhkB,KAAMmpB,KAC3CspG,OAASzuG,KAAK0B,EACnC,OAAI+sG,kBAAkBjuG,cAAeiuG,OAAOlkC,UAAYL,WAAWE,OAC/DjlE,IAAI+oG,SAASxzH,YAAYE,UAAUF,YAAY2B,MAAM8oB,IAAI+oG,SAAUlyH,MAC5D,MAGsBgkB,KAAK0B,GAAGpB,gBAAgBjmB,KAAM8qB,KAC9C9oB,MAAM,KAAML,OAQjCotC,qBAAqBxuC,UAAUiyF,gBAK/B,SAAU7sE,KAAMmF,KACZ,MAAO,IAAIgpG,aAAYnuG,KAAKriB,MAAM2iB,gBAAgBjmB,KAAM8qB,OAO5DikB,qBAAqBxuC,UAAUqyF,sBAK/B,SAAUjtE,KAAMmF,KACZ,GAAqB8vE,OAAQtrD,mBAAmB3pB,KAAMmF,IAAK9qB,KAK3D,OAJA8qB,KAAImkB,KAAKzuB,IAAImF,KAAKlkB,KAAMm5F,OACpBj1E,KAAK2mE,YAAY9zD,aAAamN,WAC9B7a,IAAIprB,QAAQqH,KAAK4e,KAAKlkB,MAEnB,MAOXstC,qBAAqBxuC,UAAUgyF,oBAK/B,SAAU5sE,KAAMmF,KACZ,MAAOnF,MAAKK,KAAKC,gBAAgBjmB,KAAM8qB,MAO3CikB,qBAAqBxuC,UAAUsyF,YAK/B,SAAUltE,KAAMmF,KAEZ,MADiCnF,MAAK1W,UAAUgX,gBAAgBjmB,KAAM8qB,KAE3D9qB,KAAKqlB,mBAAmBM,KAAKgpE,SAAU7jE,KAEvB,MAAlBnF,KAAKipE,UACH5uF,KAAKqlB,mBAAmBM,KAAKipE,UAAW9jE,KAE5C,MAOXikB,qBAAqBxuC,UAAU4yF,kBAK/B,SAAUxtE,KAAMmF,KACZ,IACI,MAAO9qB,MAAKqlB,mBAAmBM,KAAKstE,UAAWnoE,KAEnD,MAAwBxR,GACpB,GAAqB81B,UAAWtkB,IAAIukB,0BAGpC,OAFAD,UAASH,KAAKzuB,IAAIyzG,kBAAmB36G,GACrC81B,SAASH,KAAKzuB,IAAI0zG,kBAAmB56G,EAAEpB,OAChClY,KAAKqlB,mBAAmBM,KAAKutE,WAAY9jD,YAQxDL,qBAAqBxuC,UAAU8yF,eAK/B,SAAU1tE,KAAMmF,KACZ,KAAMnF,MAAKvhB,MAAM6hB,gBAAgBjmB,KAAM8qB,MAO3CikB,qBAAqBxuC,UAAUwyF,iBAK/B,SAAUptE,KAAMniB,SAAW,MAAO,OAMlCurC,qBAAqBxuC,UAAU0wF,qBAK/B,SAAUrqF,IAAKkkB,KACX,GAAqBnpB,MAAO3B,KAAKyzF,oBAAoB7sF,IAAIjF,KAAMmpB,KAC1C8vE,MAAQh0F,IAAIoqF,UAAU/qE,gBAAgBjmB,KAAM8qB,IACjE,OAAO,KAAK8vE,MAAMzpD,KAAKnvC,MAAM44F,WAAQ,IAAQhyF,OAAOjH,SAOxDotC,qBAAqBxuC,UAAU2wF,iBAK/B,SAAUtqF,IAAKkkB,KAAO,MAAOlkB,KAAItD,OAMjCyrC,qBAAqBxuC,UAAU4wF,kBAK/B,SAAUvqF,IAAKkkB,KACX,MAAO9qB,MAAK2iB,UAAUC,yBAAyBhc,IAAItD,QAOvDyrC,qBAAqBxuC,UAAU8wF,qBAK/B,SAAUzqF,IAAKkkB,KACX,MAAIlkB,KAAIqI,UAAUgX,gBAAgBjmB,KAAM8qB,KAC7BlkB,IAAI+nF,SAAS1oE,gBAAgBjmB,KAAM8qB,KAEpB,MAAjBlkB,IAAIgoF,UACFhoF,IAAIgoF,UAAU3oE,gBAAgBjmB,KAAM8qB,KAExC,MAOXikB,qBAAqBxuC,UAAU+wF,aAK/B,SAAU1qF,IAAKkkB,KACX,OAAQlkB,IAAIqI,UAAUgX,gBAAgBjmB,KAAM8qB,MAOhDikB,qBAAqBxuC,UAAUgxF,uBAK/B,SAAU3qF,IAAKkkB,KACX,MAAOlkB,KAAIqI,UAAUgX,gBAAgBjmB,KAAM8qB,MAO/CikB,qBAAqBxuC,UAAUixF,cAK/B,SAAU5qF,IAAKkkB,KACX,MAAOlkB,KAAItD,MAAM2iB,gBAAgBjmB,KAAM8qB,MAO3CikB,qBAAqBxuC,UAAUkxF,kBAK/B,SAAU7qF,IAAKkkB,KAEX,MAAO2lB,YAD2B7pC,IAAI0gB,OAAO1hB,IAAI,SAAUoqC,OAAS,MAAOA,OAAMvuC,OACnDmF,IAAI+yB,WAAY7O,IAAK9qB,OAOvD+uC,qBAAqBxuC,UAAU+xF,yBAK/B,SAAU3sE,KAAMmF,KACZ,GAAqBilB,YAAapqB,KAAK2B,OAAO1hB,IAAI,SAAUoqC,OAAS,MAAOA,OAAMvuC,MAKlF,OAJAqpB,KAAImkB,KAAKzuB,IAAImF,KAAKlkB,KAAMgvC,WAAWV,WAAYpqB,KAAKgU,WAAY7O,IAAK9qB,OACjE2lB,KAAK2mE,YAAY9zD,aAAamN,WAC9B7a,IAAIprB,QAAQqH,KAAK4e,KAAKlkB,MAEnB,MAOXstC,qBAAqBxuC,UAAUqxF,wBAK/B,SAAUhrF,IAAKkkB,KACX,GAAIie,OAAQ/oC,KACS2xF,IAAM,WAAc,MAAO/qF,KAAI+qF,IAAI1rE,gBAAgB8iB,MAAOje,MAC1DikE,IAAM,WAAc,MAAOnoF,KAAImoF,IAAI9oE,gBAAgB8iB,MAAOje,KAC/E,QAAQlkB,IAAI62D,UACR,IAAK4vB,gBAAeC,OAChB,MAAOqE,QAAS5C,KACpB,KAAK1B,gBAAeG,UAChB,MAAOmE,SAAU5C,KACrB,KAAK1B,gBAAeE,UAChB,MAAOoE,QAAS5C,KACpB,KAAK1B,gBAAeI,aAChB,MAAOkE,SAAU5C,KACrB,KAAK1B,gBAAeU,IAChB,MAAO4D,QAAS5C,KACpB,KAAK1B,gBAAeW,GAChB,MAAO2D,QAAS5C,KACpB,KAAK1B,gBAAeM,KAChB,MAAOgE,OAAQ5C,KACnB,KAAK1B,gBAAeK,MAChB,MAAOiE,OAAQ5C,KACnB,KAAK1B,gBAAeO,OAChB,MAAO+D,OAAQ5C,KACnB,KAAK1B,gBAAeQ,SAChB,MAAO8D,OAAQ5C,KACnB,KAAK1B,gBAAeS,OAChB,MAAO6D,OAAQ5C,KACnB,KAAK1B,gBAAeY,MAChB,MAAO0D,OAAQ5C,KACnB,KAAK1B,gBAAea,YAChB,MAAOyD,QAAS5C,KACpB,KAAK1B,gBAAec,OAChB,MAAOwD,OAAQ5C,KACnB,KAAK1B,gBAAee,aAChB,MAAOuD,QAAS5C,KACpB,SACI,KAAM,IAAIzqF,OAAM,oBAAsBsC,IAAI62D,YAQtD1uB,qBAAqBxuC,UAAUsxF,kBAK/B,SAAUjrF,IAAKkkB,KAIX,MAFgClkB,KAAI2N,SAAS0R,gBAAgBjmB,KAAM8qB,KACjDlkB,IAAInF,OAQ1BstC,qBAAqBxuC,UAAUuxF,iBAK/B,SAAUlrF,IAAKkkB,KAGX,MAFgClkB,KAAI2N,SAAS0R,gBAAgBjmB,KAAM8qB,KACvClkB,IAAIxB,MAAM6gB,gBAAgBjmB,KAAM8qB,OAQhEikB,qBAAqBxuC,UAAUyxF,sBAK/B,SAAUprF,IAAKkkB,KACX,MAAO9qB,MAAKyzF,oBAAoB7sF,IAAImrF,QAASjnE,MAOjDikB,qBAAqBxuC,UAAU0xF,oBAK/B,SAAUrrF,IAAKkkB,KACX,GAAIie,OAAQ/oC,KACS0G,SAErB,OADAE,KAAImrF,QAAQlrF,QAAQ,SAAU6Y,OAAS,MAAOhZ,QAAOgZ,MAAMzL,KAAOyL,MAAMpc,MAAM2iB,gBAAgB8iB,MAAOje,OAC9FpkB,QAOXqoC,qBAAqBxuC,UAAU4xF,eAK/B,SAAUvrF,IAAKpD,SACX,GAAqBzB,QAAS/B,KAAKyzF,oBAAoB7sF,IAAIoR,MAAOxU,QAClE,OAAOzB,QAAOA,OAAOD,OAAS,IAOlCitC,qBAAqBxuC,UAAUkzF,oBAK/B,SAAUjgF,YAAasX,KACnB,GAAIie,OAAQ/oC,IACZ,OAAOwT,aAAY5N,IAAI,SAAUogB,MAAQ,MAAOA,MAAKC,gBAAgB8iB,MAAOje,QAOhFikB,qBAAqBxuC,UAAU8kB,mBAK/B,SAAUsU,WAAY7O,KAClB,IAAK,GAAqB/f,GAAI,EAAGA,EAAI4uB,WAAW73B,OAAQiJ,IAAK,CACzD,GAAqB4a,MAAOgU,WAAW5uB,GAClB9G,IAAM0hB,KAAKG,eAAe9lB,KAAM8qB,IACrD,IAAI7mB,cAAe6vH,aACf,MAAO7vH,KAGf,MAAO,OAEJ8qC,wBAkBPklF,kBAAoB,QACpBC,kBAAoB,QAgBpBG,yBAA0C,SAAU5pH,QAEpD,QAAS4pH,4BACL,MAAO5pH,QAAO+pC,KAAKx0C,MAAM,IAAUA,KAuRvC,MAzRAC,WAAUo0H,yBAA0B5pH,QASpC4pH,yBAAyB9zH,UAAUqyF,sBAKnC,SAAUjtE,KAAMmF,KACZ,GAAIie,OAAQ/oC,IAWZ,OAVA8qB,KAAI6vE,UAAUh1E,MACd3lB,KAAKs9F,uBAAuB33E,KAAMmF,KACf,MAAfnF,KAAK6qB,SACL1lB,IAAIqvE,MAAMx0E,KAAMA,KAAKlkB,KAAO,+BAC5BkkB,KAAK6qB,OAAOvqB,gBAAgBjmB,KAAM8qB,KAClCA,IAAImvE,QAAQt0E,KAAM,iBAEtBA,KAAK+pB,QAAQ7oC,QAAQ,SAAU8oC,QAAU,MAAO5G,OAAMw0D,kBAAkB53E,KAAMgqB,OAAQ7kB,OACtFnF,KAAKkqB,QAAQhpC,QAAQ,SAAUipC,QAAU,MAAO/G,OAAMy0D,kBAAkB73E,KAAMmqB,OAAQhlB,OACtFA,IAAI+vE,WACG,MAOXw5B,yBAAyB9zH,UAAU+8F,uBAKnC,SAAU33E,KAAMmF,KACZA,IAAIqvE,MAAMx0E,KAAM,YAAcA,KAAKlkB,KAAO,KACZ,MAA1BkkB,KAAKwqB,mBACLnwC,KAAKy9F,aAAa93E,KAAKwqB,kBAAkB7oB,OAAQwD,KAErDA,IAAImvE,QAAQt0E,KAAM,OAClBmF,IAAI2vE,YAC0B,MAA1B90E,KAAKwqB,mBACDxqB,KAAKwqB,kBAAkB5oB,KAAKzlB,OAAS,IACrCgpB,IAAImvE,QAAQt0E,KAAM,oBAClB3lB,KAAKqlB,mBAAmBM,KAAKwqB,kBAAkB5oB,KAAMuD,MAG7DA,IAAI4vE,YACJ5vE,IAAImvE,QAAQt0E,KAAM,MAQtB0uG,yBAAyB9zH,UAAUg9F,kBAMnC,SAAU53E,KAAMgqB,OAAQ7kB,KACpBA,IAAImvE,QAAQt0E,KAAM,yBAA2BA,KAAKlkB,KAAO,gBAAkBkuC,OAAOluC,KAAO,0BACzFqpB,IAAI2vE,YACA9qD,OAAOpoB,KAAKzlB,OAAS,IACrBgpB,IAAImvE,QAAQt0E,KAAM,oBAClB3lB,KAAKqlB,mBAAmBsqB,OAAOpoB,KAAMuD,MAEzCA,IAAI4vE,YACJ5vE,IAAImvE,QAAQt0E,KAAM,SAQtB0uG,yBAAyB9zH,UAAUi9F,kBAMnC,SAAU73E,KAAMmqB,OAAQhlB,KACpBA,IAAIqvE,MAAMx0E,KAAMA,KAAKlkB,KAAO,cAAgBquC,OAAOruC,KAAO,gBAC1DzB,KAAKy9F,aAAa3tD,OAAOxoB,OAAQwD,KACjCA,IAAImvE,QAAQt0E,KAAM,OAClBmF,IAAI2vE,YACA3qD,OAAOvoB,KAAKzlB,OAAS,IACrBgpB,IAAImvE,QAAQt0E,KAAM,oBAClB3lB,KAAKqlB,mBAAmByqB,OAAOvoB,KAAMuD,MAEzCA,IAAI4vE,YACJ5vE,IAAImvE,QAAQt0E,KAAM,OAOtB0uG,yBAAyB9zH,UAAU4vF,iBAKnC,SAAUvpF,IAAKkkB,KACX,GAAIlkB,IAAIspF,UAAYL,WAAWC,KAC3BhlE,IAAIqvE,MAAMvzF,IAAK,YAEd,CAAA,GAAIA,IAAIspF,UAAYL,WAAWE,MAChC,KAAM,IAAIzrF,OAAM,+EAGhBmG,QAAOlK,UAAU4vF,iBAAiB37C,KAAKx0C,KAAM4G,IAAKkkB,KAEtD,MAAO,OAOXupG,yBAAyB9zH,UAAU8xF,oBAKnC,SAAU1sE,KAAMmF,KAIZ,MAHAA,KAAIqvE,MAAMx0E,KAAM,OAASA,KAAKlkB,KAAO,OACrCkkB,KAAKriB,MAAM2iB,gBAAgBjmB,KAAM8qB,KACjCA,IAAImvE,QAAQt0E,KAAM,KACX,MAOX0uG,yBAAyB9zH,UAAUixF,cAKnC,SAAU5qF,IAAKkkB,KAEX,MADAlkB,KAAItD,MAAM2iB,gBAAgBjmB,KAAM8qB,KACzB,MAOXupG,yBAAyB9zH,UAAUwwF,wBAKnC,SAAU/qE,KAAM8E,KACZ,GAAqBspG,QAASpuG,KAAKqB,EAanC,OAZI+sG,kBAAkBjuG,cAAeiuG,OAAOlkC,UAAYL,WAAWE,OACzBjlE,IAAiB,aAAS,OAAE7E,gBAAgBjmB,KAAM8qB,KACxFA,IAAIqvE,MAAMn0E,KAAM,cACZA,KAAKrkB,KAAKG,OAAS,IACnBgpB,IAAIqvE,MAAMn0E,KAAM,MAChBhmB,KAAKyzF,oBAAoBztE,KAAKrkB,KAAMmpB,IAAK,MAE7CA,IAAIqvE,MAAMn0E,KAAM,MAGhBvb,OAAOlK,UAAUwwF,wBAAwBv8C,KAAKx0C,KAAMgmB,KAAM8E,KAEvD,MAOXupG,yBAAyB9zH,UAAUkxF,kBAKnC,SAAU7qF,IAAKkkB,KAQX,MAPAA,KAAIqvE,MAAMvzF,IAAK,YAAcA,IAAInF,KAAO,IAAMmF,IAAInF,KAAO,IAAM,KAC/DzB,KAAKy9F,aAAa72F,IAAI0gB,OAAQwD,KAC9BA,IAAImvE,QAAQrzF,IAAK,OACjBkkB,IAAI2vE,YACJz6F,KAAKqlB,mBAAmBze,IAAI+yB,WAAY7O,KACxCA,IAAI4vE,YACJ5vE,IAAIqvE,MAAMvzF,IAAK,KACR,MAOXytH,yBAAyB9zH,UAAU+xF,yBAKnC,SAAU3sE,KAAMmF,KAQZ,MAPAA,KAAIqvE,MAAMx0E,KAAM,YAAcA,KAAKlkB,KAAO,KAC1CzB,KAAKy9F,aAAa93E,KAAK2B,OAAQwD,KAC/BA,IAAImvE,QAAQt0E,KAAM,OAClBmF,IAAI2vE,YACJz6F,KAAKqlB,mBAAmBM,KAAKgU,WAAY7O,KACzCA,IAAI4vE,YACJ5vE,IAAImvE,QAAQt0E,KAAM,KACX,MAOX0uG,yBAAyB9zH,UAAU4yF,kBAKnC,SAAUxtE,KAAMmF,KACZA,IAAImvE,QAAQt0E,KAAM,SAClBmF,IAAI2vE,YACJz6F,KAAKqlB,mBAAmBM,KAAKstE,UAAWnoE,KACxCA,IAAI4vE,YACJ5vE,IAAImvE,QAAQt0E,KAAM,YAAc6zE,kBAAkB/3F,KAAO,OACzDqpB,IAAI2vE,WACJ,IAAqBvH,aAAgCuG,kBAAkBj5E,IAAIg5E,kBAAkB5pE,KAAK,UAAU2I,WAAW,MAC/GC,aAAaC,SACZ7vB,OAAO+c,KAAKutE,WAIrB,OAHAlzF,MAAKqlB,mBAAmB6tE,WAAYpoE,KACpCA,IAAI4vE,YACJ5vE,IAAImvE,QAAQt0E,KAAM,KACX,MAOX0uG,yBAAyB9zH,UAAUk9F,aAKnC,SAAUn2E,OAAQwD,KACd9qB,KAAKg8F,gBAAgB,SAAUhsD,OAAS,MAAOllB,KAAIqvE,MAAM,KAAMnqD,MAAMvuC,OAAU6lB,OAAQwD,IAAK,MAMhGupG,yBAAyB9zH,UAAUu7F,qBAInC,SAAUhsD,QACN,GAAqBruC,KACrB,QAAQquC,QACJ,IAAK4gD,eAAcC,YACflvF,KAAO,QACP,MACJ,KAAKivF,eAAcE,oBACfnvF,KAAO,WACP,MACJ,KAAKivF,eAAcG,KACfpvF,KAAO,MACP,MACJ,SACI,KAAM,IAAI6C,OAAM,2BAA6BwrC,QAErD,MAAOruC,OAEJ4yH,0BACT34B,wBAsDEjqD,kBAAmC,SAAUhnC,QAE7C,QAASgnC,mBAAkB9uB,WACvB,GAAIomB,OAAQt+B,OAAO+pC,KAAKx0C,OAASA,IAKjC,OAJA+oC,OAAMpmB,UAAYA,UAClBomB,MAAMurF,iBACNvrF,MAAMwrF,kBACNxrF,MAAMyrF,qBACCzrF,MAiGX,MAxGA9oC,WAAUwxC,kBAAmBhnC,QAa7BgnC,kBAAkBlxC,UAAUmxC,iBAI5B,SAAU5mB,KACsB,GAAI2B,iBAAgB,GAAI3F,gBAAe9mB,KAAKw0H,kBAAkB5uH,IAAI,SAAU6uH,WAAa,MAAO,IAAI1tG,iBAAgB0tG,UAAWvuG,SAASuuG,YAAY,OAC3K3uG,eAAe9lB,KAAM8qB,MAK9B2mB,kBAAkBlxC,UAAUoxC,QAG5B,WAEI,IAAK,GADgBjrC,WACKqE,EAAI,EAAGA,EAAI/K,KAAKs0H,cAAcxyH,OAAQiJ,IAC5DrE,OAAO1G,KAAKs0H,cAAcvpH,IAAM/K,KAAKu0H,eAAexpH,EAExD,OAAOrE,SAOX+qC,kBAAkBlxC,UAAU4wF,kBAK5B,SAAUvqF,IAAKkkB,KACX,GAAqBxnB,OAAQtD,KAAK2iB,UAAUC,yBAAyBhc,IAAItD,OACpDgG,GAAKtJ,KAAKu0H,eAAerxH,QAAQI,MACtD,KAAY,IAARgG,GAAW,CACXA,GAAKtJ,KAAKu0H,eAAezyH,OACzB9B,KAAKu0H,eAAextH,KAAKzD,MACzB,IAAqBuyD,QAASzuD,gBAAiBE,UAAWhE,SAAY,KACtEtD,MAAKs0H,cAAcvtH,KAAK,OAAS8uD,OAAS,IAAMvsD,IAGpD,MADAwhB,KAAIqvE,MAAMvzF,IAAK5G,KAAKs0H,cAAchrH,KAC3B,MAOXmoC,kBAAkBlxC,UAAU8xF,oBAK5B,SAAU1sE,KAAMmF,KAIZ,MAHInF,MAAK2mE,YAAY9zD,aAAamN,WAC9B3lC,KAAKw0H,kBAAkBztH,KAAK4e,KAAKlkB,MAE9BgJ,OAAOlK,UAAU8xF,oBAAoB79C,KAAKx0C,KAAM2lB,KAAMmF,MAOjE2mB,kBAAkBlxC,UAAU+xF,yBAK5B,SAAU3sE,KAAMmF,KAIZ,MAHInF,MAAK2mE,YAAY9zD,aAAamN,WAC9B3lC,KAAKw0H,kBAAkBztH,KAAK4e,KAAKlkB,MAE9BgJ,OAAOlK,UAAU+xF,yBAAyB99C,KAAKx0C,KAAM2lB,KAAMmF,MAOtE2mB,kBAAkBlxC,UAAUqyF,sBAK5B,SAAUjtE,KAAMmF,KAIZ,MAHInF,MAAK2mE,YAAY9zD,aAAamN,WAC9B3lC,KAAKw0H,kBAAkBztH,KAAK4e,KAAKlkB,MAE9BgJ,OAAOlK,UAAUqyF,sBAAsBp+C,KAAKx0C,KAAM2lB,KAAMmF,MAE5D2mB,mBACT4iF,0BA0BEK,YAA6B,WAC7B,QAASA,aAAYtN,kBAAmBC,gBAAiBC,eAAgBC,cAAeE,kBAAmB3jC,iBAAkBtvB,WAAYmgE,gBAAiB12C,SAAU22C,2BAChK50H,KAAKonH,kBAAoBA,kBACzBpnH,KAAKqnH,gBAAkBA,gBACvBrnH,KAAKsnH,eAAiBA,eACtBtnH,KAAKunH,cAAgBA,cACrBvnH,KAAKynH,kBAAoBA,kBACzBznH,KAAK8jF,iBAAmBA,iBACxB9jF,KAAKw0D,WAAaA,WAClBx0D,KAAK20H,gBAAkBA,gBACvB30H,KAAKi+E,SAAWA,SAChBj+E,KAAK40H,0BAA4BA,0BACjC50H,KAAK60H,uBAAyB,GAAI3rG,KAClClpB,KAAK80H,2BAA6B,GAAI5rG,KACtClpB,KAAK+0H,+BAAiC,GAAI7rG,KAC1ClpB,KAAKg1H,uBAAyB,GAAI9rG,KAClClpB,KAAKi1H,uBAAyB,EAC9Bj1H,KAAKk1H,mBAAqB,GAAIhxG,KAmblC,MA7aAwwG,aAAYn0H,UAAU40H,kBAItB,SAAU9tC,YACN,MAAO5sC,WAAUC,WAAW16C,KAAKo1H,4BAA4B/tC,YAAY,KAM7EqtC,YAAYn0H,UAAU80H,mBAItB,SAAUhuC,YACN,MAAOvsC,SAAQ5uC,QAAQlM,KAAKo1H,4BAA4B/tC,YAAY,KAMxEqtC,YAAYn0H,UAAU+0H,kCAItB,SAAUjuC,YACN,MAAO5sC,WAAUC,WAAW16C,KAAKu1H,+BAA+BluC,YAAY,KAMhFqtC,YAAYn0H,UAAUi1H,mCAItB,SAAUnuC,YACN,MAAOvsC,SAAQ5uC,QAAQlM,KAAKu1H,+BAA+BluC,YAAY,KAM3EqtC,YAAYn0H,UAAUglF,oBAItB,SAAUv7D,WAEN,MAD+BhqB,MAAKonH,kBAAkBlgC,oBAAoBl9D,WACzB,kBAMrD0qG,YAAYn0H,UAAUk1H,iBAItB,SAAUhQ,WACNzlH,KAAKqyD,aACLryD,KAAK01H,iBAAiBjQ,YAM1BiP,YAAYn0H,UAAUm1H,iBAItB,SAAUC,OACN,IAAI31H,KAAKk1H,mBAAmB7gG,IAAIshG,OAAhC,CAGA31H,KAAKk1H,mBAAmBr4F,IAAI84F,MAE5B,KAAK,GADgBlQ,WAAYkQ,QACP5qH,EAAI,EAAGA,EAAI06G,UAAU3jH,OAAQiJ,IAAK,CACxD,GAAqB2U,OAAQ+lG,UAAU16G,EACvC,IAAqB,kBAAV2U,OACP1f,KAAK01H,iBAAiBh2G,WAErB,CACD,GAAqBglB,SAA2B,KAChD1kC,MAAK8jF,iBAAiBr/C,YAAaX,OAAQY,QAAQt+B,KAAKkB,UAAWs8B,SAAU,KAAMx9B,KAAMs+B,cAQrGgwF,YAAYn0H,UAAUq1H,cAItB,SAAUruH,KAAO,QAASvH,KAAK8jF,iBAAiB8B,eAAer+E,MAK/DmtH,YAAYn0H,UAAUs1H,sBAItB,SAAUC,KACN,GAAI/sF,OAAQ/oC,IACZ,OAAO81H,KAAIlwH,IAAI,SAAUujF,KAAO,MAAOA,KAAI7hF,YAAc4b,OAAO,SAAU3b,KAAO,OAAQwhC,MAAM6sF,cAAcruH,QAOjHmtH,YAAYn0H,UAAU60H,4BAKtB,SAAU/tC,WAAYpB,QAClB,GAAIl9C,OAAQ/oC,IACZ,OAAOy6C,WAAUl0C,KAAKvG,KAAK+1H,aAAa1uC,WAAYpB,QAAS,WAEzD,MADAl9C,OAAMitF,mBAAmB3uC,WAAY,MAC9Bt+C,MAAMwhF,eAAeljC,eAQpCqtC,YAAYn0H,UAAUg1H,+BAKtB,SAAUluC,WAAYpB,QAClB,GAAIl9C,OAAQ/oC,IACZ,OAAOy6C,WAAUl0C,KAAKvG,KAAK+1H,aAAa1uC,WAAYpB,QAAS,WACzD,GAAqBgwC,sBAErB,OADAltF,OAAMitF,mBAAmB3uC,WAAY4uC,qBAEjCC,gBAAiBntF,MAAMwhF,eAAeljC,YACtC4uC,mBAAoBA,uBAShCvB,YAAYn0H,UAAUw1H,aAKtB,SAAUI,WAAYlwC,QAClB,GAAIl9C,OAAQ/oC,KACSynF,WACA2uC,aAAkCp2H,KAAKonH,kBAAkBz+E,oBAAoBwtF,WAelG,OAZAn2H,MAAK61H,sBAAsBO,aAAaxzF,iBAAiBkF,SAASjhC,QAAQ,SAAUwvH,gBAEhF,GAAqB3sH,YAAgCq/B,MAAMq+E,kBAAkBz+E,oBAAoB0tF,eACjGttF,OAAM8sF,sBAAsBnsH,WAAW4/B,oBAAoBziC,QAAQ,SAAUU,KACzE,GAAqBmgF,SAAU3+C,MAAMq+E,kBAAkBphC,sBAAsBt8E,WAAWtD,KAAKkB,UAAWC,IAAK0+E,OACzGyB,UACAD,QAAQ1gF,KAAK2gF,WAGrB3+C,MAAM8sF,sBAAsBnsH,WAAW6/B,eAClC1iC,QAAQ,SAAUU,KAAO,MAAOwhC,OAAMq+E,kBAAkBl9B,sBAAsB3iF,SAEhFkzC,UAAUG,IAAI6sC,UAMzBitC,YAAYn0H,UAAUgqH,eAItB,SAAUljC,YACN,GAAqB6uC,iBAAqCl2H,KAAKg1H,uBAAuBz0G,IAAI8mE,WAC1F,KAAK6uC,gBAAiB,CAClB,GAAqBxsH,YAAgC1J,KAAKonH,kBAAkBz+E,oBAAoB0+C,YAE3E4P,eAAiBj3F,KAAK40H,0BAA0BlrH,WAAWtD,KAAKkB,WAChEq2B,UAAYkU,sBACZ3L,cAAgBlmC,KAAKynH,kBAAkBhwB,QAAQ95D,UAAWj0B,WAAYutF,eAC3Fi/B,iBAAkBl2H,KAAKs2H,gBAAgB7sH,eAAeC,YAAai0B,UAAUhE,YAAYuM,cAAcqxD,oBACvGv3F,KAAKg1H,uBAAuBx0G,IAAI9W,WAAWtD,KAAKkB,UAAW4uH,iBAE/D,MAAOA,kBAWXxB,YAAYn0H,UAAUy1H,mBAMtB,SAAUG,WAAYI,uBAClB,GAAIxtF,OAAQ/oC,KACS6nC,SAA8B7nC,KAAKonH,kBAAkBz+E,oBAAoBwtF,YACzEK,qBAAuB,GAAIttG,KAC3ButG,UAAY,GAAIvyG,KAChBwyG,gBAAkB12H,KAAK61H,sBAAsBhuF,SAASjF,iBAAiBkF,QAC5F4uF,iBAAgB7vH,QAAQ,SAAU8vH,UAC9B,GAAqBC,iBAAqC7tF,MAAMq+E,kBAAkBz+E,oBAAoBguF,SACtG5tF,OAAM8sF,sBAAsBe,gBAAgBttF,oBAAoBziC,QAAQ,SAAUgwH,QAC9EL,qBAAqBh2G,IAAIq2G,OAAQD,gBACjC,IAAqBlyC,SAAU37C,MAAMq+E,kBAAkBngC,qBAAqB4vC,OAC5E,IAAInyC,QAAQr7D,cACRotG,UAAU55F,IAAIkM,MAAM+tF,wBAAwBpyC,QAASkyC,kBACjDL,uBAAuB,CACvB,GAAqB93F,UAAWsK,MAAMguF,4BAA4BryC,QAAQt+E,KAAKkB,UAAWsvH,gBAC1FH,WAAU55F,IAAI4B,UACd83F,sBAAsBxvH,KAAuB29E,QAAwB,uBAKrFgyC,gBAAgB7vH,QAAQ,SAAU8vH,UAC9B,GAAqBC,iBAAqC7tF,MAAMq+E,kBAAkBz+E,oBAAoBguF,SACtG5tF,OAAM8sF,sBAAsBe,gBAAgBttF,oBAAoBziC,QAAQ,SAAUgwH,QAC9E,GAAqBnyC,SAAU37C,MAAMq+E,kBAAkBngC,qBAAqB4vC,OACxEnyC,SAAQr7D,aACRq7D,QAAQv3D,gBAAgBtmB,QAAQ,SAAUmwH,oBACtC,GAAqBttH,YAAgC8sH,qBAAqBj2G,IAAIy2G,mBAAmB/1E,cACjGw1E,WAAU55F,IAAIkM,MAAMguF,4BAA4BC,mBAAmB/1E,cAAev3C,iBAI9FktH,gBAAgBzpG,gBAAgBtmB,QAAQ,SAAUmwH,oBAC9C,IAAKjuF,MAAM6sF,cAAcoB,mBAAmB/1E,cAAc35C,WAAY,CAClE,GAAqBoC,YAAgC8sH,qBAAqBj2G,IAAIy2G,mBAAmB/1E,cACjGw1E,WAAU55F,IAAIkM,MAAMguF,4BAA4BC,mBAAmB/1E,cAAev3C,kBAI9F+sH,UAAU5vH,QAAQ,SAAU43B,UAAY,MAAOsK,OAAMkuF,iBAAiBx4F,aAM1Ei2F,YAAYn0H,UAAUgyD,cAItB,SAAUnsD,MACNpG,KAAKg1H,uBAAuBl4F,OAAO12B,MACnCpG,KAAKonH,kBAAkB70D,cAAcnsD,MACrCpG,KAAK80H,2BAA2Bh4F,OAAO12B,MACCpG,KAAK60H,uBAAuBt0G,IAAIna,OAEpEpG,KAAK60H,uBAAuB/3F,OAAO12B,OAM3CsuH,YAAYn0H,UAAU8xD,WAGtB,WAEIryD,KAAKonH,kBAAkB/0D,aACvBryD,KAAK60H,uBAAuBviE,QAC5BtyD,KAAK80H,2BAA2BxiE,QAChCtyD,KAAKg1H,uBAAuB1iE,SAOhCoiE,YAAYn0H,UAAUw2H,4BAKtB,SAAUjvH,SAAU+/B,UAChB,IAAKA,SACD,KAAM,IAAIvjC,OAAM,aAAeoB,UAAUoC,UAAY,qFAEzD,IAAqBovH,kBAAmBl3H,KAAK80H,2BAA2Bv0G,IAAIzY,SAC5E,KAAKovH,iBAAkB,CACnB,GAAqBjuH,UAAWjJ,KAAKonH,kBAAkBngC,qBAAqBn/E,SAC5E8pC,iBAAgB3oC,SAChB,IAAqBmiH,UAAWprH,KAAKonH,kBAAkBvhC,yBAAyB58E,SAA6BA,SAA0B,iBAAEkuH,eACzID,kBACI,GAAIE,mBAAiB,EAAMnuH,SAAS7C,KAAMglH,SAAUvjF,UAAW5+B,SAAS7C,OAC5EpG,KAAK80H,2BAA2Bt0G,IAAI1Y,SAAUovH,kBAElD,MAAOA,mBAOXxC,YAAYn0H,UAAUu2H,wBAKtB,SAAU7tH,SAAU4+B,UAChB,GAAqBqvF,kBAAmBl3H,KAAK60H,uBAAuBt0G,IAAItX,SAAS7C,KAAKkB,UAMtF,OALK4vH,oBACDtlF,gBAAgB3oC,UAChBiuH,iBAAmB,GAAIE,mBAAiB,EAAOnuH,SAAS7C,KAAM6C,SAAU4+B,SAAUA,SAASjF,iBAAiB7Z,YAC5G/oB,KAAK60H,uBAAuBr0G,IAAIvX,SAAS7C,KAAKkB,UAAW4vH,mBAEtDA,kBAMXxC,YAAYn0H,UAAU02H,iBAItB,SAAUx4F,UACN,GAAIsK,OAAQ/oC,IACZ,KAAIy+B,SAAS44F,WAAb,CAGA,GAAqBpuH,UAAWw1B,SAASx1B,SACpBquH,+BAAiC,GAAIpuG,KACrCquG,cAAgB1lF,sBAChB24E,oBAAsBxqH,KAAKsnH,eAAe9oF,iBAAiB+4F,cAAetuH,SAC7FA,UAAkB,SAAE21C,oBAAoB/3C,QAAQ,SAAU4jH,gBACxD,GAAqBgC,oBAAqB1jF,MAAMu+E,eAAe1iB,cAAc/yD,sBAAuB5oC,SAAUwhH,eAC9G6M,gCAA+B92G,IAAuBiqG,eAAyB,UAAGgC,sBAEtFzsH,KAAKw3H,4BAA4BhN,oBAAqB8M,+BACtD,IACIl+G,KADyBqlB,SAASoJ,SAASjF,iBAAiBoF,MAAMpiC,IAAI,SAAUsgG,MAAQ,MAAOn9D,OAAMq+E,kBAAkBp9B,eAAekc,KAAK5+F,aACtItH,KAAK2pH,eAAe1gH,SAAUw1B,SAASoJ,SAAUpJ,SAAS1V,aAAa6gG,eAAiBxwG,GAAGqlB,SAAU0qE,UAAY/vF,GAAG4uB,MACxG9B,cAAgBlmC,KAAKunH,cAAc/oF,iBAAiB+4F,cAAetuH,SAAU2gH,eAAgB1jG,SAASskG,oBAAoBjmB,WAAY4E,WACtIsuB,WAAaz3H,KAAKs2H,gBAAgB3sH,eAAe80B,SAASoJ,SAASzhC,KAAMq4B,SAASx1B,UAAWsuH,cAAc59F,YAC3G+9F,UAAYD,WAAWvxF,cAAcytE,cACrCv0D,aAAeq4E,WAAWvxF,cAAc0tE,gBAC7Dn1E,UAASk5F,SAASD,UAAWt4E,gBAQjCs1E,YAAYn0H,UAAUopH,eAMtB,SAAU1gH,SAAU4+B,SAAU4jF,sBAC1B,GAAI1iF,OAAQ/oC,KAESstC,oBAAyCrkC,SAAkB,SAAEqkC,oBAC7DvkB,WAAa0iG,qBAAqB7lH,IAAI,SAAU2jB,KAAO,MAAOwf,OAAMq+E,kBAAkBlgC,oBAAoB39D,IAAIjiB,aAC9G0gC,MAAQH,SAASjF,iBAAiBoF,MAAMpiC,IAAI,SAAUsgG,MAAQ,MAAOn9D,OAAMq+E,kBAAkBp9B,eAAekc,KAAK5+F,YACtI,OAAOtH,MAAKqnH,gBAAgBvzF,MAAM7qB,SAAgDA,SAAkB,SAAU,QAAG8f,WAAYif,MAAOH,SAASoY,QAASl3C,kBAAkB8+B,SAASzhC,KAAM6C,SAA6BA,SAAkB,UAAIqkC,sBAO9OonF,YAAYn0H,UAAUi3H,4BAKtB,SAAU9wH,OAAQ4wH,gCACd,GAAIvuF,OAAQ/oC,IACZ0G,QAAO2/B,aAAax/B,QAAQ,SAAU+kB,IAAK7gB,GACvC,GAAqB6sH,qBAAyCN,+BAA+B/2G,IAAIqL,IAAIpW,WAChFqiH,gBAAkB9uF,MAAM+uF,mCAAmCF,oBAAqBN,+BACrG1rG,KAAI0a,SAASuxF,oBAQrBnD,YAAYn0H,UAAUu3H,mCAKtB,SAAUpxH,OAAQ4wH,gCAEd,MADAt3H,MAAKw3H,4BAA4B9wH,OAAQ4wH,gCAClCt3H,KAAKs2H,gBAAgBltH,uBAAuB1C,OAAO2C,KAAMrJ,KAAKi1H,0BAA2BvuH,OAAOi3B,UAAUhE,YAAYjzB,OAAO69F,YAOxImwB,YAAYn0H,UAAU+1H,gBAKtB,SAAU3lF,UAAWhX,YACjB,MAAK35B,MAAK20H,gBAAgBtnF,OAIfkE,cAAcZ,UAAWhX,WAAY35B,KAAKw0D,WAAYx0D,KAAK20H,gBAAgBj3E,YAH3E7O,oBAAoBlV,WAAY35B,KAAKw0D,aAM7CkgE,eAEP0C,iBAAkC,WAClC,QAASA,kBAAiBp2F,OAAQl5B,SAAUmB,SAAU4+B,SAAU9e,YAC5D/oB,KAAKghC,OAASA,OACdhhC,KAAK8H,SAAWA,SAChB9H,KAAKiJ,SAAWA,SAChBjJ,KAAK6nC,SAAWA,SAChB7nC,KAAK+oB,WAAaA,WAClB/oB,KAAK+3H,WAA8B,KACnC/3H,KAAKq3H,YAAa,EAoBtB,MAbAD,kBAAiB72H,UAAUo3H,SAK3B,SAAUD,UAAWt4E,cACjBp/C,KAAK+3H,WAAaL,UACC13H,KAAKiJ,SAA2B,kBAAE87E,YAAY2yC,UACjE,KAAK,GAAqB9nG,QAAQwvB,cACXp/C,KAAKiJ,SAAsB,aAAE2mB,MAAQwvB,aAAaxvB,KAEzE5vB,MAAKq3H,YAAa,GAEfD,oBAoCPY,iBAAkC,WAClC,QAASA,qBAET,MAAOA,qBA+BP9lF,YAA6B,WAC7B,QAAS+lF,iBAAgBC,oBACE,KAAnBA,iBAA6BA,eAAiB,MAClDl4H,KAAKk4H,eAAiBA,eAgD1B,MA3BAD,iBAAgB13H,UAAU2L,QAW1B,SAAUN,QAAS9C,KACf,GAAqBqvH,aAAcrvH,GACpB,OAAX8C,SAAmBA,QAAQ9J,OAAS,IACpCq2H,YAAclkF,YAAYroC,QAASusH,aAEvC,IAAqBC,eAAgB/lF,OAAO8lF,aACvBrrH,OAAS9M,KAAKk4H,cACnC,IAAc,MAAVprH,QAAmC,MAAjBsrH,eACuB,WAAzCA,cAAc9lF,gBAAgBC,QAAsB,CACpD,GAAqB/nC,MAAO4tH,cAAc9lF,gBAAgBqB,KAG1D,OAFA7mC,QAASA,OAAOtK,QAAQ,OAAQ,IAChCgI,KAAOA,KAAKhI,QAAQ,OAAQ,IACrBsK,OAAS,IAAMtC,KAE1B,MAAO2tH,cAEJF,mBAmHPhlF,SAAW,GAAI59B,QAAO,4HActBi9B;qKACAC,OAAQ,EACRqB,SAAU,EACVC,OAAQ,EACRC,KAAM,EACNH,KAAM,EACNI,UAAW,EACXC,SAAU,EAEd1B,iBAAgBA,gBAAgBC,QAAU,SAC1CD,gBAAgBA,gBAAgBsB,UAAY,WAC5CtB,gBAAgBA,gBAAgBuB,QAAU,SAC1CvB,gBAAgBA,gBAAgBwB,MAAQ,OACxCxB,gBAAgBA,gBAAgBqB,MAAQ,OACxCrB,gBAAgBA,gBAAgByB,WAAa,YAC7CzB,gBAAgBA,gBAAgB0B,UAAY;;;;;;;AAwH5C,GAAIqkF,gBAAgC,WAChC,QAASA,mBAWT,MALAA,gBAAe93H,UAAUggB,IAIzB,SAAUzX,KAAO,MAAO,IACjBuvH,kBAoBPC,UAA2B,WAC3B,QAASA,WAAUzxF,KAAMC,qBAAsBgjF,cAAe/iF,kBAC1D/mC,KAAK6mC,KAAOA,KACZ7mC,KAAK8mC,qBAAuBA,qBAC5B9mC,KAAK8pH,cAAgBA,cACrB9pH,KAAK+mC,iBAAmBA,iBAiE5B,MA3DAuxF,WAAU/3H,UAAUyd,QAIpB,SAAU+pG,WACN,GAAIh/E,OAAQ/oC,KACRoZ,GAAK8tB,4BAA4B6gF,UAAW/nH,KAAK6mC,KAAM7mC,KAAK8mC,qBAAsB9mC,KAAK+mC,kBAAmBQ,MAAQnuB,GAAGmuB,MAAOK,UAAYxuB,GAAGwuB,SAC/I,OAAOkT,SACFF,IAAIhT,UAAUhiC,IAAI,SAAUiiC,UAC7B,MAAOkB,OAAMhC,iBAAiBygD,qCAAqC3/C,SAASzhC,KAAKkB,WAAW,MAE3Ff,KAAK,WACN,GAAqB+rB,UAerB,IAdAiV,MAAM1gC,QAAQ,SAAUw7B,MACpB,GAAqB0nF,aACrB1nF,MAAKtZ,WAAWliB,QAAQ,SAAUmuD,eAC9B,GAAqB0vB,SAAU37C,MAAMhC,iBAAiBkgD,qBAAqBjyB,cACvE0vB,UAAWA,QAAQr7D,aACnB0gG,UAAUhjH,KAAK29E,WAGvBqlC,UAAUljH,QAAQ,SAAUoC,UACxB,GAAqB40E,MAA6C50E,SAAkB,SAAW,SAC1EiN,oBAAsB4rC,oBAAoBC,UAA6B94C,SAAkB,SAAE61C,cAChHxsB,QAAOvrB,KAAK/E,MAAMswB,OAA2ByW,MAAM+gF,cAAcvP,mBAAmB18B,KAAMx7C,KAAKxgB,SAAU3L,0BAG7Goc,OAAOxwB,OACP,KAAM,IAAIwC,OAAMguB,OAAO1sB,IAAI,SAAU0T,GAAK,MAAOA,GAAEtT,aAAeH,KAAK,MAE3E,OAAOkjC,OAAM+gF,iBAQrBwO,UAAU73H,OAKV,SAAUomC,KAAMsxC,QACZ,GAAqBxrC,YAAa,GAAIE,YACjBR,YAAcP,qBAAqBjF,MACnC1B,YAAc,GAAImH,mBAClBpI,gBAAkB,GAAIqI,oBAAmB1F,KAAM1B,aAC/C2B,qBAAuB,GAAI0F,sBAAqB3F,KAAM1B,YAAajB,iBACnEuI,gBAAkB,GAAIC,iBAAgBxI,gBAAiB4C,sBACvD3xB,OAAS,GAAI83B,iBAAiBC,qBAAsBC,kBAAkBC,SAAUC,QAAQ,IACxFG,WAAa,GAAIC,sBAAsBltB,IAAK,SAAUzX,KAAO,MAAO+9B,MAAK6G,aAAa5kC,OAAWujC,YAAaM,WAAYx3B,QAC1H24B,sBAAwB,GAAIC,0BAC5BpiC,SAAW,GAAIuiC,yBAAwB/4B,OAAQw3B,WAAY,GAAIwB,kBAAiB1B,iBAAkB,GAAI2B,mBAAkB3B,iBAAkB,GAAI4B,cAAa5B,iBAAkBvI,gBAAiB4J,sBAAuBN,WAAYR,QAAS7H,YAAasH,iBAEvPq9E,cAAgB,GAAIxP,eAAc3tE,iBAAoBwrC,OAE3E,QAASogD,UADwB,GAAID,WAAUzxF,KAAMC,qBAAsBgjF,cAAen+G,UAC3D8gC,gBAAiBA,kBAE7C6rF,YAGX54H,SAAQ46C,KAAOA,KACf56C,QAAQutC,eAAiBA,eACzBvtC,QAAQsH,2BAA6BA,2BACrCtH,QAAQ4iB,gBAAkBA,gBAC1B5iB,QAAQ8iB,oBAAsBA,oBAC9B9iB,QAAQ6tB,YAAcA,YACtB7tB,QAAQg1H,YAAcA,YACtBh1H,QAAQ0uC,kBAAoBA,kBAC5B1uC,QAAQ2uC,aAAeA,aACvB3uC,QAAQyuC,iBAAmBA,iBAC3BzuC,QAAQyW,6BAA+BA,6BACvCzW,QAAQoiD,oBAAsBA,oBAC9BpiD,QAAQkvC,iBAAmBA,iBAC3BlvC,QAAQ0nB,cAAgBA,cACxB1nB,QAAQ2tF,eAAiBA,eACzB3tF,QAAQsvF,mBAAqBA,mBAC7BtvF,QAAQgxF,cAAgBA,cACxBhxF,QAAQmwF,WAAaA,WACrBnwF,QAAQkwF,SAAWA,SACnBlwF,QAAQy+B,WAAaA,WACrBz+B,QAAQ6+B,YAAcA,YACtB7+B,QAAQw+B,UAAYA,UACpBx+B,QAAQwyF,UAAYA,UACpBxyF,QAAQozF,YAAcA,YACtBpzF,QAAQmvF,gBAAkBA,gBAC1BnvF,QAAQgyF,oBAAsBA,oBAC9BhyF,QAAQg6B,eAAiBA,eACzBh6B,QAAQ06B,oBAAsBA,oBAC9B16B,QAAQ4mB,aAAeA,aACvB5mB,QAAQ0xF,kBAAoBA,kBAC5B1xF,QAAQ8nB,aAAeA,aACvB9nB,QAAQkoB,OAASA,OACjBloB,QAAQ4hC,gBAAkBA,gBAC1B5hC,QAAQ+uF,mBAAqBA,mBAC7B/uF,QAAQ8uF,iBAAmBA,iBAC3B9uF,QAAQknB,iBAAmBA,iBAC3BlnB,QAAQooB,YAAcA,YACtBpoB,QAAQonB,eAAiBA,eACzBpnB,QAAQwnB,QAAUA,QAClBxnB,QAAQ4uF,YAAcA,YACtB5uF,QAAQ2uF,aAAeA,aACvB3uF,QAAQymB,YAAcA,YACtBzmB,QAAQ+sB,gBAAkBA,gBAC1B/sB,QAAQ0zF,UAAYA,UACpB1zF,QAAQszF,aAAeA,aACvBtzF,QAAQ4wF,aAAeA,aACvB5wF,QAAQ8wF,cAAgBA,cACxB9wF,QAAQ0wF,aAAeA,aACvB1wF,QAAQ84B,aAAeA,aACvB94B,QAAQuvB,UAAYA,UACpBvvB,QAAQ6lB,0BAA4BA,0BACpC7lB,QAAQqvB,sBAAwBA,sBAChCrvB,QAAQ6uC,aAAeA,aACvB7uC,QAAQkF,eAAiBA,eACzBlF,QAAQiF,cAAgBA,cACxBjF,QAAQ6E,YAAcA,YACtB7E,QAAQq7C,QAAUA,QAClBr7C,QAAQ27C,QAAUA,QAClB37C,QAAQ47C,QAAUA,QAClB57C,QAAQ+7C,aAAeA,aACvB/7C,QAAQi8C,QAAUA,QAClBj8C,QAAQm8C,wBAA0BA,wBAClCn8C,QAAQq8C,cAAgBA,cACxBr8C,QAAQy8C,aAAeA,aACvBz8C,QAAQ48C,YAAcA,YACtB58C,QAAQg7B,WAAaA,WACrBh7B,QAAQ86B,oBAAsBA,oBAC9B96B,QAAQm9C,0BAA4BA,0BACpCn9C,QAAQs9C,aAAeA,aACvBt9C,QAAQgpB,YAAcA,YACtBhpB,QAAQ4pB,gBAAkBA,gBAC1B5pB,QAAQi7B,aAAeA,aACvBj7B,QAAQq7B,oBAAsBA,oBAC9Br7B,QAAQ49C,oBAAsBA,oBAC9B59C,QAAQ69C,4BAA8BA,4BACtC79C,QAAQ8G,iBAAmBA,iBAC3B9G,QAAQ0H,eAAiBA,eACzB1H,QAAQiI,oBAAsBA,oBAC9BjI,QAAQmI,cAAgBA,cACxBnI,QAAQsI,iBAAmBA,iBAC3BtI,QAAQuI,kBAAoBA,kBAC5BvI,QAAQwI,qBAAuBA,qBAC/BxI,QAAQy+C,mBAAqBA,mBAC7Bz+C,QAAQyI,UAAYA,UACpBzI,QAAQ0I,eAAiBA,eACzB1I,QAAQ2+C,0BAA4BA,0BACpC3+C,QAAQ8+C,wBAA0BA,wBAClC9+C,QAAQs/C,yBAA2BA,yBACnCt/C,QAAQggD,oBAAsBA,oBAC9BhgD,QAAQigD,wBAA0BA,wBAClCjgD,QAAQwgD,kCAAoCA,kCAC5CxgD,QAAQwhD,aAAeA,aACvBxhD,QAAQ4I,QAAUA,QAClB5I,QAAQqJ,kBAAoBA,kBAC5BrJ,QAAQ0J,uBAAyBA,uBACjC1J,QAAQ+J,eAAiBA,eACzB/J,QAAQiK,eAAiBA,eACzBjK,QAAQosC,qBAAuBA,qBAC/BpsC,QAAQusC,kBAAoBA,kBAC5BvsC,QAAQgvC,YAAcA,YACtBhvC,QAAQinC,iBAAmBA,iBAC3BjnC,QAAQwnC,4BAA8BA,4BACtCxnC,QAAQioC,YAAcA,YACtBjoC,QAAQsnC,mBAAqBA,mBAC7BtnC,QAAQmgH,cAAgBA,cACxBngH,QAAQ0iC,aAAeA,aACvB1iC,QAAQ0qC,eAAiBA,eACzB1qC,QAAQ4qC,iBAAmBA,iBAC3B5qC,QAAQgtC,gBAAkBA,gBAC1BhtC,QAAQ8H,aAAeA,aACvB9H,QAAQ4sC,kBAAoBA,kBAC5B5sC,QAAQsgH,qBAAuBA,qBAC/BtgH,QAAQ8sC,qBAAuBA,qBAC/B9sC,QAAQ+jC,mBAAqBA,mBAC7B/jC,QAAQikC,uBAAyBA,uBACjCjkC,QAAQ6sC,mBAAqBA,mBAC7B7sC,QAAQmL,QAAUA,QAClBnL,QAAQg0H,gBAAkBA,gBAC1Bh0H,QAAQi0H,mBAAqBA,mBAC7Bj0H,QAAQs4H,iBAAmBA,iBAC3Bt4H,QAAQuyC,sCAAwCA,sCAChDvyC,QAAQyyC,gCAAkCA,gCAC1CzyC,QAAQwyC,YAAcA,YACtBxyC,QAAQ0yC,aAAeA,aACvB1yC,QAAQ24H,eAAiBA,eACzB34H,QAAQm+F,sBAAwBA,sBAChCn+F,QAAQ44H,UAAYA,UACpB54H,QAAQktC,eAAiBA,eACzBltC,QAAQ46G,cAAgBA,cACxB56G,QAAQ02E,WAAaA,WACrB12E,QAAQqhB,MAAQA,MAChBrhB,QAAQohB,OAASA,OACjBphB,QAAQkhB,IAAMA,IACdlhB,QAAQmhB,IAAMA,IACdnhB,QAAQ+tC,oBAAsBA,oBAC9B/tC,QAAQi5D,YAAcA,YACtBj5D,QAAQo5D,UAAYA,UACpBp5D,QAAQq5D,IAAMA,IACdr5D,QAAQs5D,MAAQA,MAChBt5D,QAAQy2B,UAAYA,UACpBz2B,QAAQy5D,iBAAmBA,iBAC3Bz5D,QAAQ05D,MAAQA,MAChB15D,QAAQ25D,YAAcA,YACtB35D,QAAQ45D,aAAeA,aACvB55D,QAAQ65D,cAAgBA,cACxB75D,QAAQ85D,iBAAmBA,iBAC3B95D,QAAQ+5D,UAAYA,UACpB/5D,QAAQg6D,WAAaA,WACrBh6D,QAAQi6D,YAAcA,YACtBj6D,QAAQk6D,iBAAmBA,iBAC3Bl6D,QAAQm6D,aAAeA,aACvBn6D,QAAQo6D,WAAaA,WACrBp6D,QAAQq6D,cAAgBA,cACxBr6D,QAAQu6D,OAASA,OACjBv6D,QAAQy6D,UAAYA,UACpBz6D,QAAQ06D,cAAgBA,cACxB16D,QAAQ26D,WAAaA,WACrB36D,QAAQ46D,eAAiBA,eACzB56D,QAAQ66D,aAAeA,aACvB76D,QAAQw2B,cAAgBA,cACxBx2B,QAAQ86D,gBAAkBA,gBAC1B96D,QAAQg7D,eAAiBA,eACzBh7D,QAAQi7D,oBAAsBA,oBAC9Bj7D,QAAQk7D,eAAiBA,eACzBl7D,QAAQyT,iBAAmBA,iBAC3BzT,QAAQ0Q,UAAYA,UACpB1Q,QAAQmuC,MAAQA,MAChBnuC,QAAQyQ,MAAQA,MAChBzQ,QAAQ83D,IAAMA,IACd93D,QAAQ4R,aAAeA,aACvB5R,QAAQyS,QAAUA,QAClBzS,QAAQm7D,mBAAqBA,mBAC7Bn7D,QAAQq7D,2BAA6BA,2BACrCr7D,QAAQkuC,OAASA,OACjBluC,QAAQ47D,UAAYA,UACpB57D,QAAQklB,qBAAuBA,qBAC/BllB,QAAQwuC,wBAA0BA,wBAClCxuC,QAAQo2B,KAAOA,KACfp2B,QAAQ2hD,UAAYA,UACpB3hD,QAAQ6hD,cAAgBA,cACxB7hD,QAAQiB,UAAYuyB,YACpBxzB,QAAQyK,QAAUA,QAClBzK,QAAQ2e,QAAUA,QAClB3e,QAAQkK,SAAWA,SACnBlK,QAAQkL,iBAAmBA,iBAC3BlL,QAAQ4K,SAAWA,SACnB5K,QAAQyyB,gBAAkBA,gBAC1BzyB,QAAQ4nE,UAAYA,UACpB5nE,QAAQmtC,WAAaA,WACrBntC,QAAQ0sE,kBAAoBA,kBAC5B1sE,QAAQwd,qBAAuBA,qBAC/Bxd,QAAQwiD,eAAiBA,eACzBxiD,QAAQ0M,YAAcA,YACtB1M,QAAQ6M,cAAgBA,cACxB7M,QAAQ+M,YAAcA,YACtB/M,QAAQgN,aAAeA,aACvBhN,QAAQiN,YAAcA,YACtBjN,QAAQmN,eAAiBA,eACzBnN,QAAQ4iD,eAAiBA,eACzB5iD,QAAQsyB,aAAeA,YACvBtyB,SAAQkvB,2BAA6BA,2BACrClvB,QAAQ8iC,kBAAoBA,kBAC5B9iC,QAAQmW,cAAgBA,cACxBnW,QAAQiW,gBAAkBA,gBAC1BjW,QAAQkW,gBAAkBA,gBAC1BlW,QAAQ+gE,gBAAkBA,gBAC1B/gE,QAAQkhE,WAAaA,WACrBlhE,QAAQ4V,eAAiBA,eACzB5V,QAAQquC,yBAA2BA,yBACnCruC,QAAQm0B,YAAcA,YACtBn0B,QAAQ2hF,gBAAkBA,gBAC1B3hF,QAAQyiF,oBAAsBA,oBAC9BziF,QAAQ6iF,gBAAkBA,gBAC1B7iF,QAAQ2kG,wBAA0BA,wBAClC3kG,QAAQ4kG,mBAAqBA,mBAC7B5kG,QAAQivC,cAAgBA,cACxBjvC,QAAQspG,mBAAqBA,mBAC7BtpG,QAAQupG,oBAAsBA,oBAC9BvpG,QAAQuuC,eAAiBA,eACzBvuC,QAAQq1B,aAAeA,aACvBr1B,QAAQu1B,yBAA2BA,yBACnCv1B,QAAQq2B,wBAA0BA,wBAElCv1B,OAAO4f,eAAe1gB,QAAS,cAAgB4D,OAAO","file":"compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v6.0.0-beta.3-0b1f5d2\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v6.0.0-beta.3-0b1f5d2\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('6.0.0-beta.3-0b1f5d2');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                var /** @type {?} */ guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, guards, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ publicNames = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG$1 = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG$1:\n                return [].concat.apply([], visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.getAttrs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error$$1, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error$$1, type);\n            if (otherType) {\n                this._errorCollector(error$$1, otherType);\n            }\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error$$1))[ERROR_COMPONENT_TYPE] = compType;\n    return error$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n    Static: 3,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\nStmtModifier[StmtModifier.Static] = \"Static\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @param {?=} name\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n/**\n * @param {?} condition\n * @param {?} thenClause\n * @param {?=} elseClause\n * @return {?}\n */\nfunction ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var /** @type {?} */ scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText].concat(commentsWithHash).join('\\n');\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error$$1 = errors_1[_i];\n            this._reportError(error$$1.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error$$1) {\n        if (warnings.indexOf(error$$1.msg) !== -1) {\n            warningCounts[error$$1.msg] = (warningCounts[error$$1.msg] || 0) + 1;\n            return warningCounts[error$$1.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error$$1);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/** @enum {number} */\nvar BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherise generate a general binding\n    TrySimple: 1,\n};\nBindingForm[BindingForm.General] = \"General\";\nBindingForm[BindingForm.TrySimple] = \"TrySimple\";\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type inteference\n        // to infer the type.\n        var /** @type {?} */ type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, literal(ast.value, type));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var /** @type {?} */ args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return (/** @type {?} */ (args[0])).cast(DYNAMIC_TYPE);\n        }\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent, guards) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.getTypeGuardExpressions = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var /** @type {?} */ guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var /** @type {?} */ useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: /** @type {?} */ ({ context: this.component, value: input.value })\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var /** @type {?} */ guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var /** @type {?} */ bindingId = \"\" + bindingCount++;\n                var /** @type {?} */ nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var /** @type {?} */ guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var /** @type {?} */ guards = this.getTypeGuardExpressions(ast);\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CONSTANT_PREFIX = '_c';\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    __extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FixupExpression.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return this.resolved.visitExpression(visitor, context);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FixupExpression.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    FixupExpression.prototype.fixup = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.literals = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getConstLiteral = /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (literal$$1, forceShared) {\n        var /** @type {?} */ key = this.keyOf(literal$$1);\n        var /** @type {?} */ fixup = this.literals.get(key);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal$$1);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var /** @type {?} */ name_1 = this.freshName();\n            this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_1));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @return {?}\n     */\n    ConstantPool.prototype.getDefinition = /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, kind, ctx) {\n        var /** @type {?} */ declarations = kind == 2 /* Component */ ?\n            this.componentDefinitions :\n            kind == 1 /* Directive */ ? this.directiveDefinitions : this.injectorDefinitions;\n        var /** @type {?} */ fixup = declarations.get(type);\n        if (!fixup) {\n            var /** @type {?} */ property = kind == 2 /* Component */ ?\n                'ngComponentDef' :\n                kind == 1 /* Directive */ ? 'ngDirectiveDef' : 'ngInjectorDef';\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            declarations.set(type, fixup);\n        }\n        else if (!fixup.shared) {\n            var /** @type {?} */ name_2 = this.freshName();\n            this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_2));\n        }\n        return fixup;\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    ConstantPool.prototype.uniqueName = /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    /**\n     * @return {?}\n     */\n    ConstantPool.prototype.freshName = /**\n     * @return {?}\n     */\n    function () { return this.uniqueName(CONSTANT_PREFIX); };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ConstantPool.prototype.keyOf = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        return expression.visitExpression(new KeyVisitor(), null);\n    };\n    return ConstantPool;\n}());\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitReadVarExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, null); }).join(',') + \"]\";\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ mapEntry = function (entry) {\n            return entry.key + \":\" + entry.value.visitExpression(_this, null);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    return KeyVisitor;\n}());\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE$1 = '@angular/core';\nvar Identifiers$1 = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'n';\n    Identifiers.HOST_BINDING_METHOD = 'h';\n    /* Instructions */\n    Identifiers.createElement = { name: 'ɵE', moduleName: CORE$1 };\n    Identifiers.elementEnd = { name: 'ɵe', moduleName: CORE$1 };\n    Identifiers.elementProperty = { name: 'ɵp', moduleName: CORE$1 };\n    Identifiers.elementAttribute = { name: 'ɵa', moduleName: CORE$1 };\n    Identifiers.elementClass = { name: 'ɵk', moduleName: CORE$1 };\n    Identifiers.elementStyle = { name: 'ɵs', moduleName: CORE$1 };\n    Identifiers.containerCreate = { name: 'ɵC', moduleName: CORE$1 };\n    Identifiers.containerEnd = { name: 'ɵc', moduleName: CORE$1 };\n    Identifiers.containerRefreshStart = { name: 'ɵcR', moduleName: CORE$1 };\n    Identifiers.containerRefreshEnd = { name: 'ɵcr', moduleName: CORE$1 };\n    Identifiers.directiveCreate = { name: 'ɵD', moduleName: CORE$1 };\n    Identifiers.text = { name: 'ɵT', moduleName: CORE$1 };\n    Identifiers.directiveInput = { name: 'ɵi', moduleName: CORE$1 };\n    Identifiers.textCreateBound = { name: 'ɵt', moduleName: CORE$1 };\n    Identifiers.bind = { name: 'ɵb', moduleName: CORE$1 };\n    Identifiers.bind1 = { name: 'ɵb1', moduleName: CORE$1 };\n    Identifiers.bind2 = { name: 'ɵb2', moduleName: CORE$1 };\n    Identifiers.bind3 = { name: 'ɵb3', moduleName: CORE$1 };\n    Identifiers.bind4 = { name: 'ɵb4', moduleName: CORE$1 };\n    Identifiers.bind5 = { name: 'ɵb5', moduleName: CORE$1 };\n    Identifiers.bind6 = { name: 'ɵb6', moduleName: CORE$1 };\n    Identifiers.bind7 = { name: 'ɵb7', moduleName: CORE$1 };\n    Identifiers.bind8 = { name: 'ɵb8', moduleName: CORE$1 };\n    Identifiers.bindV = { name: 'ɵbV', moduleName: CORE$1 };\n    Identifiers.memory = { name: 'ɵm', moduleName: CORE$1 };\n    Identifiers.projection = { name: 'ɵP', moduleName: CORE$1 };\n    Identifiers.projectionDef = { name: 'ɵpD', moduleName: CORE$1 };\n    Identifiers.refreshComponent = { name: 'ɵr', moduleName: CORE$1 };\n    Identifiers.directiveLifeCycle = { name: 'ɵl', moduleName: CORE$1 };\n    Identifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE$1 };\n    Identifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE$1 };\n    Identifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE$1 };\n    Identifiers.inject = { name: 'ɵinject', moduleName: CORE$1 };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE$1,\n    };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n    return Identifiers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Name of the context parameter passed into a template function\n */\nvar CONTEXT_NAME = 'ctx';\n/**\n * Name of the creation mode flag passed into a template function\n */\nvar CREATION_MODE_FLAG = 'cm';\n/**\n * Name of the temporary to use during data binding\n */\nvar TEMPORARY_NAME = '_t';\n/**\n * The prefix reference variables\n */\nvar REFERENCE_PREFIX = '_r';\n/**\n * The name of the implicit context reference\n */\nvar IMPLICIT_REFERENCE = '$implicit';\n/**\n * @param {?} outputCtx\n * @param {?} directive\n * @param {?} reflector\n * @return {?}\n */\nfunction compileDirective(outputCtx, directive, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. 'type: MyDirective`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(directive.type.reference), quoted: false });\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    var /** @type {?} */ templateFactory = createFactory(directive.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g 'inputs: {a: 'a'}`\n    if (Object.getOwnPropertyNames(directive.inputs).length > 0) {\n        definitionMapValues.push({ key: 'inputs', quoted: false, value: mapToExpression(directive.inputs) });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(directive.type)));\n    className || error(\"Cannot resolver the name of \" + directive.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField('ngDirectiveDef', /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineDirective).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} template\n * @param {?} reflector\n * @return {?}\n */\nfunction compileComponent(outputCtx, component, template, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. `type: MyApp`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(component.type.reference), quoted: false });\n    // e.g. `tag: 'my-app'`\n    // This is optional and only included if the first selector of a component has element.\n    var /** @type {?} */ selector = component.selector && CssSelector.parse(component.selector);\n    var /** @type {?} */ firstSelector = selector && selector[0];\n    if (firstSelector && firstSelector.hasElementSelector()) {\n        definitionMapValues.push({ key: 'tag', value: literal(firstSelector.element), quoted: false });\n    }\n    // e.g. `attr: [\"class\", \".my.app\"]\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var /** @type {?} */ selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMapValues.push({\n                key: 'attrs',\n                value: outputCtx.constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), /* forceShared */ true),\n                quoted: false\n            });\n        }\n    }\n    // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n    var /** @type {?} */ templateFactory = createFactory(component.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var /** @type {?} */ templateTypeName = component.type.reference.name;\n    var /** @type {?} */ templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var /** @type {?} */ templateFunctionExpression = new TemplateDefinitionBuilder(outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, ROOT_SCOPE.nestedScope(), 0, /** @type {?} */ ((component.template)).ngContentSelectors, templateTypeName, templateName)\n        .buildTemplateFunction(template, []);\n    definitionMapValues.push({ key: 'template', value: templateFunctionExpression, quoted: false });\n    // e.g `inputs: {a: 'a'}`\n    if (Object.getOwnPropertyNames(component.inputs).length > 0) {\n        definitionMapValues.push({ key: 'inputs', quoted: false, value: mapToExpression(component.inputs) });\n    }\n    // e.g. `features: [NgOnChangesFeature(MyComponent)]`\n    var /** @type {?} */ features = [];\n    if (component.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; })) {\n        features.push(importExpr(Identifiers$1.NgOnChangesFeature, null, null).callFn([outputCtx.importExpr(component.type.reference)]));\n    }\n    if (features.length) {\n        definitionMapValues.push({ key: 'features', quoted: false, value: literalArr(features) });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(component.type)));\n    className || error(\"Cannot resolver the name of \" + component.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField('ngComponentDef', /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineComponent).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nvar BINDING_INSTRUCTION_MAP = (_a = {},\n    _a[PropertyBindingType.Property] = Identifiers$1.elementProperty,\n    _a[PropertyBindingType.Attribute] = Identifiers$1.elementAttribute,\n    _a[PropertyBindingType.Class] = Identifiers$1.elementClass,\n    _a[PropertyBindingType.Style] = Identifiers$1.elementStyle,\n    _a);\n/**\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return importExpr(Identifiers$1.bind1).callFn(args);\n        case 5:\n            return importExpr(Identifiers$1.bind2).callFn(args);\n        case 7:\n            return importExpr(Identifiers$1.bind3).callFn(args);\n        case 9:\n            return importExpr(Identifiers$1.bind4).callFn(args);\n        case 11:\n            return importExpr(Identifiers$1.bind5).callFn(args);\n        case 13:\n            return importExpr(Identifiers$1.bind6).callFn(args);\n        case 15:\n            return importExpr(Identifiers$1.bind7).callFn(args);\n        case 17:\n            return importExpr(Identifiers$1.bind8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return importExpr(Identifiers$1.bindV).callFn([literalArr(args)]);\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(parent) {\n        this.parent = parent;\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ current = this;\n        while (current) {\n            var /** @type {?} */ value = current.map.get(name);\n            if (value != null) {\n                // Cache the value locally.\n                this.map.set(name, value);\n                return value;\n            }\n            current = current.parent;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} variableName\n     * @return {?}\n     */\n    BindingScope.prototype.set = /**\n     * @param {?} name\n     * @param {?} variableName\n     * @return {?}\n     */\n    function (name, variableName) {\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, variable(variableName));\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.nestedScope = /**\n     * @return {?}\n     */\n    function () { return new BindingScope(this); };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.freshReferenceName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        return \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n    };\n    return BindingScope;\n}());\nvar ROOT_SCOPE = new BindingScope(null).set('$event', '$event');\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(outputCtx, constantPool, reflector, contextParameter, bindingScope, level, ngContentSelectors, contextName, templateName) {\n        if (level === void 0) { level = 0; }\n        this.outputCtx = outputCtx;\n        this.constantPool = constantPool;\n        this.reflector = reflector;\n        this.contextParameter = contextParameter;\n        this.bindingScope = bindingScope;\n        this.level = level;\n        this.ngContentSelectors = ngContentSelectors;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._referenceIndex = 0;\n        this._temporaryAllocated = false;\n        this._prefix = [];\n        this._creationMode = [];\n        this._bindingMode = [];\n        this._hostMode = [];\n        this._refreshMode = [];\n        this._postfix = [];\n        this._projectionDefinitionIndex = 0;\n        this.unsupported = unsupported;\n        this.invalid = invalid$1;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid$1;\n        this.visitVariable = invalid$1;\n        this.visitEvent = invalid$1;\n        this.visitElementProperty = invalid$1;\n        this.visitAttr = invalid$1;\n        // These should be handled in the template or element directly\n        this.visitDirective = invalid$1;\n        this.visitDirectiveProperty = invalid$1;\n    }\n    /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    function (asts, variables) {\n        // Create variable bindings\n        for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n            var variable$$1 = variables_1[_i];\n            var /** @type {?} */ variableName = variable$$1.name;\n            var /** @type {?} */ expression = variable(this.contextParameter).prop(variable$$1.value || IMPLICIT_REFERENCE);\n            var /** @type {?} */ scopedName = this.bindingScope.freshReferenceName();\n            var /** @type {?} */ declaration = variable(scopedName).set(expression).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]);\n            // Add the reference to the local scope.\n            this.bindingScope.set(variableName, scopedName);\n            // Declare the local variable in binding mode\n            this._bindingMode.push(declaration);\n        }\n        // Collect content projections\n        if (this.ngContentSelectors && this.ngContentSelectors.length > 0) {\n            var /** @type {?} */ contentProjections = getContentProjection(asts, this.ngContentSelectors);\n            this._contentProjections = contentProjections;\n            if (contentProjections.size > 0) {\n                var /** @type {?} */ infos_1 = [];\n                Array.from(contentProjections.values()).forEach(function (info) {\n                    if (info.selector) {\n                        infos_1[info.index - 1] = info.selector;\n                    }\n                });\n                var /** @type {?} */ projectionIndex = this._projectionDefinitionIndex = this.allocateDataSlot();\n                var /** @type {?} */ parameters = [literal(projectionIndex)];\n                !infos_1.some(function (value) { return !value; }) || error(\"content project information skipped an index\");\n                if (infos_1.length > 1) {\n                    parameters.push(this.outputCtx.constantPool.getConstLiteral(asLiteral(infos_1), /* forceShared */ /* forceShared */ true));\n                }\n                this.instruction.apply(this, [this._creationMode, null, Identifiers$1.projectionDef].concat(parameters));\n            }\n        }\n        templateVisitAll(this, asts);\n        var /** @type {?} */ creationMode = this._creationMode.length > 0 ?\n            [ifStmt(variable(CREATION_MODE_FLAG), this._creationMode)] :\n            [];\n        return fn([\n            new FnParam(this.contextParameter, null), new FnParam(CREATION_MODE_FLAG, BOOL_TYPE)\n        ], this._prefix.concat(creationMode, this._bindingMode, this._hostMode, this._refreshMode, this._postfix), INFERRED_TYPE, null, this.templateName);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.bindingScope.get(name); };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ info = /** @type {?} */ ((this._contentProjections.get(ast)));\n        info || error(\"Expected \" + ast.sourceSpan + \" to be included in content projection collection\");\n        var /** @type {?} */ slot = this.allocateDataSlot();\n        var /** @type {?} */ parameters = [literal(slot), literal(this._projectionDefinitionIndex)];\n        if (info.index !== 0) {\n            parameters.push(literal(info.index));\n        }\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.projection].concat(parameters));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._computeDirectivesArray = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var _this = this;\n        var /** @type {?} */ directiveIndexMap = new Map();\n        var /** @type {?} */ directiveExpressions = directives.filter(function (directive) { return !directive.directive.isComponent; }).map(function (directive) {\n            directiveIndexMap.set(directive.directive.type.reference, _this.allocateDataSlot());\n            return _this.typeReference(directive.directive.type.reference);\n        });\n        return {\n            directivesArray: directiveExpressions.length ?\n                this.constantPool.getConstLiteral(literalArr(directiveExpressions), /* forceShared */ /* forceShared */ true) :\n                literal(null),\n            directiveIndexMap: directiveIndexMap\n        };\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ bindingCount = 0;\n        var /** @type {?} */ elementIndex = this.allocateDataSlot();\n        var /** @type {?} */ componentIndex = undefined;\n        var /** @type {?} */ referenceDataSlots = new Map();\n        // Element creation mode\n        var /** @type {?} */ component = findComponent(ast.directives);\n        var /** @type {?} */ nullNode = literal(null, INFERRED_TYPE);\n        var /** @type {?} */ parameters = [literal(elementIndex)];\n        // Add component type or element tag\n        if (component) {\n            parameters.push(this.typeReference(component.directive.type.reference));\n            componentIndex = this.allocateDataSlot();\n        }\n        else {\n            parameters.push(literal(ast.name));\n        }\n        // Add attributes array\n        var /** @type {?} */ attributes = [];\n        for (var _i = 0, _a = ast.attrs; _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(literal(attr.name), literal(attr.value));\n        }\n        parameters.push(attributes.length > 0 ?\n            this.constantPool.getConstLiteral(literalArr(attributes), /* forceShared */ /* forceShared */ true) :\n            nullNode);\n        // Add directives array\n        var _b = this._computeDirectivesArray(ast.directives), directivesArray = _b.directivesArray, directiveIndexMap = _b.directiveIndexMap;\n        parameters.push(directiveIndexMap.size > 0 ? directivesArray : nullNode);\n        if (component && componentIndex != null) {\n            // Record the data slot for the component\n            directiveIndexMap.set(component.directive.type.reference, componentIndex);\n        }\n        // Add references array\n        if (ast.references && ast.references.length > 0) {\n            var /** @type {?} */ references = flatten(ast.references.map(function (reference) {\n                var /** @type {?} */ slot = _this.allocateDataSlot();\n                referenceDataSlots.set(reference.name, slot);\n                // Generate the update temporary.\n                var /** @type {?} */ variableName = _this.bindingScope.freshReferenceName();\n                _this._bindingMode.push(variable(variableName, INFERRED_TYPE)\n                    .set(importExpr(Identifiers$1.memory).callFn([literal(slot)]))\n                    .toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n                _this.bindingScope.set(reference.name, variableName);\n                return [reference.name, reference.originalValue];\n            })).map(function (value) { return literal(value); });\n            parameters.push(this.constantPool.getConstLiteral(literalArr(references), /* forceShared */ /* forceShared */ true));\n        }\n        else {\n            parameters.push(nullNode);\n        }\n        // Remove trailing null nodes as they are implied.\n        while (parameters[parameters.length - 1] === nullNode) {\n            parameters.pop();\n        }\n        // Generate the instruction create element instruction\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.createElement].concat(parameters));\n        var /** @type {?} */ implicit = variable(this.contextParameter);\n        // Generate element input bindings\n        for (var _c = 0, _d = ast.inputs; _c < _d.length; _c++) {\n            var input = _d[_c];\n            if (input.isAnimation) {\n                this.unsupported('animations');\n            }\n            // TODO(chuckj): Built-in transform?\n            var /** @type {?} */ convertedBinding = convertPropertyBinding(this, implicit, input.value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n            (_e = this._bindingMode).push.apply(_e, convertedBinding.stmts);\n            var /** @type {?} */ parameters_1 = [literal(elementIndex), literal(input.name), convertedBinding.currValExpr];\n            var /** @type {?} */ instruction = BINDING_INSTRUCTION_MAP[input.type];\n            if (instruction) {\n                // TODO(chuckj): runtime: security context?\n                this.instruction(this._bindingMode, input.sourceSpan, instruction, literal(elementIndex), literal(input.name), convertedBinding.currValExpr);\n            }\n            else {\n                this.unsupported(\"binding \" + PropertyBindingType[input.type]);\n            }\n        }\n        // Generate directives input bindings\n        this._visitDirectives(ast.directives, implicit, elementIndex, directiveIndexMap);\n        // Traverse element child nodes\n        templateVisitAll(this, ast.children);\n        // Finish element construction mode.\n        this.instruction(this._creationMode, ast.endSourceSpan || ast.sourceSpan, Identifiers$1.elementEnd);\n        var _e;\n    };\n    /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._visitDirectives = /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    function (directives, implicit, nodeIndex, directiveIndexMap) {\n        for (var _i = 0, directives_1 = directives; _i < directives_1.length; _i++) {\n            var directive = directives_1[_i];\n            var /** @type {?} */ directiveIndex = directiveIndexMap.get(directive.directive.type.reference);\n            // Creation mode\n            // e.g. D(0, TodoComponentDef.n(), TodoComponentDef);\n            var /** @type {?} */ directiveType = directive.directive.type.reference;\n            var /** @type {?} */ kind = directive.directive.isComponent ? 2 /* Component */ : 1;\n            // Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the\n            // node is referenced multiple times to know that it must generate the reference into a\n            // temporary.\n            // Bindings\n            for (var _a = 0, _b = directive.inputs; _a < _b.length; _a++) {\n                var input = _b[_a];\n                var /** @type {?} */ convertedBinding = convertPropertyBinding(this, implicit, input.value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n                (_c = this._bindingMode).push.apply(_c, convertedBinding.stmts);\n                this.instruction(this._bindingMode, directive.sourceSpan, Identifiers$1.elementProperty, literal(nodeIndex), literal(input.templateName), importExpr(Identifiers$1.bind).callFn([convertedBinding.currValExpr]));\n            }\n            // e.g. MyDirective.ngDirectiveDef.h(0, 0);\n            this._hostMode.push(this.definitionOf(directiveType, kind)\n                .callMethod(Identifiers$1.HOST_BINDING_METHOD, [literal(directiveIndex), literal(nodeIndex)])\n                .toStmt());\n            // e.g. r(0, 0);\n            this.instruction(this._refreshMode, directive.sourceSpan, Identifiers$1.refreshComponent, literal(directiveIndex), literal(nodeIndex));\n        }\n        var _c;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ templateIndex = this.allocateDataSlot();\n        var /** @type {?} */ templateRef = this.reflector.resolveExternalReference(Identifiers.TemplateRef);\n        var /** @type {?} */ templateDirective = ast.directives.find(function (directive) {\n            return directive.directive.type.diDeps.some(function (dependency) {\n                return dependency.token != null && (tokenReference(dependency.token) == templateRef);\n            });\n        });\n        var /** @type {?} */ contextName = this.contextName && templateDirective && templateDirective.directive.type.reference.name ?\n            this.contextName + \"_\" + templateDirective.directive.type.reference.name :\n            null;\n        var /** @type {?} */ templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var /** @type {?} */ templateContext = \"ctx\" + this.level;\n        var _a = this._computeDirectivesArray(ast.directives), directivesArray = _a.directivesArray, directiveIndexMap = _a.directiveIndexMap;\n        // e.g. C(1, C1Template)\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.containerCreate, literal(templateIndex), directivesArray, variable(templateName));\n        // e.g. Cr(1)\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshStart, literal(templateIndex));\n        // Generate directives\n        this._visitDirectives(ast.directives, variable(this.contextParameter), templateIndex, directiveIndexMap);\n        // e.g. cr();\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshEnd);\n        // Create the template function\n        var /** @type {?} */ templateVisitor = new TemplateDefinitionBuilder(this.outputCtx, this.constantPool, this.reflector, templateContext, this.bindingScope.nestedScope(), this.level + 1, this.ngContentSelectors, contextName, templateName);\n        var /** @type {?} */ templateFunctionExpr = templateVisitor.buildTemplateFunction(ast.children, ast.variables);\n        this._postfix.push(templateFunctionExpr.toDeclStmt(templateName, null));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ nodeIndex = this.allocateDataSlot();\n        // Creation mode\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(nodeIndex));\n        // Refresh mode\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.textCreateBound, literal(nodeIndex), this.bind(variable(CONTEXT_NAME), ast.value, ast.sourceSpan));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        // Text is defined in creation mode only.\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(this.allocateDataSlot()), literal(ast.value));\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = /**\n     * @return {?}\n     */\n    function () { return this._dataIndex++; };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bindingContext = /**\n     * @return {?}\n     */\n    function () { return \"\" + this._bindingContext++; };\n    /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.instruction = /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    function (statements, span, reference) {\n        var params = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            params[_i - 3] = arguments[_i];\n        }\n        statements.push(importExpr(reference, null, span).callFn(params, span).toStmt());\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.typeReference = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.outputCtx.importExpr(type); };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.definitionOf = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        return this.constantPool.getDefinition(type, kind, this.outputCtx);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.temp = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._temporaryAllocated) {\n            this._prefix.push(variable(TEMPORARY_NAME, DYNAMIC_TYPE, null)\n                .set(literal(undefined))\n                .toDeclStmt(DYNAMIC_TYPE));\n            this._temporaryAllocated = true;\n        }\n        return variable(TEMPORARY_NAME);\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    function (implicit, value) {\n        var /** @type {?} */ convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n        (_a = this._refreshMode).push.apply(_a, convertedPropertyBinding.stmts);\n        return convertedPropertyBinding.currValExpr;\n        var _a;\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bind = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (implicit, value, sourceSpan) {\n        return this.convertPropertyBinding(implicit, value);\n    };\n    return TemplateDefinitionBuilder;\n}());\n/**\n * @param {?} type\n * @param {?} outputCtx\n * @param {?} reflector\n * @return {?}\n */\nfunction createFactory(type, outputCtx, reflector) {\n    var /** @type {?} */ args = [];\n    var /** @type {?} */ elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    var /** @type {?} */ templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    var /** @type {?} */ viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.isValue) {\n            unsupported('value dependencies');\n        }\n        if (dependency.isHost) {\n            unsupported('host dependencies');\n        }\n        var /** @type {?} */ token = dependency.token;\n        if (token) {\n            var /** @type {?} */ tokenRef = tokenReference(token);\n            if (tokenRef === elementRef) {\n                args.push(importExpr(Identifiers$1.injectElementRef).callFn([]));\n            }\n            else if (tokenRef === templateRef) {\n                args.push(importExpr(Identifiers$1.injectTemplateRef).callFn([]));\n            }\n            else if (tokenRef === viewContainerRef) {\n                args.push(importExpr(Identifiers$1.injectViewContainerRef).callFn([]));\n            }\n            else {\n                var /** @type {?} */ value = token.identifier != null ? outputCtx.importExpr(tokenRef) : literal(tokenRef);\n                args.push(importExpr(Identifiers$1.inject).callFn([value]));\n            }\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return fn([], [new ReturnStatement(new InstantiateExpr(outputCtx.importExpr(type.reference), args))], INFERRED_TYPE, null, type.reference.name ? type.reference.name + \"_Factory\" : null);\n}\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid$1(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction findComponent(directives) {\n    return directives.filter(function (directive) { return directive.directive.isComponent; })[0];\n}\nvar ContentProjectionVisitor = /** @class */ (function (_super) {\n    __extends(ContentProjectionVisitor, _super);\n    function ContentProjectionVisitor(projectionMap, ngContentSelectors) {\n        var _this = _super.call(this) || this;\n        _this.projectionMap = projectionMap;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.index = 1;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ContentProjectionVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ selectorText = this.ngContentSelectors[ast.index];\n        selectorText != null || error(\"could not find selector for index \" + ast.index + \" in \" + ast);\n        if (!selectorText || selectorText === '*') {\n            this.projectionMap.set(ast, { index: 0 });\n        }\n        else {\n            var /** @type {?} */ cssSelectors = CssSelector.parse(selectorText);\n            this.projectionMap.set(ast, { index: this.index++, selector: parseSelectorsToR3Selector(cssSelectors) });\n        }\n    };\n    return ContentProjectionVisitor;\n}(RecursiveTemplateAstVisitor));\n/**\n * @param {?} asts\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction getContentProjection(asts, ngContentSelectors) {\n    var /** @type {?} */ projectIndexMap = new Map();\n    var /** @type {?} */ visitor = new ContentProjectionVisitor(projectIndexMap, ngContentSelectors);\n    templateVisitAll(visitor, asts);\n    return projectIndexMap;\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToSimpleSelector(selector) {\n    var /** @type {?} */ classes = selector.classNames && selector.classNames.length ? ['class'].concat(selector.classNames) : [];\n    return [selector.element].concat(selector.attrs, classes);\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToR3Selector(selector) {\n    var /** @type {?} */ positive = parserSelectorToSimpleSelector(selector);\n    var /** @type {?} */ negative = selector.notSelectors && selector.notSelectors.length &&\n        parserSelectorToSimpleSelector(selector.notSelectors[0]);\n    return negative ? [positive, negative] : [positive, null];\n}\n/**\n * @param {?} selectors\n * @return {?}\n */\nfunction parseSelectorsToR3Selector(selectors) {\n    return selectors.map(parserSelectorToR3Selector);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction asLiteral(value) {\n    if (Array.isArray(value)) {\n        return literalArr(value.map(asLiteral));\n    }\n    return literal(value, INFERRED_TYPE);\n}\n/**\n * @param {?} map\n * @return {?}\n */\nfunction mapToExpression(map) {\n    return literalMap(Object.getOwnPropertyNames(map).map(function (key) { return ({ key: key, quoted: false, value: literal(map[key]) }); }));\n}\nvar _a;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error$$1, (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ /* useSummaries */ false))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule = /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ classes = [];\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var /** @type {?} */ directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var /** @type {?} */ module = /** @type {?} */ ((ngModuleByPipeOrDirective.get(directiveType)));\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var parsedTemplate = _this._parseTemplate(directiveMetadata, module, module.transitiveModule.directives).template;\n                compileComponent(context, directiveMetadata, parsedTemplate, _this._reflector);\n            }\n            else {\n                compileDirective(context, directiveMetadata, _this._reflector);\n            }\n        });\n        if (context.statements) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[FORMATTED_MESSAGE] = true;\n    error$$1.chain = chain;\n    error$$1.position = chain.position;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var /** @type {?} */ declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._staticMembers = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var /** @type {?} */ staticMembers = this._staticMembers(type);\n        var /** @type {?} */ result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var /** @type {?} */ property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var /** @type {?} */ value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope$1.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope$1.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_2 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope$1.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[METADATA_ERROR] = true;\n    if (advise)\n        error$$1.advise = advise;\n    if (position)\n        error$$1.position = position;\n    if (summary)\n        error$$1.summary = summary;\n    if (context)\n        error$$1.context = context;\n    if (chain)\n        error$$1.chain = chain;\n    if (symbol)\n        error$$1.symbol = symbol;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error$$1) {\n    if (error$$1.summary) {\n        return error$$1.summary;\n    }\n    switch (error$$1.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error$$1.context && error$$1.context.className) {\n                return \"references non-exported class \" + error$$1.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error$$1.context && error$$1.context.name) {\n                return \"calls '\" + error$$1.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error$$1.context && error$$1.context.name) {\n                return \"references local variable \" + error$$1.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope$1 = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n    };\n    return PopulatedScope;\n}(BindingScope$1));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassField = ClassField;\nexports.ClassMethod = ClassMethod;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}