{"version":3,"sources":["compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","Injectable","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","error","msg","Error","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","ifStmt","thenClause","elseClause","IfStmt","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","mapEntry","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","srcFileSuffix","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","error$$1","ERROR_COMPONENT_TYPE","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","isModule","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","isSelf","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractCommentsWithHash","_commentWithHashRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","form","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","BindingForm","TrySimple","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","invalid","isVariable","compileDirective","outputCtx","bindingParser","definitionMapValues","field","createFactory","createHostBindingsFunction","createHostAttributesArray","createInputsObject","ClassStmt","ClassField","constantPool","propertyNameOf","Static","Identifiers$1","defineDirective","ClassMethod","compileComponent","pipes","template","firstSelector","hasElementSelector","selectorAttributes","getAttrs","getConstLiteral","templateTypeName","templateName","pipeMap","pipe","TemplateDefinitionBuilder","CONTEXT_NAME","ROOT_SCOPE","nestedScope","ngContentSelectors","buildTemplateFunction","features","lifecycle","NgOnChangesFeature","defineComponent","unsupported","feature","interpolate","interpolation1","interpolation2","interpolation3","interpolation4","interpolation5","interpolation6","interpolation7","interpolation8","interpolationV","pipeBinding","pipeBind1","pipeBind2","pipeBind3","pipeBindV","getLiteralFactory","outputContext","literal$$1","literalFactory","literalFactoryArguments","pureFunctionIdentifiers","pureFunctionV","getQueryPredicate","predicate","first","elementRef","ElementRef","templateRef","TemplateRef","viewContainerRef","ViewContainerRef","dependency","isHost","tokenRef","injectElementRef","injectTemplateRef","injectViewContainerRef","inject","queryDefinitions","queries_1","parameters","descendants","read","createInstance","InstantiateExpr","directiveMetadata","getOwnPropertyNames","temporary","declared","TEMPORARY_NAME","hostBindingSourceSpan","getDirectiveMemory","load","getQueryList","assignToTemporary","callQueryRefresh","queryRefresh","updateDirective","propertyName","andExpression","and","directiveSummary","toSummary","bindings","createBoundHostProperties","bindingContext","bindings_1","binding","bindingExpr","elementProperty","bind","eventBindings","createDirectiveHostEventAsts","eventBindings_1","handler","bindingName","typeName","functionName","allowDefault","listener","NUMBER_TYPE","inputs","mapToExpression","invalid$1","findComponent","getContentProjection","projectIndexMap","ContentProjectionVisitor","parserSelectorToSimpleSelector","classes","classNames","parserSelectorToR3Selector","positive","negative","parseSelectorsToR3Selector","asLiteral","compilePipe","templateFactory","pure","definePipe","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","injectable","getInjectableMetadata","isValueExportingNonSourceFile","analyzeFileForInjectables","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","InjectableCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","ConstantPool","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","ngInjectableDef","createAttribute","attributeName","createContentChildren","data","isViewQuery","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","createInjectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","TypeModuleProvider","CatQuery","Types","DepFlags","SkipSelf","Optional","Self","Value","InjectFlags","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","calcFullName","visitEvent","ReferenceAst","originalValue","visitReference","VariableAst","visitVariable","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","templateUrl","htmlAst","externalStylesheets","animations","interpolation","CompileDirectiveMetadata","hostListeners","guards","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","names","publicNames","reversedResult","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","AstMemoryEfficientTransformer","modified","original","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","xliff","version","xmlns","encoding","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","defineInjectable","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltinType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","isConstant","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","every","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","initializer","ClassGetter","visitDeclareClassStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","quotedSet","depsArray","defaultValue","factoryFor","retValue","clazz","depArgs","injectableDef","compile","_SELECTOR_REGEXP","_addResult","cssSel","current","inNot","exec","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","prevModules","moduleRef","tryAnnotations","ann","getInjectableSummary","throwOnUnknownDeps","scope","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","dependenciesMetadata","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","_getInjectableTypeMetadata","compileDeps","compileTypeMetadata","compileFactoryMetadata","_getQueryMetadata","_queryVarBindings","q","varName","otherType","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","commentsWithHash","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","boundProps_1","parsePropertyBinding","createDirectiveHostPropertyAsts","elementSelector","boundProps","createElementPropertyAst","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","General","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","useIf","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","guardExpression","guardClause","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","KEY_CONTEXT","FixupExpression","resolved","fixup","shared","literals","literalFactories","injectorDefinitions","directiveDefinitions","componentDefinitions","pipeDefinitions","nextNameIndex","forceShared","keyOf","newValue","freshName","getDefinition","definitions","definitionsOf","argumentsForKey","_getLiteralFactory","expressionForKey","resultMap","resultExpressions","pureFunctionDeclaration","KeyVisitor","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","CORE$1","NEW_METHOD","HOST_BINDING_METHOD","TRANSFORM_METHOD","createElement","elementEnd","elementAttribute","elementClass","elementStyle","containerCreate","containerEnd","containerRefreshStart","containerRefreshEnd","directiveCreate","directiveInput","textCreateBound","pureFunction0","pureFunction1","pureFunction2","pureFunction3","pureFunction4","pureFunction5","pureFunction6","pureFunction7","pureFunction8","pipeBind4","projection","projectionDef","refreshComponent","directiveLifeCycle","BINDING_INSTRUCTION_MAP","BindingScope","referenceNameIndex","freshReferenceName","contextParameter","bindingScope","contextName","_dataIndex","_bindingContext","_referenceIndex","_temporaryAllocated","_prefix","_creationMode","_bindingMode","_hostMode","_refreshMode","_postfix","_projectionDefinitionIndex","_valueConverter","ValueConverter","allocateDataSlot","slot","pipeDefinition","variables_1","variable$$1","variableName","scopedName","declaration","contentProjections","_contentProjections","infos_1","info","projectionIndex","instruction","querySlot","refresh","creationMode","_computeDirectivesArray","directiveIndexMap","directiveExpressions","typeReference","directivesArray","elementIndex","componentIndex","referenceDataSlots","nullNode","implicit","convertedBinding","_visitDirectives","directives_1","definitionOf","templateIndex","templateDirective","templateContext","templateVisitor","templateFunctionExpr","pipesConvertedValue","convertedPropertyBinding","allocateSlot","pipeSlots","slotPseudoLocal","projectionMap","selectorText","GeneratedFile","srcFileUrl","sourceOrStmts","TS","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","useSummaries","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","isTsFile","transformedMeta_1","_originalFileMemo","getOriginalName","getOutputName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_injectableCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","_analyzedFilesForInjectables","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","_analyzeFileForInjectables","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","tsFiles","loadingPromises","analyzedInjectables","tsFile","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllPartialModules","_emitPartialModule","hostBindingParser","parsedPipes","pipeMetadata","emitAllPartialModules2","_emitPartialModule2","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","declarationSymbol_1","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","originalRecorder","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope$1","result_1","oldScope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","initialValue","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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A,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAI+mD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZzwD,yBAA0C,SAAU9nC,QAEpD,QAAS8nC,4BACL,GAAI/E,OAAQ/iC,OAAOsuC,KAAKh5C,OAASA,IAqCjC,OApCAytC,OAA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","file":"compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v6.0.0-beta.7-5412e10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v6.0.0-beta.7-5412e10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction Injectable() { }\nvar createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n    if (injectable === void 0) { injectable = {}; }\n    return injectable;\n});\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    TypeModuleProvider: 1073741824,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Self: 4,\n    Value: 8,\n};\n/** @enum {number} */\nvar InjectFlags = {\n    Default: 0,\n    /** Skip the node that is requesting injection. */\n    SkipSelf: 1,\n    /** Don't descend into ancestors of the node requesting injection. */\n    Self: 2,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tInjectable: Injectable,\n\tcreateInjectable: createInjectable,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tInjectFlags: InjectFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('6.0.0-beta.7-5412e10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = false; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                var /** @type {?} */ guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, guards, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ publicNames = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\nvar AstMemoryEfficientTransformer = /** @class */ (function () {\n    function AstMemoryEfficientTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions)\n            return new Interpolation(ast.span, ast.strings, expressions);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new PropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        var /** @type {?} */ value = ast.value.visit(this);\n        if (receiver !== ast.receiver || value !== ast.value) {\n            return new PropertyWrite(ast.span, receiver, ast.name, value);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new SafePropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        if (receiver !== ast.receiver || args !== ast.args) {\n            return new SafeMethodCall(ast.span, receiver, ast.name, args);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ target = ast.target && ast.target.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        if (target !== ast.target || args !== ast.args) {\n            return new FunctionCall(ast.span, target, args);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new LiteralArray(ast.span, expressions);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAll(ast.values);\n        if (values !== ast.values) {\n            return new LiteralMap(ast.span, ast.keys, values);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ left = ast.left.visit(this);\n        var /** @type {?} */ right = ast.right.visit(this);\n        if (left !== ast.left || right !== ast.right) {\n            return new Binary(ast.span, ast.operation, left, right);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new PrefixNot(ast.span, expression);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new NonNullAssert(ast.span, expression);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ condition = ast.condition.visit(this);\n        var /** @type {?} */ trueExp = ast.trueExp.visit(this);\n        var /** @type {?} */ falseExp = ast.falseExp.visit(this);\n        if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n            return new Conditional(ast.span, condition, trueExp, falseExp);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ exp = ast.exp.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        if (exp !== ast.exp || args !== ast.args) {\n            return new BindingPipe(ast.span, exp, ast.name, args);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ obj = ast.obj.visit(this);\n        var /** @type {?} */ key = ast.key.visit(this);\n        if (obj !== ast.obj || key !== ast.key) {\n            return new KeyedRead(ast.span, obj, key);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ obj = ast.obj.visit(this);\n        var /** @type {?} */ key = ast.key.visit(this);\n        var /** @type {?} */ value = ast.value.visit(this);\n        if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n            return new KeyedWrite(ast.span, obj, key, value);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        var /** @type {?} */ modified = false;\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            var /** @type {?} */ original = asts[i];\n            var /** @type {?} */ value = original.visit(this);\n            res[i] = value;\n            modified = modified || value !== original;\n        }\n        return modified ? res : asts;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new Chain(ast.span, expressions);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    return AstMemoryEfficientTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG$1 = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG$1:\n                return [].concat.apply([], visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    WritePropExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @return {?}\n     */\n    LiteralExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @return {?}\n     */\n    ExternalExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @return {?}\n     */\n    NotExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @return {?}\n     */\n    AssertNotNull.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    CastExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @return {?}\n     */\n    FunctionExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return this.entries.every(function (e) { return e.isConstant(); }); };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return this.entries.every(function (e) { return e.value.isConstant(); }); };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @return {?}\n     */\n    CommaExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n    Static: 3,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\nStmtModifier[StmtModifier.Static] = \"Static\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || (value && value.type) || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            (this.value ? !!stmt.value && this.value.isEquivalent(stmt.value) : !stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var /** @type {?} */ value = stmt.value && stmt.value.visitExpression(this, context);\n        return this.transformStmt(new DeclareVarStmt(stmt.name, value, stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (stmt.value) {\n            stmt.value.visitExpression(this, context);\n        }\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @param {?=} name\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n/**\n * @param {?} condition\n * @param {?} thenClause\n * @param {?=} elseClause\n * @return {?}\n */\nfunction ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nvar InjectableCompiler = /** @class */ (function () {\n    function InjectableCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.depsArray = /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (deps, ctx) {\n        return deps.map(function (dep) {\n            var /** @type {?} */ token = dep;\n            var /** @type {?} */ defaultValue = undefined;\n            var /** @type {?} */ args = [token];\n            var /** @type {?} */ flags = 0;\n            if (Array.isArray(dep)) {\n                for (var /** @type {?} */ i = 0; i < dep.length; i++) {\n                    var /** @type {?} */ v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            defaultValue = null;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 1 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            token = v.token;\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n            }\n            var /** @type {?} */ tokenExpr = typeof token === 'string' ? literal(token) : ctx.importExpr(token);\n            if (flags !== 0 /* Default */ || defaultValue !== undefined) {\n                args = [tokenExpr, literal(defaultValue), literal(flags)];\n            }\n            else {\n                args = [tokenExpr];\n            }\n            return importExpr(Identifiers.inject).callFn(args);\n        });\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.factoryFor = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        var /** @type {?} */ retValue;\n        if (injectable.useExisting) {\n            retValue = importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            var /** @type {?} */ deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            var /** @type {?} */ clazz = injectable.useClass || injectable.symbol;\n            var /** @type {?} */ depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return fn([], [new ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.injectableDef = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        var /** @type {?} */ def = [\n            mapEntry('factory', this.factoryFor(injectable, ctx)),\n            mapEntry('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry('scope', ctx.importExpr(/** @type {?} */ ((injectable.module)))),\n        ];\n        return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.compile = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        if (injectable.module) {\n            var /** @type {?} */ className = /** @type {?} */ ((identifierName(injectable.type)));\n            var /** @type {?} */ clazz = new ClassStmt(className, null, [\n                new ClassField('ngInjectableDef', INFERRED_TYPE, [StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    };\n    return InjectableCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.getAttrs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        var /** @type {?} */ typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        var /** @type {?} */ annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n        if (annotations.length === 0) {\n            return null;\n        }\n        var /** @type {?} */ meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            module: meta.scope || undefined,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error$$1, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error$$1, type);\n            if (otherType) {\n                this._errorCollector(error$$1, otherType);\n            }\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error$$1))[ERROR_COMPONENT_TYPE] = compType;\n    return error$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, /* isModule */ false);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        return dep;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @param {?} isModule\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        if (stmt.value) {\n            ctx.print(stmt, \" = \");\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var /** @type {?} */ scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText].concat(commentsWithHash).join('\\n');\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createBoundHostProperties = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ boundProps = this.createBoundHostProperties(dirMeta, sourceSpan);\n        return boundProps &&\n            boundProps.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error$$1 = errors_1[_i];\n            this._reportError(error$$1.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error$$1) {\n        if (warnings.indexOf(error$$1.msg) !== -1) {\n            warningCounts[error$$1.msg] = (warningCounts[error$$1.msg] || 0) + 1;\n            return warningCounts[error$$1.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    Object.defineProperty(TemplateParser.prototype, \"expressionParser\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._exprParser; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error$$1);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        var /** @type {?} */ boundEvents = [];\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimited `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/** @enum {number} */\nvar BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherwise generate a general binding\n    TrySimple: 1,\n};\nBindingForm[BindingForm.General] = \"General\";\nBindingForm[BindingForm.TrySimple] = \"TrySimple\";\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type interference\n        // to infer the type.\n        var /** @type {?} */ type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, literal(ast.value, type));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var /** @type {?} */ args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return (/** @type {?} */ (args[0])).cast(DYNAMIC_TYPE);\n        }\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent, guards) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.getTypeGuardExpressions = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var /** @type {?} */ guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var /** @type {?} */ useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: /** @type {?} */ ({ context: this.component, value: input.value })\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var /** @type {?} */ guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var /** @type {?} */ bindingId = \"\" + bindingCount++;\n                var /** @type {?} */ nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var /** @type {?} */ guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var /** @type {?} */ guards = this.getTypeGuardExpressions(ast);\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CONSTANT_PREFIX = '_c';\n/**\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n */\nvar KEY_CONTEXT = {};\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    __extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        _this.original = resolved;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FixupExpression.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === KEY_CONTEXT) {\n            // When producing a key we want to traverse the constant not the\n            // variable used to refer to it.\n            return this.original.visitExpression(visitor, context);\n        }\n        else {\n            return this.resolved.visitExpression(visitor, context);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FixupExpression.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    /**\n     * @return {?}\n     */\n    FixupExpression.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    FixupExpression.prototype.fixup = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.literals = new Map();\n        this.literalFactories = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.pipeDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getConstLiteral = /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (literal$$1, forceShared) {\n        if (literal$$1 instanceof LiteralExpr || literal$$1 instanceof FixupExpression) {\n            // Do no put simple literals into the constant pool or try to produce a constant for a\n            // reference to a constant.\n            return literal$$1;\n        }\n        var /** @type {?} */ key = this.keyOf(literal$$1);\n        var /** @type {?} */ fixup = this.literals.get(key);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal$$1);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var /** @type {?} */ name_1 = this.freshName();\n            this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_1));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getDefinition = /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (type, kind, ctx, forceShared) {\n        if (forceShared === void 0) { forceShared = false; }\n        var /** @type {?} */ definitions = this.definitionsOf(kind);\n        var /** @type {?} */ fixup = definitions.get(type);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            var /** @type {?} */ property = this.propertyNameOf(kind);\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            definitions.set(type, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            var /** @type {?} */ name_2 = this.freshName();\n            this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_2));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} literal\n     * @return {?}\n     */\n    ConstantPool.prototype.getLiteralFactory = /**\n     * @param {?} literal\n     * @return {?}\n     */\n    function (literal$$1) {\n        // Create a pure function that builds an array of a mix of constant  and variable expressions\n        if (literal$$1 instanceof LiteralArrayExpr) {\n            var /** @type {?} */ argumentsForKey = literal$$1.entries.map(function (e) { return e.isConstant() ? e : literal(null); });\n            var /** @type {?} */ key = this.keyOf(literalArr(argumentsForKey));\n            return this._getLiteralFactory(key, literal$$1.entries, function (entries) { return literalArr(entries); });\n        }\n        else {\n            var /** @type {?} */ expressionForKey = literalMap(literal$$1.entries.map(function (e) {\n                return ({\n                    key: e.key,\n                    value: e.value.isConstant() ? e.value : literal(null),\n                    quoted: e.quoted\n                });\n            }));\n            var /** @type {?} */ key = this.keyOf(expressionForKey);\n            return this._getLiteralFactory(key, literal$$1.entries.map(function (e) { return e.value; }), function (entries) {\n                return literalMap(entries.map(function (value, index) {\n                    return ({\n                        key: literal$$1.entries[index].key,\n                        value: value,\n                        quoted: literal$$1.entries[index].quoted\n                    });\n                }));\n            });\n        }\n    };\n    /**\n     * @param {?} key\n     * @param {?} values\n     * @param {?} resultMap\n     * @return {?}\n     */\n    ConstantPool.prototype._getLiteralFactory = /**\n     * @param {?} key\n     * @param {?} values\n     * @param {?} resultMap\n     * @return {?}\n     */\n    function (key, values, resultMap) {\n        var _this = this;\n        var /** @type {?} */ literalFactory = this.literalFactories.get(key);\n        var /** @type {?} */ literalFactoryArguments = values.filter((function (e) { return !e.isConstant(); }));\n        if (!literalFactory) {\n            var /** @type {?} */ resultExpressions = values.map(function (e, index) { return e.isConstant() ? _this.getConstLiteral(e, true) : variable(\"a\" + index); });\n            var /** @type {?} */ parameters = resultExpressions.filter(isVariable).map(function (e) { return new FnParam(/** @type {?} */ ((e.name)), DYNAMIC_TYPE); });\n            var /** @type {?} */ pureFunctionDeclaration = fn(parameters, [new ReturnStatement(resultMap(resultExpressions))], INFERRED_TYPE);\n            var /** @type {?} */ name_3 = this.freshName();\n            this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]));\n            literalFactory = variable(name_3);\n            this.literalFactories.set(key, literalFactory);\n        }\n        return { literalFactory: literalFactory, literalFactoryArguments: literalFactoryArguments };\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    ConstantPool.prototype.uniqueName = /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    /**\n     * @param {?} kind\n     * @return {?}\n     */\n    ConstantPool.prototype.definitionsOf = /**\n     * @param {?} kind\n     * @return {?}\n     */\n    function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return this.componentDefinitions;\n            case 1 /* Directive */:\n                return this.directiveDefinitions;\n            case 0 /* Injector */:\n                return this.injectorDefinitions;\n            case 3 /* Pipe */:\n                return this.pipeDefinitions;\n        }\n        error(\"Unknown definition kind \" + kind);\n        return this.componentDefinitions;\n    };\n    /**\n     * @param {?} kind\n     * @return {?}\n     */\n    ConstantPool.prototype.propertyNameOf = /**\n     * @param {?} kind\n     * @return {?}\n     */\n    function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return 'ngComponentDef';\n            case 1 /* Directive */:\n                return 'ngDirectiveDef';\n            case 0 /* Injector */:\n                return 'ngInjectorDef';\n            case 3 /* Pipe */:\n                return 'ngPipeDef';\n        }\n        error(\"Unknown definition kind \" + kind);\n        return '<unknown>';\n    };\n    /**\n     * @return {?}\n     */\n    ConstantPool.prototype.freshName = /**\n     * @return {?}\n     */\n    function () { return this.uniqueName(CONSTANT_PREFIX); };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ConstantPool.prototype.keyOf = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n    };\n    return ConstantPool;\n}());\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitReadVarExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, context); }).join(',') + \"]\";\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ mapEntry = function (entry) {\n            return entry.key + \":\" + entry.value.visitExpression(_this, context);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    return KeyVisitor;\n}());\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nfunction isVariable(e) {\n    return e instanceof ReadVarExpr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE$1 = '@angular/core';\nvar Identifiers$1 = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'n';\n    Identifiers.HOST_BINDING_METHOD = 'h';\n    Identifiers.TRANSFORM_METHOD = 'transform';\n    /* Instructions */\n    Identifiers.createElement = { name: 'ɵE', moduleName: CORE$1 };\n    Identifiers.elementEnd = { name: 'ɵe', moduleName: CORE$1 };\n    Identifiers.elementProperty = { name: 'ɵp', moduleName: CORE$1 };\n    Identifiers.elementAttribute = { name: 'ɵa', moduleName: CORE$1 };\n    Identifiers.elementClass = { name: 'ɵk', moduleName: CORE$1 };\n    Identifiers.elementStyle = { name: 'ɵs', moduleName: CORE$1 };\n    Identifiers.containerCreate = { name: 'ɵC', moduleName: CORE$1 };\n    Identifiers.containerEnd = { name: 'ɵc', moduleName: CORE$1 };\n    Identifiers.containerRefreshStart = { name: 'ɵcR', moduleName: CORE$1 };\n    Identifiers.containerRefreshEnd = { name: 'ɵcr', moduleName: CORE$1 };\n    Identifiers.directiveCreate = { name: 'ɵD', moduleName: CORE$1 };\n    Identifiers.text = { name: 'ɵT', moduleName: CORE$1 };\n    Identifiers.directiveInput = { name: 'ɵi', moduleName: CORE$1 };\n    Identifiers.textCreateBound = { name: 'ɵt', moduleName: CORE$1 };\n    Identifiers.bind = { name: 'ɵb', moduleName: CORE$1 };\n    Identifiers.interpolation1 = { name: 'ɵi1', moduleName: CORE$1 };\n    Identifiers.interpolation2 = { name: 'ɵi2', moduleName: CORE$1 };\n    Identifiers.interpolation3 = { name: 'ɵi3', moduleName: CORE$1 };\n    Identifiers.interpolation4 = { name: 'ɵi4', moduleName: CORE$1 };\n    Identifiers.interpolation5 = { name: 'ɵi5', moduleName: CORE$1 };\n    Identifiers.interpolation6 = { name: 'ɵi6', moduleName: CORE$1 };\n    Identifiers.interpolation7 = { name: 'ɵi7', moduleName: CORE$1 };\n    Identifiers.interpolation8 = { name: 'ɵi8', moduleName: CORE$1 };\n    Identifiers.interpolationV = { name: 'ɵiV', moduleName: CORE$1 };\n    Identifiers.pureFunction0 = { name: 'ɵf0', moduleName: CORE$1 };\n    Identifiers.pureFunction1 = { name: 'ɵf1', moduleName: CORE$1 };\n    Identifiers.pureFunction2 = { name: 'ɵf2', moduleName: CORE$1 };\n    Identifiers.pureFunction3 = { name: 'ɵf3', moduleName: CORE$1 };\n    Identifiers.pureFunction4 = { name: 'ɵf4', moduleName: CORE$1 };\n    Identifiers.pureFunction5 = { name: 'ɵf5', moduleName: CORE$1 };\n    Identifiers.pureFunction6 = { name: 'ɵf6', moduleName: CORE$1 };\n    Identifiers.pureFunction7 = { name: 'ɵf7', moduleName: CORE$1 };\n    Identifiers.pureFunction8 = { name: 'ɵf8', moduleName: CORE$1 };\n    Identifiers.pureFunctionV = { name: 'ɵfV', moduleName: CORE$1 };\n    Identifiers.pipeBind1 = { name: 'ɵpb1', moduleName: CORE$1 };\n    Identifiers.pipeBind2 = { name: 'ɵpb2', moduleName: CORE$1 };\n    Identifiers.pipeBind3 = { name: 'ɵpb3', moduleName: CORE$1 };\n    Identifiers.pipeBind4 = { name: 'ɵpb4', moduleName: CORE$1 };\n    Identifiers.pipeBindV = { name: 'ɵpbV', moduleName: CORE$1 };\n    Identifiers.load = { name: 'ɵld', moduleName: CORE$1 };\n    Identifiers.pipe = { name: 'ɵPp', moduleName: CORE$1 };\n    Identifiers.projection = { name: 'ɵP', moduleName: CORE$1 };\n    Identifiers.projectionDef = { name: 'ɵpD', moduleName: CORE$1 };\n    Identifiers.refreshComponent = { name: 'ɵr', moduleName: CORE$1 };\n    Identifiers.directiveLifeCycle = { name: 'ɵl', moduleName: CORE$1 };\n    Identifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE$1 };\n    Identifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE$1 };\n    Identifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE$1 };\n    Identifiers.inject = { name: 'ɵinject', moduleName: CORE$1 };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE$1,\n    };\n    Identifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE$1 };\n    Identifiers.query = { name: 'ɵQ', moduleName: CORE$1 };\n    Identifiers.queryRefresh = { name: 'ɵqR', moduleName: CORE$1 };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n    Identifiers.listener = { name: 'ɵL', moduleName: CORE$1 };\n    return Identifiers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Name of the context parameter passed into a template function\n */\nvar CONTEXT_NAME = 'ctx';\n/**\n * Name of the creation mode flag passed into a template function\n */\nvar CREATION_MODE_FLAG = 'cm';\n/**\n * Name of the temporary to use during data binding\n */\nvar TEMPORARY_NAME = '_t';\n/**\n * The prefix reference variables\n */\nvar REFERENCE_PREFIX = '_r';\n/**\n * The name of the implicit context reference\n */\nvar IMPLICIT_REFERENCE = '$implicit';\n/**\n * @param {?} outputCtx\n * @param {?} directive\n * @param {?} reflector\n * @param {?} bindingParser\n * @return {?}\n */\nfunction compileDirective(outputCtx, directive, reflector, bindingParser) {\n    var /** @type {?} */ definitionMapValues = [];\n    var /** @type {?} */ field = function (key, value) {\n        if (value) {\n            definitionMapValues.push({ key: key, value: value, quoted: false });\n        }\n    };\n    // e.g. 'type: MyDirective`\n    field('type', outputCtx.importExpr(directive.type.reference));\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    field('factory', createFactory(directive.type, outputCtx, reflector, directive.queries));\n    // e.g. `hostBindings: (dirIndex, elIndex) => { ... }\n    field('hostBindings', createHostBindingsFunction(directive, outputCtx, bindingParser));\n    // e.g. `attributes: ['role', 'listbox']`\n    field('attributes', createHostAttributesArray(directive, outputCtx));\n    // e.g 'inputs: {a: 'a'}`\n    field('inputs', createInputsObject(directive, outputCtx));\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(directive.type)));\n    className || error(\"Cannot resolver the name of \" + directive.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField(/* name */ outputCtx.constantPool.propertyNameOf(1 /* Directive */), /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineDirective).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} pipes\n * @param {?} template\n * @param {?} reflector\n * @param {?} bindingParser\n * @return {?}\n */\nfunction compileComponent(outputCtx, component, pipes, template, reflector, bindingParser) {\n    var /** @type {?} */ definitionMapValues = [];\n    var /** @type {?} */ field = function (key, value) {\n        if (value) {\n            definitionMapValues.push({ key: key, value: value, quoted: false });\n        }\n    };\n    // e.g. `type: MyApp`\n    field('type', outputCtx.importExpr(component.type.reference));\n    // e.g. `tag: 'my-app'`\n    // This is optional and only included if the first selector of a component has element.\n    var /** @type {?} */ selector = component.selector && CssSelector.parse(component.selector);\n    var /** @type {?} */ firstSelector = selector && selector[0];\n    if (firstSelector && firstSelector.hasElementSelector()) {\n        field('tag', literal(firstSelector.element));\n    }\n    // e.g. `attr: [\"class\", \".my.app\"]\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var /** @type {?} */ selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            field('attrs', outputCtx.constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), /* forceShared */ true));\n        }\n    }\n    // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n    field('factory', createFactory(component.type, outputCtx, reflector, component.queries));\n    // e.g `hostBindings: function MyApp_HostBindings { ... }\n    field('hostBindings', createHostBindingsFunction(component, outputCtx, bindingParser));\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var /** @type {?} */ templateTypeName = component.type.reference.name;\n    var /** @type {?} */ templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var /** @type {?} */ pipeMap = new Map(pipes.map(function (pipe) { return [pipe.name, pipe]; }));\n    var /** @type {?} */ templateFunctionExpression = new TemplateDefinitionBuilder(outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, ROOT_SCOPE.nestedScope(), 0, /** @type {?} */ ((component.template)).ngContentSelectors, templateTypeName, templateName, pipeMap, component.viewQueries)\n        .buildTemplateFunction(template, []);\n    field('template', templateFunctionExpression);\n    // e.g `inputs: {a: 'a'}`\n    field('inputs', createInputsObject(component, outputCtx));\n    // e.g. `features: [NgOnChangesFeature(MyComponent)]`\n    var /** @type {?} */ features = [];\n    if (component.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; })) {\n        features.push(importExpr(Identifiers$1.NgOnChangesFeature, null, null).callFn([outputCtx.importExpr(component.type.reference)]));\n    }\n    if (features.length) {\n        field('features', literalArr(features));\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(component.type)));\n    className || error(\"Cannot resolver the name of \" + component.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField(/* name */ outputCtx.constantPool.propertyNameOf(2 /* Component */), /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineComponent).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nvar BINDING_INSTRUCTION_MAP = (_a = {},\n    _a[PropertyBindingType.Property] = Identifiers$1.elementProperty,\n    _a[PropertyBindingType.Attribute] = Identifiers$1.elementAttribute,\n    _a[PropertyBindingType.Class] = Identifiers$1.elementClass,\n    _a[PropertyBindingType.Style] = Identifiers$1.elementStyle,\n    _a);\n/**\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return importExpr(Identifiers$1.interpolation1).callFn(args);\n        case 5:\n            return importExpr(Identifiers$1.interpolation2).callFn(args);\n        case 7:\n            return importExpr(Identifiers$1.interpolation3).callFn(args);\n        case 9:\n            return importExpr(Identifiers$1.interpolation4).callFn(args);\n        case 11:\n            return importExpr(Identifiers$1.interpolation5).callFn(args);\n        case 13:\n            return importExpr(Identifiers$1.interpolation6).callFn(args);\n        case 15:\n            return importExpr(Identifiers$1.interpolation7).callFn(args);\n        case 17:\n            return importExpr(Identifiers$1.interpolation8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return importExpr(Identifiers$1.interpolationV).callFn([literalArr(args)]);\n}\n/**\n * @param {?} args\n * @return {?}\n */\nfunction pipeBinding(args) {\n    switch (args.length) {\n        case 0:\n            // The first parameter to pipeBind is always the value to be transformed followed\n            // by arg.length arguments so the total number of arguments to pipeBind are\n            // arg.length + 1.\n            return Identifiers$1.pipeBind1;\n        case 1:\n            return Identifiers$1.pipeBind2;\n        case 2:\n            return Identifiers$1.pipeBind3;\n        default:\n            return Identifiers$1.pipeBindV;\n    }\n}\nvar pureFunctionIdentifiers = [\n    Identifiers$1.pureFunction0, Identifiers$1.pureFunction1, Identifiers$1.pureFunction2, Identifiers$1.pureFunction3, Identifiers$1.pureFunction4,\n    Identifiers$1.pureFunction5, Identifiers$1.pureFunction6, Identifiers$1.pureFunction7, Identifiers$1.pureFunction8\n];\n/**\n * @param {?} outputContext\n * @param {?} literal\n * @return {?}\n */\nfunction getLiteralFactory(outputContext, literal$$1) {\n    var _a = outputContext.constantPool.getLiteralFactory(literal$$1), literalFactory = _a.literalFactory, literalFactoryArguments = _a.literalFactoryArguments;\n    literalFactoryArguments.length > 0 || error(\"Expected arguments to a literal factory function\");\n    var /** @type {?} */ pureFunctionIdent = pureFunctionIdentifiers[literalFactoryArguments.length] || Identifiers$1.pureFunctionV;\n    // Literal factories are pure functions that only need to be re-invoked when the parameters\n    // change.\n    return importExpr(pureFunctionIdent).callFn([literalFactory].concat(literalFactoryArguments));\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(parent) {\n        this.parent = parent;\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ current = this;\n        while (current) {\n            var /** @type {?} */ value = current.map.get(name);\n            if (value != null) {\n                // Cache the value locally.\n                this.map.set(name, value);\n                return value;\n            }\n            current = current.parent;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BindingScope.prototype.set = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, value);\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.nestedScope = /**\n     * @return {?}\n     */\n    function () { return new BindingScope(this); };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.freshReferenceName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        return \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n    };\n    return BindingScope;\n}());\nvar ROOT_SCOPE = new BindingScope(null).set('$event', variable('$event'));\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(outputCtx, constantPool, reflector, contextParameter, bindingScope, level, ngContentSelectors, contextName, templateName, pipes, viewQueries) {\n        if (level === void 0) { level = 0; }\n        var _this = this;\n        this.outputCtx = outputCtx;\n        this.constantPool = constantPool;\n        this.reflector = reflector;\n        this.contextParameter = contextParameter;\n        this.bindingScope = bindingScope;\n        this.level = level;\n        this.ngContentSelectors = ngContentSelectors;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this.pipes = pipes;\n        this.viewQueries = viewQueries;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._referenceIndex = 0;\n        this._temporaryAllocated = false;\n        this._prefix = [];\n        this._creationMode = [];\n        this._bindingMode = [];\n        this._hostMode = [];\n        this._refreshMode = [];\n        this._postfix = [];\n        this._projectionDefinitionIndex = 0;\n        this.unsupported = unsupported;\n        this.invalid = invalid$1;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid$1;\n        this.visitVariable = invalid$1;\n        this.visitEvent = invalid$1;\n        this.visitElementProperty = invalid$1;\n        this.visitAttr = invalid$1;\n        // These should be handled in the template or element directly\n        this.visitDirective = invalid$1;\n        this.visitDirectiveProperty = invalid$1;\n        this._valueConverter = new ValueConverter(outputCtx, function () { return _this.allocateDataSlot(); }, function (name, localName, slot, value) {\n            bindingScope.set(localName, value);\n            var /** @type {?} */ pipe = /** @type {?} */ ((pipes.get(name)));\n            pipe || error(\"Could not find pipe \" + name);\n            var /** @type {?} */ pipeDefinition = constantPool.getDefinition(pipe.type.reference, 3 /* Pipe */, outputCtx, /* forceShared */ /* forceShared */ true);\n            _this._creationMode.push(importExpr(Identifiers$1.pipe)\n                .callFn([\n                literal(slot), pipeDefinition, pipeDefinition.callMethod(Identifiers$1.NEW_METHOD, [])\n            ])\n                .toStmt());\n        });\n    }\n    /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    function (asts, variables) {\n        // Create variable bindings\n        for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n            var variable$$1 = variables_1[_i];\n            var /** @type {?} */ variableName = variable$$1.name;\n            var /** @type {?} */ expression = variable(this.contextParameter).prop(variable$$1.value || IMPLICIT_REFERENCE);\n            var /** @type {?} */ scopedName = this.bindingScope.freshReferenceName();\n            var /** @type {?} */ declaration = variable(scopedName).set(expression).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]);\n            // Add the reference to the local scope.\n            this.bindingScope.set(variableName, variable(scopedName));\n            // Declare the local variable in binding mode\n            this._bindingMode.push(declaration);\n        }\n        // Collect content projections\n        if (this.ngContentSelectors && this.ngContentSelectors.length > 0) {\n            var /** @type {?} */ contentProjections = getContentProjection(asts, this.ngContentSelectors);\n            this._contentProjections = contentProjections;\n            if (contentProjections.size > 0) {\n                var /** @type {?} */ infos_1 = [];\n                Array.from(contentProjections.values()).forEach(function (info) {\n                    if (info.selector) {\n                        infos_1[info.index - 1] = info.selector;\n                    }\n                });\n                var /** @type {?} */ projectionIndex = this._projectionDefinitionIndex = this.allocateDataSlot();\n                var /** @type {?} */ parameters = [literal(projectionIndex)];\n                !infos_1.some(function (value) { return !value; }) || error(\"content project information skipped an index\");\n                if (infos_1.length > 1) {\n                    parameters.push(this.outputCtx.constantPool.getConstLiteral(asLiteral(infos_1), /* forceShared */ /* forceShared */ true));\n                }\n                this.instruction.apply(this, [this._creationMode, null, Identifiers$1.projectionDef].concat(parameters));\n            }\n        }\n        // Define and update any view queries\n        for (var _a = 0, _b = this.viewQueries; _a < _b.length; _a++) {\n            var query = _b[_a];\n            // e.g. r3.Q(0, SomeDirective, true);\n            var /** @type {?} */ querySlot = this.allocateDataSlot();\n            var /** @type {?} */ predicate = getQueryPredicate(query, this.outputCtx);\n            var /** @type {?} */ args = [\n                /* memoryIndex */ literal(querySlot, INFERRED_TYPE),\n                predicate,\n                /* descend */ literal(query.descendants, INFERRED_TYPE)\n            ];\n            if (query.read) {\n                args.push(this.outputCtx.importExpr(/** @type {?} */ ((query.read.identifier)).reference));\n            }\n            this.instruction.apply(this, [this._creationMode, null, Identifiers$1.query].concat(args));\n            // (r3.qR(tmp = r3.ɵld(0)) && (ctx.someDir = tmp));\n            var /** @type {?} */ temporary = this.temp();\n            var /** @type {?} */ getQueryList = importExpr(Identifiers$1.load).callFn([literal(querySlot)]);\n            var /** @type {?} */ refresh = importExpr(Identifiers$1.queryRefresh).callFn([temporary.set(getQueryList)]);\n            var /** @type {?} */ updateDirective = variable(CONTEXT_NAME)\n                .prop(query.propertyName)\n                .set(query.first ? temporary.prop('first') : temporary);\n            this._bindingMode.push(refresh.and(updateDirective).toStmt());\n        }\n        templateVisitAll(this, asts);\n        var /** @type {?} */ creationMode = this._creationMode.length > 0 ?\n            [ifStmt(variable(CREATION_MODE_FLAG), this._creationMode)] :\n            [];\n        return fn([\n            new FnParam(this.contextParameter, null), new FnParam(CREATION_MODE_FLAG, BOOL_TYPE)\n        ], this._prefix.concat(creationMode, this._bindingMode, this._hostMode, this._refreshMode, this._postfix), INFERRED_TYPE, null, this.templateName);\n    };\n    // LocalResolver\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.bindingScope.get(name); };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ info = /** @type {?} */ ((this._contentProjections.get(ast)));\n        info || error(\"Expected \" + ast.sourceSpan + \" to be included in content projection collection\");\n        var /** @type {?} */ slot = this.allocateDataSlot();\n        var /** @type {?} */ parameters = [literal(slot), literal(this._projectionDefinitionIndex)];\n        if (info.index !== 0) {\n            parameters.push(literal(info.index));\n        }\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.projection].concat(parameters));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._computeDirectivesArray = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var _this = this;\n        var /** @type {?} */ directiveIndexMap = new Map();\n        var /** @type {?} */ directiveExpressions = directives.filter(function (directive) { return !directive.directive.isComponent; }).map(function (directive) {\n            directiveIndexMap.set(directive.directive.type.reference, _this.allocateDataSlot());\n            return _this.typeReference(directive.directive.type.reference);\n        });\n        return {\n            directivesArray: directiveExpressions.length ?\n                this.constantPool.getConstLiteral(literalArr(directiveExpressions), /* forceShared */ /* forceShared */ true) :\n                literal(null),\n            directiveIndexMap: directiveIndexMap\n        };\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ bindingCount = 0;\n        var /** @type {?} */ elementIndex = this.allocateDataSlot();\n        var /** @type {?} */ componentIndex = undefined;\n        var /** @type {?} */ referenceDataSlots = new Map();\n        // Element creation mode\n        var /** @type {?} */ component = findComponent(ast.directives);\n        var /** @type {?} */ nullNode = literal(null, INFERRED_TYPE);\n        var /** @type {?} */ parameters = [literal(elementIndex)];\n        // Add component type or element tag\n        if (component) {\n            parameters.push(this.typeReference(component.directive.type.reference));\n            componentIndex = this.allocateDataSlot();\n        }\n        else {\n            parameters.push(literal(ast.name));\n        }\n        // Add attributes array\n        var /** @type {?} */ attributes = [];\n        for (var _i = 0, _a = ast.attrs; _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(literal(attr.name), literal(attr.value));\n        }\n        parameters.push(attributes.length > 0 ?\n            this.constantPool.getConstLiteral(literalArr(attributes), /* forceShared */ /* forceShared */ true) :\n            nullNode);\n        // Add directives array\n        var _b = this._computeDirectivesArray(ast.directives), directivesArray = _b.directivesArray, directiveIndexMap = _b.directiveIndexMap;\n        parameters.push(directiveIndexMap.size > 0 ? directivesArray : nullNode);\n        if (component && componentIndex != null) {\n            // Record the data slot for the component\n            directiveIndexMap.set(component.directive.type.reference, componentIndex);\n        }\n        // Add references array\n        if (ast.references && ast.references.length > 0) {\n            var /** @type {?} */ references = flatten(ast.references.map(function (reference) {\n                var /** @type {?} */ slot = _this.allocateDataSlot();\n                referenceDataSlots.set(reference.name, slot);\n                // Generate the update temporary.\n                var /** @type {?} */ variableName = _this.bindingScope.freshReferenceName();\n                _this._bindingMode.push(variable(variableName, INFERRED_TYPE)\n                    .set(importExpr(Identifiers$1.load).callFn([literal(slot)]))\n                    .toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n                _this.bindingScope.set(reference.name, variable(variableName));\n                return [reference.name, reference.originalValue];\n            })).map(function (value) { return literal(value); });\n            parameters.push(this.constantPool.getConstLiteral(literalArr(references), /* forceShared */ /* forceShared */ true));\n        }\n        else {\n            parameters.push(nullNode);\n        }\n        // Remove trailing null nodes as they are implied.\n        while (parameters[parameters.length - 1] === nullNode) {\n            parameters.pop();\n        }\n        // Generate the instruction create element instruction\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.createElement].concat(parameters));\n        var /** @type {?} */ implicit = variable(this.contextParameter);\n        // Generate element input bindings\n        for (var _c = 0, _d = ast.inputs; _c < _d.length; _c++) {\n            var input = _d[_c];\n            if (input.isAnimation) {\n                this.unsupported('animations');\n            }\n            var /** @type {?} */ convertedBinding = this.convertPropertyBinding(implicit, input.value);\n            var /** @type {?} */ parameters_1 = [literal(elementIndex), literal(input.name), convertedBinding];\n            var /** @type {?} */ instruction = BINDING_INSTRUCTION_MAP[input.type];\n            if (instruction) {\n                // TODO(chuckj): runtime: security context?\n                this.instruction(this._bindingMode, input.sourceSpan, instruction, literal(elementIndex), literal(input.name), convertedBinding);\n            }\n            else {\n                this.unsupported(\"binding \" + PropertyBindingType[input.type]);\n            }\n        }\n        // Generate directives input bindings\n        this._visitDirectives(ast.directives, implicit, elementIndex, directiveIndexMap);\n        // Traverse element child nodes\n        templateVisitAll(this, ast.children);\n        // Finish element construction mode.\n        this.instruction(this._creationMode, ast.endSourceSpan || ast.sourceSpan, Identifiers$1.elementEnd);\n    };\n    /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._visitDirectives = /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    function (directives, implicit, nodeIndex, directiveIndexMap) {\n        for (var _i = 0, directives_1 = directives; _i < directives_1.length; _i++) {\n            var directive = directives_1[_i];\n            var /** @type {?} */ directiveIndex = directiveIndexMap.get(directive.directive.type.reference);\n            // Creation mode\n            // e.g. D(0, TodoComponentDef.n(), TodoComponentDef);\n            var /** @type {?} */ directiveType = directive.directive.type.reference;\n            var /** @type {?} */ kind = directive.directive.isComponent ? 2 /* Component */ : 1;\n            // Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the\n            // node is referenced multiple times to know that it must generate the reference into a\n            // temporary.\n            // Bindings\n            for (var _a = 0, _b = directive.inputs; _a < _b.length; _a++) {\n                var input = _b[_a];\n                var /** @type {?} */ convertedBinding = this.convertPropertyBinding(implicit, input.value);\n                this.instruction(this._bindingMode, directive.sourceSpan, Identifiers$1.elementProperty, literal(nodeIndex), literal(input.templateName), importExpr(Identifiers$1.bind).callFn([convertedBinding]));\n            }\n            // e.g. MyDirective.ngDirectiveDef.h(0, 0);\n            this._hostMode.push(this.definitionOf(directiveType, kind)\n                .callMethod(Identifiers$1.HOST_BINDING_METHOD, [literal(directiveIndex), literal(nodeIndex)])\n                .toStmt());\n            // e.g. r(0, 0);\n            this.instruction(this._refreshMode, directive.sourceSpan, Identifiers$1.refreshComponent, literal(directiveIndex), literal(nodeIndex));\n        }\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ templateIndex = this.allocateDataSlot();\n        var /** @type {?} */ templateRef = this.reflector.resolveExternalReference(Identifiers.TemplateRef);\n        var /** @type {?} */ templateDirective = ast.directives.find(function (directive) {\n            return directive.directive.type.diDeps.some(function (dependency) {\n                return dependency.token != null && (tokenReference(dependency.token) == templateRef);\n            });\n        });\n        var /** @type {?} */ contextName = this.contextName && templateDirective && templateDirective.directive.type.reference.name ?\n            this.contextName + \"_\" + templateDirective.directive.type.reference.name :\n            null;\n        var /** @type {?} */ templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var /** @type {?} */ templateContext = \"ctx\" + this.level;\n        var _a = this._computeDirectivesArray(ast.directives), directivesArray = _a.directivesArray, directiveIndexMap = _a.directiveIndexMap;\n        // e.g. C(1, C1Template)\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.containerCreate, literal(templateIndex), directivesArray, variable(templateName));\n        // e.g. Cr(1)\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshStart, literal(templateIndex));\n        // Generate directives\n        this._visitDirectives(ast.directives, variable(this.contextParameter), templateIndex, directiveIndexMap);\n        // e.g. cr();\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshEnd);\n        // Create the template function\n        var /** @type {?} */ templateVisitor = new TemplateDefinitionBuilder(this.outputCtx, this.constantPool, this.reflector, templateContext, this.bindingScope.nestedScope(), this.level + 1, this.ngContentSelectors, contextName, templateName, this.pipes, []);\n        var /** @type {?} */ templateFunctionExpr = templateVisitor.buildTemplateFunction(ast.children, ast.variables);\n        this._postfix.push(templateFunctionExpr.toDeclStmt(templateName, null));\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ nodeIndex = this.allocateDataSlot();\n        // Creation mode\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(nodeIndex));\n        // Refresh mode\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.textCreateBound, literal(nodeIndex), this.bind(variable(CONTEXT_NAME), ast.value, ast.sourceSpan));\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        // Text is defined in creation mode only.\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(this.allocateDataSlot()), literal(ast.value));\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = /**\n     * @return {?}\n     */\n    function () { return this._dataIndex++; };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bindingContext = /**\n     * @return {?}\n     */\n    function () { return \"\" + this._bindingContext++; };\n    /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.instruction = /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    function (statements, span, reference) {\n        var params = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            params[_i - 3] = arguments[_i];\n        }\n        statements.push(importExpr(reference, null, span).callFn(params, span).toStmt());\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.typeReference = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.outputCtx.importExpr(type); };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.definitionOf = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        return this.constantPool.getDefinition(type, kind, this.outputCtx);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.temp = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._temporaryAllocated) {\n            this._prefix.push(new DeclareVarStmt(TEMPORARY_NAME, undefined, DYNAMIC_TYPE));\n            this._temporaryAllocated = true;\n        }\n        return variable(TEMPORARY_NAME);\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    function (implicit, value) {\n        var /** @type {?} */ pipesConvertedValue = value.visit(this._valueConverter);\n        var /** @type {?} */ convertedPropertyBinding = convertPropertyBinding(this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple, interpolate);\n        (_a = this._refreshMode).push.apply(_a, convertedPropertyBinding.stmts);\n        return convertedPropertyBinding.currValExpr;\n        var _a;\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bind = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (implicit, value, sourceSpan) {\n        return this.convertPropertyBinding(implicit, value);\n    };\n    return TemplateDefinitionBuilder;\n}());\n/**\n * @param {?} query\n * @param {?} outputCtx\n * @return {?}\n */\nfunction getQueryPredicate(query, outputCtx) {\n    var /** @type {?} */ predicate;\n    if (query.selectors.length > 1 || (query.selectors.length == 1 && query.selectors[0].value)) {\n        var /** @type {?} */ selectors = query.selectors.map(function (value) { return (value.value); });\n        selectors.some(function (value) { return !value; }) && error('Found a type among the string selectors expected');\n        predicate = outputCtx.constantPool.getConstLiteral(literalArr(selectors.map(function (value) { return literal(value); })));\n    }\n    else if (query.selectors.length == 1) {\n        var /** @type {?} */ first = query.selectors[0];\n        if (first.identifier) {\n            predicate = outputCtx.importExpr(first.identifier.reference);\n        }\n        else {\n            error('Unexpected query form');\n            predicate = literal(null);\n        }\n    }\n    else {\n        error('Unexpected query form');\n        predicate = literal(null);\n    }\n    return predicate;\n}\n/**\n * @param {?} type\n * @param {?} outputCtx\n * @param {?} reflector\n * @param {?} queries\n * @return {?}\n */\nfunction createFactory(type, outputCtx, reflector, queries) {\n    var /** @type {?} */ args = [];\n    var /** @type {?} */ elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    var /** @type {?} */ templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    var /** @type {?} */ viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.isValue) {\n            unsupported('value dependencies');\n        }\n        if (dependency.isHost) {\n            unsupported('host dependencies');\n        }\n        var /** @type {?} */ token = dependency.token;\n        if (token) {\n            var /** @type {?} */ tokenRef = tokenReference(token);\n            if (tokenRef === elementRef) {\n                args.push(importExpr(Identifiers$1.injectElementRef).callFn([]));\n            }\n            else if (tokenRef === templateRef) {\n                args.push(importExpr(Identifiers$1.injectTemplateRef).callFn([]));\n            }\n            else if (tokenRef === viewContainerRef) {\n                args.push(importExpr(Identifiers$1.injectViewContainerRef).callFn([]));\n            }\n            else {\n                var /** @type {?} */ value = token.identifier != null ? outputCtx.importExpr(tokenRef) : literal(tokenRef);\n                args.push(importExpr(Identifiers$1.inject).callFn([value]));\n            }\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    var /** @type {?} */ queryDefinitions = [];\n    for (var _b = 0, queries_1 = queries; _b < queries_1.length; _b++) {\n        var query = queries_1[_b];\n        var /** @type {?} */ predicate = getQueryPredicate(query, outputCtx);\n        // e.g. r3.Q(null, SomeDirective, false) or r3.Q(null, ['div'], false)\n        var /** @type {?} */ parameters = [\n            /* memoryIndex */ literal(null, INFERRED_TYPE),\n            predicate,\n            /* descend */ literal(query.descendants)\n        ];\n        if (query.read) {\n            parameters.push(outputCtx.importExpr(/** @type {?} */ ((query.read.identifier)).reference));\n        }\n        queryDefinitions.push(importExpr(Identifiers$1.query).callFn(parameters));\n    }\n    var /** @type {?} */ createInstance = new InstantiateExpr(outputCtx.importExpr(type.reference), args);\n    var /** @type {?} */ result = queryDefinitions.length > 0 ? literalArr([createInstance].concat(queryDefinitions)) :\n        createInstance;\n    return fn([], [new ReturnStatement(result)], INFERRED_TYPE, null, type.reference.name ? type.reference.name + \"_Factory\" : null);\n}\n/**\n * @param {?} directiveMetadata\n * @param {?} outputCtx\n * @return {?}\n */\nfunction createHostAttributesArray(directiveMetadata, outputCtx) {\n    var /** @type {?} */ values = [];\n    var /** @type {?} */ attributes = directiveMetadata.hostAttributes;\n    for (var _i = 0, _a = Object.getOwnPropertyNames(attributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var /** @type {?} */ value = attributes[key];\n        values.push(literal(key), literal(value));\n    }\n    if (values.length > 0) {\n        return outputCtx.constantPool.getConstLiteral(literalArr(values));\n    }\n    return null;\n}\n/**\n * @param {?} directiveMetadata\n * @param {?} outputCtx\n * @param {?} bindingParser\n * @return {?}\n */\nfunction createHostBindingsFunction(directiveMetadata, outputCtx, bindingParser) {\n    var /** @type {?} */ statements = [];\n    var /** @type {?} */ temporary = function () {\n        var /** @type {?} */ declared = false;\n        return function () {\n            if (!declared) {\n                statements.push(new DeclareVarStmt(TEMPORARY_NAME, undefined, DYNAMIC_TYPE));\n                declared = true;\n            }\n            return variable(TEMPORARY_NAME);\n        };\n    }();\n    var /** @type {?} */ hostBindingSourceSpan = typeSourceSpan(directiveMetadata.isComponent ? 'Component' : 'Directive', directiveMetadata.type);\n    // Calculate the queries\n    for (var /** @type {?} */ index = 0; index < directiveMetadata.queries.length; index++) {\n        var /** @type {?} */ query = directiveMetadata.queries[index];\n        // e.g. r3.qR(tmp = r3.ld(dirIndex)[1]) && (r3.ld(dirIndex)[0].someDir = tmp);\n        var /** @type {?} */ getDirectiveMemory = importExpr(Identifiers$1.load).callFn([variable('dirIndex')]);\n        // The query list is at the query index + 1 because the directive itself is in slot 0.\n        var /** @type {?} */ getQueryList = getDirectiveMemory.key(literal(index + 1));\n        var /** @type {?} */ assignToTemporary = temporary().set(getQueryList);\n        var /** @type {?} */ callQueryRefresh = importExpr(Identifiers$1.queryRefresh).callFn([assignToTemporary]);\n        var /** @type {?} */ updateDirective = getDirectiveMemory.key(literal(0, INFERRED_TYPE))\n            .prop(query.propertyName)\n            .set(query.first ? temporary().prop('first') : temporary());\n        var /** @type {?} */ andExpression = callQueryRefresh.and(updateDirective);\n        statements.push(andExpression.toStmt());\n    }\n    var /** @type {?} */ directiveSummary = directiveMetadata.toSummary();\n    // Calculate the host property bindings\n    var /** @type {?} */ bindings = bindingParser.createBoundHostProperties(directiveSummary, hostBindingSourceSpan);\n    var /** @type {?} */ bindingContext = importExpr(Identifiers$1.load).callFn([variable('dirIndex')]);\n    if (bindings) {\n        for (var _i = 0, bindings_1 = bindings; _i < bindings_1.length; _i++) {\n            var binding = bindings_1[_i];\n            var /** @type {?} */ bindingExpr = convertPropertyBinding(null, bindingContext, binding.expression, 'b', BindingForm.TrySimple, function () { return error('Unexpected interpolation'); });\n            statements.push.apply(statements, bindingExpr.stmts);\n            statements.push(importExpr(Identifiers$1.elementProperty)\n                .callFn([\n                variable('elIndex'), literal(binding.name),\n                importExpr(Identifiers$1.bind).callFn([bindingExpr.currValExpr])\n            ])\n                .toStmt());\n        }\n    }\n    // Calculate host event bindings\n    var /** @type {?} */ eventBindings = bindingParser.createDirectiveHostEventAsts(directiveSummary, hostBindingSourceSpan);\n    if (eventBindings) {\n        for (var _a = 0, eventBindings_1 = eventBindings; _a < eventBindings_1.length; _a++) {\n            var binding = eventBindings_1[_a];\n            var /** @type {?} */ bindingExpr = convertActionBinding(null, bindingContext, binding.handler, 'b', function () { return error('Unexpected interpolation'); });\n            var /** @type {?} */ bindingName = binding.name && sanitizeIdentifier(binding.name);\n            var /** @type {?} */ typeName = identifierName(directiveMetadata.type);\n            var /** @type {?} */ functionName = typeName && bindingName ? typeName + \"_\" + bindingName + \"_HostBindingHandler\" : null;\n            var /** @type {?} */ handler = fn([new FnParam('event', DYNAMIC_TYPE)], bindingExpr.stmts.concat([new ReturnStatement(bindingExpr.allowDefault)]), INFERRED_TYPE, null, functionName);\n            statements.push(importExpr(Identifiers$1.listener).callFn([literal(binding.name), handler]).toStmt());\n        }\n    }\n    if (statements.length > 0) {\n        var /** @type {?} */ typeName = directiveMetadata.type.reference.name;\n        return fn([new FnParam('dirIndex', NUMBER_TYPE), new FnParam('elIndex', NUMBER_TYPE)], statements, INFERRED_TYPE, null, typeName ? typeName + \"_HostBindings\" : null);\n    }\n    return null;\n}\n/**\n * @param {?} directive\n * @param {?} outputCtx\n * @return {?}\n */\nfunction createInputsObject(directive, outputCtx) {\n    if (Object.getOwnPropertyNames(directive.inputs).length > 0) {\n        return outputCtx.constantPool.getConstLiteral(mapToExpression(directive.inputs));\n    }\n    return null;\n}\nvar ValueConverter = /** @class */ (function (_super) {\n    __extends(ValueConverter, _super);\n    function ValueConverter(outputCtx, allocateSlot, definePipe) {\n        var _this = _super.call(this) || this;\n        _this.outputCtx = outputCtx;\n        _this.allocateSlot = allocateSlot;\n        _this.definePipe = definePipe;\n        _this.pipeSlots = new Map();\n        return _this;\n    }\n    // AstMemoryEfficientTransformer\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ValueConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Allocate a slot to create the pipe\n        var /** @type {?} */ slot = this.pipeSlots.get(ast.name);\n        if (slot == null) {\n            slot = this.allocateSlot();\n            this.pipeSlots.set(ast.name, slot);\n        }\n        var /** @type {?} */ slotPseudoLocal = \"PIPE:\" + slot;\n        var /** @type {?} */ target = new PropertyRead(ast.span, new ImplicitReceiver(ast.span), slotPseudoLocal);\n        var /** @type {?} */ bindingId = pipeBinding(ast.args);\n        this.definePipe(ast.name, slotPseudoLocal, slot, importExpr(bindingId));\n        var /** @type {?} */ value = ast.exp.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        return new FunctionCall(ast.span, target, [new LiteralPrimitive(ast.span, slot), value].concat(args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ValueConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(ast.span, this.visitAll(ast.expressions), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var /** @type {?} */ literal$$1 = literalArr(values);\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.outputCtx.constantPool.getConstLiteral(literal$$1, true) :\n                getLiteralFactory(_this.outputCtx, literal$$1);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ValueConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(ast.span, this.visitAll(ast.values), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var /** @type {?} */ literal$$1 = literalMap(values.map(function (value, index) { return ({ key: ast.keys[index].key, value: value, quoted: ast.keys[index].quoted }); }));\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.outputCtx.constantPool.getConstLiteral(literal$$1, true) :\n                getLiteralFactory(_this.outputCtx, literal$$1);\n        });\n    };\n    return ValueConverter;\n}(AstMemoryEfficientTransformer));\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid$1(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction findComponent(directives) {\n    return directives.filter(function (directive) { return directive.directive.isComponent; })[0];\n}\nvar ContentProjectionVisitor = /** @class */ (function (_super) {\n    __extends(ContentProjectionVisitor, _super);\n    function ContentProjectionVisitor(projectionMap, ngContentSelectors) {\n        var _this = _super.call(this) || this;\n        _this.projectionMap = projectionMap;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.index = 1;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ContentProjectionVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ selectorText = this.ngContentSelectors[ast.index];\n        selectorText != null || error(\"could not find selector for index \" + ast.index + \" in \" + ast);\n        if (!selectorText || selectorText === '*') {\n            this.projectionMap.set(ast, { index: 0 });\n        }\n        else {\n            var /** @type {?} */ cssSelectors = CssSelector.parse(selectorText);\n            this.projectionMap.set(ast, { index: this.index++, selector: parseSelectorsToR3Selector(cssSelectors) });\n        }\n    };\n    return ContentProjectionVisitor;\n}(RecursiveTemplateAstVisitor));\n/**\n * @param {?} asts\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction getContentProjection(asts, ngContentSelectors) {\n    var /** @type {?} */ projectIndexMap = new Map();\n    var /** @type {?} */ visitor = new ContentProjectionVisitor(projectIndexMap, ngContentSelectors);\n    templateVisitAll(visitor, asts);\n    return projectIndexMap;\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToSimpleSelector(selector) {\n    var /** @type {?} */ classes = selector.classNames && selector.classNames.length ? ['class'].concat(selector.classNames) : [];\n    return [selector.element].concat(selector.attrs, classes);\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToR3Selector(selector) {\n    var /** @type {?} */ positive = parserSelectorToSimpleSelector(selector);\n    var /** @type {?} */ negative = selector.notSelectors && selector.notSelectors.length &&\n        parserSelectorToSimpleSelector(selector.notSelectors[0]);\n    return negative ? [positive, negative] : [positive, null];\n}\n/**\n * @param {?} selectors\n * @return {?}\n */\nfunction parseSelectorsToR3Selector(selectors) {\n    return selectors.map(parserSelectorToR3Selector);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction asLiteral(value) {\n    if (Array.isArray(value)) {\n        return literalArr(value.map(asLiteral));\n    }\n    return literal(value, INFERRED_TYPE);\n}\n/**\n * @param {?} map\n * @return {?}\n */\nfunction mapToExpression(map) {\n    return literalMap(Object.getOwnPropertyNames(map).map(function (key) { return ({ key: key, quoted: false, value: literal(map[key]) }); }));\n}\nvar _a;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} outputCtx\n * @param {?} pipe\n * @param {?} reflector\n * @return {?}\n */\nfunction compilePipe(outputCtx, pipe, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. 'type: MyPipe`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(pipe.type.reference), quoted: false });\n    // e.g. factory: function MyPipe_Factory() { return new MyPipe(); },\n    var /** @type {?} */ templateFactory = createFactory(pipe.type, outputCtx, reflector, []);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. pure: true\n    if (pipe.pure) {\n        definitionMapValues.push({ key: 'pure', value: literal(true), quoted: false });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(pipe.type)));\n    className || error(\"Cannot resolve the name of \" + pipe.type);\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField(/* name */ outputCtx.constantPool.propertyNameOf(3 /* Pipe */), /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        var /** @type {?} */ isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error$$1, (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFileForInjectables = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    function (fileNames, tsFiles) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        var /** @type {?} */ analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return Promise.all(loadingPromises).then(function (_) {\n            return ({\n                analyzedModules: mergeAndValidateNgFiles(files),\n                analyzedInjectables: analyzedInjectables,\n            });\n        });\n    };\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    function (fileNames, tsFiles) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        var /** @type {?} */ analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ /* useSummaries */ false))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule = /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ classes = [];\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        var /** @type {?} */ hostBindingParser = new BindingParser(this._templateParser.expressionParser, DEFAULT_INTERPOLATION_CONFIG, /** @type {?} */ ((null)), [], errors);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var /** @type {?} */ directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var /** @type {?} */ module = /** @type {?} */ ((ngModuleByPipeOrDirective.get(directiveType)));\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var _a = _this._parseTemplate(directiveMetadata, module, module.transitiveModule.directives), parsedTemplate = _a.template, parsedPipes = _a.pipes;\n                compileComponent(context, directiveMetadata, parsedPipes, parsedTemplate, _this._reflector, hostBindingParser);\n            }\n            else {\n                compileDirective(context, directiveMetadata, _this._reflector, hostBindingParser);\n            }\n        });\n        pipes.forEach(function (pipeType) {\n            var /** @type {?} */ pipeMetadata = _this._metadataResolver.getPipeMetadata(pipeType);\n            if (pipeMetadata) {\n                compilePipe(context, pipeMetadata, _this._reflector);\n            }\n        });\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules2 = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        var _this = this;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule2(file.fileName, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule2 = /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, injectables) {\n        var _this = this;\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref.symbol))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref.symbol))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var /** @type {?} */ injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ injectables = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var /** @type {?} */ injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName: fileName, injectables: injectables };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[FORMATTED_MESSAGE] = true;\n    error$$1.chain = chain;\n    error$$1.position = chain.position;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var /** @type {?} */ declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.tryAnnotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._staticMembers = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var /** @type {?} */ staticMembers = this._staticMembers(type);\n        var /** @type {?} */ result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var /** @type {?} */ property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var /** @type {?} */ value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope$1.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope$1.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_2 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope$1.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[METADATA_ERROR] = true;\n    if (advise)\n        error$$1.advise = advise;\n    if (position)\n        error$$1.position = position;\n    if (summary)\n        error$$1.summary = summary;\n    if (context)\n        error$$1.context = context;\n    if (chain)\n        error$$1.chain = chain;\n    if (symbol)\n        error$$1.symbol = symbol;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error$$1) {\n    if (error$$1.summary) {\n        return error$$1.summary;\n    }\n    switch (error$$1.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error$$1.context && error$$1.context.className) {\n                return \"references non-exported class \" + error$$1.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error$$1.context && error$$1.context.name) {\n                return \"calls '\" + error$$1.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error$$1.context && error$$1.context.name) {\n                return \"references local variable \" + error$$1.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope$1 = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n    };\n    return PopulatedScope;\n}(BindingScope$1));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ initialValue = stmt.value ? stmt.value.visitExpression(this, ctx) : undefined;\n        ctx.vars.set(stmt.name, initialValue);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name);\n        if (stmt.value) {\n            ctx.print(stmt, ' = ');\n            stmt.value.visitExpression(this, ctx);\n        }\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassField = ClassField;\nexports.ClassMethod = ClassMethod;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.sanitizeIdentifier = sanitizeIdentifier;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.analyzeFileForInjectables = analyzeFileForInjectables;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.AstMemoryEfficientTransformer = AstMemoryEfficientTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}