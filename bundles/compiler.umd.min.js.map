{"version":3,"sources":["compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","Injectable","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","error","msg","Error","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","ifStmt","thenClause","elseClause","IfStmt","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","mapEntry","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","srcFileSuffix","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","error$$1","ERROR_COMPONENT_TYPE","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","isModule","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","isSelf","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractCommentsWithHash","_commentWithHashRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","form","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","BindingForm","TrySimple","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","invalid","isVariable","compileDirective","outputCtx","definitionMapValues","templateFactory","createFactory","getOwnPropertyNames","inputs","mapToExpression","ClassStmt","ClassField","constantPool","propertyNameOf","Static","Identifiers$1","defineDirective","ClassMethod","compileComponent","pipes","template","firstSelector","hasElementSelector","selectorAttributes","getAttrs","getConstLiteral","templateTypeName","templateName","pipeMap","pipe","templateFunctionExpression","TemplateDefinitionBuilder","CONTEXT_NAME","ROOT_SCOPE","nestedScope","ngContentSelectors","buildTemplateFunction","features","lifecycle","NgOnChangesFeature","defineComponent","unsupported","feature","interpolate","interpolation1","interpolation2","interpolation3","interpolation4","interpolation5","interpolation6","interpolation7","interpolation8","interpolationV","pipeBinding","pipeBind1","pipeBind2","pipeBind3","pipeBindV","getLiteralFactory","outputContext","literal$$1","literalFactory","literalFactoryArguments","pureFunctionIdentifiers","pureFunctionV","elementRef","ElementRef","templateRef","TemplateRef","viewContainerRef","ViewContainerRef","dependency","isHost","tokenRef","injectElementRef","injectTemplateRef","injectViewContainerRef","inject","InstantiateExpr","invalid$1","findComponent","getContentProjection","projectIndexMap","ContentProjectionVisitor","parserSelectorToSimpleSelector","classes","classNames","parserSelectorToR3Selector","positive","negative","parseSelectorsToR3Selector","asLiteral","compilePipe","pure","definePipe","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","injectable","getInjectableMetadata","isValueExportingNonSourceFile","analyzeFileForInjectables","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","InjectableCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","ConstantPool","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","ngInjectableDef","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","createInjectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","TypeModuleProvider","CatQuery","Types","DepFlags","SkipSelf","Optional","Self","Value","InjectFlags","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","originalValue","visitReference","VariableAst","visitVariable","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","templateUrl","htmlAst","externalStylesheets","animations","interpolation","toSummary","CompileDirectiveMetadata","hostListeners","guards","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","publicNames","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","AstMemoryEfficientTransformer","modified","original","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","defineInjectable","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltinType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","isConstant","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","every","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","initializer","ClassGetter","visitDeclareClassStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","quotedSet","depsArray","defaultValue","factoryFor","retValue","clazz","depArgs","parameters","injectableDef","compile","_SELECTOR_REGEXP","_addResult","cssSel","current","inNot","exec","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","prevModules","moduleRef","tryAnnotations","ann","getInjectableSummary","throwOnUnknownDeps","scope","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","dependenciesMetadata","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","_getInjectableTypeMetadata","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","commentsWithHash","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","General","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","useIf","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","guardExpression","guardClause","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","KEY_CONTEXT","FixupExpression","resolved","fixup","shared","literals","literalFactories","injectorDefinitions","directiveDefinitions","componentDefinitions","pipeDefinitions","nextNameIndex","forceShared","keyOf","newValue","freshName","getDefinition","definitions","definitionsOf","argumentsForKey","_getLiteralFactory","expressionForKey","resultMap","resultExpressions","pureFunctionDeclaration","KeyVisitor","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","CORE$1","NEW_METHOD","HOST_BINDING_METHOD","TRANSFORM_METHOD","createElement","elementEnd","elementProperty","elementAttribute","elementClass","elementStyle","containerCreate","containerEnd","containerRefreshStart","containerRefreshEnd","directiveCreate","directiveInput","textCreateBound","pureFunction0","pureFunction1","pureFunction2","pureFunction3","pureFunction4","pureFunction5","pureFunction6","pureFunction7","pureFunction8","pipeBind4","projection","projectionDef","refreshComponent","directiveLifeCycle","BINDING_INSTRUCTION_MAP","BindingScope","referenceNameIndex","freshReferenceName","contextParameter","bindingScope","contextName","_dataIndex","_bindingContext","_referenceIndex","_temporaryAllocated","_prefix","_creationMode","_bindingMode","_hostMode","_refreshMode","_postfix","_projectionDefinitionIndex","_valueConverter","ValueConverter","allocateDataSlot","slot","pipeDefinition","variables_1","variable$$1","variableName","scopedName","declaration","contentProjections","_contentProjections","infos_1","info","projectionIndex","instruction","creationMode","_computeDirectivesArray","directiveIndexMap","directiveExpressions","typeReference","directivesArray","elementIndex","componentIndex","referenceDataSlots","nullNode","implicit","convertedBinding","_visitDirectives","directives_1","definitionOf","templateIndex","templateDirective","templateContext","templateVisitor","templateFunctionExpr","bindingContext","pipesConvertedValue","convertedPropertyBinding","allocateSlot","pipeSlots","slotPseudoLocal","projectionMap","selectorText","GeneratedFile","srcFileUrl","sourceOrStmts","TS","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","useSummaries","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","isTsFile","transformedMeta_1","_originalFileMemo","getOriginalName","getOutputName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_injectableCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","_analyzedFilesForInjectables","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","_analyzeFileForInjectables","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","tsFiles","loadingPromises","analyzedInjectables","tsFile","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllPartialModules","_emitPartialModule","directiveMetadata","parsedPipes","pipeMetadata","emitAllPartialModules2","_emitPartialModule2","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","declarationSymbol_1","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","originalRecorder","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope$1","result_1","oldScope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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gBrmB,OAAQ,YAExCohB,gBAAgBiF,gBAAgB+jB,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEhpB,gBAAgBiF,gBAAgBgkB,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAIynD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZvxD,yBAA0C,SAAU/kC,QAEpD,QAAS+kC,4BACL,GAAIhF,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAqCjC,OApCAyqC,OAAMw2D,WACNR,OAAO35F,QAAQ,SAAUo6F,aACrB,GAAqB76F,SACjBgT,GAAK6nF,YAAYz3F,MAAM,KAAM03F,QAAU9nF,GAAG,GAAI+nF,cAAgB/nF,GAAG,GAChDgoF,WAAaD,cAAc33F,MAAM,KAClD+P,GAAK2nF,QAAQ13F,MAAM,KAAM63F,UAAY9nF,GAAG,GAAI+nF,UAAY/nF,GAAG,EAC/D8nF,WAAU73F,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAO4qB,OAAMw2D,QAAQphF,IAAInS,eAAiBrH,MACxF,IAAqBm7F,WAAYD,WAAa92D,MAAMw2D,QAAQM,UAAU7zF,cAClE8zF,YACAhhG,OAAOm3B,KAAK6pE,WAAW16F,QAAQ,SAAUkpB,MAAQ3pB,KAAK2pB,MAAQwxE,UAAUxxE,QAE5EqxE,WAAWv6F,QAAQ,SAAU26F,UACzB,GAAIA,SAAS1/F,OAAS,EAClB,OAAQ0/F,SAAS,IACb,IAAK,IAMD,KACJ,KAAK,IACDp7F,KAAKo7F,SAASt7F,UAAU,IAAMk6F,OAC9B,MACJ,KAAK,IACDh6F,KAAKo7F,SAASt7F,UAAU,IAAMm6F,MAC9B,MACJ,KAAK,IACDj6F,KAAKo7F,SAASt7F,UAAU,IAAMq6F,MAC9B,MACJ,SACIn6F,KAAKo7F,UAAYlB,YAK9B91D,MAmNX,MA1PAxqC,WAAUwvC,yBAA0B/kC,QA+CpC+kC,yBAAyBlvC,UAAUmhG,YAMnC,SAAUj1F,QAASqnB,SAAU6tE,aACzB,GAAIA,YAAY1vE,KAAK,SAAU2vE,QAAU,MAAOA,QAAOlgG,OAAS02C,iBAAiB12C,OAC7E,OAAO,CAEX,IAAI+K,QAAQtJ,QAAQ,MAAQ,EAAG,CAC3B,GAAIqJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIk1F,YAAY1vE,KAAK,SAAU2vE,QAAU,MAAOA,QAAOlgG,OAASy2C,uBAAuBz2C,OAGnF,OAAO,EAIf,SADyC1B,KAAKihG,QAAQx0F,QAAQiB,gBAAkB1N,KAAKihG,QAAiB,SAC3EntE,WAO/B2b,yBAAyBlvC,UAAUshG,WAKnC,SAAUp1F,QAASk1F,aACf,GAAIA,YAAY1vE,KAAK,SAAU2vE,QAAU,MAAOA,QAAOlgG,OAAS02C,iBAAiB12C,OAC7E,OAAO,CAEX,IAAI+K,QAAQtJ,QAAQ,MAAQ,EAAG,CAC3B,GAAIqJ,cAAcC,UAAYC,YAAYD,SACtC,OAAO,CAEX,IAAIk1F,YAAY1vE,KAAK,SAAU2vE,QAAU,MAAOA,QAAOlgG,OAASy2C,uBAAuBz2C,OAEnF,OAAO,EAGf,QAAS1B,KAAKihG,QAAQx0F,QAAQiB,gBA0BlC+hC,yBAAyBlvC,UAAUm0B,gBAcnC,SAAUjoB,QAASqnB,SAAUC,aACrBA,cAEAD,SAAW9zB,KAAK8hG,kBAAkBhuE,WAItCrnB,QAAUA,QAAQiB,cAClBomB,SAAWA,SAASpmB,aACpB,IAAqB8W,KAAMsL,gBAAgBrjB,QAAU,IAAMqnB,SAC3D,OAAItP,QAGJA,IAAMsL,gBAAgB,KAAOgE,YACVa,gBAAgBC,OAMvC6a,yBAAyBlvC,UAAUuhG,kBAInC,SAAUhuE,UAAY,MAAO4sE,eAAc5sE,WAAaA,UAIxD2b,yBAAyBlvC,UAAU+wF,+BAGnC,WAAc,MAAO,gBAKrB7hD,yBAAyBlvC,UAAUwhG,iBAInC,SAAUrgG,MACN,GAAIA,KAAKgM,cAAc6Q,WAAW,MAAO,CAKrC,OAASla,OAAO,EAAMC,IAJK,8BAAgC5C,KAAO,qDAC5CA,KAAK0B,MAAM,GAAK,cACtB1B,KAAO,sFAKvB,OAAS2C,OAAO,IAOxBorC,yBAAyBlvC,UAAUyhG,kBAInC,SAAUtgG,MACN,GAAIA,KAAKgM,cAAc6Q,WAAW,MAAO,CAGrC,OAASla,OAAO,EAAMC,IAFK,+BAAiC5C,KAAO,qDAC7CA,KAAK0B,MAAM,GAAK,SAItC,OAASiB,OAAO,IAMxBorC,yBAAyBlvC,UAAU6zB,qBAGnC,WAAc,MAAO5zB,QAAOm3B,KAAK33B,KAAKihG,UAKtCxxD,yBAAyBlvC,UAAU0hG,gCAInC,SAAUnuE,UACN,MAAOvxB,qBAAoBuxB,WAQ/B2b,yBAAyBlvC,UAAU2hG,6BAMnC,SAAUC,cAAeC,iBAAkBl+F,KACvC,GAAqBs3B,MAAO,GACP6mE,OAASn+F,IAAI+B,WAAW5C,OACxB2gE,SAA4B,IACjD,IAAIj0C,uBAAuBoyE,gBAA0B,IAARj+F,KAAqB,MAARA,IACtD,GAAmB,gBAARA,KACPs3B,KAAO,SAEN,CACD,GAAqB8mE,mBAAoBp+F,IAAIuH,MAAM,yBAC/C62F,oBAAoD,GAA/BA,kBAAkB,GAAGvgG,SAC1CiiE,SAAW,uCAAyCo+B,iBAAmB,IAAMl+F,KAIzF,OAASG,MAAO2/D,SAAUzgE,MAAO8+F,OAAS7mE,OAEvCiU,0BACT2wD,uBAgLEmC,UAA2B,WAC3B,QAASA,aACLviG,KAAKwiG,eAAgB,EAgczB,MAhbAD,WAAUhiG,UAAUkiG,YAMpB,SAAU32F,QAAS8kB,SAAU8xE,kBACJ,KAAjBA,eAA2BA,aAAe,GAC9C,IAAqBC,kBAAmBxyE,wBAAwBrkB,QAIhE,OAHAA,SAAUmkB,cAAcnkB,SACxBA,QAAU9L,KAAK4iG,kBAAkB92F,UACI9L,KAAK6iG,cAAc/2F,QAAS8kB,SAAU8xE,eACpD75F,OAAO85F,kBAAkB78F,KAAK,OAMzDy8F,UAAUhiG,UAAUqiG,kBAIpB,SAAU92F,SAEN,MADAA,SAAU9L,KAAK8iG,mCAAmCh3F,SAC3C9L,KAAK+iG,8BAA8Bj3F,UAM9Cy2F,UAAUhiG,UAAUuiG,mCAIpB,SAAUh3F,SAEN,MAAOA,SAAQrJ,QAAQugG,0BAA2B,WAE9C,IAAK,GADDrgG,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,OAAOc,GAAE,GAAK,OAOtB4/F,UAAUhiG,UAAUwiG,8BAIpB,SAAUj3F,SAEN,MAAOA,SAAQrJ,QAAQwgG,kBAAmB,WAEtC,IAAK,GADDtgG,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,IAAqBqvB,MAAOvuB,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAI,GACjE,OAAOA,GAAE,GAAKuuB,QAStBqxE,UAAUhiG,UAAUsiG,cAMpB,SAAU/2F,QAASo3F,cAAeR,cAC9B,GAAqBS,eAAgBnjG,KAAKojG,iCAAiCt3F,QAU3E,OARAA,SAAU9L,KAAKqjG,6BAA6Bv3F,SAC5CA,QAAU9L,KAAKsjG,kBAAkBx3F,SACjCA,QAAU9L,KAAKujG,yBAAyBz3F,SACxCA,QAAU9L,KAAKwjG,2BAA2B13F,SACtCo3F,gBACAp3F,QAAU9L,KAAKyjG,gBAAgB33F,QAASo3F,cAAeR,eAE3D52F,QAAUA,QAAU,KAAOq3F,cACpBr3F,QAAQzI,QAMnBk/F,UAAUhiG,UAAU6iG,iCAIpB,SAAUt3F,SAEN,GACqBnJ,GADA+gG,EAAI,EAGzB,KADAC,0BAA0BxrE,UAAY,EACmB,QAAjDx1B,EAAIghG,0BAA0BnY,KAAK1/E,WAAoB,CAE3D43F,GAD4B/gG,EAAE,GAAGF,QAAQE,EAAE,GAAI,IAAIF,QAAQE,EAAE,GAAIA,EAAE,IACvD,OAEhB,MAAO+gG,IAMXnB,UAAUhiG,UAAU+iG,kBAIpB,SAAUx3F,SACN,MAAO9L,MAAK4jG,kBAAkB93F,QAAS+3F,gBAAiB7jG,KAAK8jG,yBAMjEvB,UAAUhiG,UAAUgjG,yBAIpB,SAAUz3F,SACN,MAAO9L,MAAK4jG,kBAAkB93F,QAASi4F,uBAAwB/jG,KAAKgkG,gCAQxEzB,UAAUhiG,UAAUqjG,kBAMpB,SAAU93F,QAASm4F,OAAQC,cAEvB,MAAOp4F,SAAQrJ,QAAQwhG,OAAQ,WAE3B,IAAK,GADDthG,MACKd,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCc,EAAEd,IAAMC,UAAUD,GAEtB,IAAIc,EAAE,GAAI,CAGN,IAAK,GAFgBsV,OAAQtV,EAAE,GAAG8G,MAAM,KACnBi6F,KACK14F,EAAI,EAAGA,EAAIiN,MAAMlW,OAAQiJ,IAAK,CACpD,GAAqB0T,GAAIzG,MAAMjN,GAAG3H,MAClC,KAAKqb,EACD,KACJglF,GAAE18F,KAAKk9F,aAAaC,0BAA2BzlF,EAAG/b,EAAE,KAExD,MAAO+gG,GAAE59F,KAAK,KAGd,MAAOq+F,2BAA4BxhG,EAAE,MAUjD4/F,UAAUhiG,UAAUyjG,8BAMpB,SAAU37D,KAAM1W,KAAMb,QAClB,MAAIa,MAAKxuB,QAAQihG,gBAAkB,EACxBpkG,KAAK8jG,uBAAuBz7D,KAAM1W,KAAMb,QAGxCuX,KAAO1W,KAAOb,OAAS,KAAOa,KAAO,IAAM0W,KAAOvX,QASjEyxE,UAAUhiG,UAAUujG,uBAMpB,SAAUz7D,KAAM1W,KAAMb,QAClB,MAAOuX,MAAO1W,KAAKlvB,QAAQ2hG,cAAe,IAAMtzE,QAMpDyxE,UAAUhiG,UAAUijG,2BAIpB,SAAU13F,SACN,MAAOu4F,uBAAsB57F,OAAO,SAAU9B,OAAQ0O,SAAW,MAAO1O,QAAOlE,QAAQ4S,QAAS,MAASvJ,UAQ7Gy2F,UAAUhiG,UAAUkjG,gBAMpB,SAAU33F,QAASo3F,cAAeR,cAC9B,GAAIj4D,OAAQzqC,IACZ,OAAOqwB,cAAavkB,QAAS,SAAUolB,MACnC,GAAqBN,UAAWM,KAAKN,SAChBC,QAAUK,KAAKL,OASpC,OARwB,KAApBK,KAAKN,SAAS,GACdA,SACI6Z,MAAM65D,eAAepzE,KAAKN,SAAUsyE,cAAeR,aAAcj4D,MAAM+3D,gBAEtEtxE,KAAKN,SAASrS,WAAW,WAAa2S,KAAKN,SAASrS,WAAW,cACpE2S,KAAKN,SAASrS,WAAW,UAAY2S,KAAKN,SAASrS,WAAW,gBAC9DsS,QAAU4Z,MAAMg5D,gBAAgBvyE,KAAKL,QAASqyE,cAAeR,eAE1D,GAAIvxE,SAAQP,SAAUC,YAUrC0xE,UAAUhiG,UAAU+jG,eAOpB,SAAU1zE,SAAUsyE,cAAeR,aAAc6B,QAC7C,GAAI95D,OAAQzqC,IACZ,OAAO4wB,UAASnnB,MAAM,KACjB5D,IAAI,SAAU8rB,MAAQ,MAAOA,MAAKtuB,OAAOoG,MAAM+6F,wBAC/C3+F,IAAI,SAAU4+F,WACf,GAAIC,aAAcD,UAAU,GAAIE,WAAaF,UAAUrhG,MAAM,EAW7D,QAVkC,SAAUshG,aACxC,MAAIj6D,OAAMm6D,sBAAsBF,YAAaxB,eAClCqB,OACH95D,MAAMo6D,0BAA0BH,YAAaxB,cAAeR,cAC5Dj4D,MAAMq6D,oBAAoBJ,YAAaxB,cAAeR,cAGnDgC,aAGIA,cAAc77F,OAAO87F,YAAY7+F,KAAK,OAExDA,KAAK,OAOdy8F,UAAUhiG,UAAUqkG,sBAKpB,SAAUh0E,SAAUsyE,eAEhB,OAD0BljG,KAAK+kG,kBAAkB7B,eACtC53F,KAAKslB,WAMpB2xE,UAAUhiG,UAAUwkG,kBAIpB,SAAU7B,eACN,GAAqB8B,KAAM,MACNC,IAAM,KAE3B,OADA/B,eAAgBA,cAAczgG,QAAQuiG,IAAK,OAAOviG,QAAQwiG,IAAK,OACxD,GAAI3vF,QAAO,KAAO4tF,cAAgB,IAAMgC,kBAAmB,MAQtE3C,UAAUhiG,UAAUukG,oBAMpB,SAAUl0E,SAAUsyE,cAAeR,cAE/B,MAAO1iG,MAAKmlG,0BAA0Bv0E,SAAUsyE,cAAeR,eAQnEH,UAAUhiG,UAAU4kG,0BAMpB,SAAUv0E,SAAUsyE,cAAeR,cAG/B,GADA0C,gBAAgBjtE,UAAY,EACxBitE,gBAAgB95F,KAAKslB,UAAW,CAChC,GAAqBy0E,aAAcrlG,KAAKwiG,cAAgB,IAAME,aAAe,IAAMQ,aACnF,OAAOtyE,UACFnuB,QAAQ6iG,4BAA6B,SAAUC,IAAK30E,UACrD,MAAOA,UAASnuB,QAAQ,kBAAmB,SAAUie,EAAG4hD,OAAQkjC,MAAOjjC,OACnE,MAAOD,QAAS+iC,YAAcG,MAAQjjC,UAGzC9/D,QAAQ2iG,gBAAiBC,YAAc,KAEhD,MAAOnC,eAAgB,IAAMtyE,UAQjC2xE,UAAUhiG,UAAUskG,0BAMpB,SAAUj0E,SAAUsyE,cAAeR,cAC/B,GAAIj4D,OAAQzqC,KACSylG,KAAO,kBAC5BvC,eAAgBA,cAAczgG,QAAQgjG,KAAM,SAAU/kF,GAElD,IAAK,GADDzI,UACKpW,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCoW,MAAMpW,GAAK,GAAKC,UAAUD,GAE9B,OAAOoW,OAAM,IAEjB,IAAqByd,UAAW,IAAMwtE,cAAgB,IACjCwC,mBAAqB,SAAUhnF,GAChD,GAAqBinF,SAAUjnF,EAAErb,MACjC,KAAKsiG,QACD,MAAO,EAEX,IAAIjnF,EAAEvb,QAAQghG,4BAA8B,EACxCwB,QAAUl7D,MAAM06D,0BAA0BzmF,EAAGwkF,cAAeR,kBAE3D,CAED,GAAqBxsD,GAAIx3B,EAAEjc,QAAQ2iG,gBAAiB,GACpD,IAAIlvD,EAAEn0C,OAAS,EAAG,CACd,GAAqBm/C,SAAUhL,EAAEzqC,MAAM,kBACnCy1C,WACAykD,QAAUzkD,QAAQ,GAAKxrB,SAAWwrB,QAAQ,GAAKA,QAAQ,KAInE,MAAOykD,UAEUC,YAAc,GAAIC,cAAaj1E,SACpDA,UAAWg1E,YAAY/0E,SAmBvB,KAlBA,GAEqB7qB,KAFA8/F,eAAiB,GACjB7tB,WAAa,EAEb8tB,IAAM,sBAYNC,QAAUp1E,SAASztB,QAAQghG,4BAA8B,EAEzD8B,aAAeD,QACE,QAA9BhgG,IAAM+/F,IAAIva,KAAK56D,YAAqB,CACxC,GAAqB4tE,WAAYx4F,IAAI,GAChBkgG,OAASt1E,SAASxtB,MAAM60E,WAAYjyE,IAAIX,OAAOhC,MACpE4iG,aAAcA,aAAeC,OAAO/iG,QAAQghG,4BAA8B,CAE1E2B,kBADkCG,YAAcP,mBAAmBQ,QAAUA,QAC9C,IAAM1H,UAAY,IACjDvmB,WAAa8tB,IAAI5tE,UAErB,GAAqBxG,MAAOf,SAASzqB,UAAU8xE,WAI/C,OAHAguB,aAAcA,aAAet0E,KAAKxuB,QAAQghG,4BAA8B,EACxE2B,gBAAkBG,YAAcP,mBAAmB/zE,MAAQA,KAEpDi0E,YAAYO,QAAQL,iBAM/BvD,UAAUhiG,UAAU8iG,6BAIpB,SAAUzyE,UACN,MAAOA,UAASnuB,QAAQ2jG,oBAAqBC,sBACxC5jG,QAAQ6jG,aAAclC,gBAExB7B,aAEPsD,aAA8B,WAC9B,QAASA,cAAaj1E,UAClB,GAAI6Z,OAAQzqC,IACZA,MAAKotE,gBACLptE,KAAKqF,MAAQ,EAGburB,SAAWA,SAASnuB,QAAQ,gBAAiB,SAAUie,EAAG6lF,MACtD,GAAqBC,WAAY,QAAU/7D,MAAMplC,MAAQ,IAGzD,OAFAolC,OAAM2iC,aAAapmE,KAAKu/F,MACxB97D,MAAMplC,QACCmhG,YAIXxmG,KAAKymG,SAAW71E,SAASnuB,QAAQ,4BAA6B,SAAUie,EAAGgmF,OAAQhyF,KAC/E,GAAqB8xF,WAAY,QAAU/7D,MAAMplC,MAAQ,IAGzD,OAFAolC,OAAM2iC,aAAapmE,KAAK0N,KACxB+1B,MAAMplC,QACCqhG,OAASF,YAsBxB,MAfAX,cAAatlG,UAAU4lG,QAIvB,SAAUt1E,SACN,GAAI4Z,OAAQzqC,IACZ,OAAO6wB,SAAQpuB,QAAQ,gBAAiB,SAAUqqE,GAAIznE,OAAS,MAAOolC,OAAM2iC,cAAc/nE,UAK9FwgG,aAAatlG,UAAUswB,QAGvB,WAAc,MAAO7wB,MAAKymG,UACnBZ,gBAEP7C,0BAA4B,4EAC5BC,kBAAoB,kEACpBU,0BAA4B,2EAC5BS,cAAgB,iBAEhBiC,qBAAuB,oBACvBM,aAAe,kDAGf9C,gBAAkB,GAAIvuF,QAAO,IAAM8uF,cAAgBuC,aAAc,OACjE5C,uBAAyB,GAAIzuF,QAAO,IAAM+wF,qBAAuBM,aAAc,OAC/ExC,0BAA4BC,cAAgB,iBAC5CkB,4BAA8B,uCAC9BjB,uBACA,YACA,aACA,mBACA,eAKAG,qBAAuB,sCACvBU,kBAAoB,6BACpBE,gBAAkB,oBAClBkB,aAAe,WACfF,oBAAsB,mBACtBl2E,WAAa,uBAQbE,mBAAqB,+CAQrBO,QAAU,wDACVU,SAAW,UACXQ,WAAa,IACbD,YAAc,IACdZ,kBAAoB,UACpBG,QAAyB,WACzB,QAASA,SAAQP,SAAUC,SACvB7wB,KAAK4wB,SAAWA,SAChB5wB,KAAK6wB,QAAUA,QAEnB,MAAOM,YA4BPW,wBAAyC,WACzC,QAASA,yBAAwBpB,cAAeO,QAC5CjxB,KAAK0wB,cAAgBA,cACrB1wB,KAAKixB,OAASA,OAElB,MAAOa,4BAqDP80E,wBAAyC,WACzC,QAASA,yBAAwBllG,KAAM+T,UAAWqyB,UAC9C9nC,KAAK0B,KAAOA,KACZ1B,KAAKyV,UAAYA,UACjBzV,KAAK8nC,SAAWA,SAEpB,MAAO8+D,4BAEPC,mBAAoC,WACpC,QAASA,oBAAmB7oE,UAAW8oE,UAAWj/D,aAAck/D,UAAWz9F,MACvEtJ,KAAKg+B,UAAYA,UACjBh+B,KAAK8mG,UAAYA,UACjB9mG,KAAK6nC,aAAeA,aACpB7nC,KAAK+mG,UAAYA,UACjB/mG,KAAKsJ,KAAOA,KAEhB,MAAOu9F,uBAEPx2D,cAA+B,WAC/B,QAASA,eAAcyjB,cACnB9zD,KAAK8zD,aAAeA,aACpB9zD,KAAKgnG,WAAa,GAAIzE,WAmG1B,MA5FAlyD,eAAc9vC,UAAUw+B,iBAKxB,SAAUf,UAAW+5B,MACjB,GAAqB94B,UAA8B84B,KAAc,QACjE,OAAO/3D,MAAKinG,eAAejpE,UAAW+5B,KAAM,GAAI7X,4BAC5CC,OAAQlhB,SAASkhB,OACjBC,UAAWnhB,SAASmhB,UACpB3qC,UAAW7N,oBAAoBmwD,KAAK1xD,QACpCrG,KAAKknG,eAAenvC,OAAO,IASnC1nB,cAAc9vC,UAAU4mG,cAOxB,SAAUnpE,UAAW+5B,KAAMzD,WAAYpsB,MAEnC,WADa,KAATA,OAAmBA,KAAOloC,KAAKknG,eAAenvC,OAC3C/3D,KAAKinG,eAAejpE,UAAW+5B,KAAMzD,WAAYpsB,MAAM,IAMlEmI,cAAc9vC,UAAU2mG,eAIxB,SAAUnvC,MACN,MAA0BA,MAAc,SAAEzX,gBAAkBzR,kBAAkBC,UAUlFuB,cAAc9vC,UAAU0mG,eAQxB,SAAUjpE,UAAW+5B,KAAMzD,WAAYpsB,KAAMk/D,uBACzC,GAAI38D,OAAQzqC,KACSqnG,iBAAmB/yC,WAAWnU,OAAOt6C,IAAI,SAAUyhG,YAAc,MAAOjjF,SAAQomB,MAAM88D,cAAcD,WAAYp/D,SAChHL,eACrBysB,YAAWlU,UAAUt5C,QAAQ,SAAU4uD,UACnC,GAAqB8xC,WAAYH,iBAAiBtlG,MAElDslG,kBAAiBrgG,KAAsB,MACvC6gC,aAAa7gC,KAAK,GAAI4/F,yBAAwB70E,iBAAiB,MAAO2jC,SAAU,SAAUnyD,OAAS,MAAO8jG,kBAAiBG,WAAaxpE,UAAUpb,WAAWrf,WAIjK,IAAqBujG,WAAY/0E,iBAAiBq1E,sBAAwBrvC,KAAO,MAC5D51C,KAAOO,SAASokF,WAChCrmF,IAAI0C,WAAWkkF,iBAAkB,GAAIngE,WAAU9a,cAAeu2D,aAAaC,UAC3EjqD,WAAW,KAAMyuE,uBAAyBxuE,aAAaC,QACxDD,aAAaC,MAAOD,aAAauO,UAGrC,OADAnJ,WAAUjE,WAAW/yB,KAAKmb,MACnB,GAAI0kF,oBAAmB7oE,UAAW8oE,UAAWj/D,aAAcK,KAAMosB,aAO5EjkB,cAAc9vC,UAAUgnG,cAKxB,SAAUzjD,MAAO5b,MACb,MAAOA,MAAOloC,KAAKgnG,WAAWvE,YAAY3+C,MAvH/B,oBADH,kBAwHoEA,OAEzEzT,iBAyBPne,sBAAwB,wBACxBu1E,kBAAoB,GAAIhgF,MAAK,MAAO,WAAY,WAAY,SAAU,UAGtEigF,SAAW,wCACXC,aAAe,GAAIryF,QAAO,KAAOoyF,SAAW,KAC5CE,kBAAoB,GAAItyF,QAAO,IAAMoyF,SAAW,QAAS,KAkCzDl1E,kBAAmC,WACnC,QAASA,sBAmFT,MA5EAA,mBAAkBjyB,UAAUi+C,aAK5B,SAAUpmC,QAAS3U,SACf,MAAIgkG,mBAAkBhzE,IAAIrc,QAAQ1W,OAASswB,2BAA2B5Z,QAAQ7K,OAGnE,GAAInD,SAAQgO,QAAQ1W,KAAMmI,SAAS7J,KAAMoY,QAAQ7K,OAAQ6K,QAAQ9N,SAAU8N,QAAQnO,WAAYmO,QAAQqrC,gBAAiBrrC,QAAQ/N,eAEpI,GAAID,SAAQgO,QAAQ1W,KAAM0W,QAAQ7K,MAAO1D,SAAS7J,KAAMoY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQqrC,gBAAiBrrC,QAAQ/N,gBAO3ImoB,kBAAkBjyB,UAAUijD,eAK5B,SAAUuwB,UAAWtwE,SACjB,MAAOswE,WAAUryE,OAASwwB,sBAAwB6hD,UAAY,MAOlEvhD,kBAAkBjyB,UAAU+8C,UAK5B,SAAU9sC,KAAM/M,SAEZ,MADkC+M,MAAKjN,MAAMkI,MAAMk8F,cAExC,GAAIzxE,MAAK/D,YAAY3hB,KAAKjN,OAAOd,QAAQmlG,kBAAmB,KAAMp3F,KAAKvG,YAE3E,MAOXuoB,kBAAkBjyB,UAAUmjD,aAK5B,SAAUuwB,QAASxwE,SAAW,MAAOwwE,UAMrCzhD,kBAAkBjyB,UAAU4iD,eAK5B,SAAUu5B,UAAWj5E,SAAW,MAAOi5E,YAMvClqD,kBAAkBjyB,UAAU+iD,mBAK5B,SAAUq5B,cAAel5E,SAAW,MAAOk5E,gBACpCnqD,qBAsBPU,cAAgB,OAAQ,MAAO,MAAO,MAAO,OAAQ,SA8BrDJ,gBAAiC,WACjC,QAASA,iBAAgBhpB,MAAO+9F,SAAUn1E,QACtC1yB,KAAK8J,MAAQA,MACb9J,KAAK6nG,SAAWA,SAChB7nG,KAAK0yB,OAASA,OAElB,MAAOI,oBAEPK,eAAgC,SAAUzoB,QAE1C,QAASyoB,gBAAevoB,KAAMo5D,UAC1B,MAAOt5D,QAAOyrC,KAAKn2C,KAAM4K,KAAMo5D,WAAahkE,KAEhD,MAJAC,WAAUkzB,eAAgBzoB,QAInByoB,gBACTyvC,YAME/vC,UAA2B,WAC3B,QAASA,aACL7yB,KAAK+yB,YAAa,EAClB/yB,KAAK0yB,UA4ET,MArEAG,WAAUtyB,UAAUi+C,aAKpB,SAAUpmC,QAAS3U,SACf,MAAO,IAAI2G,SAAQgO,QAAQ1W,KAAM0W,QAAQ7K,MAAO1D,SAAS7J,KAAMoY,QAAQ9N,UAAW8N,QAAQnO,WAAYmO,QAAQqrC,gBAAiBrrC,QAAQ/N,gBAO3IwoB,UAAUtyB,UAAUijD,eAKpB,SAAUuwB,UAAWtwE,SAAW,MAAOswE,YAMvClhD,UAAUtyB,UAAU+8C,UAKpB,SAAU9sC,KAAM/M,SAAW,MAAO+M,OAMlCqiB,UAAUtyB,UAAUmjD,aAKpB,SAAUuwB,QAASxwE,SAAW,MAAOwwE,UAMrCphD,UAAUtyB,UAAU4iD,eAKpB,SAAUwpB,IAAKlpE,SAEX,MADAzD,MAAK+yB,YAAa,EACC,UAAZ45C,IAAItmE,KAAmB2sB,kBAAkB25C,IAAK3sE,KAAK0yB,QACtDgB,mBAAmBi5C,IAAK3sE,KAAK0yB,SAOrCG,UAAUtyB,UAAU+iD,mBAKpB,SAAUixB,QAAS9wE,SACf,KAAM,IAAIc,OAAM,0BAEbsuB,aAuDPi1E,mBACAC,QAAS,EACTC,aAAc,EACdC,UAAW,EAEfH,mBAAkBA,kBAAkBC,SAAW,UAC/CD,kBAAkBA,kBAAkBE,cAAgB,eACpDF,kBAAkBA,kBAAkBG,WAAa,WAIjD,IAAIC,eAA+B,WAC/B,QAASA,eAAcxmG,KAAMkT,WAAYvO,KAAM4D,YAC3CjK,KAAK0B,KAAOA,KACZ1B,KAAK4U,WAAaA,WAClB5U,KAAKqG,KAAOA,KACZrG,KAAKiK,WAAaA,WAClBjK,KAAKmoG,UAAYnoG,KAAKqG,OAASyhG,kBAAkBE,aACjDhoG,KAAKu9B,YAAcv9B,KAAKqG,OAASyhG,kBAAkBG,UAEvD,MAAOC,kBAKPE,cAA+B,WAC/B,QAASA,eAAcC,YAAa7jC,qBAAsB+pB,gBAAiBvvD,MAAOspE,eAC9E,GAAI79D,OAAQzqC,IACZA,MAAKqoG,YAAcA,YACnBroG,KAAKwkE,qBAAuBA,qBAC5BxkE,KAAKuuF,gBAAkBA,gBACvBvuF,KAAKsoG,cAAgBA,cACrBtoG,KAAKuoG,YAAc,GAAI/+E,KACvBxpB,KAAKwoG,WAAa,GAAIh/E,KACtBwV,MAAMl4B,QAAQ,SAAU44B,MAAQ,MAAO+K,OAAM89D,YAAY9nF,IAAIif,KAAKh+B,KAAMg+B,QA8iB5E,MAziBA0oE,eAAc7nG,UAAUkoG,aAGxB,WAAc,MAAO/kG,OAAM8jB,KAAKxnB,KAAKwoG,WAAWxmG,WAOhDomG,cAAc7nG,UAAUmoG,gCAMxB,SAAUxZ,QAASyZ,gBAAiB1+F,YAChC,GAAIwgC,OAAQzqC,IACZ,IAAIkvF,QAAQnwC,eAAgB,CACxB,GAAqB6pD,gBAUrB,OATApoG,QAAOm3B,KAAKu3D,QAAQnwC,gBAAgBj4C,QAAQ,SAAUgtB,UAClD,GAAqBlf,YAAas6E,QAAQnwC,eAAejrB,SAC/B,iBAAflf,YACP61B,MAAMo+D,qBAAqB/0E,SAAUlf,YAAY,EAAM3K,cAAgB2+F,cAGvEn+D,MAAMozB,aAAa,uCAA0C/pC,SAAW,8DAAkElf,WAAa,YAAgBA,YAAa,IAAK3K,cAG1L2+F,aAAa/iG,IAAI,SAAUmqB,MAAQ,MAAOya,OAAMq+D,yBAAyBH,gBAAiB34E,QAErG,MAAO,OAOXo4E,cAAc7nG,UAAUwoG,6BAKxB,SAAU7Z,QAASjlF,YACf,GAAIwgC,OAAQzqC,IACZ,IAAIkvF,QAAQpuC,cAAe,CACvB,GAAqBkoD,qBAUrB,OATAxoG,QAAOm3B,KAAKu3D,QAAQpuC,eAAeh6C,QAAQ,SAAUgtB,UACjD,GAAqBlf,YAAas6E,QAAQpuC,cAAchtB,SAC9B,iBAAflf,YACP61B,MAAMw+D,WAAWn1E,SAAUlf,WAAY3K,cAAgB++F,mBAGvDv+D,MAAMozB,aAAa,+BAAkC/pC,SAAW,8DAAkElf,WAAa,YAAgBA,YAAa,IAAK3K,cAGlL++F,kBAEX,MAAO,OAOXZ,cAAc7nG,UAAU49D,mBAKxB,SAAU56D,MAAO0G,YACb,GAAqBi/F,YAAaj/F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAyB7G,KAAKqoG,YAAYlqC,mBAAmB56D,MAAO2lG,WAAYlpG,KAAKwkE,qBAI1G,OAHI39D,MACA7G,KAAKmpG,8BAA8BtiG,IAAI6rB,OAAQzoB,YACnDjK,KAAKopG,YAAYviG,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADAvZ,MAAK69D,aAAa,GAAKtkD,EAAGtP,YACnBjK,KAAKqoG,YAAY9pC,qBAAqB,QAAS2qC,cAY9Dd,cAAc7nG,UAAU8oG,2BASxB,SAAUprC,YAAa16D,MAAO0G,WAAYq/F,qBAAsBC,YAAaC,YAEzE,IAAK,GADgBnyC,UAAWr3D,KAAKypG,uBAAuBxrC,YAAa16D,MAAO0G,YACtDe,EAAI,EAAGA,EAAIqsD,SAASt1D,OAAQiJ,IAAK,CACvD,GAAqBysD,SAAUJ,SAASrsD,EACpCysD,SAAQ6E,SACRktC,WAAWxiG,KAAK,GAAIo3C,aAAYqZ,QAAQvjD,IAAKujD,QAAQ/1D,KAAMuI,aAEtDwtD,QAAQ7iD,WACb5U,KAAK0pG,kBAAkBjyC,QAAQvjD,IAAKujD,QAAQ7iD,WAAY3K,WAAYq/F,qBAAsBC,cAG1FD,qBAAqBtiG,MAAMywD,QAAQvjD,IAAK,KACxClU,KAAK2pG,iBAAiBlyC,QAAQvjD,IAAK,KAAMjK,WAAYq/F,qBAAsBC,gBAUvFnB,cAAc7nG,UAAUkpG,uBAMxB,SAAUxrC,YAAa16D,MAAO0G,YAC1B,GAAIwgC,OAAQzqC,KACSkpG,WAAaj/F,WAAWD,MAAM/D,UACnD,KACI,GAAqB2jG,gBAAiB5pG,KAAKqoG,YAAYrqC,sBAAsBC,YAAa16D,MAAO2lG,WAQjG,OAPAlpG,MAAKmpG,8BAA8BS,eAAel3E,OAAQzoB,YAC1D2/F,eAAe5sC,iBAAiBl2D,QAAQ,SAAU2wD,SAC1CA,QAAQ7iD,YACR61B,MAAM2+D,YAAY3xC,QAAQ7iD,WAAY3K,cAG9C2/F,eAAe70E,SAASjuB,QAAQ,SAAU+iG,SAAWp/D,MAAMozB,aAAagsC,QAAS5/F,WAAYw4D,gBAAgBC,WACtGknC,eAAe5sC,iBAE1B,MAAwBzjD,GAEpB,MADAvZ,MAAK69D,aAAa,GAAKtkD,EAAGtP;+CAYlCm+F,cAAc7nG,UAAUopG,iBAQxB,SAAUjoG,KAAM6B,MAAO0G,WAAYq/F,qBAAsBC,aACjD51E,kBAAkBjyB,OAClBA,KAAOA,KAAKyE,UAAU,GAClB5C,OACAvD,KAAK69D,aAAa,8LAC6F5zD,WAAYw4D,gBAAgBE,OAE/I3iE,KAAK8pG,gBAAgBpoG,KAAM6B,MAAO0G,WAAYq/F,qBAAsBC,cAGpEA,YAAYviG,KAAK,GAAIkhG,eAAcxmG,KAAM1B,KAAKqoG,YAAY9pC,qBAAqBh7D,MAAO,IAAKukG,kBAAkBE,aAAc/9F,cAYnIm+F,cAAc7nG,UAAUsoG,qBASxB,SAAUnnG,KAAMkT,WAAYytB,OAAQp4B,WAAYq/F,qBAAsBC,aAClE,GAAqBQ,kBAAkB,CACnCroG,MAAK6c,WA/OS,aAgPdwrF,iBAAkB,EAClBroG,KAAOA,KAAKyE,UAjPE,WAiP4BpE,SAErC4xB,kBAAkBjyB,QACvBqoG,iBAAkB,EAClBroG,KAAOA,KAAKyE,UAAU,IAEtB4jG,gBACA/pG,KAAK8pG,gBAAgBpoG,KAAMkT,WAAY3K,WAAYq/F,qBAAsBC,aAGzEvpG,KAAK0pG,kBAAkBhoG,KAAM1B,KAAKgqG,cAAcp1F,WAAYytB,OAAQp4B,YAAaA,WAAYq/F,qBAAsBC,cAW3HnB,cAAc7nG,UAAU0pG,2BAQxB,SAAUvoG,KAAM6B,MAAO0G,WAAYq/F,qBAAsBC,aACrD,GAAqB/mF,MAAOxiB,KAAKm+D,mBAAmB56D,MAAO0G,WAC3D,SAAIuY,OACAxiB,KAAK0pG,kBAAkBhoG,KAAM8gB,KAAMvY,WAAYq/F,qBAAsBC,cAC9D,IAYfnB,cAAc7nG,UAAUmpG,kBAQxB,SAAUhoG,KAAMmF,IAAKoD,WAAYq/F,qBAAsBC,aACnDD,qBAAqBtiG,MAAMtF,KAAyBmF,IAAW,SAC/D0iG,YAAYviG,KAAK,GAAIkhG,eAAcxmG,KAAMmF,IAAKihG,kBAAkBC,QAAS99F,cAU7Em+F,cAAc7nG,UAAUupG,gBAQxB,SAAUpoG,KAAMkT,WAAY3K,WAAYq/F,qBAAsBC,aAI1D,GAAqB1iG,KAAM7G,KAAKgqG,cAAcp1F,YAAc,aAAa,EAAO3K,WAChFq/F,sBAAqBtiG,MAAMtF,KAAyBmF,IAAW,SAC/D0iG,YAAYviG,KAAK,GAAIkhG,eAAcxmG,KAAMmF,IAAKihG,kBAAkBG,UAAWh+F,cAQ/Em+F,cAAc7nG,UAAUypG,cAMxB,SAAUzmG,MAAO2mG,cAAejgG,YAC5B,GAAqBi/F,YAAaj/F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAMqjG,cACvBlqG,KAAKqoG,YAAY3qC,mBAAmBn6D,MAAO2lG,WAAYlpG,KAAKwkE,sBAC5DxkE,KAAKqoG,YAAY7qC,aAAaj6D,MAAO2lG,WAAYlpG,KAAKwkE,qBAI1D,OAHI39D,MACA7G,KAAKmpG,8BAA8BtiG,IAAI6rB,OAAQzoB,YACnDjK,KAAKopG,YAAYviG,IAAKoD,YACfpD,IAEX,MAAwB0S,GAEpB,MADAvZ,MAAK69D,aAAa,GAAKtkD,EAAGtP,YACnBjK,KAAKqoG,YAAY9pC,qBAAqB,QAAS2qC,cAQ9Dd,cAAc7nG,UAAUuoG,yBAKxB,SAAUH,gBAAiBwB,WACvB,GAAIA,UAAU5sE,YACV,MAAO,IAAIogB,yBAAwBwsD,UAAUzoG,KAAMy5B,oBAAoBE,UAAW1G,gBAAgBC,KAAMu1E,UAAUv1F,WAAY,KAAMu1F,UAAUlgG,WAElJ,IAAqBuxB,MAAO,KACP4uE,gBAA+B,GAC/BC,kBAAoB,KACpBpyF,MAAQkyF,UAAUzoG,KAAK+H,MAnXrB,KAoXF6gG,qBAAoC,EAEzD,IAAIryF,MAAMlW,OAAS,EACf,GAtXW,QAsXPkW,MAAM,GAAwB,CAC9BoyF,kBAAoBpyF,MAAM,GAC1BjY,KAAKuqG,iCAAiCF,kBAAmBF,UAAUlgG,YAAY,GAC/EqgG,iBAAmB12E,6BAA6B5zB,KAAKuuF,gBAAiBoa,gBAAiB0B,mBAAmB,EAC1G,IAAqBG,gBAAiBH,kBAAkBlnG,QAAQ,IAChE,IAAIqnG,gBAAkB,EAAG,CACrB,GAAqBC,IAAKJ,kBAAkBlkG,UAAU,EAAGqkG,gBACpC9yC,OAAS2yC,kBAAkBlkG,UAAUqkG,eAAiB,EAC3EH,mBAAoBv9F,eAAe29F,GAAI/yC,QAE3C0yC,YAAcjvE,oBAAoBx6B,cA/X/B,SAiYEsX,MAAM,IACXoyF,kBAAoBpyF,MAAM,GAC1BmyF,YAAcjvE,oBAAoBG,MAClCgvE,kBAAoB31E,gBAAgBC,OAnYjC,SAqYE3c,MAAM,KACXujB,KAAOvjB,MAAMlW,OAAS,EAAIkW,MAAM,GAAK,KACrCoyF,kBAAoBpyF,MAAM,GAC1BmyF,YAAcjvE,oBAAoBI,MAClC+uE,kBAAoB31E,gBAAgBrmB,OAU5C,OAN0B,QAAtB+7F,oBACAA,kBAAoBrqG,KAAKuuF,gBAAgBuT,kBAAkBqI,UAAUzoG,MACrE4oG,iBAAmB12E,6BAA6B5zB,KAAKuuF,gBAAiBoa,gBAAiB0B,mBAAmB,GAC1GD,YAAcjvE,oBAAoBC,SAClCp7B,KAAKuqG,iCAAiCF,kBAAmBF,UAAUlgG,YAAY,IAE5E,GAAI0zC,yBAAwB0sD,kBAAmBD,YAAaE,iBAAiB,GAAIH,UAAUv1F,WAAY4mB,KAAM2uE,UAAUlgG,aAUlIm+F,cAAc7nG,UAAU0oG,WAQxB,SAAUvnG,KAAMkT,WAAY3K,WAAYq/F,qBAAsBoB,cACtD/2E,kBAAkBjyB,OAClBA,KAAOA,KAAKwjC,OAAO,GACnBllC,KAAK2qG,qBAAqBjpG,KAAMkT,WAAY3K,WAAYygG,eAGxD1qG,KAAK4qG,YAAYlpG,KAAMkT,WAAY3K,WAAYq/F,qBAAsBoB,eAU7EtC,cAAc7nG,UAAUoqG,qBAOxB,SAAUjpG,KAAMkT,WAAY3K,WAAYygG,cACpC,GAAqBxpD,SAAUl+C,cAActB,MAAOA,KAAM,KACrCs2C,UAAYkJ,QAAQ,GACpB1jB,MAAQ0jB,QAAQ,GAAGxzC,aACxC,IAAI8vB,MACA,OAAQA,OACJ,IAAK,QACL,IAAK,OACD,GAAqB32B,KAAM7G,KAAK6qG,aAAaj2F,WAAY3K,WACzDygG,cAAa1jG,KAAK,GAAI62C,eAAc7F,UAAW,KAAMxa,MAAO32B,IAAKoD,YACjE,MACJ,SACIjK,KAAK69D,aAAa,8CAAiDrgC,MAAQ,WAAewa,UAAY,yCAA2C/tC,gBAKzJjK,MAAK69D,aAAa,wCAA0C7lB,UAAY,4EAA6E/tC,aAW7Jm+F,cAAc7nG,UAAUqqG,YAQxB,SAAUlpG,KAAMkT,WAAY3K,WAAYq/F,qBAAsBoB,cAE1D,GAAIrxF,IAAKxW,aAAanB,MAAwB,KAAUA,OAAQoS,OAASuF,GAAG,GAAI2+B,UAAY3+B,GAAG,GAC1ExS,IAAM7G,KAAK6qG,aAAaj2F,WAAY3K,WACzDq/F,sBAAqBtiG,MAAuB,KAA6BH,IAAW,SACpF6jG,aAAa1jG,KAAK,GAAI62C,eAAc7F,UAAWlkC,OAAQ,KAAMjN,IAAKoD,cAStEm+F,cAAc7nG,UAAUsqG,aAKxB,SAAUtnG,MAAO0G,YACb,GAAqBi/F,YAAaj/F,WAAWD,MAAM/D,UACnD,KACI,GAAqBY,KAAM7G,KAAKqoG,YAAYnrC,YAAY35D,MAAO2lG,WAAYlpG,KAAKwkE,qBAIhF,OAHI39D,MACA7G,KAAKmpG,8BAA8BtiG,IAAI6rB,OAAQzoB,aAE9CpD,KAAOA,IAAIA,cAAe0vB,YAC3Bv2B,KAAK69D,aAAa,oCAAqC5zD,YAChDjK,KAAKqoG,YAAY9pC,qBAAqB,QAAS2qC,cAE1DlpG,KAAKopG,YAAYviG,IAAKoD,YACfpD,KAEX,MAAwB0S,GAEpB,MADAvZ,MAAK69D,aAAa,GAAKtkD,EAAGtP,YACnBjK,KAAKqoG,YAAY9pC,qBAAqB,QAAS2qC,cAS9Dd,cAAc7nG,UAAUs9D,aAMxB,SAAU1sD,QAASlH,WAAYmhC,WACb,KAAVA,QAAoBA,MAAQq3B,gBAAgBE,OAChD3iE,KAAKsoG,cAActhG,KAAK,GAAI47D,YAAW34D,WAAYkH,QAASi6B,SAOhEg9D,cAAc7nG,UAAU4oG,8BAKxB,SAAUz2E,OAAQzoB,YACd,IAAK,GAAIpI,IAAK,EAAGipG,SAAWp4E,OAAQ7wB,GAAKipG,SAAS/oG,OAAQF,KAAM,CAC5D,GAAIqmB,UAAW4iF,SAASjpG,GACxB7B,MAAK69D,aAAa31C,SAAS/W,QAASlH,cAQ5Cm+F,cAAc7nG,UAAU6oG,YAKxB,SAAUviG,IAAKoD,YACX,GAAIwgC,OAAQzqC,IACZ,IAAI6G,IAAK,CACL,GAAqBkkG,WAAY,GAAIC,cACrCnkG,KAAID,MAAMmkG,WACVA,UAAU/rE,MAAMl4B,QAAQ,SAAUD,IAAKokG,UACnC,GAAqBzW,UAAW/pD,MAAM89D,YAAY/nF,IAAIyqF,SACjDzW,UAID/pD,MAAM+9D,WAAW/nF,IAAIwqF,SAAUzW,UAH/B/pD,MAAMozB,aAAa,aAAeotC,SAAW,uBAAwB,GAAIp1F,iBAAgB5L,WAAWD,MAAM43D,OAAO/6D,IAAI+D,KAAKZ,OAAQC,WAAWD,MAAM43D,OAAO/6D,IAAI+D,KAAKT,WAcnLi+F,cAAc7nG,UAAUgqG,iCAMxB,SAAUz2E,SAAU7pB,WAAYihG,QAC5B,GAAqBC,QAASD,OAASlrG,KAAKuuF,gBAAgByT,kBAAkBluE,UAC1E9zB,KAAKuuF,gBAAgBwT,iBAAiBjuE,SACtCq3E,QAAO9mG,OACPrE,KAAK69D,aAAgCstC,OAAW,IAAGlhG,WAAYw4D,gBAAgBE,QAGhFylC,iBAEP4C,cAA+B,SAAUtgG,QAEzC,QAASsgG,iBACL,GAAIvgE,OAAmB,OAAX//B,QAAmBA,OAAOzI,MAAMjC,KAAM8B,YAAc9B,IAEhE,OADAyqC,OAAMzL,MAAQ,GAAIxV,KACXihB,MAkBX,MAtBAxqC,WAAU+qG,cAAetgG,QAWzBsgG,cAAczqG,UAAUkU,UAKxB,SAAU5N,IAAKpD,SAIX,MAHAzD,MAAKg/B,MAAMve,IAAI5Z,IAAInF,KAAMmF,KACzBA,IAAI6N,IAAI9N,MAAM5G,MACdA,KAAK6J,SAAShD,IAAIjF,KAAM6B,SACjB,MAEJunG,eACTxuC,qBAsCE4uC,iBAAmB,2GAsBnBv0E,iBAAmB,WAInBf,WAAa,QACbu1E,kBAAoBp3E,YAAYC,MAAM,KAAK,GAC3C4C,qCAAuC,kEAEvC9B,iBAcAs2E,mBAAoC,SAAU5gG,QAE9C,QAAS4gG,oBAAmBn6F,QAASvG,KAAMwgC,OACvC,MAAO1gC,QAAOyrC,KAAKn2C,KAAM4K,KAAMuG,QAASi6B,QAAUprC,KAEtD,MAJAC,WAAUqrG,mBAAoB5gG,QAIvB4gG,oBACT1oC,YACE2oC,oBAAqC,WACrC,QAASA,qBAAoBC,YAAaC,UAAW/4E,QACjD1yB,KAAKwrG,YAAcA,YACnBxrG,KAAKyrG,UAAYA,UACjBzrG,KAAK0yB,OAASA,OAElB,MAAO64E,wBAEP57D,eAAgC,WAChC,QAASA,gBAAeqkB,QAASqC,WAAYgyC,YAAa9Z,gBAAiBx6B,YAAaisB,SAAU0rB,YAC9F1rG,KAAKg0D,QAAUA,QACfh0D,KAAKq2D,WAAaA,WAClBr2D,KAAKqoG,YAAcA,YACnBroG,KAAKuuF,gBAAkBA,gBACvBvuF,KAAK+zD,YAAcA,YACnB/zD,KAAKggF,SAAWA,SAChBhgF,KAAK0rG,WAAaA,WAgLtB,MApKA/7D,gBAAepvC,UAAU2zB,MAUzB,SAAU5J,UAAW2U,SAAU5V,WAAY2V,MAAO8iB,QAASvB,YAAavR,qBACpE,GAAqBroC,QAAS3G,KAAK2rG,SAASrhF,UAAW2U,SAAU5V,WAAY2V,MAAO8iB,QAASvB,YAAavR,qBACrFja,SAA8BpuB,OAAc,OAAE8f,OAAO,SAAUyB,UAAY,MAAOA,UAASkjB,QAAUq3B,gBAAgBC,UAAYj8C,OAAOqO,cA9D7H,4EA8D8KgC,wCACzLpE,OAA4B/rB,OAAc,OAAE8f,OAAO,SAAUyB,UAAY,MAAOA,UAASkjB,QAAUq3B,gBAAgBE,OAIxI,IAHI5tC,SAAShzB,OAAS,GAClB/B,KAAKggF,SAASvJ,KAAK,6BAA+B1hD,SAASjvB,KAAK,OAEhE4sB,OAAO3wB,OAAS,EAAG,CAEnB,KAAMyC,aAAY,2BADiBkuB,OAAO5sB,KAAK,MACa4sB,QAEhE,OAASuM,SAA6Bt4B,OAAmB,YAAGq4B,MAA0Br4B,OAAiB,YAY3GgpC,eAAepvC,UAAUorG,SAUzB,SAAUrhF,UAAW2U,SAAU5V,WAAY2V,MAAO8iB,QAASvB,YAAavR,qBACpE,GAAqB48D,iBAAsC,gBAAb3sE,UAA2Cj/B,KAAiB,YAAEk0B,MAAM+K,SAAUshB,aAAa,EAAMvgD,KAAK6rG,uBAAuBvhF,YACvK2U,QAIJ,OAHK+P,uBACD48D,gBAAkBv5E,kBAAkBu5E,kBAEjC5rG,KAAK8rG,aAAa9rG,KAAK+rG,WAAWH,iBAAkBthF,UAAWjB,WAAY2V,MAAO8iB,UAU7FnS,eAAepvC,UAAUurG,aAQzB,SAAUx5E,kBAAmBhI,UAAWjB,WAAY2V,MAAO8iB,SACvD,GAAqBn7C,QACA+rB,OAASJ,kBAAkBI,OAC3B+4E,YACrB,IAAIn5E,kBAAkBG,UAAU1wB,OAAS,EAAG,CACxC,GAAqBiqG,gBAAiB71E,wBAAwB9M,YACzC4iF,UAAY91E,wBAAwB6I,OACpCktE,oBAAsB,GAAIvV,qBAAoB32F,KAAKq2D,WAAY/rC,WAC/DnU,wBAAuC,EACxDmU,WAAU2U,UAAY3U,UAAU2U,SAAS0hB,gBACzCxqC,qBACInM,MAAOsgB,UAAU2U,SAAS0hB,cAAc,GACxCx2C,IAAKmgB,UAAU2U,SAAS0hB,cAAc,IAG9C,IAAqBwrD,eAAgB,GAAI/D,eAAcpoG,KAAKqoG,YAA8B,oBAAyBroG,KAAKuuF,gBAAiB0d,UAAWv5E,QAC/H05E,aAAe,GAAIC,sBAAqBrsG,KAAKq2D,WAAYr2D,KAAKg0D,QAASk4C,oBAAqBF,eAAgBG,cAAensG,KAAKuuF,gBAAiBzsC,QAASpvB,OAC/K/rB,QAASkD,SAASuiG,aAAc95E,kBAAkBG,UAAW65E,uBAC7D55E,OAAO1rB,KAAK/E,MAAMywB,OAAQw5E,oBAAoBx5E,QAC9C+4E,UAAUzkG,KAAK/E,MAAMwpG,UAAWU,cAAc1D,oBAG9C9hG,UAGJ,OADA3G,MAAKusG,wCAAwC5lG,OAAQ+rB,QACjDA,OAAO3wB,OAAS,EACT,GAAIwpG,qBAAoB5kG,OAAQ8kG,UAAW/4E,SAElD1yB,KAAK0rG,YACL1rG,KAAK0rG,WAAW5kG,QAAQ,SAAUomC,WAAavmC,OAASF,iBAAiBymC,UAAWvmC,UAEjF,GAAI4kG,qBAAoB5kG,OAAQ8kG,UAAW/4E,UAOtDid,eAAepvC,UAAUwrG,WAKzB,SAAUz5E,kBAAmBk6E,YACV,KAAXA,SAAqBA,QAAS,EAClC,IAAqB95E,QAASJ,kBAAkBI,MAChD,IAAqB,GAAjBA,OAAO3wB,QAAeyqG,OAAQ,CAE9B,GAAqBC,iBAAkB95E,YAAYL,kBAAkBG,UACrEC,QAAO1rB,KAAK/E,MAAMywB,OAAQ+5E,gBAAgB/5E,QAC1CJ,kBAAoB,GAAIC,iBAAgBk6E,gBAAgB3iG,MAAO4oB,QAEnE,MAAOJ,oBAMXqd,eAAepvC,UAAUsrG,uBAIzB,SAAUvhF,WACN,GAAIA,UAAU2U,SACV,MAAO0kB,qBAAoBC,UAAUt5B,UAAU2U,SAAS0hB,gBAWhEhR,eAAepvC,UAAUgsG,wCAMzB,SAAU5lG,OAAQ+rB,QACd,GAAqBg6E,sBACrB/lG,QAAO8f,OAAO,SAAUrO,SAAW,QAAS,QAA6BmmC,aACpEz3C,QAAQ,SAAUsR,SACnB,MAAO,SAA6BmmC,WAAWz3C,QAAQ,SAAUS,WAC7D,GAAqB7F,MAAO6F,UAAU7F,IACtC,IAAIgrG,mBAAmBvpG,QAAQzB,MAAQ,EACnCgrG,mBAAmB1lG,KAAKtF,UAEvB,CACD,GAAqBwmB,UAAW,GAAIojF,oBAAmB,eAAkB5pG,KAAO,6BAA+B6F,UAAU0C,WAAYw4D,gBAAgBE,MACrJjwC,QAAO1rB,KAAKkhB,gBAKrBynB,kBAEP08D,qBAAsC,WACtC,QAASA,sBAAqBlrF,UAAW/L,OAAQ82F,oBAAqB7iF,WAAYsjF,eAAgBpe,gBAAiBqe,SAAUtE,eACzH,GAAI79D,OAAQzqC,IACZA,MAAKmhB,UAAYA,UACjBnhB,KAAKoV,OAASA,OACdpV,KAAKksG,oBAAsBA,oBAC3BlsG,KAAK2sG,eAAiBA,eACtB3sG,KAAKuuF,gBAAkBA,gBACvBvuF,KAAK4sG,SAAWA,SAChB5sG,KAAKsoG,cAAgBA,cACrBtoG,KAAK6sG,gBAAkB,GAAIhhB,iBAC3B7rF,KAAK8sG,gBAAkB,GAAItjF,KAC3BxpB,KAAK+sG,eAAiB,EAEtB/sG,KAAK6qB,oBAAsBqhF,oBAAoB5hF,UAAUE,YAAYzoB,OAAS,EAC9EsnB,WAAWviB,QAAQ,SAAU2iB,UAAWpkB,OACpC,GAAqBurB,UAAWqD,YAAYC,MAAyBzK,UAAmB,SACxFghB,OAAMoiE,gBAAgBtgB,eAAe37D,SAAUnH,WAC/CghB,MAAMqiE,gBAAgBrsF,IAAIgJ,UAAWpkB,SAyoB7C,MAjoBAgnG,sBAAqB9rG,UAAU4iD,eAK/B,SAAUu5B,UAAWj5E,SAAW,MAAO,OAMvC4oG,qBAAqB9rG,UAAU+iD,mBAK/B,SAAUq5B,cAAel5E,SAAW,MAAO,OAM3C4oG,qBAAqB9rG,UAAU+8C,UAK/B,SAAU9sC,KAAM2hC,QACZ,GAAqBkL,gBAAoClL,OAAO66D,mBAAmB3B,mBAC9D4B,YAAc96E,YAAY3hB,KAAKjN,OAC/Bif,KAAOxiB,KAAK2sG,eAAexuC,mBAAmB8uC,YAAgCz8F,KAAgB,WACnH,OAAOgS,MAAO,GAAI+6B,cAAa/6B,KAAM66B,eAAmC7sC,KAAgB,YACpF,GAAI4sC,SAAQ6vD,YAAa5vD,eAAmC7sC,KAAgB,aAOpF67F,qBAAqB9rG,UAAUijD,eAK/B,SAAUuwB,UAAWtwE,SACjB,MAAO,IAAIg6C,SAAQs2B,UAAUryE,KAAMqyE,UAAUxwE,MAAOwwE,UAAU9pE,aAOlEoiG,qBAAqB9rG,UAAUmjD,aAK/B,SAAUuwB,QAASxwE,SAAW,MAAO,OAMrC4oG,qBAAqB9rG,UAAUi+C,aAK/B,SAAUpmC,QAAS+5B,QACf,GAAI1H,OAAQzqC,KACSktG,gBAAkBltG,KAAK6qB,oBACvB5c,SAAWmK,QAAQ1W,KACnBw0D,iBAAmBjpD,gBAAgBmL,QACxD,IAAI89C,iBAAiB7vD,OAAS6H,qBAAqBM,QAC/C0nD,iBAAiB7vD,OAAS6H,qBAAqBI,MAI/C,MAAO,KAEX,IAAI4nD,iBAAiB7vD,OAAS6H,qBAAqBS,YAC/CpD,qBAAqB2qD,iBAAiB/oD,UAGtC,MAAO,KAEX,IAAqBggG,mBACAC,2BACAC,0BACAC,eACAC,UACAC,mCACAC,0BACAC,uBACAC,oBAAqB,EACrBpgG,SACAqgG,kBAAoBp3E,WAAWpe,QAASpY,KAAKoV,OAAOshB,qBAAsB,SAAU/zB,EAAGiI,MAAQ,MAAO6/B,OAAMozB,aAAal7D,EAAGiI,KAAM63D,gBAAgBC,UACvKtqD,SAAQ7K,MAAMzG,QAAQ,SAAU0G,MAC5B,GACqBqgG,wBACA5vC,YAFA6vC,WAAarjE,MAAMsjE,WAAWH,kBAAmBpgG,KAAM2/F,eAAgBC,wBAAyBG,OAAQF,uBAAwBC,aAGhIU,eAAiBvjE,MAAMwjE,wBAAwBzgG,KAAK9L,KACrE+oC,OAAMr1B,OAAOshB,sBA7VT,YA6ViCs3E,gBACrCvjE,MAAMozB,aAzVkB,4EAyV8BrwD,KAAKvD,WAAYw4D,gBAAgBC,SACvFmrC,uBAAyBrgG,KAAKjK,OAEzByqG,eAAezvF,WAhWT,OAiWXsvF,uBAAyBrgG,KAAKjK,MAC9B06D,YAAc+vC,eAAe7nG,UAlWlB,IAkWiDpE,QAAU,IAE1E,IAAqBmsG,oBAA+C,MAA1BL,sBACtCK,sBACIP,oBACAljE,MAAMozB,aAAa,mHAAoHrwD,KAAKvD,YAEhJ0jG,oBAAqB,EACrBljE,MAAMkiE,eAAetD,2BAA4C,YAAkC,uBAA4B77F,KAAKvD,WAAYwjG,uBAAwBD,gCAAiCE,sBAExMI,YAAeI,qBAEhB3gG,MAAMvG,KAAKyjC,MAAM+Y,eAAeh2C,KAAM,OACtC2/F,eAAenmG,MAAMwG,KAAK9L,KAAM8L,KAAKjK,UAG7C,IAAqB4qG,oBAAqB94E,yBAAyBpnB,SAAUk/F,gBACzE9zF,GAAKrZ,KAAKouG,iBAAiBpuG,KAAK6sG,gBAAiBsB,oBAAqBE,eAAiBh1F,GAAGgQ,WAAYilF,aAAej1F,GAAGi1F,aACvG/vD,cACAgwD,wBAA0B,GAAI9mF,KAC9B+mF,cAAgBxuG,KAAKyuG,qBAAqBb,kBAAmBx1F,QAAQ1W,KAAM2sG,eAAgBjB,wBAAyBC,uBAA2Cj1F,QAAmB,WAAGmmC,WAAYgwD,yBACjMG,aAAe1uG,KAAK2uG,2BAA2Bv2F,QAAQ1W,KAAM0rG,wBAAyBmB,yBACtFK,WAAaz8D,OAAOy7D,mBAAqBD,mBACzCkB,gBAAkB,GAAIjY,wBAAuB52F,KAAKksG,oBAAwC/5D,OAAuB,gBAAGy8D,WAAYJ,cAAejhG,MAAOgxC,WAAYqvD,kBAAmBV,gBAAoC90F,QAAmB,YAC5O9N,SAAWT,SAASqsD,iBAAiB7oD,YAAcyhG,qBAAuB9uG,KAAMoY,QAAQ9N,SAAUykG,eAAetuG,OAAOmtG,kBAAmBY,cAAeZ,kBAAuCz7D,OAAuB,gBAAI08D,iBACjPA,iBAAgB5W,cAEhB,IAIqB+W,eAJAC,mBAAmD,MAA9B/4C,iBAAiB5oD,UACvD2mB,YAAYC,MAAMgiC,iBAAiB5oD,WAAW,GAC9C6gG,mBACiB9wD,eAAoClL,OAAO66D,mBAAmBiC,mBAEnF,IAAI/4C,iBAAiB7vD,OAAS6H,qBAAqBE,WAC3CgK,QAAQ9N,WAAa8N,QAAQ9N,SAASm+E,MAAMxyD,mBAC5Cj2B,KAAK69D,aAAa,4CAAgEzlD,QAAmB,YAEzG42F,cAAgB,GAAIj0E,cAAa/6B,KAAK+sG,iBAAkBY,mBAAsC,KAAWtwD,eAAmCjlC,QAAmB,gBAE9J,IAAIw1F,kBACL5tG,KAAKkvG,sCAAsCV,cAAejB,QAC1DvtG,KAAKmvG,gDAAgDX,cAAeE,aAAiCt2F,QAAmB,YACxH42F,cAAgB,GAAIp0E,qBAAoBrtB,MAAOggG,OAAQhvD,WAAY+uD,YAAauB,gBAAgBO,yBAA0BP,gBAAgBxW,mBAAoBwW,gBAAgBvX,4BAA6BuX,gBAAgB/xE,aAAcxyB,SAAUqjG,mBAAsC,KAAWtwD,eAAmCjlC,QAAmB,gBAEzV,CACDpY,KAAKqvG,qBAAqBf,aAAcl2F,SACxCpY,KAAKsvG,wBAAwBd,cAAkCp2F,QAAmB,WAClF,IAAqBm3F,kBAAmB5B,mBAAqB,KAAOx7D,OAAO66D,mBAAmBiC,mBAC9FD,eAAgB,GAAIl0E,YAAW7sB,SAAUV,MAAOmhG,aAAcnB,OAAQhvD,WAAYswD,gBAAgBO,yBAA0BP,gBAAgBxW,mBAAoBwW,gBAAgBvX,4BAA6BuX,gBAAgB/xE,aAAcxyB,SAAUqjG,mBAAqB,KAAO4B,iBAAkBn3F,QAAQnO,WAAYmO,QAAQ/N,eAAiB,MAEpV,GAAIsjG,mBAAoB,CACpB,GAAqB6B,yBAA0BxvG,KAAK6qB,oBAC/B4kF,iBAAmBp6E,yBAAyBwB,iBAAkB42E,wBAC/EiC,uBAAyB1vG,KAAKouG,iBAAiBpuG,KAAK6sG,gBAAiB4C,kBAAkBpmF,WACtEsmF,gCAAkC,GAAIloF,KACtCmoF,sBAAwB5vG,KAAKyuG,sBAAqB,EAAMr2F,QAAQ1W,KAAMguG,uBAAwBlC,mCAAwDp1F,QAAmB,cAAOu3F,iCAChLE,qBAAuB7vG,KAAK2uG,2BAA2Bv2F,QAAQ1W,KAAM8rG,gCAAiCmC,gCAC3H3vG,MAAKmvG,gDAAgDS,sBAAuBC,qBAAyCz3F,QAAmB,WACxI,IAAqB03F,yBAA0B,GAAIlZ,wBAAuB52F,KAAKksG,oBAAwC/5D,OAAuB,gBAAGA,OAAOy7D,kBAAmBgC,6BAA+B,EAAMJ,wBAA4Cp3F,QAAmB,WAC/Q03F,yBAAwB7X,eACxB+W,cAAgB,GAAIp0E,8BAAgC8yE,oBAAqBoC,wBAAwBV,yBAA0BU,wBAAwBzX,mBAAoByX,wBAAwBxY,4BAA6BwY,wBAAwBhzE,cAAekyE,eAAgB3xD,eAAmCjlC,QAAmB,YAE7U,MAAO42F,gBAYX3C,qBAAqB9rG,UAAUwtG,WAU/B,SAAUH,kBAAmBpgG,KAAM87F,qBAAsBC,YAAamB,aAAcqF,WAAYvG,YAC5F,GAAqB9nG,MAAO1B,KAAKiuG,wBAAwBzgG,KAAK9L,MACzC6B,MAAQiK,KAAKjK,MACbysG,QAAUxiG,KAAKvD,WACfgmG,UAAYvuG,KAAK+J,MAAM2/F,kBACvB0C,YAAa,CAClC,IAAkB,OAAdmC,UAEA,GADAnC,YAAa,EACiB,MAA1BmC,UApdE,GAqdFjwG,KAAK2sG,eAAe9D,qBAAqBoH,UAzctC,GAyc+D1sG,OAAO,EAAOysG,QAAS1G,qBAAsBC,iBAE9G,IAAI0G,UArdJ,GAsdD,GAAIrC,kBAAmB,CACnB,GAAqBlmG,YAAauoG,UA7cnC,EA8cCjwG,MAAKkwG,eAAexoG,WAAYnE,MAAOysG,QAASxG,gBAGhDxpG,MAAK69D,aAAa,oDAAuDmyC,aAG5E,IAAIC,UA5dJ,GA4d2B,CAC5B,GAAqBvoG,YAAauoG,UArd/B,EAsdHjwG,MAAKmwG,gBAAgBzoG,WAAYnE,MAAOysG,QAASD,gBAE5CE,WA9dL,GA+dAjwG,KAAK2sG,eAAe1D,WAAWgH,UAzd5B,GAydqD1sG,MAAOysG,QAAS1G,qBAAsBoB,cAEzFuF,UA/dD,IAgeJjwG,KAAK2sG,eAAe9D,qBAAqBoH,UA5dtC,GA4d+D1sG,OAAO,EAAOysG,QAAS1G,qBAAsBC,aAC/GvpG,KAAKowG,sBAAsBH,UA7dxB,GA6diD1sG,MAAOysG,QAAS1G,qBAAsBoB,eAErFuF,UAjeL,GAkeAjwG,KAAK2sG,eAAehD,iBAAiBjoG,KAAM6B,MAAOysG,QAAS1G,qBAAsBC,aAE5E0G,UAheM,IAieXjwG,KAAK2sG,eAAe9D,qBAAqBoH,UAje9B,GAie+D1sG,OAAO,EAAOysG,QAAS1G,qBAAsBC,aACvHvpG,KAAKowG,sBAAsBH,UAlehB,GAkeiD1sG,MAAOysG,QAAS1G,qBAAsBoB,eAE7FuF,UAleI,GAmeTjwG,KAAK2sG,eAAe9D,qBAAqBoH,UAnehC,GAme+D1sG,OAAO,EAAOysG,QAAS1G,qBAAsBC,aAEhH0G,UAneC,KAoeNjwG,KAAK2sG,eAAe1D,WAAWgH,UApezB,IAoeqD1sG,MAAOysG,QAAS1G,qBAAsBoB,kBAIrGoD,YAAa9tG,KAAK2sG,eAAe1C,2BAA2BvoG,KAAM6B,MAAOysG,QAAS1G,qBAAsBC,YAK5G,OAHKuE,aACD9tG,KAAK2sG,eAAehD,iBAAiBjoG,KAAM6B,MAAOysG,QAAS1G,qBAAsBC,aAE9EuE,YAMXzB,qBAAqB9rG,UAAU0tG,wBAI/B,SAAUv4E,UACN,MAAO,UAAUpqB,KAAKoqB,UAAYA,SAASvvB,UAAU,GAAKuvB,UAS9D22E,qBAAqB9rG,UAAU2vG,eAO/B,SAAUxoG,WAAYnE,MAAO0G,WAAYu/F,YACjC9hG,WAAWvE,QAAQ,MAAQ,GAC3BnD,KAAK69D,aAAa,uCAA0C5zD,YAEhEu/F,WAAWxiG,KAAK,GAAIo3C,aAAY12C,WAAYnE,MAAO0G,cASvDoiG,qBAAqB9rG,UAAU4vG,gBAO/B,SAAUzoG,WAAYnE,MAAO0G,WAAY8lG,YACjCroG,WAAWvE,QAAQ,MAAQ,GAC3BnD,KAAK69D,aAAa,wCAA2C5zD,YAEjE8lG,WAAW/oG,KAAK,GAAIqpG,uBAAsB3oG,WAAYnE,MAAO0G,cAUjEoiG,qBAAqB9rG,UAAU6vG,sBAQ/B,SAAU1uG,KAAMkT,WAAY3K,WAAYq/F,qBAAsBoB,cAC1D1qG,KAAK2sG,eAAe1D,WAAWvnG,KAAO,SAAUkT,WAAa,UAAW3K,WAAYq/F,qBAAsBoB,eAO9G2B,qBAAqB9rG,UAAU6tG,iBAK/B,SAAUvB,gBAAiBsB,oBACvB,GAAI1jE,OAAQzqC,KAISqpB,WAAa,GAAI3lB,OAAM1D,KAAK8sG,gBAAgB5M,MAE5CoO,cAAe,CAKpC,OAJAzB,iBAAgBphG,MAAM0iG,mBAAoB,SAAUv9E,SAAUnH,WAC1DJ,WAA8BohB,MAAMqiE,gBAAgBtsF,IAAIiJ,YAAgBA,UACxE6kF,aAAeA,cAAgB19E,SAASuO,wBAGxC9V,WAAYA,WAAW5C,OAAO,SAAUoD,KAAO,QAASA,MACxDykF,aAAcA,eActBjC,qBAAqB9rG,UAAUkuG,qBAW/B,SAAUb,kBAAmBthG,YAAa+c,WAAY1nB,MAAO0rG,uBAAwBiD,kBAAmBC,iBAAkBC,+BACtH,GAAI/lE,OAAQzqC,KACSywG,kBAAoB,GAAIhpF,KACxB6C,UAA6B,KAC7BkkF,cAAgBnlF,WAAWxjB,IAAI,SAAU4jB,WAC1D,GAAqBxf,YAAa,GAAI4L,iBAAgBy6F,kBAAkBtmG,MAAOsmG,kBAAkBnmG,IAAK,aAAe9C,eAAeoiB,UAAUpjB,MAC1IojB,WAAUE,cACVW,UAAYb,UAEhB,IAAqBinF,wBACA3xD,eAAoCtU,MAAMkiE,eAAejE,gCAAgCj/E,UAAWnd,YAAarC,WAGtI80C,gBAAiBtU,MAAMkmE,yBAAyBrkG,YAAayyC,eAC7D,IAAqBC,YAAgCvU,MAAMkiE,eAAe5D,6BAA6Bt/E,UAAWxf,WAClHwgC,OAAMmmE,6BAA6BnnF,UAAU4U,OAAQ18B,MAAO+uG,oBAAqBF,+BACjFnD,uBAAuBvmG,QAAQ,SAAU+pG,aACJ,IAA5BA,WAAWttG,MAAMxB,QAAgB0nB,UAAUE,aAC3CknF,WAAWC,uBAAuBrnF,cACnC8mF,iBAAiBvpG,KAAK,GAAIi3C,cAAa4yD,WAAWnvG,KAAMuf,wBAAwBwI,UAAUpjB,KAAKkB,WAAYspG,WAAWttG,MAAOstG,WAAW5mG,aACxIwmG,kBAAkBxzE,IAAI4zE,WAAWnvG,QAGzC,IAAqBmpB,qBAAsB4f,MAAM5f,mBAEjD,OADA4f,OAAM5f,qBAAuBpB,UAAUwB,QAAQlpB,OACxC,GAAI+8C,cAAar1B,UAAWinF,oBAAqB3xD,eAAgBC,WAAYn0B,oBAAqB5gB,aAgB7G,OAdAojG,wBAAuBvmG,QAAQ,SAAU+pG,YACrC,GAAIA,WAAWttG,MAAMxB,OAAS,EACrB0uG,kBAAkBh8E,IAAIo8E,WAAWnvG,OAClC+oC,MAAMozB,aAAa,iDAAsDgzC,WAAWttG,MAAQ,IAAMstG,WAAW5mG,gBAGhH,KAAKqgB,UAAW,CACjB,GAAqBymF,UAA4B,IAC7CnD,qBACAmD,SAAW7vF,gCAAgCupB,MAAMtpB,UAAWwM,YAAYsU,cAE5EsuE,iBAAiBvpG,KAAK,GAAIi3C,cAAa4yD,WAAWnvG,KAAMqvG,SAAUF,WAAWttG,MAAOstG,WAAW5mG,gBAGhGukG,eASXnC,qBAAqB9rG,UAAUqwG,6BAO/B,SAAUF,oBAAqBM,WAAYC,0BAA2BT,+BAClE,GAAIE,oBAAqB,CACrB,GAAqBQ,oBAAqB,GAAI1nF,IAC9CwnF,YAAWlqG,QAAQ,SAAUqjG,WACzB,GAAqBruE,WAAYo1E,mBAAmB1wF,IAAI2pF,UAAUzoG,KAC7Do6B,aAAaA,UAAUqsE,WAGxB+I,mBAAmBzwF,IAAI0pF,UAAUzoG,KAAMyoG,aAG/C3pG,OAAOm3B,KAAK+4E,qBAAqB5pG,QAAQ,SAAUqqG,SAC/C,GAAqBC,QAASV,oBAAoBS,SAC7BhH,UAAY+G,mBAAmB1wF,IAAI4wF,OAEpDjH,aACAqG,8BAA8BvzE,IAAIktE,UAAUzoG,MACvC20B,kBAAkB8zE,UAAUv1F,aAC7Bq8F,0BAA0BjqG,KAAK,GAAI23C,2BAA0BwyD,QAAShH,UAAUzoG,KAAMyoG,UAAUv1F,WAAYu1F,UAAUlgG,kBAY1IoiG,qBAAqB9rG,UAAUouG,2BAM/B,SAAUriG,YAAa3K,MAAO4sG,yBAC1B,GAAI9jE,OAAQzqC,KACSqxG,oBAMrB,OALA1vG,OAAMmF,QAAQ,SAAUkpB,MACfA,KAAKm4E,WAAcoG,wBAAwB95E,IAAIzE,KAAKtuB,OACrD2vG,kBAAkBrqG,KAAKyjC,MAAMkiE,eAAe7D,yBAAyBx8F,YAAa0jB,SAGnFhwB,KAAK2wG,yBAAyBrkG,YAAa+kG,oBAMtDhF,qBAAqB9rG,UAAU+wG,yBAI/B,SAAUjoF,YACN,MAAOA,YAAW5C,OAAO,SAAUgD,WAAa,MAAOA,WAAUA,UAAUE,eAM/E0iF,qBAAqB9rG,UAAUgxG,6BAI/B,SAAUloF,YACN,MAAOrpB,MAAKsxG,yBAAyBjoF,YAChCxjB,IAAI,SAAU4jB,WAAa,MAASpiB,gBAAeoiB,UAAUA,UAAUpjB,SAOhFgmG,qBAAqB9rG,UAAU+uG,wBAK/B,SAAUjmF,WAAYpf,YAClB,GAAqBunG,oBAAqBxxG,KAAKuxG,6BAA6BloF,WACxEmoF,oBAAmBzvG,OAAS,GAC5B/B,KAAK69D,aAAa,sJAEgB2zC,mBAAmB1rG,KAAK,KAAOmE,aAazEoiG,qBAAqB9rG,UAAU8uG,qBAU/B,SAAUf,aAAcl2F,SACpB,GAAqBq5F,QAASr5F,QAAQ1W,KAAKe,QAAQ,WAAY,GAC/D,KAAK6rG,eAAiBtuG,KAAKuuF,gBAAgBsT,WAAW4P,OAAQzxG,KAAK4sG,UAAW,CAC1E,GAAqB5oC,UAAW,IAAMytC,OAAS,6BAC/CztC,WACI,UAAYytC,OAAS,2EACrBA,OAAOtuG,QAAQ,MAAQ,EACvB6gE,UACI,UAAYytC,OAAS,gIAGzBztC,UACI,+FAERhkE,KAAK69D,aAAamG,SAA6B5rD,QAAmB,cAS1Ei0F,qBAAqB9rG,UAAU4uG,gDAM/B,SAAU9lF,WAAYqlF,aAAczkG,YAChC,GAAIwgC,OAAQzqC,KACSwxG,mBAAqBxxG,KAAKuxG,6BAA6BloF,WACxEmoF,oBAAmBzvG,OAAS,GAC5B/B,KAAK69D,aAAa,uCAAyC2zC,mBAAmB1rG,KAAK,KAAMmE,YAE7FykG,aAAa5nG,QAAQ,SAAUkpB,MAC3Bya,MAAMozB,aAAa,oBAAsB7tC,KAAKtuB,KAAO,2KAA8KuI,eAQ3OoiG,qBAAqB9rG,UAAU2uG,sCAK/B,SAAU7lF,WAAYkkF,QAClB,GAAI9iE,OAAQzqC,KACS0xG,mBAAqB,GAAIjqF,IAC9C4B,YAAWviB,QAAQ,SAAU2iB,WACzBjpB,OAAOm3B,KAAKlO,UAAUA,UAAU60B,SAASx3C,QAAQ,SAAUqT,GACvD,GAAqB69B,WAAYvuB,UAAUA,UAAU60B,QAAQnkC,EAC7Du3F,oBAAmBz0E,IAAI+a,eAG/Bu1D,OAAOzmG,QAAQ,SAAU6qG,OACD,MAAhBA,MAAM79F,QAAmB49F,mBAAmBj9E,IAAIk9E,MAAMjwG,OACtD+oC,MAAMozB,aAAa,iBAAmB8zC,MAAM9kG,SAAW,2KAA8K8kG,MAAM1nG,eASvPoiG,qBAAqB9rG,UAAUowG,yBAK/B,SAAUrkG,YAAa0kG,YACnB,GAAIvmE,OAAQzqC,IAGZ,OAAOgxG,YAAWvqF,OAAO,SAAU0jF,WAC/B,GAAIA,UAAU9jG,OAAS80B,oBAAoBC,WACtCqP,MAAM8jD,gBAAgBmT,YAAYp1F,YAAa69F,UAAUzoG,KAAM+oC,MAAMmiE,UAAW,CACjF,GAAqB5oC,UAAW,kBAAoBmmC,UAAUzoG,KAAO,yCAA2C4K,YAAc,IAC1HA,aAAYiS,WAAW,OACvBylD,UACI,YAAcmmC,UAAUzoG,KAAO,kMAG9B4K,YAAYnJ,QAAQ,MAAQ,IACjC6gE,UACI,YAAc13D,YAAc,yCAA2C69F,UAAUzoG,KAAO,gEACrE4K,YAAc,gOAGzCm+B,MAAMozB,aAAamG,SAAUmmC,UAAUlgG,YAE3C,OAAQosB,kBAAkB8zE,UAAU5mG,UAS5C8oG,qBAAqB9rG,UAAUs9D,aAM/B,SAAU1sD,QAASlH,WAAYmhC,WACb,KAAVA,QAAoBA,MAAQq3B,gBAAgBE,OAChD3iE,KAAKsoG,cAActhG,KAAK,GAAI47D,YAAW34D,WAAYkH,QAASi6B,SAEzDihE,wBAEPuF,mBAAoC,WACpC,QAASA,uBAwFT,MAjFAA,oBAAmBrxG,UAAUi+C,aAK7B,SAAU33C,IAAKsrC,QACX,GAAqB+jB,kBAAmBjpD,gBAAgBpG,IACxD,IAAIqvD,iBAAiB7vD,OAAS6H,qBAAqBM,QAC/C0nD,iBAAiB7vD,OAAS6H,qBAAqBI,OAC/C4nD,iBAAiB7vD,OAAS6H,qBAAqBS,WAI/C,MAAO,KAEX,IAAqBkjG,mBAAoBhrG,IAAI0G,MAAM1H,IAAI,SAAU2H,MAAQ,OAAQA,KAAK9L,KAAM8L,KAAKjK,SAC5EqtB,SAAWyE,yBAAyBxuB,IAAInF,KAAMmwG,mBAC9Cx0D,eAAiBlL,OAAO66D,mBAAmBp8E,UAC3CtmB,SAAWT,SAAS7J,KAAM6G,IAAIyD,SAAUgiG,sBAC7D,OAAO,IAAIxxE,YAAWj0B,IAAInF,KAAMmI,SAAS7J,KAAM6G,IAAI0G,uBAA4B,KAAWjD,SAAU+yC,eAAgBx2C,IAAIoD,WAAYpD,IAAIwD,gBAO5IunG,mBAAmBrxG,UAAUmjD,aAK7B,SAAUuwB,QAASxwE,SAAW,MAAO,OAMrCmuG,mBAAmBrxG,UAAUijD,eAK7B,SAAUuwB,UAAWtwE,SACjB,MAAO,IAAIg6C,SAAQs2B,UAAUryE,KAAMqyE,UAAUxwE,MAAOwwE,UAAU9pE,aAOlE2nG,mBAAmBrxG,UAAU+8C,UAK7B,SAAU9sC,KAAM2hC,QACZ,GAAqBkL,gBAAoClL,OAAO66D,mBAAmB3B,kBACnF,OAAO,IAAIjuD,SAAQ5sC,KAAKjN,MAAO85C,eAAmC7sC,KAAgB,aAOtFohG,mBAAmBrxG,UAAU4iD,eAK7B,SAAUu5B,UAAWj5E,SAAW,MAAOi5E,YAMvCk1B,mBAAmBrxG,UAAU+iD,mBAK7B,SAAUq5B,cAAel5E,SAAW,MAAOk5E,gBACpCi1B,sBASPvB,sBAAuC,WACvC,QAASA,uBAAsB3uG,KAAM6B,MAAO0G,YACxCjK,KAAK0B,KAAOA,KACZ1B,KAAKuD,MAAQA,MACbvD,KAAKiK,WAAaA,WAgBtB,MARAomG,uBAAsB9vG,UAAUuwG,uBAKhC,SAAUrnF,WACN,OAAkE,IAA3DwL,cAAcxL,UAAUyL,UAAU/xB,QAAQnD,KAAKuD,QAEnD8sG,yBAiBPtB,eAAgC,WAChC,QAASA,gBAAenB,kBAAmBkE,uBAAwBC,wBAAyBlD,iBACxF7uG,KAAK4tG,kBAAoBA,kBACzB5tG,KAAK8xG,uBAAyBA,uBAC9B9xG,KAAK+xG,wBAA0BA,wBAC/B/xG,KAAK6uG,gBAAkBA,gBAiD3B,MAzCAE,gBAAetuG,OAMf,SAAUmtG,kBAAmBvkF,WAAYwlF;oFACrC,GAAqBhiB,SAAU,GAAIhB,iBACdmmB,uBAA0C,KAC1C1nF,UAAYjB,WAAW1K,KAAK,SAAU8K,WAAa,MAAOA,WAAUA,UAAUE,aACnG,IAAIW,UAEA,IAAK,GADgB0V,oBAAwC1V,UAAUb,UAAmB,SAAEuW,mBAClEh1B,EAAI,EAAGA,EAAIg1B,mBAAmBj+B,OAAQiJ,IAAK,CACjE,GAAqB4lB,UAAWoP,mBAAmBh1B,EAClC,OAAb4lB,SACAohF,uBAAyBhnG,EAGzB6hF,QAAQN,eAAet4D,YAAYC,MAAM8L,mBAAmBh1B,IAAKA,GAI7E,MAAO,IAAI+jG,gBAAenB,kBAAmB/gB,QAASmlB,uBAAwBnD,kBAMlFE,eAAexuG,UAAUysG,mBAIzB,SAAUp8E,UACN,GAAqBqhF,oBAMrB,OALAjyG,MAAK8xG,uBAAuBrmG,MAAMmlB,SAAU,SAAUA,SAAUysB,gBAAkB40D,iBAAiBjrG,KAAKq2C,kBACxG40D,iBAAiBp9E,OACmB,MAAhC70B,KAAK+xG,yBACLE,iBAAiBjrG,KAAKhH,KAAK+xG,yBAExBE,iBAAiBlwG,OAAS,EAAIkwG,iBAAiB,GAAK,MAExDlD,kBAuBPzC,sBAAwB,GAAIyC,iBAAe,EAAM,GAAIljB,iBAAmB,KAAM,MAC9EijB,qBAAuB,GAAI8C,oBA+D3BM,iBAAkC,WAClC,QAASA,qBAGT,MADAA,kBAAiBP,MAAQjvF,SAAS,UAC3BwvF,oBAMPp5E,2BAA4C,WAC5C,QAASA,4BAA2BnX,MAAOwwF,cACvCnyG,KAAK2hB,MAAQA,MACb3hB,KAAKmyG,aAAeA,aAExB,MAAOr5E,+BA0EPY,6BAA8C,WAC9C,QAASA,8BAA6B/X,MAAOyX,aACzCp5B,KAAK2hB,MAAQA,MACb3hB,KAAKo5B,YAAcA,YAEvB,MAAOM,iCAGPF,aAEA44E,QAAS,EAGT34E,UAAW,EAEfD,aAAYA,YAAY44E,SAAW,UACnC54E,YAAYA,YAAYC,WAAa,WAqErC,IAAIzB,QACA3I,UAAW,EACXC,WAAY,EAEhB0I,OAAMA,MAAM3I,WAAa,YACzB2I,MAAMA,MAAM1I,YAAc,YAkC1B,IAivIIjW,IAjvIAsgB,qBAAsC,SAAUjvB,QAEhD,QAASivB,sBAAqB04E,mBAC1B,GAAI5nE,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAEjC,OADAyqC,OAAM4nE,kBAAoBA,kBACnB5nE,MA+CX,MAnDAxqC,WAAU05B,qBAAsBjvB,QAWhCivB,qBAAqBp5B,UAAUkU,UAK/B,SAAU5N,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACS4B,MAAQiF,IAAI6N,KAAK7L,OAAOhC,IAAIjF,MAAMiE,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAM6jC,MAAOhnC,UACpG,OAAO,IAAI6uG,qBAAoBzrG,IAAI+D,KAAMhJ,KAAM5B,KAAKqyG,kBAAkBz6E,oBAAoB/wB,IAAInF,KAAME,KAAKG,UAO7G43B,qBAAqBp5B,UAAU6T,kBAK/B,SAAUvN,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACS4B,KAAOiF,IAAI4M,YAAY5N,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAM6jC,MAAOhnC,UACzF,OAAO,IAAI6uG,qBAAoBzrG,IAAI+D,KAAMhJ,KAAM5B,KAAKqyG,kBAAkB76E,4BAA4B3wB,IAAI4M,YAAY1R,UAOtH43B,qBAAqBp5B,UAAU8T,gBAK/B,SAAUxN,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACS4B,KAAOiF,IAAI7E,OAAO6D,IAAI,SAAUgB,KAAO,MAAOA,KAAID,MAAM6jC,MAAOhnC,UACpF,OAAO,IAAI6uG,qBAAoBzrG,IAAI+D,KAAMhJ,KAAM5B,KAAKqyG,kBAAkB36E,0BAA0B7wB,IAAI8wB,QAEjGgC,sBACT8iC,gBACE5kC,gBAAiC,WACjC,QAASA,iBAAgB06E,eAAgBC,kBAAmBr7E,UAAWC,uBACnEp3B,KAAKuyG,eAAiBA,eACtBvyG,KAAKwyG,kBAAoBA,kBACzBxyG,KAAKm3B,UAAYA,UACjBn3B,KAAKo3B,sBAAwBA,sBAC7Bp3B,KAAKyyG,SAAW,GAAIjpF,KACpBxpB,KAAK0yG,WAAa,GAAIlpF,KACtBxpB,KAAK2yG,kBAAoB,EACzB3yG,KAAKk4B,eAAiB,EA2wB1B,MApwBAL,iBAAgBt3B,UAAU8S,YAK1B,SAAUxM,IAAKqzB,MACX,GAAqBqlC,GACrB,QAAQ14D,IAAIk1D,WACR,IAAK,IACDwD,GAAKskB,eAAeM,IACpB,MACJ,KAAK,IACD5kB,GAAKskB,eAAeK,KACpB,MACJ,KAAK,IACD3kB,GAAKskB,eAAeQ,QACpB,MACJ,KAAK,IACD9kB,GAAKskB,eAAeO,MACpB,MACJ,KAAK,IACD7kB,GAAKskB,eAAeS,MACpB,MACJ,KAAK,KACD/kB,GAAKskB,eAAeU,GACpB,MACJ,KAAK,KACDhlB,GAAKskB,eAAeW,EACpB,MACJ,KAAK,KACDjlB,GAAKskB,eAAeC,MACpB,MACJ,KAAK,KACDvkB,GAAKskB,eAAeE,SACpB,MACJ,KAAK,MACDxkB,GAAKskB,eAAeG,SACpB,MACJ,KAAK,MACDzkB,GAAKskB,eAAeI,YACpB,MACJ,KAAK,IACD1kB,GAAKskB,eAAeY,KACpB,MACJ,KAAK,IACDllB,GAAKskB,eAAec,MACpB,MACJ,KAAK,KACDplB,GAAKskB,eAAea,WACpB,MACJ,KAAK,KACDnlB,GAAKskB,eAAee,YACpB,MACJ,SACI,KAAM,IAAIrgF,OAAM,yBAA2BsC,IAAIk1D,WAEvD,MAAO3hC,4BAA2BF,KAAM,GAAIsrD,oBAAmBjmB,GAAIv/D,KAAK4yG,OAAO/rG,IAAIyM,KAAM0kB,MAAM1I,YAAatvB,KAAK4yG,OAAO/rG,IAAI0M,MAAOykB,MAAM1I,eAO7IuI,gBAAgBt3B,UAAUiT,WAK1B,SAAU3M,IAAKqzB,MAEX,MADAD,qBAAoBC,KAAMrzB,KACnB7G,KAAK6J,SAAShD,IAAI4M,YAAaymB,OAO1CrC,gBAAgBt3B,UAAUmT,iBAK1B,SAAU7M,IAAKqzB,MAEX,MAAOE,4BAA2BF,KADLl6B,KAAK4yG,OAAO/rG,IAAIqI,UAAW8oB,MAAM1I,YAChB41D,YAAYllF,KAAK4yG,OAAO/rG,IAAI8M,QAASqkB,MAAM1I,YAAatvB,KAAK4yG,OAAO/rG,IAAI+M,SAAUokB,MAAM1I,eAO1IuI,gBAAgBt3B,UAAUkU,UAK1B,SAAU5N,IAAKqzB,MACX,KAAM,IAAI31B,OAAM,yEAA2EsC,IAAInF,OAOnGm2B,gBAAgBt3B,UAAUsT,kBAK1B,SAAUhN,IAAKqzB,MACX,GACqB24E,UADAC,cAAgB9yG,KAAK6J,SAAShD,IAAIjF,KAAMo2B,MAAM1I,WAQnE,OALIujF,UADAhsG,cAAeyrG,qBACJzrG,IAAIooB,UAAU6jF,eAGd9yG,KAAK4yG,OAA0B/rG,IAAW,OAAGmxB,MAAM1I,YAAY3C,OAAOmmF,eAE9E14E,2BAA2BF,KAAM24E,WAO5Ch7E,gBAAgBt3B,UAAUwT,sBAK1B,SAAUlN,IAAKqzB,MAEX,MADAC,sBAAqBD,KAAMrzB,KACpB7G,KAAKwyG,mBAOhB36E,gBAAgBt3B,UAAUyT,mBAK1B,SAAUnN,IAAKqzB,MACXC,qBAAqBD,KAAMrzB,IAE3B,KAAK,GADgBjF,OAAQyiB,QAAQxd,IAAI4M,YAAY1R,SAC3BiJ,EAAI,EAAGA,EAAInE,IAAIg1D,QAAQ95D,OAAS,EAAGiJ,IACzDpJ,KAAKoF,KAAKqd,QAAQxd,IAAIg1D,QAAQ7wD,KAC9BpJ,KAAKoF,KAAKhH,KAAK4yG,OAAO/rG,IAAI4M,YAAYzI,GAAIgtB,MAAM1I,YAGpD,OADA1tB,MAAKoF,KAAKqd,QAAQxd,IAAIg1D,QAAQh1D,IAAIg1D,QAAQ95D,OAAS,KAC/C/B,KAAKo3B,sBACEp3B,KAAKo3B,sBAAsBx1B,MAE/BiF,IAAI4M,YAAY1R,QAAU,EAC7B6gB,WAAW+K,YAAY4zD,mBAAmB50D,OAAO/qB,MACjDghB,WAAW+K,YAAY6S,aAAa7T,QAAQ/qB,KAAK,GAAIuhB,WAAWvhB,KAAKwB,MAAM,OAOnFy0B,gBAAgBt3B,UAAU0T,eAK1B,SAAUpN,IAAKqzB,MACX,GAAqB64E,cAAe/yG,KAAKgzG,iBAAiBnsG,IAC1D,OAAIksG,cACO/yG,KAAKizG,kBAAkBpsG,IAAKksG,aAAc74E,MAG1CE,2BAA2BF,KAAMl6B,KAAK4yG,OAAO/rG,IAAIxE,IAAK21B,MAAM1I,YAAYpb,IAAIlU,KAAK4yG,OAAO/rG,IAAIqN,IAAK8jB,MAAM1I,eAQtHuI,gBAAgBt3B,UAAU4T,gBAK1B,SAAUtN,IAAKqzB,MACX,GAAqB73B,KAAMrC,KAAK4yG,OAAO/rG,IAAIxE,IAAK21B,MAAM1I,YACjCpb,IAAMlU,KAAK4yG,OAAO/rG,IAAIqN,IAAK8jB,MAAM1I,YACjC/rB,MAAQvD,KAAK4yG,OAAO/rG,IAAItD,MAAOy0B,MAAM1I,WAC1D,OAAO8K,4BAA2BF,KAAM73B,IAAI6R,IAAIA,KAAKuM,IAAIld,SAO7Ds0B,gBAAgBt3B,UAAU6T,kBAK1B,SAAUvN,IAAKqzB,MACX,KAAM,IAAI31B,OAAM,4EAOpBszB,gBAAgBt3B,UAAU8T,gBAK1B,SAAUxN,IAAKqzB,MACX,KAAM,IAAI31B,OAAM,0EAOpBszB,gBAAgBt3B,UAAU+T,sBAK1B,SAAUzN,IAAKqzB,MAGX,GAAqB7zB,MAAqB,OAAdQ,IAAItD,WAAgCY,KAAd0C,IAAItD,QAAqC,IAAdsD,IAAItD,QAAgC,IAAdsD,IAAItD,MACnGspB,kBACA1oB,EACJ,OAAOi2B,4BAA2BF,KAAM7V,QAAQxd,IAAItD,MAAO8C,QAM/DwxB,gBAAgBt3B,UAAU2yG,UAI1B,SAAUxxG,MAAQ,MAAO1B,MAAKuyG,eAAeY,SAASzxG,OAMtDm2B,gBAAgBt3B,UAAUgU,gBAK1B,SAAU1N,IAAKqzB,MACX,GAAIrzB,IAAI2N,mBAAoBwmD,mBAAgC,QAAZn0D,IAAInF,KAAgB,CAChE,GAAqBE,MAAyB5B,KAAK6J,SAAShD,IAAIjF,KAAMo2B,MAAM1I,WAC5E,IAAmB,GAAf1tB,KAAKG,OACL,KAAM,IAAIwC,OAAM,2DAA6D3C,KAAKG,QAAU,QAEhG,OAA0BH,MAAK,GAAK62B,KAAKrM,cAE7C,GAAqB2mF,cAAe/yG,KAAKgzG,iBAAiBnsG,IAC1D,IAAIksG,aACA,MAAO/yG,MAAKizG,kBAAkBpsG,IAAKksG,aAAc74E,KAGjD,IAAqBt4B,MAAO5B,KAAK6J,SAAShD,IAAIjF,KAAMo2B,MAAM1I,YACrC3oB,OAAS,KACT6N,SAAWxU,KAAK4yG,OAAO/rG,IAAI2N,SAAUwjB,MAAM1I,WAChE,IAAI9a,WAAaxU,KAAKwyG,kBAAmB,CACrC,GAAqBY,SAAUpzG,KAAKkzG,UAAUrsG,IAAInF,KAC9C0xG,WACAzsG,OAASysG,QAAQzmF,OAAO/qB,OAMhC,MAHc,OAAV+E,SACAA,OAAS6N,SAASuwE,WAAWl+E,IAAInF,KAAME,OAEpCw4B,2BAA2BF,KAAMvzB,SAQhDkxB,gBAAgBt3B,UAAUoU,eAK1B,SAAU9N,IAAKqzB,MACX,MAAOE,4BAA2BF,KAAMzW,IAAIzjB,KAAK4yG,OAAO/rG,IAAI+N,WAAYojB,MAAM1I,eAOlFuI,gBAAgBt3B,UAAUsU,mBAK1B,SAAUhO,IAAKqzB,MACX,MAAOE,4BAA2BF,KAAMvW,cAAc3jB,KAAK4yG,OAAO/rG,IAAI+N,WAAYojB,MAAM1I,eAO5FuI,gBAAgBt3B,UAAUuU,kBAK1B,SAAUjO,IAAKqzB,MACX,GAAqB64E,cAAe/yG,KAAKgzG,iBAAiBnsG,IAC1D,IAAIksG,aACA,MAAO/yG,MAAKizG,kBAAkBpsG,IAAKksG,aAAc74E,KAGjD,IAAqBvzB,QAAS,KACT6N,SAAWxU,KAAK4yG,OAAO/rG,IAAI2N,SAAUwjB,MAAM1I,WAOhE,OANI9a,YAAaxU,KAAKwyG,oBAClB7rG,OAAS3G,KAAKkzG,UAAUrsG,IAAInF,OAElB,MAAViF,SACAA,OAAS6N,SAASwb,KAAKnpB,IAAInF,OAExB04B,2BAA2BF,KAAMvzB,SAQhDkxB,gBAAgBt3B,UAAUwU,mBAK1B,SAAUlO,IAAKqzB,MACX,GAAqB1lB,UAAWxU,KAAK4yG,OAAO/rG,IAAI2N,SAAUwjB,MAAM1I,WAChE,IAAI9a,WAAaxU,KAAKwyG,kBAAmB,CAErC,GAD+BxyG,KAAKkzG,UAAUrsG,IAAInF,MAE9C,KAAM,IAAI6C,OAAM,6CAGxB,MAAO61B,4BAA2BF,KAAM1lB,SAASwb,KAAKnpB,IAAInF,MAAM+e,IAAIzgB,KAAK4yG,OAAO/rG,IAAItD,MAAOy0B,MAAM1I,eAOrGuI,gBAAgBt3B,UAAU2U,sBAK1B,SAAUrO,IAAKqzB,MACX,MAAOl6B,MAAKizG,kBAAkBpsG,IAAK7G,KAAKgzG,iBAAiBnsG,KAAMqzB,OAOnErC,gBAAgBt3B,UAAU0U,oBAK1B,SAAUpO,IAAKqzB,MACX,MAAOl6B,MAAKizG,kBAAkBpsG,IAAK7G,KAAKgzG,iBAAiBnsG,KAAMqzB,OAOnErC,gBAAgBt3B,UAAUsJ,SAK1B,SAAUnD,KAAMwzB,MACZ,GAAIuQ,OAAQzqC,IACZ,OAAO0G,MAAKb,IAAI,SAAUgB,KAAO,MAAO4jC,OAAMmoE,OAAO/rG,IAAKqzB,SAO9DrC,gBAAgBt3B,UAAUyU,WAK1B,SAAUnO,IAAKqzB,MACX,KAAM,IAAI31B,OAAM,gEAAkEsC,IAAIi0D,wBAA0B,eAAiBj0D,IAAIk0D,WAOzIljC,gBAAgBt3B,UAAUqyG,OAK1B,SAAU/rG,IAAKqzB,MACX,GAAqBvzB,QAAS3G,KAAK0yG,WAAWlyF,IAAI3Z,IAClD,OAAIF,UAEI3G,KAAKyyG,SAASjyF,IAAI3Z,MAAQA,KAAKD,MAAM5G,KAAMk6B,OAQvDrC,gBAAgBt3B,UAAU0yG,kBAM1B,SAAUpsG,IAAKksG,aAAc74E,MAoCzB,GAAqBm5E,mBAAoBrzG,KAAK4yG,OAAOG,aAAav+F,SAAUwjB,MAAM1I,YAC7DgkF,cAA6B,EAC9CtzG,MAAKuzG,eAAeR,aAAav+F,YAGjC8+F,UAAYtzG,KAAKwzG,oBAEjBH,kBAAoBC,UAAU7yF,IAAI4yF,mBAElCrzG,KAAK0yG,WAAWjyF,IAAIsyF,aAAav+F,SAAU8+F,WAE/C,IAAqBpkG,WAAYmkG,kBAAkBntB,SAG/C6sB,wBAAwB52C,gBACxBn8D,KAAKyyG,SAAShyF,IAAIsyF,aAAc,GAAI72C,YAAW62C,aAAanoG,KAAMmoG,aAAav+F,SAAUu+F,aAAarxG,KAAMqxG,aAAanxG,OAGzH5B,KAAKyyG,SAAShyF,IAAIsyF,aAAc,GAAI53C,cAAa43C,aAAanoG,KAAMmoG,aAAav+F,SAAUu+F,aAAarxG,MAG5G,IAAqB+xG,QAASzzG,KAAK4yG,OAAO/rG,IAAKmxB,MAAM1I,WASrD,OANAtvB,MAAKyyG,SAASv1E,OAAO61E,cAEjBO,WACAtzG,KAAK0zG,iBAAiBJ,WAGnBl5E,2BAA2BF,KAAMhrB,UAAUg2E,YAAY7gE,QAAQ,MAAOovF,UAMjF57E,gBAAgBt3B,UAAUyyG,iBAI1B,SAAUnsG,KACN,GAAI4jC,OAAQzqC,KACS4G,MAAQ,SAAUpD,QAASqD,KAC5C,OAAQ4jC,MAAMgoE,SAASjyF,IAAI3Z,MAAQA,KAAKD,MAAMpD,SAElD,OAAOqD,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAO,OACxB2M,WAIA,SAAU3M,KAAO,MAAO,OACxB6M,iBAIA,SAAU7M,KAAO,MAAO,OACxBgN,kBAIA,SAAUhN,KAAO,MAAO,OACxBkN,sBAIA,SAAUlN,KAAO,MAAO,OACxBmN,mBAIA,SAAUnN,KAAO,MAAO,OACxBoN,eAIA,SAAUpN,KAAO,MAAOD,OAAM5G,KAAM6G,IAAIxE,MACxC8R,gBAIA,SAAUtN,KAAO,MAAO,OACxBuN,kBAIA,SAAUvN,KAAO,MAAO,OACxBwN,gBAIA,SAAUxN,KAAO,MAAO,OACxByN,sBAIA,SAAUzN,KAAO,MAAO,OACxB0N,gBAIA,SAAU1N,KAAO,MAAOD,OAAM5G,KAAM6G,IAAI2N,WACxCC,UAIA,SAAU5N,KAAO,MAAO,OACxB8N,eAIA,SAAU9N,KAAO,MAAO,OACxBgO,mBAIA,SAAUhO,KAAO,MAAO,OACxBiO,kBAIA,SAAUjO,KAAO,MAAOD,OAAM5G,KAAM6G,IAAI2N,WACxCO,mBAIA,SAAUlO,KAAO,MAAO,OACxBmO,WAIA,SAAUnO,KAAO,MAAO,OACxBoO,oBAIA,SAAUpO,KAAO,MAAOD,OAAM5G,KAAM6G,IAAI2N,WAAa3N,KACrDqO,sBAIA,SAAUrO,KACN,MAAOD,OAAM5G,KAAM6G,IAAI2N,WAAa3N,QAQhDgxB,gBAAgBt3B,UAAUgzG,eAI1B,SAAU1sG,KACN,GAAI4jC,OAAQzqC,KACS4G,MAAQ,SAAUpD,QAASqD,KAC5C,MAAOA,OAAQ4jC,MAAMgoE,SAASjyF,IAAI3Z,MAAQA,KAAKD,MAAMpD,UAEpCmwG,UAAY,SAAUnwG,QAASqD,KAChD,MAAOA,KAAIorB,KAAK,SAAUprB,KAAO,MAAOD,OAAMpD,QAASqD,OAE3D,OAAOA,KAAID,OACPyM,YAIA,SAAUxM,KAAO,MAAOD,OAAM5G,KAAM6G,IAAIyM,OAAS1M,MAAM5G,KAAM6G,IAAI0M,QACjEC,WAIA,SAAU3M,KAAO,OAAO,GACxB6M,iBAIA,SAAU7M,KACN,MAAOD,OAAM5G,KAAM6G,IAAIqI,YAActI,MAAM5G,KAAM6G,IAAI8M,UACjD/M,MAAM5G,KAAM6G,IAAI+M,WAExBC,kBAIA,SAAUhN,KAAO,OAAO,GACxBkN,sBAIA,SAAUlN,KAAO,OAAO,GACxBmN,mBAIA,SAAUnN,KAAO,MAAO8sG,WAAU3zG,KAAM6G,IAAI4M,cAC5CQ,eAIA,SAAUpN,KAAO,OAAO,GACxBsN,gBAIA,SAAUtN,KAAO,OAAO,GACxBuN,kBAIA,SAAUvN,KAAO,OAAO,GACxBwN,gBAIA,SAAUxN,KAAO,OAAO,GACxByN,sBAIA,SAAUzN,KAAO,OAAO,GACxB0N,gBAIA,SAAU1N,KAAO,OAAO,GACxB4N,UAIA,SAAU5N,KAAO,OAAO,GACxB8N,eAIA,SAAU9N,KAAO,MAAOD,OAAM5G,KAAM6G,IAAI+N,aACxCC,mBAIA,SAAUhO,KAAO,MAAOD,OAAM5G,KAAM6G,IAAI+N,aACxCE,kBAIA,SAAUjO,KAAO,OAAO,GACxBkO,mBAIA,SAAUlO,KAAO,OAAO,GACxBmO,WAIA,SAAUnO,KAAO,OAAO,GACxBoO,oBAIA,SAAUpO,KAAO,OAAO,GACxBqO,sBAIA,SAAUrO,KAAO,OAAO,MAMhCgxB,gBAAgBt3B,UAAUizG,kBAG1B,WACI,GAAqBI,YAAa5zG,KAAK2yG,mBAEvC,OADA3yG,MAAKk4B,eAAiBrb,KAAKC,IAAI9c,KAAK2yG,kBAAmB3yG,KAAKk4B,gBACrD,GAAIvV,aAAYiX,cAAc55B,KAAKm3B,UAAWy8E,cAMzD/7E,gBAAgBt3B,UAAUmzG,iBAI1B,SAAUJ,WAEN,GADAtzG,KAAK2yG,oBACDW,UAAU5xG,MAAQk4B,cAAc55B,KAAKm3B,UAAWn3B,KAAK2yG,mBACrD,KAAM,IAAIpuG,OAAM,aAAe+uG,UAAU5xG,KAAO,2BAGjDm2B,mBAePR,qBAAsC,WACtC,QAASA,yBAgBT,MAVAA,sBAAqB92B,UAAU4yG,SAI/B,SAAUzxG,MACN,MAAIA,QAASwwG,iBAAiBP,MAAMjwG,KACzBwwG,iBAAiBP,MAErB,MAEJt6E,wBA6BPi7E,oBAAqC,SAAU5nG,QAE/C,QAAS4nG,qBAAoB1nG,KAAMhJ,KAAMqtB,WACrC,GAAIwb,OAAQ//B,OAAOyrC,KAAKn2C,KAAM4K,KAAM,KAAMhJ,OAAS5B,IAGnD,OAFAyqC,OAAM7oC,KAAOA,KACb6oC,MAAMxb,UAAYA,UACXwb,MAEX,MAPAxqC,WAAUqyG,oBAAqB5nG,QAOxB4nG,qBACTl2C,cAgBEjsB,kBAAmC,WACnC,QAASA,mBAAkBtC,QAAS1sB,WAChCnhB,KAAK6tC,QAAUA,QACf7tC,KAAKmhB,UAAYA,UAqDrB,MA5BAgvB,mBAAkB5vC,UAAUw+B,iBAe5B,SAAU80E,YAAavpF,UAAW2U,SAAUwsE,UAAWqI,sBAAuBtvF,KAC1E,GAAIimB,OAAQzqC,KACSg/B,MAAQ,GAAIxV,IACjCiiF,WAAU3kG,QAAQ,SAAU4X,GAAK,MAAOsgB,OAAMve,IAAI/B,EAAEhd,KAAMgd,EAAErY,KAAKkB,YACjE,IAAqBwsG,mBAAoB,EACpBC,mBAAqB,SAAU7hE,OAAQ4O,QACxD,GAAqBkzD,mBAAoBF,mBACzC,OAAO,IAAIG,aAAYzpE,MAAMoD,QAASpD,MAAMtpB,UAAW2yF,sBAAuB3hE,OAAQ7nB,UAAUjkB,KAAKkB,UAAW+iB,UAAU+X,OAAQ4xE,kBAAmBj1E,MAAO+hB,OAAQv8B,IAAKwvF,qBAExJxwG,QAAUwwG,mBAAmB,QAElD,OADAxwG,SAAQqG,YAAao1B,UACdz7B,QAAQomE,MAAMiqC,cAElB1jE,qBAGPgkE,uBAAwC,WACxC,QAASA,2BAkBT,MAZAA,wBAAuB5zG,UAAU4yG,SAIjC,SAAUzxG,MACN,MAAIA,QAASwwG,iBAAiBP,MAAMjwG,KAGzBghB,SAhBI,QAkBR,MAEJyxF,0BAEPC,gBAAkB,GAAID,wBACtBD,YAA6B,WAC7B,QAASA,aAAYrmE,QAAS1sB,UAAW2yF,sBAAuB3hE,OAAQ7nB,UAAW+pF,gBAAiBJ,kBAAmBj1E,MAAO+hB,OAAQv8B,IAAKwvF,oBACvIh0G,KAAK6tC,QAAUA,QACf7tC,KAAKmhB,UAAYA,UACjBnhB,KAAK8zG,sBAAwBA,sBAC7B9zG,KAAKmyC,OAASA,OACdnyC,KAAKsqB,UAAYA,UACjBtqB,KAAKq0G,gBAAkBA,gBACvBr0G,KAAKi0G,kBAAoBA,kBACzBj0G,KAAKg/B,MAAQA,MACbh/B,KAAK+gD,OAASA,OACd/gD,KAAKwkB,IAAMA,IACXxkB,KAAKg0G,mBAAqBA,mBAC1Bh0G,KAAKs0G,cAAgB,GAAI9qF,KACzBxpB,KAAKy+C,aACLz+C,KAAKsK,YACLtK,KAAKu0G,WACLv0G,KAAKw0G,WA2aT,MAraAN,aAAY3zG,UAAUk0G,aAItB,SAAUpuG,MACN,GAAqBmwF,QAUrB,MARIA,QADAnwF,OAASrG,KAAKsqB,WAAatqB,KAAKq0G,gBApDrB,OAuDNhuG,eAAgBoB,cACXzH,KAAK8zG,sBAAsBtzF,IAAIna,MAxD9B,QA8DX,KAAM,IAAI9B,OAAM,yDAA2Dq7C,KAAKj6C,UAAUU,MAE9F,OAAOmwF,UAMX0d,YAAY3zG,UAAUm0G,wBAItB,SAAU7tG,KAEN,IAAK,GADgBF,QAAS3G,KAAK+gD,OAAO39C,QACjCvB,GAAK,EAAGwX,GAAKxS,IAAIwiB,WAAYxnB,GAAKwX,GAAGtX,OAAQF,KAElD,IAAK,GADD4nB,WAAYpQ,GAAGxX,IACV2X,GAAK,EAAGQ,GAAKyP,UAAU4U,OAAQ7kB,GAAKQ,GAAGjY,OAAQyX,KAAM,CAC1D,GAAIhX,OAAQwX,GAAGR,IACMm7F,MAAQlrF,UAAUA,UAAUs3B,OAAOv+C,MAAMo8C,cAC9D,IAAI+1D,MAAO,CACP,GAAqBC,OAAkB,UAAVD,KAC7BhuG,QAAOK,MACH2tG,MAAOA,MACPC,MAAOA,MACPhgG,YAAgCnR,QAASzD,KAAKsqB,UAAW/mB,MAAOf,MAAMe,UAKtF,MAAOoD,SAOXutG,YAAY3zG,UAAUsJ,SAKtB,SAAU40C,UAAW/jB,UACjB16B,KAAKy+C,UAAYA,UACjBh4C,iBAAiBzG,KAAM06B,WAO3Bw5E,YAAY3zG,UAAUqpE,MAKtB,SAAUiqC,YAAagB,kBACnB,GAAIpqE,OAAQzqC,SACa,KAArB60G,mBAA+BA,qBACnC70G,KAAKsK,SAASxD,QAAQ,SAAUi2B,OAAS,MAAOA,OAAM6sC,MAAMiqC,YAAagB,mBACzE,IAAqBC,YAAapyF,SAzHnB,QAyH8CjC,IAAIsM,WAAW4L,WAAWvM,eAClE2oF,aAAe,CAgBpC,IAfA/0G,KAAKu0G,QAAQztG,QAAQ,SAAU8N,YAC3B,GAAIyE,IAAKoxB,MAAMuqE,2BAA2BpgG,YAAa3K,WAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC/F4zB,UAAY,GAAK49E,eACjBE,aAAexxG,UAAYgnC,MAAMngB,UAAYmgB,MAAQ2pE,gBACtE56F,GAAKyf,uBAAuBg8E,aAAcvyF,SAAS+nB,MAAMgqE,aAAahxG,UAAWF,MAAO4zB,UAAWqC,YAAY44E,SAAUzwF,MAAQnI,GAAGmI,MAAOyX,YAAc5f,GAAG4f,WAChKzX,OAAM3a,KAAK,GAAIwzB,qBAAoBpB,cACnC07E,UAAU9tG,KAAK/E,MAAM6yG,UAAWnzF,MAAM9b,IAAI,SAAUsc,MAAQ,MAAOD,oCAAmCC,KAAMlY,iBAEhHjK,KAAKw0G,QAAQ1tG,QAAQ,SAAUuS,IAC3B,GAAIpP,YAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC5C4zB,UAAY,GAAK49E,eACjBE,aAAexxG,UAAYgnC,MAAMngB,UAAYmgB,MAAQ2pE,gBACtEzyF,MAAQoV,qBAAqBk+E,aAAcvyF,SAAS+nB,MAAMgqE,aAAahxG,UAAWF,MAAO4zB,WAAWxV,KACxGmzF,WAAU9tG,KAAK/E,MAAM6yG,UAAWnzF,MAAM9b,IAAI,SAAUsc,MAAQ,MAAOD,oCAAmCC,KAAMlY,iBAE5GjK,KAAK+gD,OAAOh/C,OAAQ,CAEpB,IAAK,GADgBmzG,qBAAkB/wG,GAC9BtC,GAAK,EAAGwX,GAAKrZ,KAAK+gD,OAAQl/C,GAAKwX,GAAGtX,OAAQF,KAAM,CACrD,GAAI8yG,OAAQt7F,GAAGxX,IACX2X,GAAKxZ,KAAKg1G,2BAA2BL,MAAM//F,YAAanR,QAAU+V,GAAG/V,QAASF,MAAQiW,GAAGjW,MACxE4zB,UAAY,GAAK49E,eACjBE,aAAexxG,UAAYzD,KAAKsqB,UAAYtqB,KAAOo0G,gBAGpEp6F,GAAKif,uBAAuBg8E,aAAcvyF,SAAS1iB,KAAKy0G,aAAahxG,UAAWF,MAAO4zB,UAAWqC,YAAYC,WAAY9X,MAAQ3H,GAAG2H,MAAOyX,YAAcpf,GAAGof,WACjK,IAAoB,GAAhBzX,MAAM5f,OAAa,CACnB,GAAqBozG,aAAcR,MAAMC,MAAQx7E,YAAcp5B,KAAKwkB,IAAI5B,WAAW+xF,MAAMA,OAAOhoF,QAAQyM,aACxG87E,iBAAkBA,gBAAkBA,gBAAgBjwD,IAAIkwD,aAAeA,aAG3ED,kBACAJ,WAAa,GAAI1wF,QAAO8wF,gBAAiBJ,aAGjD,GAAqBM,UAAW,SAAWvB,YAAc,IAAM7zG,KAAKi0G,kBAC/CoB,YAAc,GAAIltB,qBAAoBitB,YAAcN,UAEzE,OADAD,kBAAiB7tG,KAAKquG,aACfR,kBAOXX,YAAY3zG,UAAUi9C,eAKtB,SAAU32C,IAAKpD,SACX,GAAIgnC,OAAQzqC,IAC2C6G,KAAS,MACA,IAC1D4M,YAAY3M,QAAQ,SAAU0b,MAChC,MAAOioB,OAAM8pE,QAAQvtG,MAAOvD,QAASgnC,MAAMngB,UAAW/mB,MAAOif,KAAMvY,WAAYpD,IAAIoD,gBAQ3FiqG,YAAY3zG,UAAUm+C,sBAKtB,SAAU73C,IAAKpD,SAKX,GAJAzD,KAAKs1G,uBAAuBzuG,KAIxB7G,KAAK6tC,QAAQ0nE,sBAAuB,CAKpC,GAAqBx0D,QAAS/gD,KAAK00G,wBAAwB7tG,KACtC2uG,aAAex1G,KAAKg0G,mBAAmBh0G,KAAM+gD,OAClE/gD,MAAKsK,SAAStD,KAAKwuG,cACnBA,aAAa3rG,SAAShD,IAAI43C,UAAW53C,IAAIyD,YAQjD4pG,YAAY3zG,UAAUi+C,aAKtB,SAAU33C,IAAKpD,SACX,GAAIgnC,OAAQzqC,IACZA,MAAKs1G,uBAAuBzuG,IAI5BA,KAAIw3B,OAAOv3B,QAAQ,SAAUm0B,UACzBwP,MAAM8pE,QAAQvtG,MAAOvD,QAASgnC,MAAMngB,UAAW/mB,MAAO03B,SAAS13B,MAAO0G,WAAYgxB,SAAShxB,eAE/FxD,iBAAiBzG,KAAM6G,IAAIyD,WAM/B4pG,YAAY3zG,UAAU+0G,uBAItB,SAAUzuG,KACN,GAAI4jC,OAAQzqC,IACZ6G,KAAIwiB,WAAWviB,QAAQ,SAAUo0B,QAAUuP,MAAMwU,eAAe/jB,UAChEr0B,IAAI03C,WAAWz3C,QAAQ,SAAUU,KAC7B,GAAqBiuG,eAAiC,IAKlDA,eADAjuG,IAAIjE,OAASiE,IAAIjE,MAAMmE,YAAc+iC,MAAMoD,QAAQ0nE,sBACnC/tG,IAAIjE,MAAMmE,WAAWH,UAGrBy7E,gBAAgB/nC,QAEpCxQ,MAAM6pE,cAAc7zF,IAAIjZ,IAAI9F,KAAM+zG,iBAEtC5uG,IAAIy3C,QAAQx3C,QAAQ,SAAU4uG,WAC1BjrE,MAAM+pE,QAAQxtG,MAAOvD,QAASgnC,MAAMngB,UAAW/mB,MAAOmyG,UAAU53D,QAAS7zC,WAAYyrG,UAAUzrG,gBAOvGiqG,YAAY3zG,UAAU0+C,eAItB,SAAU/jB,QACN,GAAIuP,OAAQzqC,KACSyvF,QAAUv0D,OAAOzR,UAAUpjB,KAAKkB,SACrD2zB,QAAOmD,OAAOv3B,QAAQ,SAAUtE,OAC5B,MAAOioC,OAAM8pE,QAAQvtG,MAAOvD,QAASgnC,MAAMngB,UAAW/mB,MAAOf,MAAMe,MAAO0G,WAAYzH,MAAMyH,eAK5FjK,KAAK6tC,QAAQ0nE,wBACbr6E,OAAO6jB,eAAej4C,QAAQ,SAAUm0B,UACpC,MAAOwP,OAAM8pE,QAAQvtG,MAAOvD,QAASgsF,QAASlsF,MAAO03B,SAAS13B,MAAO0G,WAAYgxB,SAAShxB,eAE9FixB,OAAO8jB,WAAWl4C,QAAQ,SAAU6uG,cAChC,MAAOlrE,OAAM+pE,QAAQxtG,MACjBvD,QAASgsF,QACTlsF,MAAOoyG,aAAa73D,QACpB7zC,WAAY0rG,aAAa1rG,iBASzCiqG,YAAY3zG,UAAU4yG,SAItB,SAAUzxG,MACN,GAAIA,MAAQwwG,iBAAiBP,MAAMjwG,KAC/B,MAAOghB,UAAS1iB,KAAKy0G,aAAazxB,gBAAgB/nC,SAEtD,KAAK,GAAqB26D,aAAc51G,KAAM41G,YAAaA,YAAcA,YAAYzjE,OAAQ,CACzF,GAAqBsjE,mBAAgB,EAGrC,IAAqB,OADrBA,cAAgBG,YAAYtB,cAAc9zF,IAAI9e,OACnB,CAEOk0G,YAAYn3D,UAAU9/B,KAAK,SAAUk3F,QAAU,MAAOA,QAAOn0G,OAASA,SAEhG+zG,cAAgBzyB,gBAAgB/nC,SAGxC,GAAqB,MAAjBw6D,cACA,MAAO/yF,UAAS1iB,KAAKy0G,aAAagB,gBAG1C,MAAO,OAMXvB,YAAY3zG,UAAUu1G,cAItB,SAAUp0G,MACN,GAAqBg+B,MAAO1/B,KAAKg/B,MAAMxe,IAAI9e,KAC3C,KAAKg+B,KACD,KAAM,IAAIn7B,OAAM,sCAAwC7C,KAAO,mBAAqB1B,KAAKsqB,UAE7F,OAAOtqB,MAAKy0G,aAAa/0E,OAM7Bw0E,YAAY3zG,UAAUy0G,2BAItB,SAAUpgG,YACN,GAAI61B,OAAQzqC,IACZ,QACIiK,WAAY2K,WAAW3K,WACvBxG,QAASmR,WAAWnR,QACpBF,MAAOg0B,gCACHC,4BAA6B,SAAUC,UACnC,MAAO,UAAU71B,MACb,GAAqBqN,KAAMkU,WAAWvhB,KAGtC,OAAO6oC,OAAMoD,QAAQ0nE,sBAAwBtmG,IAAMA,IAAIwpB,KAAKrM,gBAGpEsL,0BAA2B,SAAUC,MACjC,MAAO,UAAU31B,QACb,GAAqBwmF,SAAU7wD,KAAK9xB,IAAI,SAAUsU,EAAGnP,GACjD,OACIkJ,IAAKiG,EAAEjG,IACP3Q,MAAOvB,OAAOgJ,GACdwY,OAAQrJ,EAAEqJ,UAGG3d,IAAMwd,WAAWmlE,QAGtC,OAAO/9C,OAAMoD,QAAQ0nE,sBAAwB1vG,IAAMA,IAAI4yB,KAAKrM,gBAGpEwL,oBAAqB,SAAUl2B,KAAM+1B,UACjC,MAAO,UAAU71B,MAMb,MAFI8gB,UAD4B+nB,MAAMoD,QAAQ0nE,sBACjC9qE,MAAMqrE,cAAcp0G,MACpB+oC,MAAMgqE,aAAazxB,gBAAgB/nC,UAChC8pC,WAAW,YAAanjF,SAGjDgT,WAAWrR,SAQtB2wG,YAAY3zG,UAAU4+C,eAKtB,SAAUt4C,IAAKpD,WAMfywG,YAAY3zG,UAAU+8C,UAKtB,SAAUz2C,IAAKpD,WAMfywG,YAAY3zG,UAAUs+C,uBAKtB,SAAUh4C,IAAKpD,WAMfywG,YAAY3zG,UAAU49C,eAKtB,SAAUt3C,IAAKpD,WAMfywG,YAAY3zG,UAAU89C,cAKtB,SAAUx3C,IAAKpD,WAMfywG,YAAY3zG,UAAUy9C,WAKtB,SAAUn3C,IAAKpD,WAMfywG,YAAY3zG,UAAUq9C,qBAKtB,SAAU/2C,IAAKpD,WAMfywG,YAAY3zG,UAAUm9C,UAKtB,SAAU72C,IAAKpD,WACRywG,eAcPh4E,aAAe,QACfC,WAAa,QAEb45E,kBAAmC,WACnC,QAASA,mBAAkBC,aAAcC,iBACrCj2G,KAAKg2G,aAAeA,aACpBh2G,KAAKi2G,gBAAkBA,gBAE3B,MAAOF,sBAEP9lE,aAA8B,WAC9B,QAASA,cAAaomB,YAClBr2D,KAAKq2D,WAAaA,WAiDtB,MAvCApmB,cAAa1vC,UAAUw+B,iBAQvB,SAAUf,UAAW1T,UAAW2U,SAAUkhB,OAAQsrD,WAC9C,GAAIhhE,OAAQzqC,KACS+zG,kBAAoB,EACpBn3E,eAAiBD,mBAAmBsC,UACpCi3E,2BAA0C,EAC/D,KAAK5rF,UAAU+X,OAAQ,CACnB,GAAqB8zE,YAAgC7rF,UAAmB,SACnD8rF,mBACjBD,YAAWz1D,YAAcy1D,WAAWz1D,WAAW3+C,QAC/Cq0G,iBAAiBpvG,KAAK,GAAIuc,iBAAgB,YAAagB,wBAAwByZ,UAAWm4E,WAAWz1D,aAAa,GAEtH,IAAqB21D,oBAAqB3zF,SAASza,iBAAiBqiB,UAAUjkB,KAAKkB,WACnF2uG,wBAA4CG,mBAAwB,KACpEr4E,UAAUjE,WAAW/yB,KAAKqvG,mBACrB51F,IAAImC,WAAW+K,YAAY40D,qBAAqB51D,QAAQ,GAAIrJ,iBACzD,GAAIC,iBAAgB,gBAAiBc,QAAQ8xF,WAAW71D,gBAAgB,GACxE,GAAI/8B,iBAAgB,SAAU48B,QAAQ,GACtC,GAAI58B,iBAAgB,OAAQ,GAAID,gBAAe8yF,mBAAmB,QAErEz9E,WAAW5V,WAAW4K,YAAY60D,gBAAiB5pD,aAAaC,MAAOD,aAAauO,YAE7F,GAAqB6sE,oBAAqB,SAAU7hE,QAChD,GAAqB8hE,mBAAoBF,mBACzC,OAAO,IAAIuC,eAAc7rE,MAAM4rB,WAAYr4B,UAAWmU,OAAQ7nB,UAAW2pF,kBAAmBxI,UAAW7uE,eAAgBo3E,qBAEtGxwG,QAAUwwG,mBAAmB,KAGlD,OAFAxwG,SAAQqG,YAAao1B,WACpB5lB,GAAK2kB,UAAUjE,YAAY/yB,KAAK/E,MAAMoX,GAAI7V,QAAQomE,SAC5C,GAAImsC,mBAAkBvyG,QAAQ4xG,SAAUc,uBAC/C,IAAI78F,KAED42B,gBAEPsmE,UAAY7zF,SAAS,MACrB6Z,SAAW7Z,SAAS,MACpB4Z,UAAY5Z,SAAS,OACrB8zF,SAAW9zF,SAAS,OACpB+zF,eAAiB/zF,SAAS,MAC1Bg0F,kBAAoBh0F,SAAS,MAC7B4zF,cAA+B,WAC/B,QAASpC,aAAY/yF,UAAW6c,UAAWmU,OAAQ7nB,UAAW2pF,kBAAmBxI,UAAW7uE,eAAgBo3E,oBACxGh0G,KAAKmhB,UAAYA,UACjBnhB,KAAKg+B,UAAYA,UACjBh+B,KAAKmyC,OAASA,OACdnyC,KAAKsqB,UAAYA,UACjBtqB,KAAKi0G,kBAAoBA,kBACzBj0G,KAAKyrG,UAAYA,UACjBzrG,KAAK48B,eAAiBA,eACtB58B,KAAKg0G,mBAAqBA,mBAC1Bh0G,KAAK8J,SACL9J,KAAK22G,oBAAsBn2G,OAAOC,OAAO,MACzCT,KAAK42G,eAAiBp2G,OAAOC,OAAO,MACpCT,KAAKy+C,aACLz+C,KAAKsK,YAILtK,KAAK+H,SAAW/H,KAAKi0G,kBAAoB,EACrC7nF,aACEnJ,eAAe+a,UAAUpb,WAAW5iB,KAAKsqB,UAAUjkB,KAAKkB,YAC9DvH,KAAKo1G,SAAWttG,cAAc9H,KAAKsqB,UAAUjkB,KAAKkB,UAAWvH,KAAKi0G,mBAi+BtE,MA19BAC,aAAY3zG,UAAUsJ,SAKtB,SAAU40C,UAAW/jB,UACjB,GAAI+P,OAAQzqC,IAUZ,IATAA,KAAKy+C,UAAYA,UAEZz+C,KAAKmyC,QACNnyC,KAAKyrG,UAAU3kG,QAAQ,SAAU44B,MACzBA,KAAKgE,OACL+G,MAAMksE,oBAAoBj3E,KAAKh+B,MAAQ+oC,MAAMosE,YAAY,KAAMn3E,UAItE1/B,KAAKmyC,OAAQ,CACd,GAAqB2kE,YAAa35E,mBAAmBn9B,KAAK48B,eAC1D58B,MAAKsqB,UAAUE,YAAY1jB,QAAQ,SAAU2jB,MAAOssF,YAEhD,GAAqBpsF,SAAUosF,WAAa,EACvB3M,YAAc3/E,MAAMosB,MAAQ,EAAgB,EAC5CxrB,MAAQ,UAAgCoS,4BAA4Bq5E,WAAYnsF,QAASF,MAAMosB,MACpHpM,OAAM3gC,MAAM9C,KAAK,WACb,OACIiD,WAAY,KACZ+sG,UAAW3rF,MACX4rF,QAASr0F,WAAW+K,YAAYq0D,UAAUr1D,QACtCtI,QAAQgH,OAAQhH,QAAQsG,SACxB,GAAIrH,iBAAgB,GAAIC,iBAAgBkH,MAAM2rE,aAAc/xE,QAAQ+lF,cAAc,YAMtG3jG,iBAAiBzG,KAAM06B,UACnB16B,KAAKmyC,SAA+B,IAApBzX,SAAS34B,QAAgB04B,wBAAwBC,YAEjE16B,KAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAY,KACZ+sG,UAAW,EACXC,QAASr0F,WAAW+K,YAAYk0D,WAAWl1D,QACvCtI,QAAQ,GAAe0I,UAAWA,UAAW1I,QAAQ,SAUzE6vF,YAAY3zG,UAAUqpE,MAItB,SAAUirC,sBACmB,KAArBA,mBAA+BA,qBACnC70G,KAAKsK,SAASxD,QAAQ,SAAUi2B,OAAS,MAAOA,OAAM6sC,MAAMirC,mBAC5D,IAAIx7F,IAAKrZ,KAAKk3G,yBAA0BC,oBAAsB99F,GAAG89F,oBAAqBC,sBAAwB/9F,GAAG+9F,sBAAuBC,aAAeh+F,GAAGg+F,aACrIC,iBAAmBt3G,KAAKu3G,gBAAgBJ,qBACxCK,mBAAqBx3G,KAAKu3G,gBAAgBH,uBAC1CK,UAAY,CAC5Bz3G,MAAKmyC,QAAUnyC,KAAKsqB,UAAUktB,kBAAoBH,wBAAwBC,SAC3EmgE,WAAa,EAEjB,IAAqBpC,aAAc,GAAIltB,qBAAoBnoF,KAAKo1G,UAAW,GAAIjpF,SAA2BoqF,UAAe,QAAM,GAAI3pF,iBAAgBhK,WAAW+K,YAAYg0D,SAASh1D,QAC3KtI,QAAQozF,WACRt0F,WAAWk0F,cACXG,mBACAF,qBACEv0F,WAAW4K,YAAY80D,gBAA4C,IAA3BziF,KAAKi0G,mBAA2Br7E,aAAauO,aAE/F,OADA0tE,kBAAiB7tG,KAAKquG,aACfR,kBAMXX,YAAY3zG,UAAUg3G,gBAItB,SAAUG,aACN,GAAqBC,SACrB,IAAID,YAAY31G,OAAS,EAAG,CACxB,GAAqB61G,cAChB53G,KAAKsqB,UAAU+X,QAAU3gB,iBAAiBg2F,aAAajjF,IAAuB+hF,SAAc,OAC7FoB,SAAS5wG,KAAKwvG,SAAS/1F,IAAI8b,SAASvM,KAAK,cAAc2I,WAAW34B,KAAK+H,WAE3E4vG,SAAW9zF,IACP,GAAIsI,SAA2BmQ,UAAe,KAAGzP,eACjD,GAAIV,SAA2BoQ,SAAc,KAAG1P,gBACjD+qF,SAAS/uG,OAAO6uG,aAAc7qF,mBAGjC8qF,UAAW5qF,SAEf,OAAO4qF,WAOXzD,YAAY3zG,UAAU4+C,eAKtB,SAAUt4C,IAAKpD,SAEXzD,KAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChB+sG,UAAW,EACXC,QAASr0F,WAAW+K,YAAY20D,cAAc31D,QAC1CtI,QAAQxd,IAAIw2C,gBAAiBh5B,QAAQxd,IAAIxB,aAUzD6uG,YAAY3zG,UAAU+8C,UAKtB,SAAUz2C,IAAKpD,SAGXzD,KAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAYpD,IAAIoD,WAChB+sG,UAAW,EACXC,QAASr0F,WAAW+K,YAAYm0D,SAASn1D,QACrCtI,SANsB,GAOtBA,QAAQxd,IAAIw2C,gBACZl6B,YAAYkB,QAAQxd,IAAItD,eAUxC2wG,YAAY3zG,UAAUi9C,eAKtB,SAAU32C,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACSq8B,UAAYr8B,KAAK8J,MAAM/H,MAE5C/B,MAAK8J,MAAM9C,KAAsB,KACjC,IAAqB6wG,eAAkChxG,IAAS,MAC3CixG,MAA0BD,cAAiB,IAC3CE,0BAA4BD,MAAMrkG,YAAY5N,IAAI,SAAU2c,KAAMw1F,cACnF,MAAOvtE,OAAMwtE,6BAA8B57E,UAAWA,UAAW27E,aAAcA,aAAc/tG,WAAYpD,IAAIoD,WAAYxG,QAAS+yG,SAAUjzG,MAAOif,SAIlI01F,WAAa77E,SAClCr8B,MAAK8J,MAAMuyB,WAAa,WACpB,OACIpyB,WAAYpD,IAAIoD,WAChB+sG,UAAW,EACXC,QAASr0F,WAAW+K,YAAYm0D,SAASn1D,QACrCtI,QAAQ6zF,YACR7zF,QAAQxd,IAAIw2C,gBACZl6B,WAAW20F,MAAMj8C,QAAQh2D,IAAI,SAAUd,GAAK,MAAOsf,SAAQtf,QAE/DozG,eAAgBJ,6BAS5B7D,YAAY3zG,UAAUm+C,sBAKtB,SAAU73C,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACSq8B,UAAYr8B,KAAK8J,MAAM/H,MAE5C/B,MAAK8J,MAAM9C,KAAsB,KACjC,IAAIqS,IAAKrZ,KAAKo4G,wBAAwB/7E,UAAWx1B,KAAMwkB,MAAQhS,GAAGgS,MAAOgtF,iBAAmBh/F,GAAGg/F,iBAAkBr5D,WAAa3lC,GAAG2lC,WAC5Gw2D,aAAex1G,KAAKg0G,mBAAmBh0G,KAC5DA,MAAKsK,SAAStD,KAAKwuG,cACnBA,aAAa3rG,SAAShD,IAAI43C,UAAW53C,IAAIyD,SACzC,IAAqBguG,YAAat4G,KAAK8J,MAAM/H,OAASs6B,UAAY,CAKlEr8B,MAAK8J,MAAMuyB,WAAa,WACpB,OACIpyB,WAAYpD,IAAIoD,WAChB+sG,UAAW,EAAsB3rF,MACjC4rF,QAASr0F,WAAW+K,YAAYk0D,WAAWl1D,QACvCtI,QAAQgH,OACRgtF,iBACAh0F,QAAQxd,IAAIw2C,gBACZh5B,QAAQi0F,YACR7tE,MAAM8tE,4BAA4Bl8E,UAAW2iB,YAC7Ct8B,SAAS8yF,aAAaJ,eAUtClB,YAAY3zG,UAAUi+C,aAKtB,SAAU33C,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACSq8B,UAAYr8B,KAAK8J,MAAM/H,MAE5C/B,MAAK8J,MAAM9C,KAAsB,KAEjC,IAAqByqG,QAASjlG,cAAc3F,IAAInF,MAAQ,KAAOmF,IAAInF,KAC/D2X,GAAKrZ,KAAKo4G,wBAAwB/7E,UAAWx1B,KAAMwkB,MAAQhS,GAAGgS,MAAOmtF,WAAan/F,GAAGm/F,WAAYH,iBAAmBh/F,GAAGg/F,iBAAkBI,gBAAkBp/F,GAAGq/F,aAAc15D,WAAa3lC,GAAG2lC,WAC3K25D,aACAZ,6BACAa,aACrB,IAAInH,OAAQ,CACR,GAAqBiH,cAAe7xG,IAAIw3B,OACnCx4B,IAAI,SAAUo1B,UACf,OACIx3B,QAA0B,SAC1Bw3B,SAAUA,SACVC,OAAyB,QAG5BryB,OAAO4vG,gBACRC,cAAa32G,SACbg2G,0BACIW,aAAa7yG,IAAI,SAAUixD,YAAakhD,cACpC,MAAOvtE,OAAMwtE,6BACTx0G,QAASqzD,YAAYrzD,QACrB44B,UAAWA,UACX27E,aAAcA,aACd/tG,WAAY6sD,YAAY77B,SAAShxB,WACjC1G,MAAOuzD,YAAY77B,SAAS13B,UAGxCo1G,UAAYD,aAAa7yG,IAAI,SAAUixD,aAAe,MAAO97B,mBAAkB87B,YAAY77B,SAAU67B,YAAY57B,WAErH09E,WAAaJ,WAAW3yG,IAAI,SAAUwT,IAClC,GAAIvF,QAASuF,GAAG,GAAI2+B,UAAY3+B,GAAG,EACnC,OAAO8J,aAAYkB,QAAQvQ,QAASuQ,QAAQ2zB,eAGpDvxC,iBAAiBzG,KAAM6G,IAAIyD,SAC3B,IAAqBguG,YAAat4G,KAAK8J,MAAM/H,OAASs6B,UAAY,EAC7Cw8E,QAAUhyG,IAAIwiB,WAAW1K,KAAK,SAAUuc,QAAU,MAAOA,QAAOzR,UAAUE,cAC1EmvF,iBAAoC,UACpCC,SAA4B,SAC7CF,WACAE,SAAW/4G,KAAKg+B,UAAUpb,WAAWi2F,QAAQpvF,UAAUu3B,mBACvD83D,iBAAmB94G,KAAKg+B,UAAUpb,WAAWi2F,QAAQpvF,UAAUw3B,cAInE,IAAqBi3D,YAAa77E,SAClCr8B,MAAK8J,MAAMuyB,WAAa,WACpB,OACIpyB,WAAYpD,IAAIoD,WAChB+sG,UAAW,EAAsB3rF,MACjC4rF,QAASr0F,WAAW+K,YAAYi0D,YAAYj1D,QACxCtI,QAAQ6zF,YACR7zF,QAAQgH,OACRgtF,iBACAh0F,QAAQxd,IAAIw2C,gBACZh5B,QAAQi0F,YACRj0F,QAAQotF,QACRA,OAASh2E,cAAc50B,KAAOkmB,UAC9B4rF,UAAU52G,OAASohB,WAAWw1F,WAAa5rF,UAC3C6rF,WAAW72G,OAASohB,WAAWy1F,YAAc7rF,UAC7C0d,MAAM8tE,4BAA4Bl8E,UAAW2iB,YAC7C+5D,SACAD,mBAEJX,eAAgBJ,6BAS5B7D,YAAY3zG,UAAU63G,wBAKtB,SAAU/7E,UAAWx1B,KACjB,GAAI4jC,OAAQzqC,KACSqrB,MAAQ,CACzBxkB,KAAIg0B,mBACJxP,OAAS,SAEb,IAAqBmtF,YAAa,GAAIhvF,IACtC3iB,KAAIy3C,QAAQx3C,QAAQ,SAAU6qG,OAC1B,GAAIt4F,IAAKgkB,0BAA0Bs0E,MAAO,MAAOjwG,KAAO2X,GAAG3X,KAAMoS,OAASuF,GAAGvF,MAC7E0kG,YAAW/3F,IAAImd,qBAAqB9pB,OAAQpS,OAAQoS,OAAQpS,SAEhEmF,IAAIwiB,WAAWviB,QAAQ,SAAUo0B,QAC7BA,OAAO8jB,WAAWl4C,QAAQ,SAAU6qG,OAChC,GAAIt4F,IAAKgkB,0BAA0Bs0E,MAAOz2E,QAASx5B,KAAO2X,GAAG3X,KAAMoS,OAASuF,GAAGvF,MAC/E0kG,YAAW/3F,IAAImd,qBAAqB9pB,OAAQpS,OAAQoS,OAAQpS,UAGpE,IAAqBg3G,iBACA15D,aACrBh/C,MAAKg5G,uCAAuCnyG,IAAIwiB,YAChDxiB,IAAIiiB,UAAUhiB,QAAQ,SAAUskB,YAAaU;0DACzC,GAAqBoP,YAA0B,GAC1B+9E,aAA4B,EAOjD,IANApyG,IAAIwiB,WAAWviB,QAAQ,SAAUoyG,YAAaluG,GACtCkuG,YAAYzvF,UAAUpjB,KAAKkB,YAAcc,eAAe+iB,YAAYxlB,SACpEs1B,OAASg+E,YACTD,SAAWjuG,KAGfkwB,OAAQ,CACR,GAAI7hB,IAAKoxB,MAAM0uE,gBAAgB/tF,YAAa8P,OAAQ+9E,SAAU58E,UAAWx1B,IAAI03C,WAAY13C,IAAIi2B,aAAc07E,WAA+B/tE,MAAM7N,eAAepc,IAAqB,MAAWi4F,gBAAkBp/F,GAAGq/F,aAAcU,cAAgB//F,GAAG2lC,UACrP05D,cAAa1xG,KAAK/E,MAAMy2G,aAAcD,iBACtCz5D,WAAWh4C,KAAK/E,MAAM+8C,WAAYo6D,mBAGlC3uE,OAAM4uE,eAAejuF,YAAavkB,IAAIi2B,eAG9C,IAAqBw8E,mBAoCrB,OAnCAzyG,KAAIi2B,aAAah2B,QAAQ,SAAU2E,OAC/B,GAAqBi4E,eAA6B,EAC9Cr7E,gBAAeoD,MAAMlI,SACrBknC,MAAMtpB,UAAUC,yBAAyBuM,YAAYoU,YACrD2hD,UAAY,EAEPr7E,eAAeoD,MAAMlI,SAC1BknC,MAAMtpB,UAAUC,yBAAyBuM,YAAYwU,kBACrDuhD,UAAY,EAEPr7E,eAAeoD,MAAMlI,SAC1BknC,MAAMtpB,UAAUC,yBAAyBuM,YAAYsU,eACrDyhD,UAAY,GAEC,MAAbA,WACA41B,gBAAgBtyG,KAAKmc,YAAYkB,QAAQ5Y,MAAMkf,SAAUtG,QAAQq/D,gBAGzE78E,IAAI03C,WAAWz3C,QAAQ,SAAUU,KAC7B,GAAqBk8E,eAA6B,EAC7Cl8E,KAAIjE,MAGA8E,eAAeb,IAAIjE,SACxBknC,MAAMtpB,UAAUC,yBAAyBuM,YAAYsU,eACrDyhD,UAAY,GAJZA,UAAY,EAMC,MAAbA,YACAj5C,MAAMmsE,eAAepvG,IAAI9F,MAAQ26B,UACjCi9E,gBAAgBtyG,KAAKmc,YAAYkB,QAAQ7c,IAAI9F,MAAO2iB,QAAQq/D,iBAGpE78E,IAAIy3C,QAAQx3C,QAAQ,SAAU4uG,WAC1B12D,WAAWh4C,MAAOvD,QAAS+yG,SAAUl5E,SAAUo4E,UAAWx6E,OAAyB,UAGnF7P,MAAOA,MACPmtF,WAAY90G,MAAM8jB,KAAKgxF,WAAWx2G,UAClCq2G,iBAAkBiB,gBAAgBv3G,OAASohB,WAAWm2F,iBAAmBvsF,UACzE2rF,aAAcA,aACd15D,WAAYA,aAcpBk1D,YAAY3zG,UAAU44G,gBAWtB,SAAU/tF,YAAa8P,OAAQlQ,eAAgBuuF,iBAAkBtiB,KAAMn6D,aAAc07E,WAAY96E,UAC7F,GAAI+M,OAAQzqC,KACSq8B,UAAYr8B,KAAK8J,MAAM/H,MAE5C/B,MAAK8J,MAAM9C,KAAsB,MACjCk0B,OAAOzR,UAAUwB,QAAQnkB,QAAQ,SAAU2jB,MAAOssF,YAC9C,GAAqBpsF,SAAUuQ,OAAOrQ,oBAAsBksF,WACvC1rF,MAAQ,SAAkCoS,4BAA4BC,SAAU/S,QAASF,MAAMosB,OAC/FuzD,YAAc3/E,MAAMosB,MAAQ,EAAgB,CACjEpM,OAAM3gC,MAAM9C,KAAK,WACb,OACIiD,WAAYixB,OAAOjxB,WACnB+sG,UAAW3rF,MACX4rF,QAASr0F,WAAW+K,YAAYq0D,UAAUr1D,QACtCtI,QAAQgH,OAAQhH,QAAQsG,SACxB,GAAIrH,iBAAgB,GAAIC,iBAAgBkH,MAAM2rE,aAAc/xE,QAAQ+lF,cAAc,WASlG,IAAqBkO,YAAat4G,KAAK8J,MAAM/H,OAASs6B,UAAY,EAC9DhjB,GAAKrZ,KAAKw5G,0BAA0BpuF,YAAa0R,cAAezR,MAAQhS,GAAGgS,MAAOiuF,gBAAkBjgG,GAAGigG,gBAAiB5tF,aAAerS,GAAGqS,aAAcC,SAAWtS,GAAGsS,QAC1KsrE,MAAKnwF,QAAQ,SAAUU,KACfA,IAAIjE,OAAS8E,eAAeb,IAAIjE,SAAW8E,eAAe+iB,YAAYxlB,SACtE6kC,MAAMmsE,eAAepvG,IAAI9F,MAAQ26B,UACjCi9E,gBAAgBtyG,KAAKmc,YAAYkB,QAAQ7c,IAAI9F,MAAO2iB,QAAQ,SAGhE6W,OAAOzR,UAAUE,cACjB0B,OAAS,MAEb,IAAqBstF,WAAYz9E,OAAOmD,OAAOx4B,IAAI,SAAUo1B,SAAUgkC,YACnE,GAAqBw6C,UAAWt2F,YAAYkB,QAAQ46C,YAAa56C,QAAQ4W,SAAS2jB,gBAElF,OAAO,IAAIr7B,iBAAgB0X,SAAS2jB,cAAe66D,UAAU,KAE5Cb,cACA1pB,QAAUh0D,OAAOzR,SACtCjpB,QAAOm3B,KAAKu3D,QAAQ5wC,SAASx3C,QAAQ,SAAUgtB,UAC3C,GAAqBkkB,WAAYk3C,QAAQ5wC,QAAQxqB,SAC7C0kF,YAAW/jF,IAAIujB,YAEf4gE,WAAW5xG,KAAK,GAAIuc,iBAAgBuQ,SAAUzP,QAAQ2zB,YAAY,KAG1E,IAAqB0hE,gCACjBx+E,OAAOmD,OAAOt8B,SAAmB,OAARspB,OAAuD,KAChFquF,2BACIx+E,OAAOmD,OAAOx4B,IAAI,SAAUrD,MAAOw1G,cAC/B,MAAOvtE,OAAMwtE,6BACT57E,UAAWA,UACX27E,aAAcA,aACd/tG,WAAYzH,MAAMyH,WAClBxG,QAAS+yG,SACTjzG,MAAOf,MAAMe,UAI7B,IAAqBo2G,gBAAiB/2F,WAAW+K,YAAY00D,WAAW11D,QAAQ4P,SAAUlY,QAAQgY,aAC7Eq8E,aAAex9E,OAAO6jB,eAAel5C,IAAI,SAAUo1B,UACpE,OACIx3B,QAASk2G,eACTz+E,OAAQA,OACRD,SAAUA,YAGG+jB,WAAa9jB,OAAO8jB,WAAWn5C,IAAI,SAAU8vG,cAC9D,OACIlyG,QAASk2G,eACTr8E,SAAUq4E,aAAcz6E,OAAQA,UAKnBg9E,WAAa77E,SAmBlC,OAlBAr8B,MAAK8J,MAAMuyB,WAAa,WACpB,OACIpyB,WAAYixB,OAAOjxB,WACnB+sG,UAAW,MAA4B3rF,MACvC4rF,QAASr0F,WAAW+K,YAAYo0D,cAAcp1D,QAC1CtI,QAAQ6zF,YACR7zF,QAAQgH,OACRiuF,gBAAgBv3G,OAASohB,WAAWm2F,iBAAmBvsF,UACvD1I,QAAQi0F,YACR5sF,aACAC,SACAgtF,UAAU52G,OAAS,GAAIuhB,gBAAeq1F,WAAa5rF,UACnD6rF,WAAW72G,OAAS,GAAIuhB,gBAAes1F,YAAc7rF,YAEzD6sF,iBAAkBF,2BAClBjwF,UAAWyR,OAAOzR,UAAUpjB,QAG3BqyG,aAAcA,aAAc15D,WAAYA,aAOrDk1D,YAAY3zG,UAAU84G,eAKtB,SAAUjuF,YAAa0R,cACnB98B,KAAK65G,iBAAiB75G,KAAKw5G,0BAA0BpuF,YAAa0R,gBAMtEo3E,YAAY3zG,UAAUy4G,uCAItB,SAAU3vF,YACN,GAAqBywF,kBAAmBzwF,WAAW1K,KAAK,SAAUuc,QAAU,MAAOA,QAAOzR,UAAUE,aACpG,IAAImwF,kBAAoBA,iBAAiBrwF,UAAU8D,gBAAgBxrB,OAAQ,CACvE,GAAIsX,IAAKiU,oCAAoCttB,KAAKmhB,UAAWnhB,KAAKg+B,UAAW,KAA4B87E,iBAAiBrwF,UAAU8D,iBAAkB7B,aAAerS,GAAGqS,aAAcC,SAAWtS,GAAGsS,SAAUN,MAAQhS,GAAGgS,MAAOO,UAAYvS,GAAGuS,SAC/O5rB,MAAK65G,kBACDnuF,aAAcA,aACdC,SAAUA,SACVN,MAAOA,MACPO,UAAWA,UACX0tF,mBACArvG,WAAY6vG,iBAAiB7vG,eAQzCiqG,YAAY3zG,UAAUs5G,iBAItB,SAAUjjE,MAC2B52C,KAAK8J,MAAM/H,MAI5C/B,MAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAY2sC,KAAK3sC,WACjB+sG,UAAWpgE,KAAKvrB,MAChB4rF,QAASr0F,WAAW+K,YAAYxC,aAAawB,QACzCtI,QAAQuyB,KAAKvrB,OACburB,KAAK0iE,gBAAgBv3G,OAASohB,WAAWyzB,KAAK0iE,iBAAmBvsF,UACjE6pB,KAAKhrB,UAAWgrB,KAAKlrB,aAAckrB,KAAKjrB,eAUxDuoF,YAAY3zG,UAAUi5G,0BAKtB,SAAUpuF,YAAa0R,cACnB,GACqBw8E,mBACrBx8E,cAAah2B,QAAQ,SAAU2E,OACvBpD,eAAeoD,MAAMlI,SAAW8E,eAAe+iB,YAAYxlB,QAC3D0zG,gBAAgBtyG,KAAKmc,YAAYkB,QAAQ5Y,MAAMkf,SAAUtG,QAAQ,OAGzE,IAAIhL,IAAK8R,YAAYnrB,KAAKg+B,UAAW5S,aAAcM,aAAerS,GAAGqS,aAAcC,SAAWtS,GAAGsS,SAAUouF,cAAgB1gG,GAAGgS,MAAOO,UAAYvS,GAAGuS,SACpJ,QACIP,MATyB,EASV0uF,cACfT,gBAAiBA,gBACjB5tF,aAAcA,aACdC,SAAUA,SACVC,UAAWA,UACX3hB,WAAYmhB,YAAYnhB,aAOhCiqG,YAAY3zG,UAAU4yG,SAItB,SAAUzxG,MACN,GAAIA,MAAQwwG,iBAAiBP,MAAMjwG,KAC/B,MAAOwwG,kBAAiBP,KAG5B,KAAK,GADgBqI,cAAez9E,SACVq5E,YAAc51G,KAAM41G,YAAaA,YAAcA,YAAYzjE,OACjF6nE,aAAeA,aAAahqF,KAAK,UAAUyI,KAAKrM,cAAe,CAE/D,GAAqB6tF,cAAerE,YAAYgB,eAAel1G,KAC/D,IAAoB,MAAhBu4G,aACA,MAAOr3F,YAAW+K,YAAY00D,WAAW11D,QAAQqtF,aAAc31F,QAAQ41F,eAG3E,IAAqBpE,QAASD,YAAYn3D,UAAU9/B,KAAK,SAAUk3F,QAAU,MAAOA,QAAOn0G,OAASA,MACpG,IAAIm0G,OAAQ,CACR,GAAqBqE,UAAWrE,OAAOtyG,OArtB3B,WAstBZ,OAAOy2G,cAAahqF,KAAK,WAAWA,KAAKkqF,WAGjD,MAAO,OAOXhG,YAAY3zG,UAAU45G,6BAKtB,SAAUlwG,WAAYwtB,UAClB,GAAiB,IAAbA,SAAgB,CAChB,GAAqB2iF,aAAcx3F,WAAW+K,YAAY6zD,YAC1D,OAAO,YAAc,MAAO44B,cAEhC,GAAqBlC,YAAal4G,KAAK8J,MAAM/H,MAW7C,OAVA/B,MAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZ+sG,UAAW,GACXC,QAASr0F,WAAW+K,YAAYs0D,cAAct1D,QAC1CtI,QAAQ6zF,YACR7zF,QAAQoT,eAIb,SAAU71B,MAAQ,MAAOw6B,eAAc87E,WAAYt2G,QAO9DsyG,YAAY3zG,UAAU85G,2BAKtB,SAAUpwG,WAAY0tB,MAClB,GAAoB,IAAhBA,KAAK51B,OAAc,CACnB,GAAqBu4G,aAAc13F,WAAW+K,YAAY8zD,UAC1D,OAAO,YAAc,MAAO64B,cAEhC,GAAqBz0G,KAAMwd,WAAWsU,KAAK9xB,IAAI,SAAU0T,EAAGvO,GAAK,MAAQ9I,aAAaqX,GAAKhW,MAAO8gB,QAAQrZ,QACrFktG,WAAal4G,KAAK8J,MAAM/H,MAW7C,OAVA/B,MAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZ+sG,UAAW,GACXC,QAASr0F,WAAW+K,YAAYu0D,eAAev1D,QAC3CtI,QAAQ6zF,YACRryG,SAIL,SAAUjE,MAAQ,MAAOw6B,eAAc87E,WAAYt2G,QAQ9DsyG,YAAY3zG,UAAUg6G,qBAMtB,SAAU3lG,WAAYlT,KAAM+1B,UACxB,GAAqBiI,MAA0B1/B,KAAKyrG,UAAU9sF,KAAK,SAAU+1E,aAAe,MAAOA,aAAYhzF,OAASA,MACxH,IAAIg+B,KAAKgE,KAAM,CACX,GAAqB82E,cAAex6G,KAAK8J,MAAM/H,MAC/C/B,MAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAY2K,WAAW3K,WACvB+sG,UAAW,IACXC,QAASr0F,WAAW+K,YAAYw0D,aAAax1D,QACzCtI,QAAQm2F,cACRn2F,QAAQoT,cAOpB,KAFA,GAAqBgjF,cAAel+E,SACfm+E,YAAc16G,KAC5B06G,YAAYvoE,QACfuoE,YAAcA,YAAYvoE,OAC1BsoE,aAAeA,aAAazqF,KAAK,UAAUyI,KAAKrM,aAEpD,IAAqBuuF,eAAgBD,YAAY/D,oBAAoBj1G,MAChDk5G,gBAAkBh4F,WAAW+K,YAAY00D,WAAW11D,QAAQ8tF,aAAcp2F,QAAQs2F,gBACvG,OAAO,UAAU/4G,MACb,MAAO46B,iBAAgB5nB,WAAWynB,UAAWznB,WAAWojG,aAAc57E,cAAco+E,cAAeI,iBAAiB/xG,OAAOjH,SAI/H,GAAqBy6B,WAAYr8B,KAAK62G,YAAYjiG,WAAW3K,WAAYy1B,MACpDm7E,gBAAkBj4F,WAAW+K,YAAY00D,WAAW11D,QAAQ4P,SAAUlY,QAAQgY,YACnG,OAAO,UAAUz6B,MACb,MAAO46B,iBAAgB5nB,WAAWynB,UAAWznB,WAAWojG,aAAc6C,gBAAgB91B,WAAW,YAAanjF,SAS1HsyG,YAAY3zG,UAAUs2G,YAKtB,SAAU5sG,WAAYy1B,MAClB,GAAI+K,OAAQzqC,KACSq8B,UAAYr8B,KAAK8J,MAAM/H,OACvBspB,MAAQ,CAC7BqU,MAAKr5B,KAAK6iB,eAAepiB,QAAQ,SAAUwkB,eAEnCA,gBAAkB5E,eAAeE,YACjCyE,OAASE,wBAAwBD,iBAGzC,IAAqBkB,UAAWkT,KAAKr5B,KAAKomB,OAAO5mB,IAAI,SAAUi1G,OAAS,MAAOxuF,QAAOme,MAAMzM,UAAW88E,QAYvG,OATA96G,MAAK8J,MAAM9C,KAAK,WACZ,OACIiD,WAAYA,WACZ+sG,UAAW,GACXC,QAASr0F,WAAW+K,YAAYy0D,SAASz1D,QACrCtI,QAAQgH,OAAQof,MAAMzM,UAAUpb,WAAW8c,KAAKr5B,KAAKkB,WAAY4b,WAAWqJ,eAIjF6P,WAWX63E,YAAY3zG,UAAU03G,4BAStB,SAAUrjG,YACN,GAAI61B,OAAQzqC,IACZ,QACIq8B,UAAWznB,WAAWynB,UACtB27E,aAAcpjG,WAAWojG,aACzB/tG,WAAY2K,WAAW3K,WACvBxG,QAASmR,WAAWnR,QACpBF,MAAOg0B,gCACHC,4BAA6B,SAAUC,UACnC,MAAOgT,OAAM0vE,6BAA6BvlG,WAAW3K,WAAYwtB,WAErEC,0BAA2B,SAAUC,MACjC,MAAO8S,OAAM4vE,2BAA2BzlG,WAAW3K,WAAY0tB,OAEnEC,oBAAqB,SAAUl2B,KAAM+1B,UACjC,MAAOgT,OAAM8vE,qBAAqB3lG,WAAYlT,KAAM+1B,YAEzD7iB,WAAWrR,SAMtB2wG,YAAY3zG,UAAU22G,uBAGtB,WA+BI,QAAS6D,wBAAuB1+E,UAAWpyB,WAAYwJ,YAAaunG,iBAChE,GAAqBtD,gBACAnrF,MAAQ9Y,YAAY5N,IAAI,SAAUwT,IACnD,GAAIpP,YAAaoP,GAAGpP,WAAYxG,QAAU4V,GAAG5V,QAASF,MAAQ8V,GAAG9V,MAC5C4zB,UAAY,GAAK8jF,qBACjBhG,aAAexxG,UAAY+yG,SAAW0E,KAAO,KAC9D1hG,GAAKyf,uBAAuBg8E,aAAcxxG,QAASF,MAAO4zB,UAAWqC,YAAY44E,SAAUzwF,MAAQnI,GAAGmI,MAAOyX,YAAc5f,GAAG4f,WAElI,OADAs+E,aAAY1wG,KAAK/E,MAAMy1G,YAAa/1F,MAAM9b,IAAI,SAAUsc,MAAQ,MAAOD,oCAAmCC,KAAMlY,eACzGsY,oCAAoC6W,YAAanvB,aAK5D,QAHIwJ,YAAY1R,QAAUi5G,kBACtBtD,YAAY1wG,KAAKkb,mCAAmCka,cAAcC,UAAW9P,OAAO8N,SAAUpwB,aAE3FytG,YA3CX,GAAqBwD,MAAOl7G,KACPi7G,mBAAqB,EACrB9D,uBACAC,yBACAC,aAAer3G,KAAK8J,MAAMjE,IAAI,SAAUpG,QAAS48B,WAClE,GAAIhjB,IAAK5Z,UAAWw3G,QAAU59F,GAAG49F,QAASD,UAAY39F,GAAG29F,UAAW4C,iBAAmBvgG,GAAGugG,iBAAkBzB,eAAiB9+F,GAAG8+F,eAAgBluG,WAAaoP,GAAGpP,UAehK,OAdIkuG,iBACAhB,oBAAoBnwG,KAAK/E,MAAMk1G,oBAAqB4D,uBAAuB1+E,UAAWpyB,WAAYkuG,gBAAgB,IAElHyB,kBACAxC,sBAAsBpwG,KAAK/E,MAAMm1G,sBAAuB2D,uBAAuB1+E,UAAWpyB,WAAY2vG,kBAA+B,OAAZ5C,WAA2D,IAUjLz0F,oCAH2C,EAAZy0F,UAClC,GAAIpuB,YAAW2tB,UAAU5pF,WAAWA,WAAYsqF,UAChDA,QACuDhtG,aAE/D,QAASktG,oBAAqBA,oBAAqBC,sBAAuBA,sBAAuBC,aAAcA,eA6BnHnD,YAAY3zG,UAAUg4G,4BAKtB,SAAUl8E,UAAW8+E,UACjB,GAAI1wE,OAAQzqC,KACSo7G,oBACAC,wBAA0B,CAC/CF,UAASr0G,QAAQ,SAAUuS,IACvB,GAAI5V,SAAU4V,GAAG5V,QAAS65B,SAAWjkB,GAAGikB,SAAUpC,OAAS7hB,GAAG6hB,OACzC/D,UAAY,GAAKkkF,0BACjBpG,aAAexxG,UAAY+yG,SAAW/rE,MAAQ,KAC/DjxB,GAAKud,qBAAqBk+E,aAAcxxG,QAAS65B,SAASwgB,QAAS3mB,WAAYxV,MAAQnI,GAAGmI,MAAOwwF,aAAe34F,GAAG24F,aAClGmJ,UAAY35F,KAC7BwwF,eACAmJ,UAAUt0G,KAAK0vG,kBAAkBj2F,IAAI0xF,aAAaltD,IAAIyxD,oBAAoBr8E,SAE9E,IAAIrgB,IAAKqjB,0BAA0BC,SAAUpC,QAASqgF,YAAcvhG,GAAGlG,OAAQkkC,UAAYh+B,GAAGtY,KACzE85G,cAAgB59E,qBAAqB29E,YAAavjE,UACvEojE,kBAAiBp0G,KAAKkb,mCAAmC,GAAIkC,QAAOC,QAAQm3F,eAAe91B,UAAU+wB,gBAAiB6E,WAAYh+E,SAASrzB,cAE/I,IAAqBwxG,cACrB,IAAIL,iBAAiBr5G,OAAS,EAAG,CAC7B,GAAqB61G,WAAYlB,kBAAkBj2F,IAAI4D,SAAQ,IAAOsU,WAAWirD,aAC5E5jF,KAAKsqB,UAAU+X,QAAU3gB,iBAAiB05F,kBAAkB3mF,IAAuB+hF,SAAc,OAClGoB,SAAS5wG,KAAKwvG,SAAS/1F,IAAI8b,SAASvM,KAAK,cAAc2I,WAAW34B,KAAK+H,WAE3E0zG,cAAgB53F,IACZ,GAAIsI,SAA2BoQ,SAAc,KAAG1P,eAChD,GAAIV,SAA2BsqF,eAAoB,KAAG5pF,eACtD,GAAIV,SAA2B+lF,iBAAiBP,MAAW,KAAG9kF,gBAC/D+qF,SAAS/uG,OAAOuyG,kBAAmB,GAAIxuF,iBAAgB8pF,qBAAsB7pF,mBAGhF4uF,eAAgB1uF,SAEpB,OAAO0uF,gBAOXvH,YAAY3zG,UAAU0+C,eAKtB,SAAUp4C,IAAKpD,WAMfywG,YAAY3zG,UAAUs+C,uBAKtB,SAAUh4C,IAAKpD,WAMfywG,YAAY3zG,UAAU49C,eAKtB,SAAUt3C,IAAKpD,WAMfywG,YAAY3zG,UAAU89C,cAKtB,SAAUx3C,IAAKpD,WAMfywG,YAAY3zG,UAAUy9C,WAKtB,SAAUn3C,IAAKpD,WAMfywG,YAAY3zG,UAAUq9C,qBAKtB,SAAU/2C,IAAKpD,WAMfywG,YAAY3zG,UAAUm9C,UAKtB,SAAU72C,IAAKpD,WACRywG,eA2NPwH,eASAC,gBAAiC,SAAUjxG,QAE3C,QAASixG,iBAAgBC,UACrB,GAAInxE,OAAQ//B,OAAOyrC,KAAKn2C,KAAM47G,SAASv1G,OAASrG,IAGhD,OAFAyqC,OAAMmxE,SAAWA,SACjBnxE,MAAMmyB,SAAWg/C,SACVnxE,MAoDX,MAzDAxqC,WAAU07G,gBAAiBjxG,QAY3BixG,gBAAgBp7G,UAAUkiB,gBAK1B,SAAUjf,QAASC,SACf,MAAIA,WAAYi4G,YAGL17G,KAAK48D,SAASn6C,gBAAgBjf,QAASC,SAGvCzD,KAAK47G,SAASn5F,gBAAgBjf,QAASC,UAOtDk4G,gBAAgBp7G,UAAUihB,aAI1B,SAAUjI,GACN,MAAOA,aAAaoiG,kBAAmB37G,KAAK47G,SAASp6F,aAAajI,EAAEqiG,WAKxED,gBAAgBp7G,UAAUomF,WAG1B,WAAc,OAAO,GAKrBg1B,gBAAgBp7G,UAAUs7G,MAI1B,SAAUjnG,YACN5U,KAAK47G,SAAWhnG,WAChB5U,KAAK87G,QAAS,GAEXH,iBACTrsF,YAMEqkB,aAA8B,WAC9B,QAASA,gBACL3zC,KAAK+5B,cACL/5B,KAAK+7G,SAAW,GAAIvyF,KACpBxpB,KAAKg8G,iBAAmB,GAAIxyF,KAC5BxpB,KAAKi8G,oBAAsB,GAAIzyF,KAC/BxpB,KAAKk8G,qBAAuB,GAAI1yF,KAChCxpB,KAAKm8G,qBAAuB,GAAI3yF,KAChCxpB,KAAKo8G,gBAAkB,GAAI5yF,KAC3BxpB,KAAKq8G,cAAgB,EA0NzB,MAnNA1oE,cAAapzC,UAAU++B,gBAKvB,SAAUmC,WAAY66E,aAClB,GAAI76E,qBAAsBnd,cAAemd,qBAAsBk6E,iBAG3D,MAAOl6E,WAEX,IAAqBvtB,KAAMlU,KAAKu8G,MAAM96E,YACjBo6E,MAAQ77G,KAAK+7G,SAASv7F,IAAItM,KAC1BsoG,UAAW,CAMhC,IALKX,QACDA,MAAQ,GAAIF,iBAAgBl6E,YAC5BzhC,KAAK+7G,SAASt7F,IAAIvM,IAAK2nG,OACvBW,UAAW,IAETA,WAAaX,MAAMC,QAAYU,UAAYF,YAAc,CAE3D,GAAqB5kD,QAAS13D,KAAKy8G,WACnCz8G,MAAK+5B,WAAW/yB,KAAK0b,SAASg1C,QAAQj3C,IAAIghB,YAAY9I,WAAW9L,eAAgB+L,aAAaC,SAC9FgjF,MAAMA,MAAMn5F,SAASg1C,SAEzB,MAAOmkD,QASXloE,aAAapzC,UAAUm8G,cAOvB,SAAUr2G,KAAMmP,KAAMgP,IAAK83F,iBACH,KAAhBA,cAA0BA,aAAc,EAC5C,IAAqBK,aAAc38G,KAAK48G,cAAcpnG,MACjCqmG,MAAQc,YAAYn8F,IAAIna,MACxBm2G,UAAW,CAChC,KAAKX,MAAO,CACR,GAAqBpa,UAAWzhG,KAAK0+B,eAAelpB,KACpDqmG,OAAQ,GAAIF,iBAAgBn3F,IAAI5B,WAAWvc,MAAM2pB,KAAKyxE,WACtDkb,YAAYl8F,IAAIpa,KAAMw1G,OACtBW,UAAW,EAEf,IAAMA,WAAaX,MAAMC,QAAYU,UAAYF,YAAc,CAC3D,GAAqBh7C,QAASthE,KAAKy8G,WACnCz8G,MAAK+5B,WAAW/yB,KAAK0b,SAAS4+C,QAAQ7gD,IAAIo7F,MAAMD,UAAUjjF,WAAW9L,eAAgB+L,aAAaC,SAClGgjF,MAAMA,MAAMn5F,SAAS4+C,SAEzB,MAAOu6C,QAMXloE,aAAapzC,UAAUghC,kBAIvB,SAAUE,YAEN,GAAIA,qBAAsBre,kBAAkB,CACxC,GAAqBy5F,iBAAkBp7E,WAAW+mD,QAAQ3iF,IAAI,SAAU0T,GAAK,MAAOA,GAAEotE,aAAeptE,EAAI8K,QAAQ,QAC5FnQ,IAAMlU,KAAKu8G,MAAMp5F,WAAW05F,iBACjD,OAAO78G,MAAK88G,mBAAmB5oG,IAAKutB,WAAW+mD,QAAS,SAAUA,SAAW,MAAOrlE,YAAWqlE,WAG/F,GAAqBu0B,kBAAmB15F,WAAWoe,WAAW+mD,QAAQ3iF,IAAI,SAAU0T,GAChF,OACIrF,IAAKqF,EAAErF,IACP3Q,MAAOgW,EAAEhW,MAAMojF,aAAeptE,EAAEhW,MAAQ8gB,QAAQ,MAChDb,OAAQjK,EAAEiK,WAGGtP,IAAMlU,KAAKu8G,MAAMQ,iBACtC,OAAO/8G,MAAK88G,mBAAmB5oG,IAAKutB,WAAW+mD,QAAQ3iF,IAAI,SAAU0T,GAAK,MAAOA,GAAEhW,QAAW,SAAUilF,SACpG,MAAOnlE,YAAWmlE,QAAQ3iF,IAAI,SAAUtC,MAAO8B,OAC3C,OACI6O,IAAKutB,WAAW+mD,QAAQnjF,OAAO6O,IAC/B3Q,MAAOA,MACPigB,OAAQie,WAAW+mD,QAAQnjF,OAAOme,cAYtDmwB,aAAapzC,UAAUu8G,mBAMvB,SAAU5oG,IAAKlS,OAAQg7G,WACnB,GAAIvyE,OAAQzqC,KACS0hC,eAAiB1hC,KAAKg8G,iBAAiBx7F,IAAItM,KAC3CytB,wBAA0B3/B,OAAOykB,OAAO,SAAWlN,GAAK,OAAQA,EAAEotE,cACvF,KAAKjlD,eAAgB,CACjB,GAAqBu7E,mBAAoBj7G,OAAO6D,IAAI,SAAU0T,EAAGlU,OAAS,MAAOkU,GAAEotE,aAAel8C,MAAMnL,gBAAgB/lB,GAAG,GAAQmJ,SAAS,IAAMrd,SAC7H2lF,WAAaiyB,kBAAkBx2F,OAAOqX,YAAYj4B,IAAI,SAAU0T,GAAK,MAAO,IAAI4S,SAA2B5S,EAAO,KAAG6S,gBACrH8wF,wBAA0Br5F,GAAGmnE,YAAa,GAAIp+D,iBAAgBowF,UAAUC,qBAAsBpwF,eAC9F+gE,OAAS5tF,KAAKy8G,WACnCz8G,MAAK+5B,WAAW/yB,KAAK0b,SAASkrE,QAAQntE,IAAIy8F,yBAAyBvkF,WAAW9L,eAC1E+L,aAAaC,SAEjB6I,eAAiBhf,SAASkrE,QAC1B5tF,KAAKg8G,iBAAiBv7F,IAAIvM,IAAKwtB,gBAEnC,OAASA,eAAgBA,eAAgBC,wBAAyBA,0BAkBtEgS,aAAapzC,UAAU6yE,WASvB,SAAUrmE,QAAU,MAAO,GAAKA,OAAS/M,KAAKq8G,iBAK9C1oE,aAAapzC,UAAUq8G,cAIvB,SAAUpnG,MACN,OAAQA,MACJ,IAAK,GACD,MAAOxV,MAAKm8G,oBAChB,KAAK,GACD,MAAOn8G,MAAKk8G,oBAChB,KAAK,GACD,MAAOl8G,MAAKi8G,mBAChB,KAAK,GACD,MAAOj8G,MAAKo8G,gBAGpB,MADA/3G,OAAM,2BAA6BmR,MAC5BxV,KAAKm8G,sBAMhBxoE,aAAapzC,UAAUm+B,eAIvB,SAAUlpB,MACN,OAAQA,MACJ,IAAK,GACD,MAAO,gBACX,KAAK,GACD,MAAO,gBACX,KAAK,GACD,MAAO,eACX,KAAK,GACD,MAAO,YAGf,MADAnR,OAAM,2BAA6BmR,MAC5B,aAKXm+B,aAAapzC,UAAUk8G,UAGvB,WAAc,MAAOz8G,MAAKozE,WAxSR,OA6SlBz/B,aAAapzC,UAAUg8G,MAIvB,SAAU3nG,YACN,MAAOA,YAAW6N,gBAAgB,GAAI06F,YAAczB,cAEjD/nE,gBAEPwpE,WAA4B,WAC5B,QAASA,cACLn9G,KAAK4mF,iBAAmB/oD,QACxB79B,KAAK8mF,kBAAoBjpD,QACzB79B,KAAKgnF,kBAAoBnpD,QACzB79B,KAAKknF,mBAAqBrpD,QAC1B79B,KAAKunF,sBAAwB1pD,QAC7B79B,KAAKwnF,wBAA0B3pD,QAC/B79B,KAAK0nF,qBAAuB7pD,QAC5B79B,KAAK8nF,qBAAuBjqD,QAC5B79B,KAAK+nF,aAAelqD,QACpB79B,KAAKgoF,uBAAyBnqD,QAC9B79B,KAAKioF,cAAgBpqD,QACrB79B,KAAKkoF,kBAAoBrqD,QACzB79B,KAAKqoF,wBAA0BxqD,QAC/B79B,KAAKsoF,kBAAoBzqD,QACzB79B,KAAKuoF,iBAAmB1qD,QACxB79B,KAAK6oF,eAAiBhrD,QAwD1B,MAlDAs/E,YAAW58G,UAAUonF,iBAIrB,SAAU9gF,KACN,MAAO,IAA2B,gBAAdA,KAAItD,MAAqB,IAAMsD,IAAItD,MAAQ,IAAMsD,IAAItD,QAO7E45G,WAAW58G,UAAUmoF,sBAKrB,SAAU7hF,IAAKpD,SACX,GAAIgnC,OAAQzqC,IACZ,OAAO,IAAM6G,IAAI2hF,QAAQ3iF,IAAI,SAAU8Z,OAAS,MAAOA,OAAM8C,gBAAgBgoB,MAAOhnC,WAAaqC,KAAK,KAAO,KAOjHq3G,WAAW58G,UAAUooF,oBAKrB,SAAU9hF,IAAKpD,SACX,GAAIgnC,OAAQzqC,KACS0kB,SAAW,SAAU/E,OACtC,MAAOA,OAAMzL,IAAM,IAAMyL,MAAMpc,MAAMkf,gBAAgBgoB,MAAOhnC,SAEhE,OAAO,IAAMoD,IAAI2hF,QAAQ3iF,IAAI6e,UAAU5e,KAAK,MAMhDq3G,WAAW58G,UAAUqnF,kBAIrB,SAAU/gF,KACN,MAAOA,KAAItD,MAAMyhC,WAAa,MAAQn+B,IAAItD,MAAMyhC,WAAa,IAAMn+B,IAAItD,MAAM7B,KACzE,MAAQmF,IAAItD,MAAMmwC,QAAQhyC,MAE3By7G,cAgCPC,cAA+B,WAC/B,QAASA,eAAcrpD,YAAamhB,cAAeC,eAAgB6G,aAC/C,KAAZA,UAAsBA,QAAU,MACpCh8E,KAAK+zD,YAAcA,YACnB/zD,KAAKk1E,cAAgBA,cACrBl1E,KAAKm1E,eAAiBA,eACtBn1E,KAAKg8E,QAAUA,QACfh8E,KAAKs1E,aA0ET,MAlEA8nC,eAAc78G,UAAU88G,mBAMxB,SAAUz9B,KAAM72E,IAAKoN,qBACjB,GAAqBmnG,kBAAmBt9G,KAAK+zD,YAAY7/B,MAAM0rD,KAAM72E,KAAK,EAAMoN,oBAChF,IAAImnG,iBAAiB5qF,OAAO3wB,OACxB,MAAOu7G,kBAAiB5qF,MAE5B,IAAqB6qF,kBAAmB1/F,gBAAgBy/F,iBAAiB7qF,UAAWtc,oBAAqBnW,KAAKk1E,cAAel1E,KAAKm1E,eAClI,OAAIooC,kBAAiB7qF,OAAO3wB,OACjBw7G,iBAAiB7qF,SAE3BrZ,GAAKrZ,KAAKs1E,WAAWtuE,KAAK/E,MAAMoX,GAAIkkG,iBAAiBp9F,aAEtD,IAAI9G,KAOR+jG,cAAc78G,UAAUi9G,YAGxB,WAAc,MAAOx9G,MAAKs1E,WAM1B8nC,cAAc78G,UAAU25E,MAKxB,SAAUwF,WAAY+9B,eAClB,GAAqBt9F,aACAu9F,cAAgB,GAAIC,oBAEzC39G,MAAKs1E,UAAUxuE,QAAQ,SAAUqK,SAC7B,GAAqB5H,IAAKm2E,WAAWrnE,OAAOlH,QACvCgP,UAAS7Z,eAAeiD,KAIxB8P,GAAK8G,SAAS5W,IAAI+jE,SAAStmE,KAAK/E,MAAMoX,GAAIlI,QAAQm8D,SAHnDntD,SAAS5W,IAAM4H,OAKnB,IAAIkI,KAGR,IAAqBukG,SAAUp9G,OAAOm3B,KAAKxX,UAAUta,IAAI,SAAU0D,IAC/D,GAAqB82E,QAASX,WAAWrH,iBAAiBl4D,SAAS5W,KAC9Cs0G,IAAM19F,SAAS5W,IACfO,MAAQu2E,OAASq9B,cAAcjiC,QAAQoiC,IAAI/zG,MAAOu2E,QAAUw9B,IAAI/zG,MAChEg0G,mBAAqB,GAAI3wC,SAAQrjE,YAAe+zG,IAAIrlG,QAASqlG,IAAIpgG,YAAalU,GAKnG,OAJAu0G,oBAAmBxwC,QAAUuwC,IAAIvwC,QAC7BmwC,eACAK,mBAAmBxwC,QAAQxmE,QAAQ,SAAUkP,QAAU,MAAOA,QAAOnO,SAAW41G,cAAcznG,OAAOnO,YAElGi2G,oBAEX,OAAOp+B,YAAWxF,MAAM0jC,QAAS59G,KAAKg8E,UAEnCohC,iBAEPO,oBAAqC,SAAUjzG,QAE/C,QAASizG,uBACL,MAAkB,QAAXjzG,QAAmBA,OAAOzI,MAAMjC,KAAM8B,YAAc9B,KA2D/D,MA7DAC,WAAU09G,oBAAqBjzG,QAS/BizG,oBAAoBp9G,UAAUk7E,QAK9B,SAAU3xE,MAAOu2E,QACb,GAAI51C,OAAQzqC,IACZ,OAAOqgF,QAASv2E,MAAMjE,IAAI,SAAUmL,GAAK,MAAOA,GAAEpK,MAAM6jC,MAAO41C,UAAcv2E,OAOjF6zG,oBAAoBp9G,UAAUssE,oBAK9B,SAAUC,GAAIuT,QACV,GAAI51C,OAAQzqC,KACS+sE,UAA+BsT,OAAOrgE,aAAa8sD,GAAGC,WACtDC,UAAYF,GAAGE,UAA+BqT,OAAOrgE,aAAa8sD,GAAGE,WAAeF,GAAGE,UACvF1iE,SAAWwiE,GAAGxiE,SAASzE,IAAI,SAAUmL,GAAK,MAAOA,GAAEpK,MAAM6jC,MAAO41C,SACrF,OAAO,IAAIvS,gBAAehB,GAAGjtD,IAAKitD,GAAGv/D,MAAOw/D,UAAWC,UAAW1iE,SAAUwiE,GAAG9B,OAAQ8B,GAAG7iE,aAO9F0zG,oBAAoBp9G,UAAU0sE,iBAK9B,SAAUH,GAAIuT,QACV,MAAO,IAAItS,aAAYjB,GAAGvpE,MAA0B88E,OAAOrgE,aAAa8sD,GAAGprE,MAASorE,GAAG7iE,aAO3F0zG,oBAAoBp9G,UAAU2sE,oBAK9B,SAAUJ,GAAIuT,QACV,MAAO,IAAIrS,gBAAelB,GAAGvpE,MAA0B88E,OAAOrgE,aAAa8sD,GAAGprE,MAASorE,GAAG7iE,aAEvF0zG,qBACT1vC,cAaE8vC,OAAS,gBACTn/E,cAA+B,WAC/B,QAASjR,gBA+DT,MA5DAA,aAAYqwF,WAAa,IACzBrwF,YAAYswF,oBAAsB,IAClCtwF,YAAYuwF,iBAAmB,YAE/BvwF,YAAYwwF,eAAkBz8G,KAAM,KAAMsjC,WAAY+4E,QACtDpwF,YAAYywF,YAAe18G,KAAM,KAAMsjC,WAAY+4E,QACnDpwF,YAAY0wF,iBAAoB38G,KAAM,KAAMsjC,WAAY+4E,QACxDpwF,YAAY2wF,kBAAqB58G,KAAM,KAAMsjC,WAAY+4E,QACzDpwF,YAAY4wF,cAAiB78G,KAAM,KAAMsjC,WAAY+4E,QACrDpwF,YAAY6wF,cAAiB98G,KAAM,KAAMsjC,WAAY+4E,QACrDpwF,YAAY8wF,iBAAoB/8G,KAAM,KAAMsjC,WAAY+4E,QACxDpwF,YAAY+wF,cAAiBh9G,KAAM,KAAMsjC,WAAY+4E,QACrDpwF,YAAYgxF,uBAA0Bj9G,KAAM,MAAOsjC,WAAY+4E,QAC/DpwF,YAAYixF,qBAAwBl9G,KAAM,MAAOsjC,WAAY+4E,QAC7DpwF,YAAYkxF,iBAAoBn9G,KAAM,KAAMsjC,WAAY+4E,QACxDpwF,YAAYnd,MAAS9O,KAAM,KAAMsjC,WAAY+4E,QAC7CpwF,YAAYmxF,gBAAmBp9G,KAAM,KAAMsjC,WAAY+4E,QACvDpwF,YAAYoxF,iBAAoBr9G,KAAM,KAAMsjC,WAAY+4E,QACxDpwF,YAAYmlB,MAASpxC,KAAM,KAAMsjC,WAAY+4E,QAC7CpwF,YAAY8S,gBAAmB/+B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAY+S,gBAAmBh/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYgT,gBAAmBj/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYiT,gBAAmBl/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYkT,gBAAmBn/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYmT,gBAAmBp/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYoT,gBAAmBr/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYqT,gBAAmBt/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYsT,gBAAmBv/B,KAAM,MAAOsjC,WAAY+4E,QACxDpwF,YAAYqxF,eAAkBt9G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYsxF,eAAkBv9G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYuxF,eAAkBx9G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYwxF,eAAkBz9G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYyxF,eAAkB19G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAY0xF,eAAkB39G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAY2xF,eAAkB59G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAY4xF,eAAkB79G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAY6xF,eAAkB99G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYkU,eAAkBngC,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYwT,WAAcz/B,KAAM,OAAQsjC,WAAY+4E,QACpDpwF,YAAYyT,WAAc1/B,KAAM,OAAQsjC,WAAY+4E,QACpDpwF,YAAY0T,WAAc3/B,KAAM,OAAQsjC,WAAY+4E,QACpDpwF,YAAY8xF,WAAc/9G,KAAM,OAAQsjC,WAAY+4E,QACpDpwF,YAAY2T,WAAc5/B,KAAM,OAAQsjC,WAAY+4E,QACpDpwF,YAAYutD,MAASx5E,KAAM,MAAOsjC,WAAY+4E,QAC9CpwF,YAAY+R,MAASh+B,KAAM,MAAOsjC,WAAY+4E,QAC9CpwF,YAAY+xF,YAAeh+G,KAAM,KAAMsjC,WAAY+4E,QACnDpwF,YAAYgyF,eAAkBj+G,KAAM,MAAOsjC,WAAY+4E,QACvDpwF,YAAYiyF,kBAAqBl+G,KAAM,KAAMsjC,WAAY+4E,QACzDpwF,YAAYkyF,oBAAuBn+G,KAAM,KAAMsjC,WAAY+4E,QAC3DpwF,YAAY4U,kBAAqB7gC,KAAM,oBAAqBsjC,WAAY+4E,QACxEpwF,YAAY6U,mBAAsB9gC,KAAM,qBAAsBsjC,WAAY+4E,QAC1EpwF,YAAY8U,wBAA2B/gC,KAAM,0BAA2BsjC,WAAY+4E,QACpFpwF,YAAY+U,QAAWhhC,KAAM,UAAWsjC,WAAY+4E,QACpDpwF,YAAY0S,iBAAoB3+B,KAAM,mBAAoBsjC,WAAY+4E,QACtEpwF,YAAYkR,iBACRn9B,KAAM,mBACNsjC,WAAY+4E,QAEhBpwF,YAAYgW,YAAejiC,KAAM,cAAesjC,WAAY+4E,QAC5DpwF,YAAYyS,oBAAuB1+B,KAAM,sBAAuBsjC,WAAY+4E,QACrEpwF,eAiBPkS,aAAe,MA2GfigF,yBAA2BzmG,MAC3BA,GAAG8hB,oBAAoBC,UAAYwD,cAAcy/E,gBACjDhlG,GAAG8hB,oBAAoBx6B,WAAai+B,cAAc0/E,iBAClDjlG,GAAG8hB,oBAAoBG,OAASsD,cAAc2/E,aAC9CllG,GAAG8hB,oBAAoBI,OAASqD,cAAc4/E,aAC9CnlG,IAgDAuoB,yBACAhD,cAAcogF,cAAepgF,cAAcqgF,cAAergF,cAAcsgF,cAAetgF,cAAcugF,cAAevgF,cAAcwgF,cAClIxgF,cAAcygF,cAAezgF,cAAc0gF,cAAe1gF,cAAc2gF,cAAe3gF,cAAc4gF,eAerGO,aAA8B,WAC9B,QAASA,cAAa5tE,QAClBnyC,KAAKmyC,OAASA,OACdnyC,KAAK6F,IAAM,GAAI2jB,KACfxpB,KAAKggH,mBAAqB,EA2D9B,MArDAD,cAAax/G,UAAUigB,IAIvB,SAAU9e,MAEN,IADA,GAAqB4pF,SAAUtrF,KACxBsrF,SAAS,CACZ,GAAqB/nF,OAAQ+nF,QAAQzlF,IAAI2a,IAAI9e,KAC7C,IAAa,MAAT6B,MAGA,MADAvD,MAAK6F,IAAI4a,IAAI/e,KAAM6B,OACZA,KAEX+nF,SAAUA,QAAQn5C,OAEtB,MAAO,OAOX4tE,aAAax/G,UAAUkgB,IAKvB,SAAU/e,KAAM6B,OAIZ,OAHCvD,KAAK6F,IAAI4uB,IAAI/yB,OACV2C,MAAM,YAAc3C,KAAO,sCAAwC1B,KAAK6F,IAAI2a,IAAI9e,OACpF1B,KAAK6F,IAAI4a,IAAI/e,KAAM6B,OACZvD,MAKX+/G,aAAax/G,UAAUw/B,YAGvB,WAAc,MAAO,IAAIggF,cAAa//G,OAItC+/G,aAAax/G,UAAU0/G,mBAGvB,WAGI,IAFA,GAAqB30B,SAAUtrF,KAExBsrF,QAAQn5C,QACXm5C,QAAUA,QAAQn5C,MACtB,OAlOe,KAkOgBm5C,QAAQ00B,sBAEpCD,gBAEPjgF,WAAa,GAAIigF,cAAa,MAAMt/F,IAAI,SAAUiC,SAAS,WAC3Dkd,0BAA2C,WAC3C,QAASA,2BAA0B5B,UAAWS,aAActd,UAAW++F,iBAAkBC,aAAc/0E,MAAOpL,mBAAoBogF,YAAa5gF,aAAcR,WAC3I,KAAVoM,QAAoBA,MAAQ,EAChC,IAAIX,OAAQzqC,IACZA,MAAKg+B,UAAYA,UACjBh+B,KAAKy+B,aAAeA,aACpBz+B,KAAKmhB,UAAYA,UACjBnhB,KAAKkgH,iBAAmBA,iBACxBlgH,KAAKmgH,aAAeA,aACpBngH,KAAKorC,MAAQA,MACbprC,KAAKggC,mBAAqBA,mBAC1BhgC,KAAKogH,YAAcA,YACnBpgH,KAAKw/B,aAAeA,aACpBx/B,KAAKg/B,MAAQA,MACbh/B,KAAKqgH,WAAa,EAClBrgH,KAAKsgH,gBAAkB,EACvBtgH,KAAKugH,gBAAkB,EACvBvgH,KAAKwgH,qBAAsB,EAC3BxgH,KAAKygH,WACLzgH,KAAK0gH,iBACL1gH,KAAK2gH,gBACL3gH,KAAK4gH,aACL5gH,KAAK6gH,gBACL7gH,KAAK8gH,YACL9gH,KAAK+gH,2BAA6B,EAClC/gH,KAAKsgC,YAAcA,YACnBtgC,KAAK69B,QAAU+E,UAEf5iC,KAAKm+C,eAAiBvb,UACtB5iC,KAAKq+C,cAAgBzb,UACrB5iC,KAAKg+C,WAAapb,UAClB5iC,KAAK49C,qBAAuBhb,UAC5B5iC,KAAK09C,UAAY9a,UAEjB5iC,KAAKi/C,eAAiBrc,UACtB5iC,KAAK6+C,uBAAyBjc,UAC9B5iC,KAAKghH,gBAAkB,GAAIC,gBAAejjF,UAAW,WAAc,MAAOyM,OAAMy2E,oBAAuB,SAAUx/G,KAAMsL,UAAWm0G,KAAM59G,OACpI48G,aAAa1/F,IAAIzT,UAAWzJ,MAC5B,IAAqBm8B,MAA0BV,MAAMxe,IAAI9e,KACzDg+B,OAAQr7B,MAAM,uBAAyB3C,KACvC,IAAqB0/G,gBAAiB3iF,aAAai+E,cAAch9E,KAAKr5B,KAAKkB,UAAW,EAAcy2B,WAA+C,EACnJyM,OAAMi2E,cAAc15G,KAAK4b,WAAWgc,cAAcc,MAC7C/S,QACDtI,QAAQ88F,MAAOC,eAAgBA,eAAer8B,WAAWnmD,cAAco/E,iBAEtE3jF,YAuZb,MA/YAuF,2BAA0Br/B,UAAU0/B,sBAKpC,SAAUv5B,KAAM+3C,WAEZ,IAAK,GAAI58C,IAAK,EAAGw/G,YAAc5iE,UAAW58C,GAAKw/G,YAAYt/G,OAAQF,KAAM,CACrE,GAAIy/G,aAAcD,YAAYx/G,IACT0/G,aAAeD,YAAY5/G,KAC3BkT,WAAa8N,SAAS1iB,KAAKkgH,kBAAkBlwF,KAAKsxF,YAAY/9G,OAlStE,aAmSQi+G,WAAaxhH,KAAKmgH,aAAaF,qBAC/BwB,YAAc/+F,SAAS8+F,YAAY/gG,IAAI7L,YAAY+jB,WAAW9L,eAC/E+L,aAAaC,OAGjB74B,MAAKmgH,aAAa1/F,IAAI8gG,aAAc7+F,SAAS8+F,aAE7CxhH,KAAK2gH,aAAa35G,KAAKy6G,aAG3B,GAAIzhH,KAAKggC,oBAAsBhgC,KAAKggC,mBAAmBj+B,OAAS,EAAG,CAC/D,GAAqB2/G,oBAAqB5+E,qBAAqBp8B,KAAM1G,KAAKggC,mBAE1E,IADAhgC,KAAK2hH,oBAAsBD,mBACvBA,mBAAmBxhB,KAAO,EAAG,CAC7B,GAAqB0hB,WACrBl+G,OAAM8jB,KAAKk6F,mBAAmB1/G,UAAU8E,QAAQ,SAAU+6G,MAClDA,KAAKjxF,WACLgxF,QAAQC,KAAKx8G,MAAQ,GAAKw8G,KAAKjxF,WAGvC,IAAqBkxF,iBAAkB9hH,KAAK+gH,2BAA6B/gH,KAAKkhH,mBACzDl2B,YAAc3mE,QAAQy9F,mBAC1CF,QAAQ3vF,KAAK,SAAU1uB,OAAS,OAAQA,SAAac,MAAM,gDACxDu9G,QAAQ7/G,OAAS,GACjBipF,WAAWhkF,KAAKhH,KAAKg+B,UAAUS,aAAaa,gBAAgBkE,UAAUo+E,UAA8C,IAExH5hH,KAAK+hH,YAAY9/G,MAAMjC,MAAOA,KAAK0gH,cAAe,KAAM9hF,cAAc+gF,eAAe92G,OAAOmiF,cAGpGvkF,iBAAiBzG,KAAM0G,KACvB,IAAqBs7G,cAAehiH,KAAK0gH,cAAc3+G,OAAS,GAC3DkiB,OAAOvB,SA9UK,MA8UyB1iB,KAAK0gH,kBAE/C,OAAO78F,KACH,GAAIsI,SAAQnsB,KAAKkgH,iBAAkB,MAAO,GAAI/zF,SAjVjC,KAiV6Dy3D,YAC3E5jF,KAAKygH,QAAQ53G,OAAOm5G,aAAchiH,KAAK2gH,aAAc3gH,KAAK4gH,UAAW5gH,KAAK6gH,aAAc7gH,KAAK8gH,UAAWj0F,cAAe,KAAM7sB,KAAKw/B,eAOzII,0BAA0Br/B,UAAU4yG,SAIpC,SAAUzxG,MAAQ,MAAO1B,MAAKmgH,aAAa3/F,IAAI9e,OAM/Ck+B,0BAA0Br/B,UAAU4+C,eAIpC,SAAUt4C,KACN,GAAqBg7G,MAA0B7hH,KAAK2hH,oBAAoBnhG,IAAI3Z,IAC5Eg7G,OAAQx9G,MAAM,YAAcwC,IAAIoD,WAAa,mDAC7C,IAAqBk3G,MAAOnhH,KAAKkhH,mBACZl2B,YAAc3mE,QAAQ88F,MAAO98F,QAAQrkB,KAAK+gH,4BAC5C,KAAfc,KAAKx8G,OACL2lF,WAAWhkF,KAAKqd,QAAQw9F,KAAKx8G,QAEjCrF,KAAK+hH,YAAY9/G,MAAMjC,MAAOA,KAAK0gH,cAAe75G,IAAIoD,WAAY20B,cAAc8gF,YAAY72G,OAAOmiF,cAMvGprD,0BAA0Br/B,UAAU0hH,wBAIpC,SAAU54F,YACN,GAAIohB,OAAQzqC,KACSkiH,kBAAoB,GAAI14F,KACxB24F,qBAAuB94F,WAAW5C,OAAO,SAAUgD,WAAa,OAAQA,UAAUA,UAAUE,cAAgB9jB,IAAI,SAAU4jB,WAE3I,MADAy4F,mBAAkBzhG,IAAIgJ,UAAUA,UAAUpjB,KAAKkB,UAAWkjC,MAAMy2E,oBACzDz2E,MAAM23E,cAAc34F,UAAUA,UAAUpjB,KAAKkB,YAExD,QACI86G,gBAAiBF,qBAAqBpgH,OAClC/B,KAAKy+B,aAAaa,gBAAgBnc,WAAWg/F,uBAA2D,GACxG99F,QAAQ,MACZ69F,kBAAmBA,oBAQ3BtiF,0BAA0Br/B,UAAUi+C,aAIpC,SAAU33C,KACN,GAAI4jC,OAAQzqC,KAESsiH,aAAetiH,KAAKkhH,mBACpBqB,mBAAiBp+G,GACjBq+G,mBAAqB,GAAIh5F,KAEzBc,UAAYuY,cAAch8B,IAAIwiB,YAC9Bo5F,SAAWp+F,QAAQ,KAAMwI,eACzBm+D,YAAc3mE,QAAQi+F,cAEvCh4F,YACA0gE,WAAWhkF,KAAKhH,KAAKoiH,cAAc93F,UAAUb,UAAUpjB,KAAKkB,YAC5Dg7G,eAAiBviH,KAAKkhH,oBAGtBl2B,WAAWhkF,KAAKqd,QAAQxd,IAAInF,MAIhC,KAAK,GADgB4zB,eACZzzB,GAAK,EAAGwX,GAAKxS,IAAI0G,MAAO1L,GAAKwX,GAAGtX,OAAQF,KAAM,CACnD,GAAI2L,MAAO6L,GAAGxX,GACdyzB,YAAWtuB,KAAKqd,QAAQ7W,KAAK9L,MAAO2iB,QAAQ7W,KAAKjK,QAErDynF,WAAWhkF,KAAKsuB,WAAWvzB,OAAS,EAChC/B,KAAKy+B,aAAaa,gBAAgBnc,WAAWmS,aAAiD,GAC9FmtF,SAEJ,IAAIjpG,IAAKxZ,KAAKiiH,wBAAwBp7G,IAAIwiB,YAAag5F,gBAAkB7oG,GAAG6oG,gBAAiBH,kBAAoB1oG,GAAG0oG,iBAOpH,IANAl3B,WAAWhkF,KAAKk7G,kBAAkBhiB,KAAO,EAAImiB,gBAAkBI;uEAC3Dn4F,WAA+B,MAAlBi4F,gBAEbL,kBAAkBzhG,IAAI6J,UAAUb,UAAUpjB,KAAKkB,UAAWg7G,gBAG1D17G,IAAI03C,YAAc13C,IAAI03C,WAAWx8C,OAAS,EAAG,CAC7C,GAAqBw8C,YAAah2C,QAAQ1B,IAAI03C,WAAW14C,IAAI,SAAU0B,WACnE,GAAqB45G,MAAO12E,MAAMy2E,kBAClCsB,oBAAmB/hG,IAAIlZ,UAAU7F,KAAMy/G,KAEvC,IAAqBI,cAAe92E,MAAM01E,aAAaF,oBAKvD,OAJAx1E,OAAMk2E,aAAa35G,KAAK0b,SAAS6+F,aAAc10F,eAC1CpM,IAAImC,WAAWgc,cAAcs8C,MAAMvuD,QAAQtI,QAAQ88F,SACnDxoF,WAAW9L,eAAgB+L,aAAaC,SAC7C4R,MAAM01E,aAAa1/F,IAAIlZ,UAAU7F,KAAMghB,SAAS6+F,gBACxCh6G,UAAU7F,KAAM6F,UAAU22C,kBAClCr4C,IAAI,SAAUtC,OAAS,MAAO8gB,SAAQ9gB,QAC1CynF,YAAWhkF,KAAKhH,KAAKy+B,aAAaa,gBAAgBnc,WAAWo7B,aAAiD,QAG9GysC,YAAWhkF,KAAKy7G,SAGpB,MAAOz3B,WAAWA,WAAWjpF,OAAS,KAAO0gH,UACzCz3B,WAAW51C,KAGfp1C,MAAK+hH,YAAY9/G,MAAMjC,MAAOA,KAAK0gH,cAAe75G,IAAIoD,WAAY20B,cAAcu/E,eAAet1G,OAAOmiF,YAGtG,KAAK,GAFgB03B,UAAWhgG,SAAS1iB,KAAKkgH,kBAErClmG,GAAK,EAAGM,GAAKzT,IAAIw3B,OAAQrkB,GAAKM,GAAGvY,OAAQiY,KAAM,CACpD,GAAIxX,OAAQ8X,GAAGN,GACXxX,OAAM+6B,aACNv9B,KAAKsgC,YAAY,aAErB,IAAqBqiF,kBAAmB3iH,KAAKi5B,uBAAuBypF,SAAUlgH,MAAMe,OAE/Dw+G,aADgB19F,QAAQi+F,cAAej+F,QAAQ7hB,MAAMd,MACvCo+G,wBAAwBt9G,MAAM6D,MAC7D07G,aAEA/hH,KAAK+hH,YAAY/hH,KAAK2gH,aAAcn+G,MAAMyH,WAAY83G,YAAa19F,QAAQi+F,cAAej+F,QAAQ7hB,MAAMd,MAAOihH,kBAG/G3iH,KAAKsgC,YAAY,WAAanF,oBAAoB34B,MAAM6D,OAIhErG,KAAK4iH,iBAAiB/7G,IAAIwiB,WAAYq5F,SAAUJ,aAAcJ,mBAE9Dz7G,iBAAiBzG,KAAM6G,IAAIyD,UAE3BtK,KAAK+hH,YAAY/hH,KAAK0gH,cAAe75G,IAAIwD,eAAiBxD,IAAIoD,WAAY20B,cAAcw/E,aAS5Fx+E,0BAA0Br/B,UAAUqiH,iBAOpC,SAAUv5F,WAAYq5F,SAAUrmF,UAAW6lF,mBACvC,IAAK,GAAIrgH,IAAK,EAAGghH,aAAex5F,WAAYxnB,GAAKghH,aAAa9gH,OAAQF,KAAM,CAWxE,IAAK,GAVD4nB,WAAYo5F,aAAahhH,IACRmpB,eAAiBk3F,kBAAkB1hG,IAAIiJ,UAAUA,UAAUpjB,KAAKkB,WAGhEsvD,cAAgBptC,UAAUA,UAAUpjB,KAAKkB,UACzCiO,KAAOiU,UAAUA,UAAUE,YAAc,EAAoB,EAKzEtQ,GAAK,EAAGG,GAAKiQ,UAAU4U,OAAQhlB,GAAKG,GAAGzX,OAAQsX,KAAM,CAC1D,GAAI7W,OAAQgX,GAAGH,IACMspG,iBAAmB3iH,KAAKi5B,uBAAuBypF,SAAUlgH,MAAMe,MACpFvD,MAAK+hH,YAAY/hH,KAAK2gH,aAAcl3F,UAAUxf,WAAY20B,cAAcy/E,gBAAiBh6F,QAAQgY,WAAYhY,QAAQ7hB,MAAMg9B,cAAe5c,WAAWgc,cAAckU,MAAMnmB,QAAQg2F,oBAGrL3iH,KAAK4gH,UAAU55G,KAAKhH,KAAK8iH,aAAajsD,cAAerhD,MAChDuvE,WAAWnmD,cAAcq/E,qBAAsB55F,QAAQ2G,gBAAiB3G,QAAQgY,aAChFhC,UAELr6B,KAAK+hH,YAAY/hH,KAAK6gH,aAAcp3F,UAAUxf,WAAY20B,cAAcghF,iBAAkBv7F,QAAQ2G,gBAAiB3G,QAAQgY,cAQnIuD,0BAA0Br/B,UAAUm+C,sBAIpC,SAAU73C,KACN,GAAqBk8G,eAAgB/iH,KAAKkhH,mBACrBl/E,YAAchiC,KAAKmhB,UAAUC,yBAAyBuM,YAAYsU,aAClE+gF,kBAAoBn8G,IAAIwiB,WAAW1K,KAAK,SAAU8K,WACnE,MAAOA,WAAUA,UAAUpjB,KAAKomB,OAAOwF,KAAK,SAAUmQ,YAClD,MAA2B,OAApBA,WAAWx8B,OAAkByC,eAAe+5B,WAAWx8B,QAAUo8B,gBAG3Do+E,YAAcpgH,KAAKogH,aAAe4C,mBAAqBA,kBAAkBv5F,UAAUpjB,KAAKkB,UAAU7F,KACnH1B,KAAKogH,YAAc,IAAM4C,kBAAkBv5F,UAAUpjB,KAAKkB,UAAU7F,KACpE,KACiB89B,aAAe4gF,YAAcA,YAAc,aAAe2C,cAAgB,YAAcA,cACxFE,gBAAkB,MAAQjjH,KAAKorC,MAChD/xB,GAAKrZ,KAAKiiH,wBAAwBp7G,IAAIwiB,YAAag5F,gBAAkBhpG,GAAGgpG,gBAAiBH,kBAAoB7oG,GAAG6oG,iBAEpHliH,MAAK+hH,YAAY/hH,KAAK0gH,cAAe75G,IAAIoD,WAAY20B,cAAc6/E,gBAAiBp6F,QAAQ0+F,eAAgBV,gBAAiB3/F,SAAS8c,eAEtIx/B,KAAK+hH,YAAY/hH,KAAK6gH,aAAch6G,IAAIoD,WAAY20B,cAAc+/E,sBAAuBt6F,QAAQ0+F,gBAEjG/iH,KAAK4iH,iBAAiB/7G,IAAIwiB,WAAY3G,SAAS1iB,KAAKkgH,kBAAmB6C,cAAeb,mBAEtFliH,KAAK+hH,YAAY/hH,KAAK6gH,aAAch6G,IAAIoD,WAAY20B,cAAcggF,oBAElE,IAAqBsE,iBAAkB,GAAItjF,2BAA0B5/B,KAAKg+B,UAAWh+B,KAAKy+B,aAAcz+B,KAAKmhB,UAAW8hG,gBAAiBjjH,KAAKmgH,aAAapgF,cAAe//B,KAAKorC,MAAQ,EAAGprC,KAAKggC,mBAAoBogF,YAAa5gF,aAAcx/B,KAAKg/B,OAC9NmkF,qBAAuBD,gBAAgBjjF,sBAAsBp5B,IAAIyD,SAAUzD,IAAI43C,UACpGz+C,MAAK8gH,SAAS95G,KAAKm8G,qBAAqBxqF,WAAW6G,aAAc,QAOrEI,0BAA0Br/B,UAAUi9C,eAIpC,SAAU32C,KACN,GAAqBw1B,WAAYr8B,KAAKkhH,kBAEtClhH,MAAK+hH,YAAY/hH,KAAK0gH,cAAe75G,IAAIoD,WAAY20B,cAAcpuB,KAAM6T,QAAQgY,YAEjFr8B,KAAK+hH,YAAY/hH,KAAK6gH,aAAch6G,IAAIoD,WAAY20B,cAAcmgF,gBAAiB16F,QAAQgY,WAAYr8B,KAAK8yC,KAAKpwB,SAASmd,cAAeh5B,IAAItD,MAAOsD,IAAIoD,cAO5J21B,0BAA0Br/B,UAAU+8C,UAIpC,SAAUz2C,KAEN7G,KAAK+hH,YAAY/hH,KAAK0gH,cAAe75G,IAAIoD,WAAY20B,cAAcpuB,KAAM6T,QAAQrkB,KAAKkhH,oBAAqB78F,QAAQxd,IAAItD,SAK3Hq8B,0BAA0Br/B,UAAU2gH,iBAGpC,WAAc,MAAOlhH,MAAKqgH,cAI1BzgF,0BAA0Br/B,UAAU6iH,eAGpC,WAAc,MAAO,GAAKpjH,KAAKsgH,mBAQ/B1gF,0BAA0Br/B,UAAUwhH,YAOpC,SAAUhoF,WAAYnvB,KAAMrD,WAExB,IAAK,GADDuc,WACKjiB,GAAK,EAAGA,GAAKC,UAAUC,OAAQF,KACpCiiB,OAAOjiB,GAAK,GAAKC,UAAUD,GAE/Bk4B,YAAW/yB,KAAK4b,WAAWrb,UAAW,KAAMqD,MAAM+hB,OAAO7I,OAAQlZ,MAAMyvB,WAM3EuF,0BAA0Br/B,UAAU6hH,cAIpC,SAAU/7G,MAAQ,MAAOrG,MAAKg+B,UAAUpb,WAAWvc,OAMnDu5B,0BAA0Br/B,UAAUuiH,aAKpC,SAAUz8G,KAAMmP,MACZ,MAAOxV,MAAKy+B,aAAai+E,cAAcr2G,KAAMmP,KAAMxV,KAAKg+B,YAK5D4B,0BAA0Br/B,UAAU6Z,KAGpC,WAOI,MANKpa,MAAKwgH,sBACNxgH,KAAKygH,QAAQz5G,KAAK0b,SAxoBT,KAwoBkC0J,aAAc,MACpD3L,IAAI4D,YAAQlgB,KACZw0B,WAAWvM,eAChBpsB,KAAKwgH,qBAAsB,GAExB99F,SA7oBM,OAopBjBkd,0BAA0Br/B,UAAU04B,uBAKpC,SAAUypF,SAAUn/G,OAChB,GAAqB8/G,qBAAsB9/G,MAAMqD,MAAM5G,KAAKghH,iBACvCsC,yBAA2BrqF,uBAAuBj5B,KAAM0iH,SAAUW,oBAAqBrjH,KAAKojH,iBAAkB5pF,YAAYC,UAAW+G,YAE1J,QADCnnB,GAAKrZ,KAAK6gH,cAAc75G,KAAK/E,MAAMoX,GAAIiqG,yBAAyB3hG,OAC1D2hG,yBAAyBlqF,WAChC,IAAI/f,KAQRumB,0BAA0Br/B,UAAUuyC,KAMpC,SAAU4vE,SAAUn/G,MAAO0G,YACvB,MAAOjK,MAAKi5B,uBAAuBypF,SAAUn/G,QAE1Cq8B,6BA4CPqhF,eAAgC,SAAUv2G,QAE1C,QAASu2G,gBAAejjF,UAAWulF,aAAc5/E,YAC7C,GAAI8G,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAKjC,OAJAyqC,OAAMzM,UAAYA,UAClByM,MAAM84E,aAAeA,aACrB94E,MAAM9G,WAAaA,WACnB8G,MAAM+4E,UAAY,GAAIh6F,KACfihB,MAwEX,MA/EAxqC,WAAUghH,eAAgBv2G,QAe1Bu2G,eAAe1gH,UAAUkU,UAKzB,SAAU5N,IAAKpD,SAEX,GAAqB09G,MAAOnhH,KAAKwjH,UAAUhjG,IAAI3Z,IAAInF,KACvC,OAARy/G,OACAA,KAAOnhH,KAAKujH,eACZvjH,KAAKwjH,UAAU/iG,IAAI5Z,IAAInF,KAAMy/G,MAEjC,IAAqBsC,iBAAkB,QAAUtC,KAC5BrtG,OAAS,GAAIqnD,cAAat0D,IAAI+D,KAAM,GAAIowD,kBAAiBn0D,IAAI+D,MAAO64G,iBACpEtsF,UAAY+J,YAAYr6B,IAAIjF,KACjD5B,MAAK2jC,WAAW98B,IAAInF,KAAM+hH,gBAAiBtC,KAAMv+F,WAAWuU,WAC5D,IAAqB5zB,OAAQsD,IAAI6N,IAAI9N,MAAM5G,MACtB4B,KAAO5B,KAAK6J,SAAShD,IAAIjF,KAC9C,OAAO,IAAIw6D,cAAav1D,IAAI+D,KAAMkJ,QAAS,GAAI2nD,kBAAiB50D,IAAI+D,KAAMu2G,MAAO59G,OAAOsF,OAAOjH,QAOnGq/G,eAAe1gH,UAAU6T,kBAKzB,SAAUvN,IAAKpD,SACX,GAAIgnC,OAAQzqC,IACZ,OAAO,IAAIsyG,qBAAoBzrG,IAAI+D,KAAM5K,KAAK6J,SAAShD,IAAI4M,aAAc,SAAUzR,QAI/E,GAAqBy/B,YAAate,WAAWnhB,OAC7C,OAAOA,QAAOymF,MAAM,SAAU7vE,GAAK,MAAOA,GAAE+tE,eACxCl8C,MAAMzM,UAAUS,aAAaa,gBAAgBmC,YAAY,GACzDF,kBAAkBkJ,MAAMzM,UAAWyD,eAQ/Cw/E,eAAe1gH,UAAU8T,gBAKzB,SAAUxN,IAAKpD,SACX,GAAIgnC,OAAQzqC,IACZ,OAAO,IAAIsyG,qBAAoBzrG,IAAI+D,KAAM5K,KAAK6J,SAAShD,IAAI7E,QAAS,SAAUA,QAI1E,GAAqBy/B,YAAape,WAAWrhB,OAAO6D,IAAI,SAAUtC,MAAO8B,OAAS,OAAU6O,IAAKrN,IAAI8wB,KAAKtyB,OAAO6O,IAAK3Q,MAAOA,MAAOigB,OAAQ3c,IAAI8wB,KAAKtyB,OAAOme,UAC5J,OAAOxhB,QAAOymF,MAAM,SAAU7vE,GAAK,MAAOA,GAAE+tE,eACxCl8C,MAAMzM,UAAUS,aAAaa,gBAAgBmC,YAAY,GACzDF,kBAAkBkJ,MAAMzM,UAAWyD,eAGxCw/E,gBACTvkD,+BAgBE15B,yBAA0C,SAAUt4B,QAEpD,QAASs4B,0BAAyB0gF,cAAe1jF,oBAC7C,GAAIyK,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAIjC,OAHAyqC,OAAMi5E,cAAgBA,cACtBj5E,MAAMzK,mBAAqBA,mBAC3ByK,MAAMplC,MAAQ,EACPolC,MAqBX,MA3BAxqC,WAAU+iC,yBAA0Bt4B,QAYpCs4B,yBAAyBziC,UAAU4+C,eAInC,SAAUt4C,KACN,GAAqB88G,cAAe3jH,KAAKggC,mBAAmBn5B,IAAIxB,MAEhE,IADgB,MAAhBs+G,cAAwBt/G,MAAM,qCAAuCwC,IAAIxB,MAAQ,OAASwB,KACrF88G,cAAiC,MAAjBA,aAGhB,CACD,GAAqBn3B,cAAev4D,YAAYC,MAAMyvF,aACtD3jH,MAAK0jH,cAAcjjG,IAAI5Z,KAAOxB,MAAOrF,KAAKqF,QAASurB,SAAU2S,2BAA2BipD,oBAJxFxsF,MAAK0jH,cAAcjjG,IAAI5Z,KAAOxB,MAAO,KAOtC29B,0BACTqc,6BAoGEukE,cAA+B,WAC/B,QAASA,eAAcC,WAAY9/E,WAAY+/E,eAC3C9jH,KAAK6jH,WAAaA,WAClB7jH,KAAK+jC,WAAaA,WACW,gBAAlB+/E,gBACP9jH,KAAKgW,OAAS8tG,cACd9jH,KAAK2hB,MAAQ,OAGb3hB,KAAKgW,OAAS,KACdhW,KAAK2hB,MAAQmiG,eAyBrB,MAlBAF,eAAcrjH,UAAUihB,aAIxB,SAAUD,OACN,MAAIvhB,MAAK+jC,aAAexiB,MAAMwiB,aAG1B/jC,KAAKgW,OACEhW,KAAKgW,SAAWuL,MAAMvL,OAEd,MAAfuL,MAAMI,OAKHF,iBAAoCzhB,KAAW,MAAsBuhB,MAAY,SAErFqiG,iBAmGPG,GAAK,yBACLC,qBAAsC,WACtC,QAASA,sBAAqB1+E,OAAQF,UAClCplC,KAAKslC,OAASA,OACdtlC,KAAKolC,SAAWA,SAEpB,MAAO4+E,yBAkBP91E,qBAAsC,WACtC,QAASA,sBAAqB7F,KAAM47E,kBAAmBv+E,gBAAiBw+E,eACpElkH,KAAKqoC,KAAOA,KACZroC,KAAKikH,kBAAoBA,kBACzBjkH,KAAK0lC,gBAAkBA,gBACvB1lC,KAAKkkH,cAAgBA,cACrBlkH,KAAKmkH,cAAgB,GAAI36F,KACzBxpB,KAAKokH,gBAAkB,GAAI56F,KAC3BxpB,KAAKqkH,kBAAoB,GAAI58F,KAC7BznB,KAAKskH,SAAW,GAAI96F,KACpBxpB,KAAKukH,oBAAsB,GAAI/6F,KAC/BxpB,KAAKwkH,eAAiB,GAAIh7F,KAC1BxpB,KAAKykH,2BAA6B,GAAIj7F,KAkrB1C,MA5qBA0kB,sBAAqB3tC,UAAUqpC,cAI/B,SAAU86E,cACN,GAAIA,aAAahlE,QAAQ39C,OAAS,EAC9B,MAA0B/B,MAAK2kH,sBAAsBD,aAKzD,IAAqBE,mBAAuC5kH,KAAK6kH,0BAA0BH,aAC3F,IAAIE,kBACA,MAAOA,kBAEX,IAAqBE,iBAAkB9kH,KAAKokH,gBAAgB5jG,IAAIkkG,aAChE,OAAII,mBAMJ9kH,KAAK+kH,iBAAiBL,aAAa78G,UACT7H,KAAKokH,gBAAgB5jG,IAAIkkG,gBAsBvDx2E,qBAAqB3tC,UAAUykH,YAW/B,SAAUN,aAAcO,cAEpB,OADqB,KAAjBA,eAA2BA,cAAe,GAC1CP,aAAahlE,QAAQ39C,OAAQ,CAC7B,GAAqBmjH,YAAallH,KAAK+nC,gBAAgB28E,aAAa78G,SAAU68G,aAAahjH,MACtEyjH,aAAenlH,KAAKglH,YAAYE,WAAYD,aACjE,OAAOE,cACHnlH,KAAK+nC,gBAAgBo9E,aAAat9G,SAAUs9G,aAAazjH,KAAMgjH,aAAahlE,SAC5E,KAER,GAAqB0lE,oBAAqBz/F,6BAA6B++F,aAAa78G,SACpF,IAAIu9G,qBAAuBV,aAAa78G,SAAU,CAC9C,GAAqBw9G,gBAAiBt/F,6BAA6B2+F,aAAahjH,MAC3DwjH,WAAallH,KAAK+nC,gBAAgBq9E,mBAAoBC,eAAgBX,aAAahlE,SACnFylE,aAAenlH,KAAKglH,YAAYE,WAAYD,aACjE,OAAOE,cACHnlH,KAAK+nC,gBAAgBriB,sBAAsBy/F,aAAat9G,UAAWge,kBAAkBs/F,aAAazjH,MAAOwjH,WAAWxlE,SACpH,KAER,GAAqB/4C,QAAUs+G,cAAgBjlH,KAAK0lC,gBAAgBs/E,YAAYN,eAAkB,IAIlG,OAHK/9G,UACDA,OAA4B3G,KAAKskH,SAAS9jG,IAAIkkG,eAE3C/9G,QAcXunC,qBAAqB3tC,UAAU+kH,gBAO/B,SAAUZ,cACN,MAAO1kH,MAAKukH,oBAAoB/jG,IAAIkkG,eAAiBA,aAAa78G,UAYtEqmC,qBAAqB3tC,UAAUglH,aAM/B,SAAUb,cAKN,GAAIx/F,gBAAgBw/F,aAAa78G,UAC7B,MAAO,KAGX,KADA,GAAqBm+B,gBAAiBb,uBAAuBnlC,KAAK4pC,cAAc86E,eACzE1+E,gBAAkBA,eAAeZ,mBAAoB39B,eACxDu+B,eAAiBb,uBAAuBnlC,KAAK4pC,cAAc5D,eAAeZ,UAE9E,OAAQY,iBAAkBA,eAAeZ,UAAYY,eAAeZ,SAASogF,OAAU,MAM3Ft3E,qBAAqB3tC,UAAUklH,mBAI/B,SAAU59G,UACN,MAAO7H,MAAKykH,2BAA2BjkG,IAAI3Y,WAAa,MAO5DqmC,qBAAqB3tC,UAAUmlH,eAK/B,SAAUC,aAAcC,cACpBD,aAAahmE,kBACbimE,aAAajmE,kBACb3/C,KAAKskH,SAAS7jG,IAAIklG,aAAcC,eAOpC13E,qBAAqB3tC,UAAUslH,4BAK/B,SAAUrgG,SAAUwf,YAChBhlC,KAAKykH,2BAA2BhkG,IAAI+E,SAAUwf,aAalDkJ,qBAAqB3tC,UAAUulH,eAM/B,SAAUtgG,UACNxlB,KAAKmkH,cAAcjnF,OAAO1X,UAC1BxlB,KAAKqkH,kBAAkBnnF,OAAO1X,SAC9B,IAAqBogB,SAAU5lC,KAAKwkH,eAAehkG,IAAIgF,SACvD,IAAIogB,QAAS,CACT5lC,KAAKwkH,eAAetnF,OAAO1X,SAC3B,KAAK,GAAI3jB,IAAK,EAAGkkH,UAAYngF,QAAS/jC,GAAKkkH,UAAUhkH,OAAQF,KAAM,CAC/D,GAAIyjC,QAASygF,UAAUlkH,GACvB7B,MAAKokH,gBAAgBlnF,OAAOoI,QAC5BtlC,KAAKskH,SAASpnF,OAAOoI,QACrBtlC,KAAKukH,oBAAoBrnF,OAAOoI,WAU5C4I,qBAAqB3tC,UAAUylH,gBAK/B,SAAUvpE,IACN,GAAqBwpE,UAAWjmH,KAAKkkH,aACrClkH,MAAKkkH,cAAgB,YACrB,KACI,MAAOznE,MAEX,QACIz8C,KAAKkkH,cAAgB+B,WAO7B/3E,qBAAqB3tC,UAAUokH,sBAI/B,SAAUD,cACN,GAAqBhlE,SAAUglE,aAAahlE,QACvBwmE,mBAAqBlmH,KAAK4pC,cAAc5pC,KAAK+nC,gBAAgB28E,aAAa78G,SAAU68G,aAAahjH,MACtH,KAAKwkH,mBACD,MAAO,KAEX,IAAqBC,cAAehhF,uBAAuB+gF,mBAAmB9gF,SAC9E,IAAI+gF,uBAAwB1+G,cACxB,MAAO,IAAIu8G,sBAAqBU,aAAc1kH,KAAK+nC,gBAAgBo+E,aAAat+G,SAAUs+G,aAAazkH,KAAMg+C,SAE5G,KAAIymE,cAA4C,UAA5BA,aAAa9gF,WAKjC,CAED,IAAK,GADgB9hC,OAAQ4iH,aACHn7G,EAAI,EAAGA,EAAI00C,QAAQ39C,QAAUwB,MAAOyH,IAC1DzH,MAAQA,MAAMm8C,QAAQ10C,GAE1B,OAAO,IAAIg5G,sBAAqBU,aAAcnhH,OAT9C,MAAI4iH,cAAaC,SAA8B,IAAnB1mE,QAAQ39C,OACzB,GAAIiiH,sBAAqBU,aAAcyB,aAAaC,QAAQ1mE,QAAQ,KAU5E,MAMXxR,qBAAqB3tC,UAAUskH,0BAI/B,SAAUH,cACN,GAAqBx+E,SAAUlmC,KAAK0lC,gBAAgB0qD,eAAes0B,aACnE,OAAOx+E,SAAU,GAAI89E,sBAAqBU,aAAcx+E,QAAQd,UAAY,MAmBhF8I,qBAAqB3tC,UAAUwnC,gBAS/B,SAAU+X,gBAAiBp+C,KAAMg+C,SAC7B,MAAO1/C,MAAKikH,kBAAkBzjG,IAAIs/B,gBAAiBp+C,KAAMg+C,UAgB7DxR,qBAAqB3tC,UAAUkpC,cAO/B,SAAU5hC,UACN,GAAqBu9B,UAAWplC,KAAKqmH,kBAAkBx+G,SACvD,SAAIu9B,SAAmB,UACZ5kC,OAAOm3B,KAAKyN,SAAmB,UAAGnT,KAAK,SAAUq0F,aACpD,GAAqB3mG,OAAQylB,SAAmB,SAAEkhF,YAClD,OAAO3mG,QAA8B,UAArBA,MAAM0lB,YAA0B1lB,MAAM4mG,cASlEr4E,qBAAqB3tC,UAAUopC,aAI/B,SAAU9hC,UACN,GAAqB2+G,gBAAiBxmH,KAAK0lC,gBAAgBiE,aAAa9hC,SACxE,IAAI2+G,eACA,MAAOA,eAIXxmH,MAAK+kH,iBAAiBl9G,SACtB,IAAqB4+G,mBAMrB,OALAzmH,MAAKokH,gBAAgBt9G,QAAQ,SAAUk/B,gBAC/BA,eAAeV,OAAOz9B,WAAaA,UACnC4+G,gBAAgBz/G,KAAKg/B,eAAeV,UAGrCmhF,iBAMXv4E,qBAAqB3tC,UAAUwkH,iBAI/B,SAAUl9G,UACN,GAAI4iC,OAAQzqC,IACZ,KAAIA,KAAKqkH,kBAAkB5vF,IAAI5sB,UAA/B,CAGA7H,KAAKqkH,kBAAkBpnF,IAAIp1B,SAC3B,IAAqBu8G,oBACAh/E,SAAWplC,KAAKqmH,kBAAkBx+G,SAOvD,IANIu9B,SAAmB,UAGnBplC,KAAKykH,2BAA2BhkG,IAAI5Y,SAAUu9B,SAAmB,UAGjEA,SAAkB,QAsClB,IAAK,GADDshF,QAAS1mH,KACJ6B,GAAK,EAAGwX,GAAK+rB,SAAkB,QAAGvjC,GAAKwX,GAAGtX,OAAQF,KAAM,CAC7D,GAAI8kH,cAAettG,GAAGxX,KAtCZ,SAAU8kH,cAEpB,GAAIA,aAAaC,OACbD,aAAaC,OAAO9/G,QAAQ,SAAU+/G,cAClC,GAAqB/gG,WAEjBA,YADwB,gBAAjB+gG,cACMA,aAGAA,aAAa1nB,GAE9Br5E,WAAamf,mBAAmBnf,WAChC,IAAqBghG,SAAUhhG,UACH,iBAAjB+gG,gBACPC,QAAU7hF,mBAAmB4hF,aAAanlH,MAE9C,IAAqBqlH,gBAAiBt8E,MAAMu8E,cAAcL,aAAan/F,KAAM3f,SAC7E,IAAIk/G,eAAgB,CAChB,GAAqBnB,cAAen7E,MAAM1C,gBAAgBg/E,eAAgBD,SACrDnB,aAAel7E,MAAM1C,gBAAgBlgC,SAAUie,WACpEs+F,iBAAgBp9G,KAAKyjC,MAAMw8E,aAAatB,aAAcC,sBAI7D,CAED,GAAqBmB,gBAAiBL,OAAOM,cAAcL,aAAan/F,KAAM3f,SAC9E,IAAIk/G,eAAgB,CACqBL,OAAO/8E,aAAao9E,gBAC3CjgH,QAAQ,SAAU8+G,cAC5B,GAAqBD,cAAel7E,MAAM1C,gBAAgBlgC,SAAU+9G,aAAalkH,KACjF0iH,iBAAgBp9G,KAAKyjC,MAAMw8E,aAAatB,aAAcC,oBAQ1De,cAMhB,GAAIvhF,SAAmB,SAAG,CAEtB,GAAqB8hF,uBAAwB,GAAIz/F,KAAIjnB,OAAOm3B,KAAKyN,SAAmB,UAAGv/B,IAAIo/B,qBACtEkiF,UAAY/hF,SAAkB,WACnD5kC,QAAOm3B,KAAKyN,SAAmB,UAAGt+B,QAAQ,SAAUw/G,aAChD,GAAqBz8E,YAAazE,SAAmB,SAAEkhF,aAClC5kH,KAAOujC,mBAAmBqhF,aAC1BhhF,OAASmF,MAAM1C,gBAAgBlgC,SAAUnG,MACzC0lH,OAASD,UAAU7gH,eAAeggH,cAAgBa,UAAUb,YACjF,IAAIc,OAAQ,CAIR,GAAqBC,gBAAiB58E,MAAMu8E,cAAcI,OAAQv/G,SAC7Dw/G,gBAID58E,MAAM85E,oBAAoB9jG,IAAI6kB,OAAQ+hF,gBAHtC58E,MAAM68E,YAAY,GAAI/iH,OAAM,wCAA0C6iH,OAAS,SAAWv/G,WAMlGu8G,gBAAgBp9G,KAAKyjC,MAAM88E,qBAAqBjiF,OAAQz9B,SAAUq/G,sBAAuBr9E,eAGjGu6E,gBAAgBt9G,QAAQ,SAAUk/B,gBAAkB,MAAOyE,OAAM25E,gBAAgB3jG,IAAIulB,eAAeV,OAAQU,kBAC5GhmC,KAAKwkH,eAAe/jG,IAAI5Y,SAAUu8G,gBAAgBv+G,IAAI,SAAUmgC,gBAAkB,MAAOA,gBAAeV,YAS5G4I,qBAAqB3tC,UAAUgnH,qBAO/B,SAAU5B,aAAc6B,aAAcC,oBAAqBriF,UACvD,GAAIqF,OAAQzqC,KAMS0nH,SAAW3D,GAAGz4G,KAAKq6G,aAAa99G,SACrD,IAAI7H,KAAK0lC,gBAAgBc,cAAcm/E,aAAa99G,YAAc6/G,UAAYtiF,UAC/C,UAA3BA,SAAqB,WAAe,CACpC,GAAqBuiF,oBAAsBtiF,WAAY,QAASmgF,MAAOpgF,SAASogF,MAChF,OAAO,IAAIxB,sBAAqB2B,aAAcgC,mBAElD,GAAqBC,mBACAC,gBAAkB,WAUnC,MATKD,qBAKDA,kBACIn9E,MAAMpC,KAAKy/E,cAAcN,aAAa/kH,QAAQ,uBAAwB,OACjEA,QAAQ,wBAAwB,MAEtCmlH,mBAEU1M,KAAOl7G,KACxB+nH,qBAAsC,SAAUr9G,QAEhD,QAASq9G,wBACL,MAAkB,QAAXr9G,QAAmBA,OAAOzI,MAAMjC,KAAM8B,YAAc9B,KAkE/D,MApEAC,WAAU8nH,qBAAsBr9G,QAShCq9G,qBAAqBxnH,UAAUuD,eAK/B,SAAU+B,IAAKmiH,gBACX,GAAqBC,UAAWpiH,IAAgB,UAChD,IAAiB,aAAboiH,SAAyB,CACzB,GAAqBC,QAASF,eAAejmH,MAC7CimH,gBAAehhH,KAAK/E,MAAM+lH,eAAiBniH,IAAgB,eAC3D,IAAqBc,QAAS+D,OAAOnK,UAAUuD,eAAeqyC,KAAKn2C,KAAM6F,IAAKmiH,eAE9E,OADAA,gBAAejmH,OAASmmH,OACjBvhH,OAEN,GAAiB,cAAbshH,SAsCJ,MAAiB,UAAbA,SACE/lH,YAAa2D,KAAO2f,SAAUqiG,oBAG9Bn9G,OAAOnK,UAAUuD,eAAeqyC,KAAKn2C,KAAM6F,IAAKmiH,eAzCvD,IAAqBroH,QAASkG,IAAY,OACrB6xD,OAAS7xD,IAAU,KAAIo/B,mBAAmBp/B,IAAU,MAAKA,IAAU,IACxF,KAAK6xD,OACD,MAAO,KAEX,IAAqB7vD,cAAW,EAChC,OAAIlI,SACAkI,SAA8BqzG,KAAK8L,cAAcrnH,OAAQgmH,aAAa99G,UACjEA,UAUDw9B,WAAY,WACZC,OAAQ41E,KAAKnzE,gBAAgBlgC,SAAU6vD,QACvChsB,KAAM7lC,IAAU,KAChB5C,UAAW4C,IAAe,UAC1B2f,SAAUqiG,oBAZNxiF,WAAY,QACZl0B,QAAS,qBAAuBxR,OAAS,gBAAkBgmH,aAAa99G,SAAW,IACnF6jC,KAAM7lC,IAAU,KAChB5C,UAAW4C,IAAe,UAC1B2f,SAAUqiG,oBAWbG,eAAe7kH,QAAQu0D,SAAW,GAE9BryB,WAAY,YAAa3jC,KAAMg2D,QAGpC+vD,oBAAoBhzF,IAAIijC,QACjBwjD,KAAKnzE,gBAAgBy/E,aAAc9vD,YAD9C,IAcLqwD,sBACTzrE,kBACmB6rE,gBAAkB7kH,WAAW8hC,SAAU,GAAI2iF,0BAC3CK,yBAA2BjjF,uBAAuBgjF,gBACvE,OAAIC,oCAAoC3gH,cAC7BzH,KAAKinH,aAAatB,aAAcyC,0BAEpC,GAAIpE,sBAAqB2B,aAAcwC,kBAOlDj6E,qBAAqB3tC,UAAU0mH,aAK/B,SAAUtB,aAAcC,cAWpB,MAVAD,cAAahmE,kBACbimE,aAAajmE,kBACT3/C,KAAK0lC,gBAAgBc,cAAcm/E,aAAa99G,WAChD7H,KAAK0lC,gBAAgBc,cAAco/E,aAAa/9G,WAKhD7H,KAAKskH,SAAS7jG,IAAImlG,aAAc5lH,KAAKglH,YAAYW,eAAiBA,cAE/D,GAAI3B,sBAAqB2B,aAAcC,eAQlD13E,qBAAqB3tC,UAAU+mH,YAM/B,SAAUp/F,SAAUzkB,QAASgH,MACzB,IAAIzK,KAAKkkH,cAIL,KAAMh8F,SAHNloB,MAAKkkH,cAAch8F,SAAWzkB,SAAWA,QAAQoE,UAAa4C,OAUtEyjC,qBAAqB3tC,UAAU8lH,kBAI/B,SAAU1mH,QACN,GAAqB0oH,gBAAiBroH,KAAKmkH,cAAc3jG,IAAI7gB,OAC7D,KAAK0oH,eAAgB,CACjB,GAAqBC,iBAAkBtoH,KAAKqoC,KAAKkgF,eAAe5oH,OAChE,IAAI2oH,gBAAiB,CACjB,GAAqBE,eAAgB,CACrCF,iBAAgBxhH,QAAQ,SAAU2hH,IAC1BA,IAAMA,GAAY,QAAID,eACtBA,aAAeC,GAAY,QAC3BJ,eAAiBI,MAQ7B,GAJKJ,iBACDA,gBACMhjF,WAAY,SAAU01C,QAlpBb,EAkpBgDp7E,OAAQA,OAAQylC,cAlpBhE,GAopBfijF,eAAwB,QAA+B,CACvD,GAAqBK,cAA4C,GAA7BL,eAAwB,QACxD,gCAAkCA,eAAwB,QAAI,eAAiB1oH,OAAS,+DACxF,wCAA0CA,OAAS,mBAAqB0oH,eAAwB,QAAI,cACxGroH,MAAKsnH,YAAY,GAAI/iH,OAAMmkH,eAE/B1oH,KAAKmkH,cAAc1jG,IAAI9gB,OAAQ0oH,gBAEnC,MAAOA,iBAQXn6E,qBAAqB3tC,UAAUooH,kBAM/B,SAAUhpH,OAAQmmB,WAAY8iG,gBAC1B,GAAqB/gH,UAAW7H,KAAKgnH,cAAcrnH,OAAQipH,eAC3D,OAAK/gH,UAKE7H,KAAK+nC,gBAAgBlgC,SAAUie,aAJlC9lB,KAAKsnH,YAAY,GAAI/iH,OAAM,4BAA8B5E,QAAUipH,eAAiB,gBAChFA,eAAiB,MACd5oH,KAAK+nC,gBAAgB,SAAWpoC,OAAQmmB,cASvDooB,qBAAqB3tC,UAAUymH,cAK/B,SAAUrnH,OAAQipH,gBACd,IACI,MAAO5oH,MAAKqoC,KAAKwgF,qBAAqBlpH,OAAQipH,gBAElD,MAAwBrvG,GACpBm1B,QAAQrqC,MAAM,6BAA+B1E,OAAS,sBAAwBipH,gBAC9E5oH,KAAKsnH,YAAY/tG,MAAGpV,GAAWykH,gBAEnC,MAAO,OAEJ16E,wBA6FPnI,iBAAkC,SAAUr7B,QAE5C,QAASq7B,kBAAiBJ,eAAgBD,gBAAiBF,aACvD,GAAIiF,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAWjC,OAVAyqC,OAAM9E,eAAiBA,eACvB8E,MAAM/E,gBAAkBA,gBACxB+E,MAAMjF,YAAcA,YACpBiF,MAAM7E,WACN6E,MAAMq+E,cAAgB,GAAIt/F,KAC1BihB,MAAMs+E,aAAe,GAAIv/F,KACzBihB,MAAMu+E,yBAA2B,GAAIx/F,KACrCihB,MAAMw+E,sBACNx+E,MAAMlE,mCAAqC,GAAI/c,KAC/CihB,MAAMzF,WAAaW,eAAe8/E,mBAAmBjgF,aAC9CiF,MAoOX,MAjPAxqC,WAAU8lC,iBAAkBr7B,QAmB5Bq7B,iBAAiBxlC,UAAU0lC,WAI3B,SAAUC,SACN,GAAIuE,OAAQzqC,KACSkpH,mBAAqBlpH,KAAKumC,mCAAmC/lB,IAAI0lB,QAAQZ,QACzE6jF,iBAAmBnpH,KAAKgpH,yBAAyBxoG,IAAI0lB,QAAQZ,OAQlF,IAPK4jF,qBACDA,oBAAuB5jF,OAAQY,QAAQZ,OAAQF,aAAUjhC,IACzDnE,KAAKumC,mCAAmC9lB,IAAIylB,QAAQZ,OAAQ4jF,oBAC5DC,kBAAqB7jF,OAAQtlC,KAAKopH,aAAaljF,QAAQZ,OAAQ,IAC/DtlC,KAAKipH,mBAAmBjiH,KAAKmiH,kBAC7BnpH,KAAKgpH,yBAAyBvoG,IAAIylB,QAAQZ,OAAQ6jF,oBAEjDD,mBAAmB9jF,UAAYc,QAAQd,SAAU,CAClD,GAAqBikF,YAAanjF,QAAQd,YAC1C,IAA8B,UAA1BikF,WAAWhkF,WAAwB,CASnC,GAAqBikF,WACrB9oH,QAAOm3B,KAAK0xF,YAAYviH,QAAQ,SAAUgtB,UACrB,eAAbA,WACAw1F,QAAQx1F,UAAYu1F,WAAWv1F,aAGvCu1F,WAAaC,YAERliF,QAAOiiF,cACPhiF,eAAegiF,aAAgB/hF,uBAAuB+hF,cAGvDA,YACIhkF,WAAY,QACZl0B,QAAS,8CAQrB,IAFA+3G,mBAAmB9jF,SAAWikF,WAC9BF,iBAAiB/jF,SAAWplC,KAAKopH,aAAaC,WAAY,GACtDA,qBAAsB5hH,eACtBzH,KAAK0lC,gBAAgBc,cAAc6iF,WAAWxhH,UAAW,CACzD,GAAqB0hH,mBAAoBvpH,KAAK4lC,QAA2B5lC,KAAK8oH,cAActoG,IAAI6oG,YAC3FpjG,iBAAgBsjG,kBAAkB7nH,OAOnC1B,KAAK+oH,aAAatoG,IAAI8oG,kBAAmBrjF,QAAQZ,SAI7D,IAAK4jF,mBAAmB7iH,MAAQ6/B,QAAQ7/B,OACpC6iH,mBAAmB7iH,KAAO6/B,QAAQ7/B,KAIlC8iH,iBAAiB9iH,KAAOrG,KAAKopH,aAAaljF,QAAQ7/B,KAAM,GAGpD6/B,QAAQ7/B,KAAKi7C,cAAgBrB,mBAAmB7+C,UAAU,CAC1D,GAAqBooH,iBAAoCtjF,QAAY,IACrEsjF,iBAAgB/nE,mBAAmB54C,OAAO2gH,gBAAgB9nE,eAAe56C,QAAQ,SAAUyC,IACvF,GAAqB+7B,QAAS/7B,GAAGhC,SACjC,IAAIkjC,MAAM/E,gBAAgBc,cAAclB,OAAOz9B,YAC1C4iC,MAAMlE,mCAAmC9R,IAAI6Q,QAAS,CACvD,GAAqBmkF,WAAYh/E,MAAM/E,gBAAgB0qD,eAAe9qD,OAClEmkF,YACAh/E,MAAMxE,WAAWwjF,gBAUzC1jF,iBAAiBxlC,UAAU+e,UAG3B,WACI,GAAImrB,OAAQzqC,KACSk1B,WA4BrB,QAASiR,KA3BmByZ,KAAKj6C,WAC7Bq/B,WAAYhlC,KAAKglC,WACjB0kF,UAAW1pH,KAAKipH,mBAChBrjF,QAAS5lC,KAAK4lC,QAAQ//B,IAAI,SAAUy/B,OAAQjgC,OACxCigC,OAAOqa,iBACP,IAAqB2kE,cAA4B,EACjD,IAAI75E,MAAM/E,gBAAgBc,cAAclB,OAAOz9B,UAAW,CACtD,GAAqB8hH,gBAAiBl/E,MAAMs+E,aAAavoG,IAAI8kB,OAC7D,IAAIqkF,eACArF,SAA8B75E,MAAMq+E,cAActoG,IAAImpG,oBAErD,CACD,GAAqBzjF,SAAUuE,MAAMlE,mCAAmC/lB,IAAI8kB,OACvEY,UAAYA,QAAQd,UAA4C,cAAhCc,QAAQd,SAASC,aAClDi/E,SAAWh/E,OAAO5jC,KAAO,IAAM2D,MAC/B6vB,SAASluB,MAAOs+B,OAAQA,OAAQpQ,SAAUovF,aAItD,OACIsF,SAAUvkH,MACV3D,KAAM4jC,OAAO5jC,KACbmG,SAAU4iC,MAAM/E,gBAAgBmkF,kBAAkBvkF,OAAOz9B,SAAU4iC,MAAMjF,aACzE8+E,SAAUA,cAIDpvF,SAAUA,WAOnC6Q,iBAAiBxlC,UAAU6oH,aAK3B,SAAU7lH,MAAO8nB,OACb,MAAO/nB,YAAWC,MAAOvD,KAAMqrB,QAOnC0a,iBAAiBxlC,UAAUyD,WAK3B,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cAAc,CAC/B,GAAqBy9G,YAAallH,KAAK2lC,eAAeoC,gBAAgBxkC,MAAMsE,SAAUtE,MAAM7B,KAE5F,QAASkoH,SADoB5pH,KAAK8pH,kBAAkB5E,WAAYzhH,SACtCi8C,QAASn8C,MAAMm8C,WAUjD3Z,iBAAiBxlC,UAAUupH,kBAO3B,SAAU5E,WAAY75F,OAClB,GAAqBhmB,OAAQrF,KAAK8oH,cAActoG,IAAI0kG,YAC/Bh/E,QAAU,IAC/B,IAAY,EAAR7a,OACArrB,KAAK0lC,gBAAgBc,cAAc0+E,WAAWr9G,UAAW,CACzD,GAAI7H,KAAKumC,mCAAmC9R,IAAIywF,YAG5C,MAAwB,MAE5Bh/E,SAAUlmC,KAAK+pH,YAAY7E,YACvBh/E,SAAWA,QAAQd,mBAAoB39B,gBAEvCpC,MAAQrF,KAAK8pH,kBAAkB5jF,QAAQd,SAAU/Z,OAEjD6a,QAAU,UAGb,IAAa,MAAT7gC,MAGL,MAAOA,MAWX,OARa,OAATA,QACAA,MAAQrF,KAAK4lC,QAAQ7jC,OACrB/B,KAAK4lC,QAAQ5+B,KAAKk+G,aAEtBllH,KAAK8oH,cAAcroG,IAAIykG,WAAY7/G,OAC/B6gC,SACAlmC,KAAKimC,WAAWC,SAEb7gC,OAMX0gC,iBAAiBxlC,UAAUwpH,YAI3B,SAAUzkF,QACN,GAAqBY,SAAUlmC,KAAK0lC,gBAAgB0qD,eAAe9qD,OACnE,KAAKY,QAAS,CAIV,GAAqBF,gBAAiBhmC,KAAK2lC,eAAeiE,cAActE,OACpEU,kBACAE,SAAYZ,OAAQU,eAAeV,OAAQF,SAAUY,eAAeZ,WAG5E,MAAOc,UAEJH,kBACTuW,kBACEjW,iBAAkC,WAClC,QAASA,kBAAiBrI,UAAW2H,eAAgBD,iBACjD1lC,KAAKg+B,UAAYA,UACjBh+B,KAAK2lC,eAAiBA,eACtB3lC,KAAK0lC,gBAAkBA,gBACvB1lC,KAAK42C,QAwMT,MAjMAvQ,kBAAiB9lC,UAAU+lC,cAK3B,SAAUJ,QAASd,UACfplC,KAAK42C,KAAK5vC,MAAOk/B,QAASA,QAASd,SAAUA,SAAU4kF,WAAW,KAMtE3jF,iBAAiB9lC,UAAUkmC,WAI3B,SAAUP,SACNlmC,KAAK42C,KAAK5vC,MAAOk/B,QAASA,QAASd,SAAU,KAAM4kF,WAAW,KAMlE3jF,iBAAiB9lC,UAAU+e,UAI3B,SAAU2qG,aAGN,IAAK,GAFDx/E,OAAQzqC,KACSkqH,iBAAmB,GAAI1gG,KACnC3nB,GAAK,EAAGsoH,cAAgBF,YAAapoH,GAAKsoH,cAAcpoH,OAAQF,KAAM,CAC3E,GAAIwX,IAAK8wG,cAActoH,IAAKyjC,OAASjsB,GAAGisB,OAAQpQ,SAAW7b,GAAG6b,QAC9Dg1F,kBAAiBzpG,IAAI6kB,OAAQpQ,UAGjC,IAAK,GADgBk1F,iBAAkB,GAAI3iG,KAClCjO,GAAK,EAAGQ,GAAKha,KAAK42C,KAAMp9B,GAAKQ,GAAGjY,OAAQyX,KAAM,CACnD,GAAIc,IAAKN,GAAGR,IAAK0sB,QAAU5rB,GAAG4rB,QAASd,SAAW9qB,GAAG8qB,SAAU4kF,UAAY1vG,GAAG0vG,SAC9E,IAAI9jF,QAAQob,cAAgBrB,mBAAmB7+C,SAAU,CAKrDgpH,gBAAgBntF,IAAIiJ,QAAQ7/B,KAAKkB,UAEjC,KAAK,GADgBmsF,YAA8B,QAC1Cn5E,GAAK,EAAGklC,GAAKi0C,WAAWpqD,QAAS/uB,GAAKklC,GAAG19C,OAAQwY,KAAM,CAC5D,GAAIo5E,KAAMl0C,GAAGllC,GACb6vG,iBAAgBntF,IAAI02D,IAAIpsF,YAGhC,IAAKyiH,UAAW,CACkBnkG,kBAAkBqgB,QAAQ7/B,KAAKkB,UAAU7F,KACvEslC,6BAA4BhnC,KAAKg+B,UAAWkI,QAAQ7/B,KAAKkB,UAAWvH,KAAKqqH,yBAAyBnkF,QAA0B,YAGpIkkF,gBAAgBtjH,QAAQ,SAAUwjH,gBAC9B,GAAI7/E,MAAM/E,gBAAgBc,cAAc8jF,eAAeziH,UAAW,CAC9D,GAAqBqtB,UAAWg1F,iBAAiB1pG,IAAI8pG,iBAAmBA,eAAe5oH,KAClE6oH,gBAAkB1kG,kBAAkBqP,SACzDuV,OAAMzM,UAAUjE,WAAW/yB,KAAK0b,SAAS6nG,iBACpC9pG,IAAIgqB,MAAM+/E,oBAAoBF,iBAC9B3xF,WAAW,MAAOC,aAAauO,gBAShDd,iBAAiB9lC,UAAU8pH,yBAK3B,SAAUnkF,QAASd,UACf,GAAIqF,OAAQzqC,KACSyT,aAAezT,KAAKyqH,iBAAiBvkF,UACrCpd,YACrB,IAAIsc,mBAAoBoc,yBACpB/tC,YAAYzM,KAAK/E,MAAMwR,YAIvB2xB,SAAS4F,mBAAmBniC,OAAOu8B,SAAS6F,eACvCplC,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAClCsB,OAAOu8B,SAAShB,iBAAiBkF,QAAQzjC,IAAI,SAAUQ,MAAQ,MAAOA,MAAKkB,YAC3Ekf,OAAO,SAAUjf,KAAO,MAAOA,OAAQ49B,SAAS/+B,KAAKkB,aACrD1B,IAAI,SAAU2B,KAAO,MAAOijC,OAAM+/E,oBAAoBhjH,QAG3DshB,UAAYsc,SAAStc,cAEpB,IAAIod,QAAQob,cAAgBrB,mBAAmBp/C,UAAW,CAC3D,GAAqB8wF,YAA8B,OACnD7oE,WAAY6oE,WAAW7oE,UAAUjgB,OAAO8oF,WAAW5nE,eAWvD,MALAtW,aAAYzM,KAAK/E,MAAMwR,YAAaqV,UAAUrC,OAAO,SAAU4B,UAAY,QAASA,SAASI,WAAa5iB,IAAI,SAAUwiB,UACpH,MAAOoiB,OAAMggF,kBACTnpE,YAAarB,mBAAmB3+C,WAAY+E,KAAMgiB,SAASI,cAG5DtF,WAAW1P,cAMtB4yB,iBAAiB9lC,UAAUiqH,oBAI3B,SAAUE,YACN,GAAqBC,mBAAoB3qH,KAAK2lC,eAAeoC,gBAAgBriB,sBAAsBglG,WAAW7iH,UAAWge,kBAAkB6kG,WAAWhpH,MACtJ,OAAO1B,MAAKg+B,UAAUpb,WAAW+nG,oBAMrCtkF,iBAAiB9lC,UAAUkqH,iBAI3B,SAAU7zE,MACN,GAAqB5Y,WAAYh+B,KAAKg+B,SA+DtC,OAAO16B,YAAWszC,KAAM,IA9DS,WAC7B,QAASg0E,gBA2DT,MApDAA,aAAYrqH,UAAUqD,WAKtB,SAAUqL,IAAKxL,SACX,GAAIgnC,OAAQzqC,IACZ,OAAOmjB,YAAWlU,IAAIpJ,IAAI,SAAU8Z,OAAS,MAAOrc,YAAWqc,MAAO8qB,MAAOhnC,aAOjFmnH,YAAYrqH,UAAUuD,eAKtB,SAAU+B,IAAKpC,SACX,GAAIgnC,OAAQzqC,IACZ,OAAO,IAAIsjB,gBAAe9iB,OAAOm3B,KAAK9xB,KAAKA,IAAI,SAAUqO,KAAO,MAAO,IAAIqP,iBAAgBrP,IAAK5Q,WAAWuC,IAAIqO,KAAMu2B,MAAOhnC,UAAU,OAO1ImnH,YAAYrqH,UAAUwD,eAKtB,SAAUR,MAAOE,SAAW,MAAO4gB,SAAQ9gB,QAM3CqnH,YAAYrqH,UAAUyD,WAKtB,SAAUT,MAAOE,SACb,GAAIF,gBAAiBkE,cACjB,MAAOu2B,WAAUpb,WAAWrf,MAG5B,MAAM,IAAIgB,OAAM,oCAAsChB,QAGvDqnH,gBAEgC,OAExCvkF,oBAEPQ,qBAAsC,SAAUn8B,QAEhD,QAASm8B,sBAAqBF,YAAajB,iBACvC,GAAI+E,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAGjC,OAFAyqC,OAAM9D,YAAcA,YACpB8D,MAAM/E,gBAAkBA,gBACjB+E,MAqDX,MA1DAxqC,WAAU4mC,qBAAsBn8B,QAYhCm8B,qBAAqBtmC,UAAUumC,YAK/B,SAAUF,gBAAiBT,MACvB,GAAIsE,OAAQzqC,KACS42C,KAAOgJ,KAAK1rB,MAAMiS,MAClB0kF,cACrB7qH,MAAK4lC,QAAUgR,KAAKhR,QAAQ//B,IAAI,SAAUilH,kBACtC,MAAOrgF,OAAM9D,YAAYnmB,IAAIiqB,MAAM/E,gBAAgBqlF,oBAAoBD,iBAAiBjjH,SAAU++B,iBAAkBkkF,iBAAiBppH,QAEzIk1C,KAAKhR,QAAQ9+B,QAAQ,SAAUgkH,iBAAkBzlH,OAC7C,GAAqBigC,QAASmF,MAAM7E,QAAQvgC,OACvBi/G,SAAWwG,iBAAiBxG,QACzB,iBAAbA,UACPuG,YAAY7jH,MAAOs+B,OAAQA,OAAQg/E,SAAU75E,MAAM7E,QAAQ0+E,YAElC,gBAAbA,WACZuG,YAAY7jH,MAAOs+B,OAAQA,OAAQg/E,SAAU75E,MAAM9D,YAAYnmB,IAAImE,kBAAkBiiB,iBAAkB09E,aAG/G,IAAqBoF,WAA8BpmH,WAAWszC,KAAK8yE,UAAW1pH,KAAM,KACpF,QAASglC,WAAY4R,KAAK5R,WAAY0kF,UAAWA,UAAWpF,SAAUuG,cAO1EhkF,qBAAqBtmC,UAAUuD,eAK/B,SAAU+B,IAAKpC,SACX,GAAI,YAAcoC,KAAK,CACnB,GAAqBq/G,YAAallH,KAAK4lC,QAAQ//B,IAAc,UACxC65C,QAAU75C,IAAa,OAC5C,OAAO65C,SAAQ39C,OAAS/B,KAAK2mC,YAAYnmB,IAAI0kG,WAAWr9G,SAAUq9G,WAAWxjH,KAAMg+C,SAC/EwlE,WAGJ,MAAOx6G,QAAOnK,UAAUuD,eAAeqyC,KAAKn2C,KAAM6F,IAAKpC,UAGxDojC,sBACTyV,kBAoCE0uE,eACAC,MAAO,EACPC,UAAW,EACXtvE,IAAK,EAETovE,eAAcA,cAAcC,OAAS,QACrCD,cAAcA,cAAcE,WAAa,YACzCF,cAAcA,cAAcpvE,KAAO,KACnC,IAAIxL,aAA6B,WAC7B,QAASA,aAAY4jB,QAASm3D,SAAUC,MAAO/0D,WAAYg1D,kBAAmBC,gBAAiBC,eAAgBC,cAAeC,mBAAoBC,kBAAmBC,oBAAqBC,eAAgBt9B,iBAAkBu9B,iBACxN7rH,KAAKg0D,QAAUA,QACfh0D,KAAKmrH,SAAWA,SAChBnrH,KAAKorH,MAAQA,MACbprH,KAAKq2D,WAAaA,WAClBr2D,KAAKqrH,kBAAoBA,kBACzBrrH,KAAKsrH,gBAAkBA,gBACvBtrH,KAAKurH,eAAiBA,eACtBvrH,KAAKwrH,cAAgBA;iCACrBxrH,KAAKyrH,mBAAqBA,mBAC1BzrH,KAAK0rH,kBAAoBA,kBACzB1rH,KAAK2rH,oBAAsBA,oBAC3B3rH,KAAK4rH,eAAiBA,eACtB5rH,KAAKsuF,iBAAmBA,iBACxBtuF,KAAK6rH,gBAAkBA,gBACvB7rH,KAAK8rH,kBAAoB,GAAItiG,KAC7BxpB,KAAK+rH,eAAiB,GAAIviG,KAC1BxpB,KAAKgsH,6BAA+B,GAAIxiG,KA21B5C,MAt1BA4mB,aAAY7vC,UAAU2zD,WAGtB,WAAcl0D,KAAKqrH,kBAAkBn3D,cAKrC9jB,YAAY7vC,UAAU0rH,mBAItB,SAAUC,WACN,GAAIzhF,OAAQzqC,KACSmsH,cAAgBzjF,4BAA4BwjF,UAAWlsH,KAAKorH,MAAOprH,KAAK6rH,gBAAiB7rH,KAAKqrH,kBAInH,OAHAc,eAAc/iF,UAAUtiC,QAAQ,SAAUuiC,UACtC,MAAOoB,OAAM4gF,kBAAkBr5B,qCAAqC3oD,SAAShjC,KAAKkB,WAAW,KAE1F4kH,eAMX/7E,YAAY7vC,UAAU6rH,oBAItB,SAAUF,WACN,GAAIzhF,OAAQzqC,KACSmsH,cAAgBzjF,4BAA4BwjF,UAAWlsH,KAAKorH,MAAOprH,KAAK6rH,gBAAiB7rH,KAAKqrH,kBACnH,OAAOzuE,SACFF,IAAIyvE,cAAc/iF,UAAUvjC,IAAI,SAAUwjC,UAC3C,MAAOoB,OAAM4gF,kBAAkBr5B,qCAAqC3oD,SAAShjC,KAAKkB,WAAW,MAE5Ff,KAAK,WAAc,MAAO2lH,kBAMnC/7E,YAAY7vC,UAAU8rH,aAItB,SAAU7mG,UACN,GAAqB0jB,cAAelpC,KAAK+rH,eAAevrG,IAAIgF,SAM5D,OALK0jB,gBACDA,aACIC,YAAYnpC,KAAKorH,MAAOprH,KAAK6rH,gBAAiB7rH,KAAKqrH,kBAAmB7lG,UAC1ExlB,KAAK+rH,eAAetrG,IAAI+E,SAAU0jB,eAE/BA,cAMXkH,YAAY7vC,UAAU+rH,2BAItB,SAAU9mG,UACN,GAAqB0jB,cAAelpC,KAAKgsH,6BAA6BxrG,IAAIgF,SAK1E,OAJK0jB,gBACDA,aAAeqB,0BAA0BvqC,KAAKorH,MAAOprH,KAAK6rH,gBAAiB7rH,KAAKqrH,kBAAmB7lG,UACnGxlB,KAAKgsH,6BAA6BvrG,IAAI+E,SAAU0jB,eAE7CA,cAMXkH,YAAY7vC,UAAUgsH,uBAItB,SAAU/mG,UACN,GAAIilB,OAAQzqC,KACSwsH,gBACA3oF,KAAO7jC,KAAKqsH,aAAa7mG,WAM1CxlB,KAAKmrH,SAASsB,wBAA0B5oF,KAAKxa,WAAWtnB,QAAU8hC,KAAK7E,MAAMj9B,QAC7E8hC,KAAK2F,YAAYznC,QAAU8hC,KAAKuF,UAAUrnC,QAAU8hC,KAAK6F,yBACzD8iF,aAAaxlH,KAAK2d,kBAAkBkf,KAAKre,UAAU,IAC/CxlB,KAAKmrH,SAASuB,uBACdF,aAAaxlH,KAAK0e,sBAAsBme,KAAKre,UAAU,IAG/D,IAAqBoiB,YAAa7iB,uBAAuBD,sBAAsB+e,KAAKre,UAAU,GAAM,GAoBpG,OAnBAqe,MAAKxa,WAAWviB,QAAQ,SAAU6lH,WAC9B,GAAqBzjH,UAA8BuhC,MAAM4gF,kBAAkB36B,kCAAkCi8B,WAAavnF,QACrHl8B,UAASygB,aAKdzgB,SAAkB,SAAEk3C,UAAUt5C,QAAQ,SAAU4uD,UAC5C,GAAqBk3D,eAAgBniF,MAAM2gF,MAAM19E,uBAAuBgoB,SAAU7xB,KAAKre,SACvF,KAAKonG,cACD,KAAMpoH,aAAY,6BAA+BkxD,SAAW,gBAAkB7xB,KAAKre,SAEvF,IAAqBmiB,YAAgCz+B,SAAkB,SAAEo3C,eAAiB7V,MAAMupB,QAAQplB,wBAA0BC,kBAAkBC,QACpJ09E,cAAaxlH,KAAKghC,iBAAiB4kF,cAAejlF,UAAWC,aACzD6C,MAAM0gF,SAASsB,wBACfD,aAAaxlH,KAAKghC,iBAAiB4kF,eAAgBjlF,UAAWC,iBAInE4kF,cAOXp8E,YAAY7vC,UAAUssH,cAKtB,SAAUC,YAAaC,kBACnB,GAAqB/uF,WAAYh+B,KAAKgtH,qBAAqBF,YAC3D,IAAIA,YAAY3nG,SAAS,iBAAkB,CACvC,IAAK4nG,iBACD,KAAM,IAAIxoH,OAAM,6EAA+EuoH,YAEnG,IAAqBG,cAAejtH,KAAKqsH,aAAaU,iBACtD/sH,MAAKktH,qBAAqBlvF,UAAWivF,aAAcjC,cAAcC,WAEhE,IAAI6B,YAAY3nG,SAAS,kBAC1B,GAAInlB,KAAKmrH,SAASuB,sBAAuB,CACrC,IAAKK,iBACD,KAAM,IAAIxoH,OAAM,6EAA+EuoH,YAEnG,IAAqBG,cAAejtH,KAAKqsH,aAAaU,iBACtDxlF,kBAAiBvJ,WACjBivF,aAAa7jF,UAAUtiC,QAAQ,SAAUuiC,UAErCtC,iBAAiB/I,UAAWqL,SAAShjC,KAAKkB,kBAI7CulH,aAAY3nG,SAAS,gBAC1BoiB,iBAAiBvJ,UAOrB,OAAOh+B,MAAKmtH,qBAAqB,UAAWnvF,YAOhDoS,YAAY7vC,UAAU6sH,kBAKtB,SAAUN,YAAaC,kBACnB,GAAqBE,cAAejtH,KAAKqsH,aAAaU,kBACjC/uF,UAAYh+B,KAAKgtH,qBAAqBF,YAI3D,OAHIA,aAAY3nG,SAAS,kBACrBnlB,KAAKktH,qBAAqBlvF,UAAWivF,aAAcjC,cAAcE,WAE9DltF,UAAUjE,WAAWh4B,OAAS,EACjC/B,KAAKmtH,qBAAqBF,aAAaznG,SAAUwY,WACjD,MAORoS,YAAY7vC,UAAU8sH,eAKtB,SAAUjlF,UAAWklF,SACjB,GAAI7iF,OAAQzqC,KACS+oC,MAAQX,UAAUviC,IAAI,SAAU2f,UAAY,MAAOilB,OAAM4hF,aAAa7mG,YACtE+nG,kBACrBxkF,OAAMjiC,QAAQ,SAAU+8B,MACpB,MAAOA,MAAKuF,UAAUtiC,QAAQ,SAAUuiC,UACpC,MAAOkkF,iBAAgBvmH,KAAKyjC,MAAM4gF,kBAAkBr5B,qCAAqC3oD,SAAShjC,KAAKkB,WAAW,OAG1H,IAAqBimH,qBAAsBF,QAAQznH,IAAI,SAAU4nH,QAAU,MAAOhjF,OAAM6hF,2BAA2BmB,SACnH,OAAO7wE,SAAQF,IAAI6wE,iBAAiB/mH,KAAK,SAAUka,GAC/C,OACIkoB,gBAAiBsC,wBAAwBnC,OACzCykF,oBAAqBA,wBASjCp9E,YAAY7vC,UAAUmtH,cAKtB,SAAUtlF,UAAWklF,SACjB,GAAI7iF,OAAQzqC,KACS+oC,MAAQX,UAAUviC,IAAI,SAAU2f,UAAY,MAAOilB,OAAM4hF,aAAa7mG,WAC3FujB,OAAMjiC,QAAQ,SAAU+8B,MACpB,MAAOA,MAAKuF,UAAUtiC,QAAQ,SAAUuiC,UACpC,MAAOoB,OAAM4gF,kBAAkBr5B,qCAAqC3oD,SAAShjC,KAAKkB,WAAW,MAGrG,IAAqBimH,qBAAsBF,QAAQznH,IAAI,SAAU4nH,QAAU,MAAOhjF,OAAM6hF,2BAA2BmB,SACnH,QACI7kF,gBAAiBsC,wBAAwBnC,OACzCykF,oBAAqBA,sBAS7Bp9E,YAAY7vC,UAAU2sH,qBAMtB,SAAUlvF,UAAW6F,KAAM8pF,WACvB,GAAIljF,OAAQzqC,KACS6zG,YAAc,CACnChwE,MAAKuF,UAAUtiC,QAAQ,SAAUozF,aAAc0zB,eAO3CnjF,MAAMihF,kBAAkBjxB,WAAWz8D,UAAWk8D,aAAa7zF,KAAKkB,UAKhE,IAAqB0a,oBAAqBi4E,aAAa91D,iBAAiB/a,WAAWxjB,IAAI,SAAU3F,GAAK,MAAOA,GAAEqH,YAAcsB,OAAOqxF,aAAa91D,iBAAiBpF,MAAMn5B,IAAI,SAAU3F,GAAK,MAAOA,GAAEqH,YAAe2yF,aAAat4C,gBAAgB/7C,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,YAAe2yF,aAAar4C,gBAAgBh8C,IAAI,SAAUlD,GAAK,MAAOA,GAAE0D,KAAKkB,YAAekjC,MAAMojF,+BAA+BlgG,YAAYsU,YAAatU,YAAYoU,cACla+xE,sBAAwB,GAAItqF,IACjDvH,oBAAmBnb,QAAQ,SAAUU,IAAKsmH,WACtCha,sBAAsBrzF,IAAIjZ,IAAK,QAAUomH,cAAgB,IAAME,aAEnEha,sBAAsBhtG,QAAQ,SAAU0vF,QAASjvF,WAC7Cy2B,UAAUjE,WAAW/yB,KAAK0b,SAAS8zE,SAC9B/1E,IAAIsM,UAAU0L,KAAKrM,eACnBuM,WAAW1V,eAAe+a,UAAUpb,WAAWrb,UAA4B,MAA4C,QAE5HomH,UAAY3C,cAAcE,WAE1BhxB,aAAalvD,mBAAmBlkC,QAAQ,SAAUinH,OAC9C,GAAqB7kH,UAAWuhC,MAAM4gF,kBAAkB55B,qBAAqBs8B,MAAMxmH,UAC9E2B,UAASygB,cAGdkqF,cACAppE,MAAMujF,sBAAsBhwF,UAAW90B,SAAS7C,KAAKkB,UAAU7F,KAAO,SAAWmyG,YAAa3Z,aAAczvD,MAAM4gF,kBAAkBh7B,yBAAyBnnF,WAAYA,SAAS7C,MAAOytG,uBACzLrpE,MAAMujF,sBAAsBhwF,UAAW90B,SAAS7C,KAAKkB,UAAU7F,KAAO,IAAMmyG,YAAa3Z,aAAchxF,SAAUgxF,aAAa91D,iBAAiB/a,WAAYyqF,4BAInI,IAAhC91E,UAAUjE,WAAWh4B,QACrBwlC,iBAAiBvJ,YAOzBoS,YAAY7vC,UAAUstH,8BAItB,SAAUtvE,YAEN,IAAK,GADgB53C,WACZ9E,GAAK,EAAGosH,aAAe1vE,WAAY18C,GAAKosH,aAAalsH,OAAQF,KAAM,CACxE,GAAI0F,WAAY0mH,aAAapsH,IACR+D,MAAQsb,gCAAgClhB,KAAKq2D,WAAY9uD,UAC1E3B,OAAM8B,YACNf,OAAOK,KAAKpB,MAAM8B,WAAWH,WAGrC,MAAOZ,SAWXypC,YAAY7vC,UAAUytH,sBAStB,SAAUxpG,IAAKqvF,YAAalqG,WAAYT,SAAUmgB,WAAYyqF,uBAC1D,GAAIz6F,IAAKrZ,KAAKkuH,eAAehlH,SAAUS,WAAY0f,YAAa8kG,eAAiB90G,GAAG4lB,SAAUwsE,UAAYpyF,GAAG2lB,OAC5GxlB,GAAKgL,IAAIuV,YAAY/yB,KAAK/E,MAAMuX,GAAIxZ,KAAKyrH,mBAAmB1sF,iBAAiB80E,YAAa3qG,SAAUilH,eAAgB1iB,UAAWqI,sBAAuBtvF,KACvJ,IAAIhL,KAOR42B,YAAY7vC,UAAU6tH,kBAKtB,SAAUjC,cAAehyC,QACrB,GAAI1vC,OAAQzqC,KACS0yB,UACA2b,WAAa,GAAIE,YAEjB8/E,cAAgB,GAAIjR,eAAc/uE,iBAAoB8rC,OAe3E,IAdAgyC,cAAcpjF,MAAMjiC,QAAQ,SAAU+8B,MAClC,GAAqByqF,aACrBzqF,MAAKxa,WAAWviB,QAAQ,SAAU+vD,eAC9B,GAAqBq4B,SAAUzkD,MAAM4gF,kBAAkB55B,qBAAqB56B,cACxEq4B,UAAWA,QAAQvlE,aACnB2kG,UAAUtnH,KAAKkoF,WAGvBo/B,UAAUxnH,QAAQ,SAAUoC,UACxB,GAAqB02E,MAA6C12E,SAAkB,SAAW,SAC1EiN,oBAAsBwtC,oBAAoBC,UAA6B16C,SAAkB,SAAEy3C,cAChHjuB,QAAO1rB,KAAK/E,MAAMywB,OAA2B27F,cAAchR,mBAAmBz9B,KAAM/7C,KAAKre,SAAUrP,0BAGvGuc,OAAO3wB,OACP,KAAM,IAAIwC,OAAMmuB,OAAO7sB,IAAI,SAAU0T,GAAK,MAAOA,GAAEtT,aAAeH,KAAK,MAE3E,OAAOuoH,gBAMXj+E,YAAY7vC,UAAUguH,sBAItB,SAAUl1G,IACN,GAAIoxB,OAAQzqC,KACR6qC,0BAA4BxxB,GAAGwxB,yBAEnC,OAFsExxB,IAAG0vB,MAE5DtgC,OAAO,SAAUi7F,EAAG7/D,MAE7B,MADA6/D,GAAE18F,KAAK/E,MAAMyhG,EAAGj5D,MAAM+jF,mBAAmB3qF,KAAKre,SAAUqlB,0BAA2BhH,KAAKxa,WAAYwa,KAAK7E,MAAO6E,KAAKuF,UAAWvF,KAAK2F,cAC9Hk6D,QAYftzD,YAAY7vC,UAAUiuH,mBAStB,SAAUhpG,SAAUqlB,0BAA2BxhB,WAAY2V,MAAOoK,UAAWI,aACzE,GAAIiB,OAAQzqC,KAESyD,QAAUzD,KAAKgtH,qBAAqBxnG,SAsBzD,OApBA6D,YAAWviB,QAAQ,SAAU+vD,eACzB,GAAqB43D,mBAAoBhkF,MAAM4gF,kBAAkB55B,qBAAqB56B,cACtF,IAAI43D,kBAAkB9kG,YAAa,CAC/B,GAAqBhqB,QAA4BkrC,0BAA0BrqB,IAAIq2C,cAC/El3D,SACI0E,MAAM,8CAAgDgD,eAAeonH,kBAAkBpoH,MAAQ,IACnG,IAAIgT,IAAKoxB,MAAMyjF,eAAeO,kBAAmB9uH,OAAQA,OAAOykC,iBAAiB/a,YAAa8kG,eAAiB90G,GAAG4lB,SAAUyvF,YAAcr1G,GAAG2lB,KAC7ID,kBAAiBt7B,QAASgrH,kBAAmBC,YAAaP,eAAgB1jF,MAAM4rB,gBAGhFt4B,kBAAiBt6B,QAASgrH,kBAAmBhkF,MAAM4rB,cAG3Dr3B,MAAMl4B,QAAQ,SAAUytF,UACpB,GAAqBo6B,cAAelkF,MAAM4gF,kBAAkB/2B,gBAAgBC,SACxEo6B,eACAlrF,YAAYhgC,QAASkrH,aAAclkF,MAAM4rB,cAGjD7sB,YAAY1iC,QAAQ,SAAUsjC,YAAc,MAAOK,OAAMkhF,oBAAoBzgC,QAAQ9gD,WAAY3mC,WAC7FA,QAAQs2B,YAAct2B,QAAQs2B,WAAWh4B,OAAS,IACxCyjB,SAAUA,SAAUuU,WAAYt2B,QAAQg7B,aAAa1E,WAAWlxB,OAAOpF,QAAQs2B,kBAQjGqW,YAAY7vC,UAAUquH,uBAItB,SAAU7lF,OACN,GAAI0B,OAAQzqC,IAEZ,OAAO+oC,OAAMtgC,OAAO,SAAUi7F,EAAG7/D,MAE7B,MADA6/D,GAAE18F,KAAK/E,MAAMyhG,EAAGj5D,MAAMokF,oBAAoBhrF,KAAKre,SAAUqe,KAAK2F,cACvDk6D,QAQftzD,YAAY7vC,UAAUsuH,oBAKtB,SAAUrpG,SAAUgkB,aAChB,GAAIiB,OAAQzqC,KACSyD,QAAUzD,KAAKgtH,qBAAqBxnG,SAEzD,OADAgkB,aAAY1iC,QAAQ,SAAUsjC,YAAc,MAAOK,OAAMkhF,oBAAoBzgC,QAAQ9gD,WAAY3mC,WAC7FA,QAAQs2B,YAAct2B,QAAQs2B,WAAWh4B,OAAS,IACxCyjB,SAAUA,SAAUuU,WAAYt2B,QAAQg7B,aAAa1E,WAAWlxB,OAAOpF,QAAQs2B,kBAQjGqW,YAAY7vC,UAAUuuH,aAItB,SAAU3C,eACN,GAAI1hF,OAAQzqC,KACR6qC,0BAA4BshF,cAActhF,yBAI9C,OAAOtiC,SAJ0E4jH,cAAcpjF,MACpDljC,IAAI,SAAUg+B,MACrD,MAAO4G,OAAMskF,iBAAiBlrF,KAAKre,SAAUqlB,0BAA2BhH,KAAKxa,WAAYwa,KAAK7E,MAAO6E,KAAKuF,UAAWvF,KAAK2F,iBAalI4G,YAAY7vC,UAAUwuH,iBAStB,SAAUlL,WAAYh5E,0BAA2BxhB,WAAY2V,MAAOoK,UAAWI,aAC3E,GAAIiB,OAAQzqC,KACS4nC,WAAa7iB,uBAAuBD,sBAAsB++F,YAAY,GAAM,IAC5EmL,kBACAhxF,UAAYh+B,KAAKgtH,qBAAqBroG,kBAAkBk/F,YAAY,GA+BzF,IA9BAmL,eAAehoH,KAAK/E,MAAM+sH,eAAgBhvH,KAAKivH,eAAepL,WAAYx6F,WAAY2V,MAAOoK,UAAWI,YAAaxL,YAErHoL,UAAUtiC,QAAQ,SAAUozF,cAAgB,MAAOzvD,OAAMykF,eAAelxF,UAAWk8D,gBAEnF7wE,WAAWviB,QAAQ,SAAU2oF,SACzB,GAAqBvmF,UAAWuhC,MAAM4gF,kBAAkB55B,qBAAsC,QAC9F,IAAKvoF,SAASygB,YAAd,CAGA,GAAqB0f,UAAWwB,0BAA0BrqB,IAAIivE,QAC9D,KAAKpmD,SACD,KAAM,IAAI9kC,OAAM,6DAA+D8C,eAAe6B,SAAS7C,MAAQ,IAGnH,IAAqB8oH,qBAAsB1kF,MAAM8gF,eAAexsF,iBAAiBf,UAAW90B,SAG5FA,UAAkB,SAAEu3C,oBAAoB35C,QAAQ,SAAUsoH,gBAGtD,GAAqBlnF,MAAOuC,MAAM8gF,eAAerkB,eAAeh+F,SAChE8lH,gBAAehoH,KAAKyjC,MAAM4kF,eAAexL,WAAY36G,SAAUkmH,eAAgBlnF,KAAMN,aACjF6C,MAAM0gF,SAASsB,wBACfuC,eAAehoH,KAAKyjC,MAAM4kF,eAAexL,WAAY36G,SAAUkmH,gBAAiBlnF,KAAMN,cAI1D6C,OAAM6kF,kBAAkBtxF,UAAW90B,SAAUmgC,SAAUA,SAASjF,iBAAiB/a,WAAY8lG,oBAAqBvnF,WACtJ6C,OAAM8kF,yBAAyBvxF,UAAW90B,SAAUmgC,SAAUzB,eAE9D5J,UAAUjE,WAAWh4B,OAAS,GAAK/B,KAAKmrH,SAASsB,uBAAwB,CACzE,GAAqB+C,WAAYxvH,KAAKmtH,qBAAqBtJ,WAAY7lF,UACvEgxF,gBAAeh1F,QAAQw1F,WAE3B,MAAOR,iBAWX5+E,YAAY7vC,UAAU0uH,eAStB,SAAUzpF,YAAanc,WAAY2V,MAAOoK,UAAWI,YAAaimF,cAC9D,GAAIhlF,OAAQzqC,KACS0vH,gBAAkB1vH,KAAK6rH,gBAAgBliF,aAAanE,aACpE3/B,IAAI,SAAUy/B,QAAU,MAAOmF,OAAMohF,gBAAgBjiF,cAActE,UACnDqqF,SAAWvmF,UAAUvjC,IAAI,SAAUyD,MACpD,OACI48B,QAA4BuE,MAAM4gF,kBAAkBz5B,mBAAmBtoF,KAAKjD,KAAKkB,WACjF69B,SAA6BqF,MAAM4gF,kBAAkBnhF,oBAAoB5gC,KAAKjD,KAAKkB,cAExFsB,OAAOwgB,WAAWxjB,IAAI,SAAU2B,KAC/B,OACI0+B,QAA4BuE,MAAM4gF,kBAAkB35B,oBAAoBlqF,KACxE49B,SAA6BqF,MAAM4gF,kBAAkB55B,qBAAqBjqF,QAE9Ew3B,MAAMn5B,IAAI,SAAU2B,KACpB,OACI0+B,QAA4BuE,MAAM4gF,kBAAkB52B,eAAejtF,KACnE49B,SAA6BqF,MAAM4gF,kBAAkB/2B,gBAAgB9sF,QAEzEgiC,YAAY3jC,IAAI,SAAU2B,KAC1B,OACI0+B,QAA4BuE,MAAM4gF,kBAAkBp3B,qBAAqBzsF,IAAI89B,QAC7EF,SAA6BqF,MAAM4gF,kBAAkBp3B,qBAAqBzsF,IAAI89B,QAAUj/B,SAG3EupH,gBAAkB5vH,KAAKmrH,SAASuB,sBACjD1sH,KAAKgtH,qBAAqBtnG,sBAAsB8f,aAAa,IAC7D,KACAnsB,GAAKksB,mBAAmBC,YAAaoqF,gBAAiB5vH,KAAKsuF,iBAAkBtuF,KAAK6rH,gBAAiB6D,gBAAiBC,UAAWxpF,KAAO9sB,GAAG8sB,IAAiB9sB,IAAG6b,SACxJpuB,QAAQ,SAAU6Y,OACvB8vG,aAAa11F,WAAW/yB,KAAK0b,SAAS/C,MAAMuV,UAAUzU,IAAIgvG,aAAa7sG,WAAWjD,MAAM2lB,SAAS3M,WAAW,MACxGC,aAAauO,aAGrB,IAAqB0oF,aAAc,GAAIjM,eAAcp+E,YAAajgB,gBAAgBigB,aAAcW,MAC3Ex/B,QAAUkpH,YAI/B,OAHID,kBACAjpH,OAAOK,KAAKhH,KAAKmtH,qBAAqB3nF,YAAaoqF,kBAEhDjpH,QAOXypC,YAAY7vC,UAAU2uH,eAKtB,SAAUlxF,UAAWqL,UACjB,GAAqBvgB,aACrB,IAAI9oB,KAAKmrH,SAAShxC,OAAQ,CACtB,GAAqB21C,kBAAmB9vH,KAAKmrH,SAAShxC,OAAO13E,QAAQ,KAAM,IAC3EqmB,WAAU9hB,MACNpB,MAAOsb,gCAAgClhB,KAAKq2D,WAAY1oC,YAAY0zD,WACpE94D,SAAUunG,mBAGd9vH,KAAKmrH,SAAS38E,YACd1lB,UAAU9hB,MACNpB,MAAOsb,gCAAgClhB,KAAKq2D,WAAY1oC,YAAY2zD,qBACpE/4D,SAAUvoB,KAAKmrH,SAAS38E,aAGhCxuC,KAAK0rH,kBAAkBxgC,QAAQltD,UAAWqL,SAAUvgB,YASxDsnB,YAAY7vC,UAAUgvH,yBAOtB,SAAUvxF,UAAW90B,SAAUmgC,SAAUzB,YACrC,GAAqBmoF,UAAW/vH,KAAKqrH,kBAAkBh7B,yBAAyBnnF,UAC3D8mH,mBAAqBhwH,KAAKsvH,kBAAkBtxF,UAAW+xF,SAAU1mF,UAAWngC,SAAS7C,MAAO,KAAMuhC,YAClHouE,aACgBia,eAAiB9nH,qBAAqBe,SAAS7C,KAAKkB,WACpD2oH,cACrB,KAAK,GAAqBp8F,YAAY5qB,UAASm1B,OAAQ,CACnD,GAAqBmB,cAAet2B,SAASm1B,OAAOvK,SAEpDo8F,aAAYlpH,KAAK,GAAIuc,iBAAgBuQ,SAAUzP,QAAQmb,eAAe,IAE1E,GAAqB2wF,gBACrB,KAAK,GAAqBr8F,YAAY5qB,UAASo1C,QAAS,CACpD,GAAqB9e,cAAet2B,SAASo1C,QAAQxqB,SAErDq8F,cAAanpH,KAAK,GAAIuc,iBAAgBuQ,SAAUzP,QAAQmb,eAAe,IAE3ExB,UAAUjE,WAAW/yB,KAAK0b,SAASutG,gBAC9BxvG,IAAImC,WAAW+K,YAAY+0D,wBAAwB/1D,QACpDtI,QAAQnb,SAAS0nB,UAAWoN,UAAUpb,WAAW1Z,SAAS7C,KAAKkB,WAC/Dmb,SAASstG,oBAAqB,GAAI1sG,gBAAe4sG,aACjD,GAAI5sG,gBAAe6sG,cACnBhtG,WAA8Bja,SAAkB,SAAE82B,mBAAmBn6B,IAAI,SAAU+qB,UAAY,MAAOvM,SAAQuM,gBAE7G+H,WAAW5V,WAAW4K,YAAY6Z,kBAAsCvkB,eAAe+a,UAAUpb,WAAW1Z,SAAS7C,KAAKkB,cAAiBo7E,aAAaC,SAAUhqD,aAAaC,MAAOD,aAAauO,aAW5MiJ,YAAY7vC,UAAU+uH,kBAStB,SAAUtxF,UAAW90B,SAAUmgC,SAAU+mF,qBAAsBC,gBAAiBzoF,YAC5E,GAAIvuB,IAAKrZ,KAAKkuH,eAAehlH,SAAUmgC,SAAU+mF,sBAAuBjC,eAAiB90G,GAAG4lB,SAAUwsE,UAAYpyF,GAAG2lB,MAChGsxF,WAAaD,gBAAkB3tG,SAAS2tG,gBAAgBvpB,WAAa3jF,eACrEotG,WAAavwH,KAAKwrH,cAAczsF,iBAAiBf,UAAW90B,SAAUilH,eAAgBmC,WAAY7kB,UAIvH,OAHI4kB,kBACA5oF,wBAAwBznC,KAAK6rH,gBAAiBwE,gBAAiBrwH,KAAKurH,eAAerkB,eAAeh+F,UAAW0+B,YAE1G2oF,YAQXngF,YAAY7vC,UAAU2tH,eAMtB,SAAUhlH,SAAUmgC,SAAU+mF,sBAC1B,GAAI3lF,OAAQzqC,IACZ,IAAIA,KAAK8rH,kBAAkBr3F,IAAIvrB,SAAS7C,KAAKkB,WACzC,MAA0BvH,MAAK8rH,kBAAkBtrG,IAAItX,SAAS7C,KAAKkB,UAEvE,IAAqBynC,qBAA0D,SAAsB,SAAEA,oBAClF3lB,WAAa+mG,qBAAqBvqH,IAAI,SAAUgkB,KAAO,MAAO4gB,OAAM4gF,kBAAkB35B,oBAAoB7nE,IAAItiB,aAC9Gy3B,MAAQqK,SAASjF,iBAAiBpF,MAAMn5B,IAAI,SAAU65B,MAAQ,MAAO+K,OAAM4gF,kBAAkB52B,eAAe/0D,KAAKn4B,aACjHZ,OAAS3G,KAAKsrH,gBAAgBp3F,MAAMhrB,SAAgDA,SAAkB,SAAU,QAAGmgB,WAAY2V,MAAOqK,SAASyY,QAAS94C,kBAAkBqgC,SAAShjC,KAAM6C,SAA6BA,SAAkB,UAAI8lC,oBAEjQ,OADAhvC,MAAK8rH,kBAAkBrrG,IAAIvX,SAAS7C,KAAKkB,UAAWZ,QAC7CA,QAMXypC,YAAY7vC,UAAUysH,qBAItB,SAAUv5E,aACN,GAAIhJ,OAAQzqC,IA0BZ,QAAS+5B,cAAgB0Z,YAAaA,YAAa7wB,WAzBd,SAAU0iB,OAAQziB,WAAYoiG,cAG/D,OAFmB,KAAfpiG,aAAyBA,WAAa,UACrB,KAAjBoiG,eAA2BA,cAAe,KACxC3/E,iBAAkB79B,eACpB,KAAM,IAAIlD,OAAM,sCAAwCq7C,KAAKj6C,UAAU2/B,QAE3E,IAAqBkgF,OAAQ/6E,MAAMohF,gBAAgBtG,aAAajgF,SAAW,EACvEjsB,GAAKoxB,MAAMohF,gBAAgB7G,YAAY1/E,OAAQ2/E,eAAiB3/E,OAAQz9B,SAAWwR,GAAGxR,SAAUnG,KAAO2X,GAAG3X,KAAMg+C,QAAUrmC,GAAGqmC,QAC5G8wE,aAAe/lF,MAAMgmF,sBAAsB5oH,SAAU4rC,aAKrDi9E,cAAgBjmF,MAAMgmF,sBAAsBh9E,YAAaA,aACzDzO,WAAawrF,eAAiBE,cAAgB,KAAOF,aAMrDG,mBAAqB9tG,eACrB+tG,uBAAyBpL,MAAQmL,mBAAmB5uH,OACpD8uH,cAAgBF,mBAAmB9nH,OAAO,GAAInF,OAAMktH,wBAAwBE,KAAK1kG,cACtG,OAAOszB,SAAQj3C,OAAO,SAAU+Z,KAAMuuG,YAAc,MAAOvuG,MAAKwN,KAAK+gG,aAAkCnuG,WAAW,GAAIilE,mBAAkB7iD,WAAYtjC,KAAM,MAAOmvH,iBAEvFpyF,aAAc,GAAIkV,gBAOpGvD,YAAY7vC,UAAUkwH,sBAKtB,SAAUO,iBAAkBC,oBACxB,MAAOjxH,MAAKsuF,iBAAiBm3B,mBAAmBuL,mBAC5ChxH,KAAK6rH,gBAAgBpG,mBAAmBuL,mBACxChxH,KAAKorH,MAAM8F,qBAAqBF,iBAAkBC,qBAU1D7gF,YAAY7vC,UAAU8uH,eAQtB,SAAUxL,WAAY36G,SAAUioH,mBAAoBpqB,UAAWn/D,YAC3D,GAAqB5J,WAAYh+B,KAAKgtH,qBAAqBhlF,iBAAoCmpF,mBAA6B,UAAGpqB,UAAWn/D,aACrHwpF,mBAAqBpxH,KAAKurH,eAAepkB,cAAcnpE,UAAW90B,SAAUioH,mBAAoBpqB,UAErH,OADAt/D,yBAAwBznC,KAAK6rH,gBAAiBuF,mBAAoBrqB,UAAWn/D,YACtE5nC,KAAKmtH,qBAAqBtJ,WAAY7lF,YAOjDoS,YAAY7vC,UAAU4sH,qBAKtB,SAAUtJ,WAAYr/F,KAClB,MAAO,IAAIo/F,eAAcC,WAAYr/F,IAAIivB,YAAajvB,IAAIuV,aAO9DqW,YAAY7vC,UAAU2jC,eAKtB,SAAUmtF,WAAYzoF,iBA2BlB,QAAS0oF,gBAAehsF,OAAQisF,WAAYptF,eAKxC,OAJmB,KAAfotF,aAAyBA,WAAa,GAAI9pG,UACxB,KAAlB0c,gBAA4BA,kBAG5BotF,WAAW98F,IAAI6Q,UAAYA,OAAO5jC,KAClC,MAAOyiC,cAEXotF,YAAWt0F,IAAIqI,OAEf,KAAK,GADgBksF,YAAattF,eAAkCg3E,KAAKmQ,kBAAkBnhF,oBAAoB5E,QAAQ,GAAS41E,KAAK7kD,YAC5Hx0D,GAAK,EAAG4vH,aAAeD,WAAY3vH,GAAK4vH,aAAa1vH,OAAQF,KAAM,CACxE,GAAI6vH,WAAYD,aAAa5vH,GAC7BsiC,eAAcn9B,KAAK0qH,WACnBJ,eAAeI,UAAU3sF,iBAAkBwsF,WAAYptF,eAE3D,MAAOA,eAzCX,GAAqB+2E,MAAOl7G,IAC5B,IAAIqxH,WAAY,CAEZ,MAAOC,gBADuB5sF,eAAe2sF,WAAYrxH,KAAKq2D,YAAYtxB,kBAGzE,GAAI6D,gBAAiB,CAEtB,IAAK,GADgBzE,kBACZtiC,GAAK,EAAGwX,GAAKuvB,gBAAgBQ,UAAWvnC,GAAKwX,GAAGtX,OAAQF,KAG7D,IAAK,GAFDwnC,UAAWhwB,GAAGxX,IACG2vH,WAAattF,eAAemF,SAAUrpC,KAAKq2D,YACvD78C,GAAK,EAAGm4G,aAAeH,WAAYh4G,GAAKm4G,aAAa5vH,OAAQyX,KAAM,CACxE,GAAIk4G,WAAYC,aAAan4G,GAC7B2qB,eAAcn9B,KAAK0qH,WAG3B,MAAOvtF,eAGP,KAAM,IAAI5/B,OAAM,yDA0BjB6rC,eAoUPrE,kBAAoB,qBA6DpB6lF,aAAe,gBAEfzkF,WAAa,WACb0kF,QACAxsF,WAAY,UAEZysF,UAAY,WACZC,QAAU,UACVC,cAAgB,GAAIvqG,MAAKqqG,UAAW,aAAc,SAclD1jF,gBAAiC,WACjC,QAASA,iBAAgB1I,gBAAiBC,eAAgBssF,qBAAsBC,uBAAwBhO,mBACvE,KAAzB+N,uBAAmCA,6BACR,KAA3BC,yBAAqCA,0BACzC,IAAIznF,OAAQzqC,IACZA,MAAK0lC,gBAAkBA,gBACvB1lC,KAAK2lC,eAAiBA,eACtB3lC,KAAKkkH,cAAgBA,cACrBlkH,KAAKmyH,gBAAkB,GAAI3oG,KAC3BxpB,KAAKoyH,cAAgB,GAAI5oG,KACzBxpB,KAAKqyH,eAAiB,GAAI7oG,KAC1BxpB,KAAKsyH,YAAc,GAAI9oG,KACvBxpB,KAAKuyH,YAAc,GAAI/oG,KACvBxpB,KAAKwyH,cAAgB,GAAIhpG,KACzBxpB,KAAKyyH,2BAA6B,GAAIjpG,KACtCxpB,KAAK0yH,wCAA0C,GAAIlpG,KACnDxpB,KAAK2yH,0BACLV,qBAAqBnrH,QAAQ,SAAU8rH,IACnC,MAAOnoF,OAAMooF,gCAAgCpoF,MAAM1C,gBAAgB6qF,GAAG/qH,SAAU+qH,GAAGlxH,MAAOkxH,GAAG7gF,QAEjGmgF,uBAAuBprH,QAAQ,SAAUgsH,IAAM,MAAOroF,OAAMsoF,kBAAkBtoF,MAAM1C,gBAAgB+qF,GAAGjrH,SAAUirH,GAAGpxH,MAAOoxH,GAAGjvG,MAC9H7jB,KAAK0yH,wCAAwCjyG,IAAIw/B,mBAAmBp/C,WAAYiO,gBAAiBC,kBACjG/O,KAAK0yH,wCAAwCjyG,IAAIw/B,mBAAmBl/C,MAAO02C,aAC3Ez3C,KAAK0yH,wCAAwCjyG,IAAIw/B,mBAAmB7+C,UAAW62C,iBAC/Ej4C,KAAK0yH,wCAAwCjyG,IAAIw/B,mBAAmB3+C,YAAa42C,iBAAkBT,WAAY3oC,gBAAiBC,gBAAiBkpC,iBAq6BrJ,MA/5BA7J,iBAAgB7tC,UAAUwwF,mBAI1B,SAAU8D,YACN,GAAqB6vB,cAAe1kH,KAAKgzH,sBAAsBn+B,WAC/D,OAAO70F,MAAK2lC,eAAe2/E,gBAAgBZ,eAO/Ct2E,gBAAgB7tC,UAAU6gB,yBAK1B,SAAU5Z,IAAKohH,gBACX,GAAqB10G,SAAM/P,EAC3B,KAAKykH,eAAgB,CACjB10G,IAAM1M,IAAIw9B,WAAa,IAAMx9B,IAAI9F,IACjC,IAAqBuxH,qBAAsBjzH,KAAKyyH,2BAA2BjyG,IAAItM,IAC/E,IAAI++G,oBACA,MAAOA,qBAEf,GAAqBC,WAAYlzH,KAAK2lC,eAAegjF,kBAAqCnhH,IAAe,WAAsBA,IAAS,KAAGohH,gBACtHW,kBAAoBvpH,KAAKgzH,sBAAsBE,UAQpE,OAPKtK,kBACD5oH,KAAK2lC,eAAekgF,4BAA4BqN,UAAUrrH,SAA6BL,IAAe,YACtGxH,KAAK2lC,eAAe+/E,eAAe6D,kBAAmB2J,YAEtDh/G,KACAlU,KAAKyyH,2BAA2BhyG,IAAIvM,IAAKq1G,mBAEtCA,mBAQXn7E,gBAAgB7tC,UAAU4yH,gBAM1B,SAAU19G,UAAW/T,KAAMknH,gBACvB,MAAO5oH,MAAKgzH,sBAAsBhzH,KAAK2lC,eAAegjF,kBAAkBlzG,UAAW/T,KAAMknH,kBAO7Fx6E,gBAAgB7tC,UAAU6yH,mBAK1B,SAAU39G,UAAW/T,MACjB,GAAI+oC,OAAQzqC,IACZ,OAAOA,MAAK2lC,eAAeqgF,gBAAgB,WAAc,MAAOv7E,OAAM0oF,gBAAgB19G,UAAW/T,SAMrG0sC,gBAAgB7tC,UAAUyyH,sBAI1B,SAAU1tF,QACN,GAAqBU,gBAAiBhmC,KAAK2lC,eAAeiE,cAActE,OACxE,IAAIU,eAAgB,CAChB,GAAqBqtF,kBAAmBrtF,eAAeZ,QAIvD,IAHIiuF,kBAAoD,aAAhCA,iBAAiBhuF,aACrCguF,iBAAmBA,iBAAiB/tF,QAEpC+tF,2BAA4B5rH,cAC5B,MAAOzH,MAAKgzH,sBAAsBhtF,eAAeZ,UAGzD,MAAOE,SAMX8I,gBAAgB7tC,UAAUwzF,eAI1B,SAAU1tF,MACN,GAAqBitH,kBAAmBtzH,KAAKkkH,aAC7ClkH,MAAKkkH,cAAgB,SAAUh8F,SAAU1C,WACzC,KACI,MAAOxlB,MAAKu2D,YAAYlwD,MAE5B,QACIrG,KAAKkkH,cAAgBoP,mBAO7BllF,gBAAgB7tC,UAAUg2D,YAI1B,SAAUlwD,MACN,GAAqBkwD,aAAcv2D,KAAKmyH,gBAAgB3xG,IAAIna,KAC5D,KAAKkwD,YAAa,CACdA,cACA,IAAqBg9D,eAAgBvzH,KAAKwzH,gBAAgBntH,MACrCotH,WAAazzH,KAAK0zH,eAAertH,KAAMktH,cAC5D,IAAIE,WAAY,CACZ,GAAqBE,mBAAoB3zH,KAAKu2D,YAAYk9D,WAC1Dl9D,aAAYvvD,KAAK/E,MAAMs0D,YAAao9D,mBAExC,GAAqBC,oBAKrB,IAJIL,cAA0B,aAC1BK,iBAAmB5zH,KAAK6zH,SAASxtH,KAAMktH,cAA0B,YACjEh9D,YAAYvvD,KAAK/E,MAAMs0D,YAAaq9D,mBAEpCH,aAAezzH,KAAK0lC,gBAAgBc,cAAcngC,KAAKwB,WACvD7H,KAAK0lC,gBAAgBc,cAAcitF,WAAW5rH,UAAW,CACzD,GAAqBq+B,SAAUlmC,KAAK0lC,gBAAgB0qD,eAAeqjC,WACnE,IAAIvtF,SAAWA,QAAQ7/B,KAAM,CACzB,GAAqBytH,yBAA6C9zH,KAAK0yH,wCAAwClyG,IAAuB0lB,QAAQ7/B,KAAiB,YAC9GytH,yBAAwB7hG,KAAK,SAAU8hG,cAAgB,MAAOH,kBAAiB3hG,KAAK,SAAU+hE,KAAO,MAAO+/B,cAAa3xH,SAAS4xF,UAE/Kh0F,KAAKsnH,YAAY/5E,oBAAoBrB,cAAc,SAAW7lC,KAAK3E,KAAO,OAAS2E,KAAKwB,SAAW,mBAAqBo4C,mBAAuC/Z,QAAQ7/B,KAAkB,aAAK,qEAAkElC,GAAW,gBAAkB2vH,wBAAwBjuH,IAAI,SAAUQ,MAAQ,MAAOA,MAAKlE,iBAAmB2D,KAAK,QAAU,2BAA4BO,MAAOA,OAIxarG,KAAKmyH,gBAAgB1xG,IAAIpa,KAAMkwD,YAAY9vC,OAAO,SAAUutE,KAAO,QAASA,OAEhF,MAAOz9B,cAMXnoB,gBAAgB7tC,UAAUm2D,aAI1B,SAAUrwD,MACN,GAAIokC,OAAQzqC,KACS02D,aAAe12D,KAAKoyH,cAAc5xG,IAAIna,KAC3D,KAAKqwD,aAAc,CACf,GAAqB68D,eAAgBvzH,KAAKwzH,gBAAgBntH,KAC1DqwD,gBACA,IAAqB+8D,YAAazzH,KAAK0zH,eAAertH,KAAMktH,cAC5D,IAAIE,WAAY,CACZ,GAAqBO,sBAAuBh0H,KAAK02D,aAAa+8D,WAC9DjzH,QAAOm3B,KAAKq8F,sBAAsBltH,QAAQ,SAAUmtH,YAC/B,aAAiBA,YAAcD,qBAAqBC,cAG7E,GAAqBC,WAAYX,cAAuB,WACxD/yH,QAAOm3B,KAAKu8F,WAAWptH,QAAQ,SAAUgtB,UACrC,GAAqBqgG,UAAWD,UAAUpgG,UACrB9D,KAAO,SACvBrR,KAAK,SAAU/F,GAAK,MAA0B,YAAnBA,EAAc,YAAsC,UAAnBA,EAAc,aAC1D2tG,aACA,cAAiBzyF,WAClCyyF,WAAWv/G,KAAK/E,MAAMskH,WAA6B,aAAiBzyF,WAExE,aAAiBA,UAAYyyF,WACzBv2F,MAAQA,KAAiB,YACzBu2F,WAAWv/G,KAAK/E,MAAMskH,WAAY97E,MAAMopF,SAASxtH,KAAM2pB,KAAiB,eAGhFhwB,KAAKoyH,cAAc3xG,IAAIpa,KAAMqwD,cAEjC,MAAOA,eAMXtoB,gBAAgB7tC,UAAUyqF,WAI1B,SAAU3kF,MACN,GAAIokC,OAAQzqC,IACZ,MAAMqG,eAAgBoB,eAElB,MADAzH,MAAKsnH,YAAY,GAAI/iH,OAAM,uBAAyBq7C,KAAKj6C,UAAUU,MAAQ,gCAAiCA,QAGhH,KACI,GAAqB+tH,cAAep0H,KAAKqyH,eAAe7xG,IAAIna,KAC5D,KAAK+tH,aAAc,CACf,GAAqBb,eAAgBvzH,KAAKwzH,gBAAgBntH,MACrCotH,WAAazzH,KAAK0zH,eAAertH,KAAMktH,eACvC7zE,QAAU6zE,cAAgBA,cAAuB,QAAI,KACrDc,SAAW30E,QAAUA,QAAkB,SAAI,IAChE,IAAI20E,SAAU,CACV,GAAqBtiF,MAAO,SAA8BpzB,KAAK,SAAU/F,GAAK,MAA0B,eAAnBA,EAAc,aAC9E07G,kBAAsCviF,KAAkB,eACxDwiF,sBAA0Cv0H,KAAK6zH,SAASxtH,KAAM0rC,KAA0B,wBAC7GqiF,iBACAE,kBAAkBxtH,QAAQ,SAAU0tH,aAAcnvH,OAC9C,GAAqBovH,iBACAC,UAAYjqF,MAAMkqF,YAAYtuH,KAAMmuH,aACrDE,YACAD,aAAaztH,KAAK0tH,UACtB,IAAqBnO,YAAagO,sBAAwBA,sBAAsBlvH,OAAS,IACrFkhH,aACAkO,aAAaztH,KAAK/E,MAAMwyH,aAAclO,YAE1C,aAAiBv/G,KAAKytH,oBAGrBhB,cACLW,aAAep0H,KAAKgrF,WAAWyoC,YAE9BW,gBACDA,iBAEJp0H,KAAKqyH,eAAe5xG,IAAIpa,KAAM+tH,cAElC,MAAOA,cAEX,MAAwB76G,GAEpB,KADAm1B,SAAQrqC,MAAM,kBAAoBu7C,KAAKj6C,UAAUU,MAAQ,eAAiBkT,GACpEA,IAOd60B,gBAAgB7tC,UAAUq0H,aAI1B,SAAUvuH,MACN,GAAqBwuH,aAAc70H,KAAKsyH,YAAY9xG,IAAIna,KACxD,KAAKwuH,YAAa,CACd,GAAqBtB,eAAgBvzH,KAAKwzH,gBAAgBntH,KAC1DwuH,eACA,IAAqBpB,YAAazzH,KAAK0zH,eAAertH,KAAMktH,cAC5D,IAAIE,WAAY,CACZ,GAAqBqB,qBAAsB90H,KAAK40H,aAAanB,WAC7DjzH,QAAOm3B,KAAKm9F,qBAAqBhuH,QAAQ,SAAUmtH,YAC9B,YAAgBA,YAAca,oBAAoBb,cAG3E,GAAqBc,WAAYxB,cAAuB,WACxD/yH,QAAOm3B,KAAKo9F,WAAWjuH,QAAQ,SAAUgtB,UACrC,GAAqBqgG,UAAWY,UAAUjhG,UACrBkhG,SAAW,SAA8B/iG,KAAK,SAAUrZ,GAAK,MAA0B,UAAnBA,EAAc,YACvG,aAAgBkb,UAA6B,YAAgBA,WAAakhG,WAE9Eh1H,KAAKsyH,YAAY7xG,IAAIpa,KAAMwuH,aAE/B,MAAOA,cAMXzmF,gBAAgB7tC,UAAU00H,eAI1B,SAAU5uH,MACN,GAAqB6uH,eAAgBl1H,KAAKuyH,YAAY/xG,IAAIna,KAC1D,KAAK6uH,cAAe,CAChB,GAAqB3B,eAAgBvzH,KAAKwzH,gBAAgBntH,MACrC8uH,iBAAmB5B,cAAuB,WAC/D2B,eAAgB10H,OAAOm3B,KAAKw9F,kBAC5Bn1H,KAAKuyH,YAAY9xG,IAAIpa,KAAM6uH,eAE/B,MAAOA,gBAOX9mF,gBAAgB7tC,UAAUmzH,eAK1B,SAAUrtH,KAAMktH,eACZ,GAAqBE,YAAazzH,KAAK20H,YAAYtuH,KAAMktH,cAAuB,QAChF,IAAIE,qBAAsBhsH,cACtB,MAAOgsH,aAQfrlF,gBAAgB7tC,UAAU6lB,iBAK1B,SAAU/f,KAAM+uH,YACN/uH,eAAgBoB,eAClBzH,KAAKsnH,YAAY,GAAI/iH,OAAM,6BAA+Bq7C,KAAKj6C,UAAUU,MAAQ,gCAAiCA,KAEtH,KACI,QAASrG,KAAK40H,aAAavuH,MAAM+uH,YAErC,MAAwB77G,GAEpB,KADAm1B,SAAQrqC,MAAM,kBAAoBu7C,KAAKj6C,UAAUU,MAAQ,eAAiBkT,GACpEA,IAOd60B,gBAAgB7tC,UAAUwgD,OAI1B,SAAU16C,MACN,KAAMA,eAAgBoB,eAElB,MADAzH,MAAKsnH,YAAY,GAAI/iH,OAAM,mBAAqBq7C,KAAKj6C,UAAUU,MAAQ,gCAAiCA,QAK5G,KAAK,GAFgB6uH,eAAgBl1H,KAAKi1H,eAAe5uH,MACpCM,UACZ9E,GAAK,EAAGwzH,gBAAkBH,cAAerzH,GAAKwzH,gBAAgBtzH,OAAQF,KAAM,CACjF,GAAI61D,QAAS29D,gBAAgBxzH,GAC7B,IAAI61D,OAAOvyC,SA7XC,aA6X4B,CACpC,GAAqBs8E,UAAW/pC,OAAOxyB,OAAO,EAAGwyB,OAAO31D,OA9XhD,YA8X2EA,QAC9DwB,UAAQ,EACzBk+F,UAASt8E,SA/XhB,UAgYOs8E,SAAW/pC,OAAOxyB,OAAO,EAAGu8D,SAAS1/F,OAhY5C,QAgY4DA,QACrDwB,MAjYP,SAoYOA,MAAQvD,KAAK+nC,gBAAgB1hC,KAAKwB,SAAUxB,KAAK3E,MAAOg2D,SAE5D/wD,OAAO86F,UAAYl+F,OAG3B,MAAOoD,SAOXynC,gBAAgB7tC,UAAUsyH,gCAK1B,SAAUxsH,KAAM0rC,MACZ/xC,KAAKwyH,cAAc/xG,IAAIpa,KAAM,SAAU5C,QAAS7B,MAAQ,MAAO,KAAKmwC,KAAKe,KAAK7wC,MAAM8vC,UAAO,IAAQlpC,OAAOjH,WAO9GwsC,gBAAgB7tC,UAAUwyH,kBAK1B,SAAU1sH,KAAMwd,IACZ7jB,KAAKwyH,cAAc/xG,IAAIpa,KAAM,SAAU5C,QAAS7B,MAAQ,MAAOiiB,IAAG5hB,UAAMkC,GAAWvC,SAKvFwsC,gBAAgB7tC,UAAUoyH,wBAG1B,WACI3yH,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,cAAe15E,kBACvFl4C,KAAKs1H,eAAiBt1H,KAAKmzH,gBAAgBvB,aAAc,kBACzD5xH,KAAKu1H,YAAcv1H,KAAKmzH,gBAAgBvB,aAAc,eACtD5xH,KAAKqkC,OAASrkC,KAAKozH,mBAxbN,kBAwbyC,UACtDpzH,KAAK0gF,6BACD1gF,KAAKmzH,gBAAgBvB,aAAc,gCACvC5xH,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,QAASp5E,YACjFx4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,QAASt5E,YACjFt4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,YAAar5E,gBACrFv4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,UAAWx7E,cACnFp2C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,YAAav5E,gBACrFr4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,aAAcn7E,iBACtFz2C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,gBAAiB56E,oBACzFh3C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,mBAAoBj7E,uBAC5F32C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,aAAc16E,iBACtFl3C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,gBAAiB36E,oBACzFj3C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,SAAUl6E,aAClF13C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,UAAWh6E,cACnF53C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,QAASn6E;2FACjFz3C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,eAAgB/5E,mBACxF73C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,gBAAiB75E,oBACzF/3C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,aAAc9iH,iBACtF9O,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,aAAc7iH,iBACtF/O,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,YAAa35E,gBAErFj4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,QAASp5E,YACjFx4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,QAASt5E,YACjFt4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,YAAar5E,gBACrFv4C,KAAK6yH,gCAAgC7yH,KAAKmzH,gBAAgBvB,aAAc,YAAav5E,iBAkBzFjK,gBAAgB7tC,UAAUwnC,gBAS1B,SAAU+X,gBAAiBp+C,KAAMg+C,SAC7B,MAAO1/C,MAAK2lC,eAAeoC,gBAAgB+X,gBAAiBp+C,KAAMg+C,UAQtEtR,gBAAgB7tC,UAAUo0H,YAM1B,SAAUlxH,QAASF,OACf,GAAqB+vH,kBAAmBtzH,KAAKkkH,aAC7ClkH,MAAKkkH,cAAgB,SAAUh8F,SAAU1C,WACzC,IAAqB7e,QAAS3G,KAAK6zH,SAASpwH,QAASF,MAErD,OADAvD,MAAKkkH,cAAgBoP,iBACd3sH,QAQXynC,gBAAgB7tC,UAAUszH,SAM1B,SAAUpwH,QAASF,OAYf,QAASiyH,mBAAkB/xH,QAASF,MAAOkyH,MAAOl3E,YAK9C,QAASm3E,uBAAsBhR,cAC3B,GAAqB1+E,gBAAiBk1E,KAAKv1E,eAAeiE,cAAc86E,aACxE,OAAO1+E,gBAAiBA,eAAeZ,SAAW,KAMtD,QAASuwF,iBAAgBpyH,OACrB,MAAOiyH,mBAAkB/xH,QAASF,MAAOkyH,MAAO,GAMpD,QAASG,gBAAeryH,OACpB,MAAOiyH,mBAAkB/xH,QAASF,MAAOkyH,MAAOl3E,WAAa,GAOjE,QAASs3E,gBAAeC,cAAevyH,OACnC,GAAIuyH,gBAAkBryH,QAElB,MAAO+xH,mBAAkBM,cAAevyH,MAAOkyH,MAAQ,EAAGl3E,WAE9D,KACI,MAAOi3E,mBAAkBM,cAAevyH,MAAOkyH,MAAQ,EAAGl3E,YAE9D,MAAwBhlC,GACpB,IAAI8yB,gBAAgB9yB,GAkBhB,KAAMA,EAdN,IAAqBw8G,YAAax8G,EAAEiyB,MAAQ,eAAqCjyB,EAAS,OAAE7X,KAAO,IAAOsrC,aAAazzB,GAClG2sB,QAAU,IAAM4vF,cAAcp0H,KAAO,KAAOq0H,WAC5CvqF,OAAUr6B,QAAS+0B,QAAS17B,SAAU+O,EAAE/O,SAAUqhC,KAAMtyB,EAAEiyB,MAG/E0vE,MAAK72G,OACD8M,QAASoI,EAAEpI,QACXg7B,OAAQ5yB,EAAE4yB,OACV1oC,QAAS8V,EAAE9V,QAAS+nC,MAAOA,MAC3BlG,OAAQwwF,eACTryH,UAef,QAASuyH,cAAaC,eAAgBC,eAAgBt0H,KAAMu0H,kBACxD,GAAID,gBAAkD,YAAhCA,eAA2B,WAAiB,CAC1DE,QAAQ51G,IAAIy1G,iBACZ/a,KAAK72G,OACD8M,QAAS,6BACT+0B,QAAS,WAAa+vF,eAAev0H,KAAO,gBAC5C6B,MAAO2yH,gBACRD,eAEP,KACI,GAAqBI,SAAUH,eAAsB,KACrD,IAAIG,UAAqB,GAATZ,OAAoC,SAAtBY,QAAQhxF,YAAwB,CAC1D,GAAqB2lD,YAAakrC,eAA2B,WACxCI,SAAWJ,eAAeI,QAC/C10H,MAAOA,KAAKiE,IAAI,SAAUy0B,KAAO,MAAOu7F,gBAAepyH,QAAS62B,OAC3Dz0B,IAAI,SAAUy0B,KAAO,MAAO2R,cAAa3R,SAAOn2B,GAAYm2B,MAC7Dg8F,UAAYA,SAASv0H,OAASH,KAAKG,QACnCH,KAAKoF,KAAK/E,MAAML,KAAM00H,SAASlzH,MAAMxB,KAAKG,QAAQ8D,IAAI,SAAUtC,OAAS,MAAOswH,UAAStwH,UAE7F6yH,QAAQ31G,IAAIw1G,gBAAgB,EAE5B,KAAK,GADgBM,eAAgBC,eAAe5sD,QAC1B5+D,EAAI,EAAGA,EAAIggF,WAAWjpF,OAAQiJ,IACpDurH,cAAc32H,OAAOorF,WAAWhgF,GAAIpJ,KAAKoJ,GAE7C,IACqByrH,UADAC,SAAWviC,KAEhC,KACIA,MAAQoiC,cAAcI,OACtBF,SAAWZ,eAAeI,eAAgBI,SAE9C,QACIliC,MAAQuiC,SAEZ,MAAOD,WAGf,QACIL,QAAQl5F,OAAO+4F,iBAGvB,GAAc,IAAVR,MAIA,MAAO5D,OAEX,IAAqBrnH,cAAWrG,EAChC,IAAIgyH,kBAAmD,YAA/BA,iBAAiB9wF,WAA0B,CAC/D,GAAqBqG,MAAOyqF,iBAAiBzqF,KACxBzoC,UAAYkzH,iBAAiBlzH,UAC7BuiB,SAAW2wG,iBAAiB3wG,QACjC,OAAZA,UAA4B,MAARkmB,MAA6B,MAAbzoC,YACpCuH,UAAagb,SAAUA,SAAUkmB,KAAMA,KAAMC,OAAQ1oC,YAG7Di4G,KAAK72G,OACD8M,QAASy7B,4BACTnpC,QAASwyH,eACT1yH,MAAO2yH,eAAgB1rH,SAAUA,UAClC/G,SAMP,QAASowH,UAASj/G,YACd,GAAIw4B,YAAYx4B,YACZ,MAAOA,WAEX,IAAIA,qBAAsBlR,OAAO,CAE7B,IAAK,GADgBkzH,aACZ/0H,GAAK,EAAGwX,GAAK,WAAiCxX,GAAKwX,GAAGtX,OAAQF,KAAM,CACzE,GAAI8G,MAAO0Q,GAAGxX,GAEd,IAAI8G,MAA4B,WAApBA,KAAK08B,WAAyB,CAGtC,GAAqBwxF,aAAclB,gBAAgBhtH,KAAKiM,WACxD,IAAIlR,MAAMC,QAAQkzH,aAAc,CAC5B,IAAK,GAAIr9G,IAAK,EAAGs9G,cAAgBD,YAAar9G,GAAKs9G,cAAc/0H,OAAQyX,KAAM,CAC3E,GAAIu9G,YAAaD,cAAct9G,GAC/Bo9G,UAAS5vH,KAAK+vH,YAElB,UAGR,GAAqBC,SAAUnD,SAASlrH,KACpCsjC,cAAa+qF,UAGjBJ,SAAS5vH,KAAKgwH,SAElB,MAAOJ,UAEX,GAAIhiH,qBAAsBnN,cAAc,CAGpC,GAAImN,aAAesmG,KAAKoa,gBAAkBpa,KAAKsX,cAAc/9F,IAAI7f,aAC5D2pC,WAAa,IAAM3pC,WAAW8qC,QAAQ39C,OACvC,MAAO6S,WAGP,IAAqB8vG,cAAe9vG,WACfqiH,iBAAmBvB,sBAAsBhR,aAC9D,OAAwB,OAApBuS,iBACOpB,eAAenR,aAAcuS,kBAG7BvS,aAInB,GAAI9vG,WAAY,CACZ,GAAIA,WAAuB,WAAG,CAC1B,GAAqB8vG,kBAAe,EACpC,QAAQ9vG,WAAuB,YAC3B,IAAK,QACD,GAAqBtB,MAAOugH,SAASj/G,WAAiB,KACtD,IAAIq3B,aAAa34B,MACb,MAAOA,KACX,IAAqBC,OAAQsgH,SAASj/G,WAAkB,MACxD,IAAIq3B,aAAa14B,OACb,MAAOA,MACX,QAAQqB,WAAqB,UACzB,IAAK,KACD,MAAOtB,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,MACD,MAAOD,QAASC,KACpB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,KACD,MAAOD,OAAQC,KACnB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,KAClB,KAAK,IACD,MAAOD,MAAOC,MAEtB,MAAO,KACX,KAAK,KAED,MAAmBsgH,UADcA,SAASj/G,WAAsB,WACpCA,WAA2B,eAC1CA,WAA2B,eAC5C,KAAK,MACD,GAAqBsiH,SAAUrD,SAASj/G,WAAoB,QAC5D,IAAIq3B,aAAairF,SACb,MAAOA,QACX,QAAQtiH,WAAqB,UACzB,IAAK,IACD,MAAOsiH,QACX,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,OACZ,KAAK,IACD,OAAQA,QAEhB,MAAO,KACX,KAAK,QACD,GAAqBC,aAAcxB,gBAAgB/gH,WAAuB,YACrDvP,MAAQswH,gBAAgB/gH,WAAkB,MAC/D,OAAIuiH,cAAe/pF,YAAY/nC,OACpB8xH,YAAY9xH,OAChB,IACX,KAAK,SACD,GAAqB+xH,QAASxiH,WAAmB,OAC5ByiH,cAAgB5zH,QAChB6zH,aAAezD,SAASj/G,WAAuB,WACpE,IAAI0iH,uBAAwB7vH,cAAc,CACtC,GAAqBi4C,SAAU43E,aAAa53E,QAAQ72C,OAAOuuH,OAC3DC,eACInc,KAAKnzE,gBAAgBuvF,aAAazvH,SAAUyvH,aAAa51H,KAAMg+C,QACnE,IAAqBu3E,kBAAmBvB,sBAAsB2B,cAC9D,OAAwB,OAApBJ,iBACOpB,eAAewB,cAAeJ,kBAG9BI,cAGf,MAAIC,eAAgBlqF,YAAYgqF,QACrBvB,eAAewB,cAAeC,aAAaF,SAC/C,IACX,KAAK,YAID,GAAqB91D,QAAS1sD,WAAiB,KAC1B2iH,WAAapjC,MAAMhoF,QAAQm1D,OAChD,IAAIi2D,YAAcf,eAAegB,QAC7B,MAAOD,WAEX,MACJ,KAAK,WACD,IACI,MAAO1D,UAASj/G,WAAW0wB,QAE/B,MAAwB/rB,GAYpB,KARI8yB,iBAAgB9yB,IAA6B,MAAvB3E,WAAW4Q,UACd,MAAnB5Q,WAAW82B,MAAwC,MAAxB92B,WAAW3R,YACtCsW,EAAE/O,UACEgb,SAAU5Q,WAAW4Q,SACrBkmB,KAAM92B,WAAW82B,KACjBC,OAAQ/2B,WAAW3R,YAGrBsW,EAEd,IAAK,QAEL,IAAK,WACD,MAAO9V,QACX,KAAK,MACL,IAAK,OAGD,IADAihH,aAAe8Q,kBAAkB/xH,QAASmR,WAAuB,WAAG6gH,MAAQ,EAAoB,aACpEhuH,cAAc,CACtC,GAAIi9G,eAAiBxJ,KAAKoa,gBAAkB5Q,eAAiBxJ,KAAKqa,YAK9D,MAAO9xH,QAEX,IAAqBg0H,gBAAiB7iH,WAAsB,cACvCqa,UAAYisF,KAAKsX,cAAchyG,IAAIkkG,aACxD,IAAIz1F,UAAW,CACX,GAAqBrtB,MAAO61H,eAAe5xH,IAAI,SAAUy0B,KAAO,MAAOu7F,gBAAepyH,QAAS62B,OAC1Fz0B,IAAI,SAAUy0B,KAAO,MAAO2R,cAAa3R,SAAOn2B,GAAYm2B,KACjE,OAAOrL,WAAUxrB,QAAS7B,MAK1B,MAAOo0H,cAAatR,aADkBgR,sBAAsBhR,cACV+S,eAAgB7iH,WAAuB,YAGjG,MAAOi9G,OACX,KAAK,QACD,GAAqB1gH,SAAUyD,WAAWzD,OAgB1C,OAf0B,OAAtByD,WAAiB,KACjBsmG,KAAK72G,OACD8M,QAASA,QACT1N,QAASmR,WAAWnR,QACpBF,MAAOqR,WACPpK,UACIgb,SAAU5Q,WAAqB,SAC/B82B,KAAM92B,WAAiB,KACvB+2B,OAAQ/2B,WAAsB,YAEnCnR,SAGHy3G,KAAK72G,OAAQ8M,QAASA,QAAS1N,QAASmR,WAAWnR,SAAWA,SAE3DouH,MACX,KAAK,SACD,MAAOj9G,YAEf,MAAO,MAEX,MAAOq4B,cAAar4B,WAAY,SAAUrR,MAAO7B,MAC7C,GAAIswH,cAAcv9F,IAAI/yB,MAAO,CACzB,GAAIA,OAASowH,WAAaC,UAAWn9G,YAAY,CAG7C,GAAqB2+E,SAAUsgC,SAASj/G,WAAW2+E,QACnD,IAAIA,UAAY2nB,KAAK72E,QAAUkvD,SAAW2nB,KAAKx6B,6BAC3C,MAAOmzC,UAAStwH,OAGxB,MAAOqyH,gBAAeryH,OAE1B,MAAOswH,UAAStwH,SAGxB,MAAOsuH,QAEX,MAAOgC,UAAStwH,OAjYpB,GAmYqBoD,QAnYAu0G,KAAOl7G,KACPm0F,MAAQqiC,eAAe3uE,MACvBuuE,QAAU,GAAI5sG,IAkYnC,KACI7iB,OAAS6uH,kBAAkB/xH,QAASF,MAAO,EAAG,GAElD,MAAwBgW,GACpB,IAAIvZ,KAAKkkH,cAIL,KAAM32E,qBAAoBh0B,EAAG9V,QAH7BzD,MAAKsnH,YAAY/tG,EAAG9V,SAM5B,IAAIwoC,aAAatlC,QAGjB,MAAOA,SAMXynC,gBAAgB7tC,UAAUizH,gBAI1B,SAAUntH,MACN,GAAqB2/B,gBAAiBhmC,KAAK2lC,eAAeiE,cAAcvjC,KACxE,OAAO2/B,iBAAkBA,eAAeZ,SAAWY,eAAeZ,UAC5DC,WAAY,UAQtB+I,gBAAgB7tC,UAAU+mH,YAM1B,SAAUp/F,SAAUzkB,QAASgH,MACzB,IAAIzK,KAAKkkH,cAIL,KAAMh8F,SAHNloB,MAAKkkH,cAAc32E,oBAAoBrlB,SAAUzkB,SAAWA,SAAWA,QAAQoE,UAAa4C,OAWpG2jC,gBAAgB7tC,UAAU8D,MAK1B,SAAUgV,GAAIq+G,kBACV,GAAIvmH,SAAUkI,GAAGlI,QAAS+0B,QAAU7sB,GAAG6sB,QAASiG,OAAS9yB,GAAG8yB,OAAQ3hC,SAAW6O,GAAG7O,SAAU/G,QAAU4V,GAAG5V,QAA2B6hC,QAAVjsB,GAAG9V,MAAgB8V,GAAGisB,QAAQkG,MAAQnyB,GAAGmyB,KACnKxrC,MAAKsnH,YAAYp7E,cAAc/6B,QAAS+0B,QAASiG,OAAQ3hC,SAAU86B,OAAQ7hC,QAAS+nC,OAAQksF,mBAEzFtpF,mBAEPhC,eAAiB,kBAmCjBG,+BAAiC,kCACjCC,yBAA2B,2BAC3BC,0BAA4B,8BAC5BC,uBAAyB,yBACzBE,4BAA8B,8BAC9BC,0BAA4B,8BAC5BC,qBAAuB,uBA8HvB0pF,eAAgC,WAChC,QAASzW,iBAsBT,MAjBAA,cAAan2C,MAGb,WACI,GAAqB0hB,SAAU,GAAI9hE,IACnC,QACI5pB,OAAQ,SAAU8B,KAAM6B,OAEpB,MADA+nF,SAAQ7qE,IAAI/e,KAAM6B,OACXvD,MAEX22H,KAAM,WACF,MAAOrrC,SAAQ4U,KAAO,EAAI,GAAIy3B,gBAAersC,SAAWy0B,aAAal4D,SAIjFk4D,aAAayX,WACbzX,aAAal4D,OAAU17C,QAAS,SAAUzK,MAAQ,MAAOq+G,cAAayX,UAC/DzX,gBAEP4X,eAAgC,SAAUjtH,QAE1C,QAASitH,gBAAetgE,UACpB,GAAI5sB,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAEjC,OADAyqC,OAAM4sB,SAAWA,SACV5sB,MAaX,MAjBAxqC,WAAU03H,eAAgBjtH,QAU1BitH,eAAep3H,UAAU4L,QAIzB,SAAUzK,MACN,MAAO1B,MAAKq3D,SAAS5iC,IAAI/yB,MAAQ1B,KAAKq3D,SAAS72C,IAAI9e,MAAQ80H,eAAegB,SAEvEG,gBACTnB,gBAoDEvoF,mBAAoC,WACpC,QAASA,oBAAmB5F,KAAM47E,mBAC9BjkH,KAAKqoC,KAAOA,KACZroC,KAAKikH,kBAAoBA,kBACzBjkH,KAAK43H,aAAe,GAAIpuG,KACxBxpB,KAAK63H,gBAAkB,GAAIruG,KAC3BxpB,KAAKskH,SAAW,GAAI96F,KACpBxpB,KAAKykH,2BAA6B,GAAIj7F,KAqJ1C,MA/IAykB,oBAAmB1tC,UAAUimC,cAI7B,SAAU3+B,UAIN,OAAQ7H,KAAKqoC,KAAKY,aAAajkB,yBAAyBnd,YAO5DomC,mBAAmB1tC,UAAUspH,kBAK7B,SAAUhiH,SAAUiwH,sBAChB,MAAO93H,MAAKqoC,KAAKwhF,kBAAkBhiH,SAAUiwH,uBAOjD7pF,mBAAmB1tC,UAAUwqH,oBAK7B,SAAUvlG,SAAUuyG,sBAChB,MAAO/3H,MAAKqoC,KAAK0iF,oBAAoBvlG,SAAUuyG,uBAMnD9pF,mBAAmB1tC,UAAU6vF,eAI7B,SAAUs0B,cACN,GAAqBsT,YAAatT,aAAahlE,QAAQ39C,OACnD/B,KAAKikH,kBAAkBzjG,IAAIkkG,aAAa78G,SAAU68G,aAAahjH,MAC/DgjH,aACiBx+E,QAAUlmC,KAAK43H,aAAap3G,IAAIw3G,WAKrD,OAJK9xF,WACDlmC,KAAKi4H,iBAAiBvT,aAAa78G,UACnCq+B,QAA6BlmC,KAAK43H,aAAap3G,IAAIkkG,eAE/CsT,aAAetT,cAAgBx+E,SAAY,MAMvD+H,mBAAmB1tC,UAAUopC,aAI7B,SAAU9hC,UACN,MAAI7H,MAAKi4H,iBAAiBpwH,UACfnE,MAAM8jB,KAAKxnB,KAAK43H,aAAajgG,QAAQlR,OAAO,SAAU6e,QAAU,MAAOA,QAAOz9B,WAAaA,WAE/F,MAMXomC,mBAAmB1tC,UAAUykH,YAI7B,SAAUN,cAEN,MADAA,cAAa/kE,kBACa3/C,KAAKskH,SAAS9jG,IAAIkkG,eAUhDz2E,mBAAmB1tC,UAAUklH,mBAK7B,SAAUuL,kBACN,MAAOhxH,MAAKykH,2BAA2BjkG,IAAIwwG,mBAAqB,MAMpE/iF,mBAAmB1tC,UAAU0lC,WAI7B,SAAUC,SAAWlmC,KAAK43H,aAAan3G,IAAIylB,QAAQZ,OAAQY,UAK3D+H,mBAAmB1tC,UAAU03H,iBAI7B,SAAUpwH,UACN,GAAI4iC,OAAQzqC,KACSk4H,WAAal4H,KAAK63H,gBAAgBr3G,IAAI3Y,SAC3D,IAAkB,MAAdqwH,WACA,MAAOA,WAEX,IAAqB/xF,MAAO,IAC5B,IAAInmC,KAAKwmC,cAAc3+B,UAAW,CAC9B,GAAqBswH,iBAAkB5yG,gBAAgB1d,SACvD,KACIs+B,KAAOnmC,KAAKqoC,KAAK0hF,YAAYoO,iBAEjC,MAAwB5+G,GAEpB,KADAm1B,SAAQrqC,MAAM,8BAAgC8zH,iBACxC5+G,GAKd,GAFA2+G,WAAqB,MAAR/xF,KACbnmC,KAAK63H,gBAAgBp3G,IAAI5Y,SAAUqwH,YAC/B/xF,KAAM,CACN,GAAI9sB,IAAKqtB,qBAAqB1mC,KAAKikH,kBAAmBjkH,KAAM6H,SAAUs+B,MAAOnB,WAAa3rB,GAAG2rB,WAAY0kF,UAAYrwG,GAAGqwG,UAAWpF,SAAWjrG,GAAGirG,QACjJoF,WAAU5iH,QAAQ,SAAUo/B,SAAW,MAAOuE,OAAMmtF,aAAan3G,IAAIylB,QAAQZ,OAAQY,WACjFlB,YACAhlC,KAAKykH,2BAA2BhkG,IAAI5Y,SAAUm9B,YAElDs/E,SAASx9G,QAAQ,SAAUw9G,UAAY75E,MAAM65E,SAAS7jG,IAAI6jG,SAASh/E,OAAQg/E,SAASA,YAExF,MAAO4T,aAEJjqF,sBA2EPmqF,gBAAiC,WACjC,QAASA,oBAET,MAAOA,oBAEPC,mBAAoC,WACpC,QAASA,sBACLr4H,KAAKs4H,WAAa,GAAI9uG,KAwE1B,MAnEA6uG,oBAAmB93H,UAAUimC,cAG7B,WAAc,OAAO,GAKrB6xF,mBAAmB93H,UAAUspH,kBAI7B,SAAUrkG,UAAY,MAAOA,WAK7B6yG,mBAAmB93H,UAAUwqH,oBAI7B,SAAUvlG,UAAY,MAAOA,WAK7B6yG,mBAAmB93H,UAAU6vF,eAI7B,SAAU7oF,WACN,MAAOvH,MAAKs4H,WAAW93G,IAAIjZ,YAAc,MAK7C8wH,mBAAmB93H,UAAUopC,aAG7B,WAAc,UAKd0uF,mBAAmB93H,UAAUykH,YAI7B,SAAUz9G,WAAa,MAAOA,YAK9B8wH,mBAAmB93H,UAAUklH,mBAI7B,SAAUjgG,UAAY,MAAO,OAK7B6yG,mBAAmB93H,UAAU0lC,WAI7B,SAAUC,SAAWlmC,KAAKs4H,WAAW73G,IAAIylB,QAAQZ,OAAQY,UAClDmyF,sBA2CP5nF,kBAAmC,WACnC,QAASA,mBAAkB0B,OAAQomF,SAAUxiG,UAAW6a,MACpD5wC,KAAKmyC,OAASA,OACdnyC,KAAKu4H,SAAWA,SAChBv4H,KAAK+1B,UAAYA,UACjB/1B,KAAK4wC,KAAOA,KACZ5wC,KAAKN,WAWT,MANA+wC,mBAAkBlwC,UAAUywC,yBAG5B,WACI,MAAO,IAAIP,mBAAkBzwC,KAAMA,KAAKu4H,SAAUv4H,KAAK+1B,UAAW,GAAIvM,OAEnEinB,qBAEP+nF,YAA6B,WAC7B,QAASA,aAAYj1H,OACjBvD,KAAKuD,MAAQA,MAEjB,MAAOi1H,gBAoDP9nF,qBAAsC,WACtC,QAASA,sBAAqBvvB,WAC1BnhB,KAAKmhB,UAAYA,UA2jBrB,MArjBAuvB,sBAAqBnwC,UAAUk4H,SAI/B,SAAU5xH,KAAO,MAAOmoB,4BAA2BnoB,MAMnD6pC,qBAAqBnwC,UAAUwoF,oBAK/B,SAAU5mE,KAAMqC,KAKZ,MAJAA,KAAIosB,KAAKnwB,IAAI0B,KAAKzgB,KAAMygB,KAAK5e,MAAMkf,gBAAgBziB,KAAMwkB,MACrDrC,KAAK2gE,YAAYlqD,aAAauO,WAC9B3iB,IAAI9kB,QAAQsH,KAAKmb,KAAKzgB,MAEnB,MAOXgvC,qBAAqBnwC,UAAUumF,kBAK/B,SAAUtkE,KAAMgC,KAGZ,IAFA,GAAqBjhB,OAAQif,KAAKjf,MAAMkf,gBAAgBziB,KAAMwkB,KACzCk0G,QAAUl0G,IACb,MAAXk0G,SAAiB,CACpB,GAAIA,QAAQ9nF,KAAKnc,IAAIjS,KAAK9gB,MAEtB,MADAg3H,SAAQ9nF,KAAKnwB,IAAI+B,KAAK9gB,KAAM6B,OACrBA,KAEXm1H,SAA6BA,QAAe,OAEhD,KAAM,IAAIn0H,OAAM,yBAA2Bie,KAAK9gB,OAOpDgvC,qBAAqBnwC,UAAUqmF,iBAK/B,SAAU//E,IAAK2d,KACX,GAAqBgyE,SAA6B3vF,IAAS,IAC3D,IAAmB,MAAfA,IAAI6/E,QACJ,OAAQ7/E,IAAI6/E,SACR,IAAKL,YAAWE,MACZ,MAAO/hE,KAAI+zG,SAASviF,SACxB,KAAKqwC,YAAWC,KACZ,MAAO9hE,KAAI+zG,QACf,KAAKlyC,YAAWG,WACZgQ,QAAUmiC,iBACV,MACJ,KAAKtyC,YAAWI,WACZ+P,QAAUoiC,iBACV,MACJ,SACI,KAAM,IAAIr0H,OAAM,4BAA8BsC,IAAI6/E,SAI9D,IADA,GAAqBgyC,SAAUl0G,IACb,MAAXk0G,SAAiB,CACpB,GAAIA,QAAQ9nF,KAAKnc,IAAI+hE,SACjB,MAAOkiC,SAAQ9nF,KAAKpwB,IAAIg2E,QAE5BkiC,SAA6BA,QAAe,OAEhD,KAAM,IAAIn0H,OAAM,yBAA2BiyF,UAO/C9lD,qBAAqBnwC,UAAUymF,kBAK/B,SAAUxkE,KAAMgC,KACZ,GAAqBhQ,UAAWgO,KAAKhO,SAASiO,gBAAgBziB,KAAMwkB,KAC/Cnf,MAAQmd,KAAKnd,MAAMod,gBAAgBziB,KAAMwkB,KACzCjhB,MAAQif,KAAKjf,MAAMkf,gBAAgBziB,KAAMwkB,IAE9D,OADAhQ,UAASnP,OAAS9B,MACXA,OAOXmtC,qBAAqBnwC,UAAU2mF,mBAK/B,SAAU1kE,KAAMgC,KACZ,GAAqBhQ,UAAWgO,KAAKhO,SAASiO,gBAAgBziB,KAAMwkB,KAC/CjhB,MAAQif,KAAKjf,MAAMkf,gBAAgBziB,KAAMwkB,IAE9D,OADAhQ,UAASgO,KAAK9gB,MAAQ6B,MACfA,OAOXmtC,qBAAqBnwC,UAAUgnF,sBAK/B,SAAU/kE,KAAMgC,KACZ,GAEqB7d,QAFA6N,SAAWgO,KAAKhO,SAASiO,gBAAgBziB,KAAMwkB,KAC/C5iB,KAAO5B,KAAKmqF,oBAAoB3nE,KAAK5gB,KAAM4iB,IAEhE,IAAoB,MAAhBhC,KAAKkkE,QACL,OAAQlkE,KAAKkkE,SACT,IAAKS,eAAcC,YACfzgF,OAAS6N,SAAS3L,OAAO5G,MAAMuS,SAAU5S,KACzC,MACJ,KAAKulF,eAAcE,oBACf1gF,OAAS6N,SAASqkH,WAAYhtF,KAAMjqC,KAAK,IACzC,MACJ,KAAKulF,eAAcG,KACf3gF,OAAS6N,SAASs+B,KAAK7wC,MAAMuS,SAAU5S,KACvC,MACJ,SACI,KAAM,IAAI2C,OAAM,0BAA4Bie,KAAKkkE,aAIzD//E,QAAS6N,SAA4BgO,KAAU,MAAGvgB,MAAMuS,SAAU5S,KAEtE,OAAO+E,SAOX+pC,qBAAqBnwC,UAAUinF,wBAK/B,SAAUrlE,KAAMqC,KACZ,GAAqB5iB,MAAO5B,KAAKmqF,oBAAoBhoE,KAAKvgB,KAAM4iB,KAC3Cs0G,OAAS32G,KAAK0B,EACnC,OAAIi1G,kBAAkBn2G,cAAem2G,OAAOpyC,UAAYL,WAAWE,OAC/D/hE,IAAI+zG,SAASl4H,YAAYE,UAAUF,YAAY4B,MAAMuiB,IAAI+zG,SAAU32H,MAC5D,MAGsBugB,KAAK0B,GAAGpB,gBAAgBziB,KAAMwkB,KAC9CviB,MAAM,KAAML,OAQjC8uC,qBAAqBnwC,UAAU2oF,gBAK/B,SAAU/mE,KAAMqC,KACZ,MAAO,IAAIg0G,aAAYr2G,KAAK5e,MAAMkf,gBAAgBziB,KAAMwkB,OAO5DksB,qBAAqBnwC,UAAU+oF,sBAK/B,SAAUnnE,KAAMqC,KACZ,GAAqBsmE,OAAQ75C,mBAAmB9uB,KAAMqC,IAAKxkB,KAK3D,OAJAwkB,KAAIosB,KAAKnwB,IAAI0B,KAAKzgB,KAAMopF,OACpB3oE,KAAK2gE,YAAYlqD,aAAauO,WAC9B3iB,IAAI9kB,QAAQsH,KAAKmb,KAAKzgB,MAEnB,MAOXgvC,qBAAqBnwC,UAAU0oF,oBAK/B,SAAU9mE,KAAMqC,KACZ,MAAOrC,MAAKK,KAAKC,gBAAgBziB,KAAMwkB,MAO3CksB,qBAAqBnwC,UAAUgpF,YAK/B,SAAUpnE,KAAMqC,KAEZ,MADiCrC,MAAKjT,UAAUuT,gBAAgBziB,KAAMwkB,KAE3DxkB,KAAK6hB,mBAAmBM,KAAKgjE,SAAU3gE,KAEvB,MAAlBrC,KAAKijE,UACHplF,KAAK6hB,mBAAmBM,KAAKijE,UAAW5gE,KAE5C,MAOXksB,qBAAqBnwC,UAAUspF,kBAK/B,SAAU1nE,KAAMqC,KACZ,IACI,MAAOxkB,MAAK6hB,mBAAmBM,KAAKwnE,UAAWnlE,KAEnD,MAAwBjL,GACpB,GAAqBw3B,UAAWvsB,IAAIwsB,0BAGpC,OAFAD,UAASH,KAAKnwB,IAAIk4G,kBAAmBp/G,GACrCw3B,SAASH,KAAKnwB,IAAIm4G,kBAAmBr/G,EAAEpB,OAChCnY,KAAK6hB,mBAAmBM,KAAKynE,WAAY74C,YAQxDL,qBAAqBnwC,UAAUwpF,eAK/B,SAAU5nE,KAAMqC,KACZ,KAAMrC,MAAK9d,MAAMoe,gBAAgBziB,KAAMwkB,MAO3CksB,qBAAqBnwC,UAAUkpF,iBAK/B,SAAUtnE,KAAM1e,SAAW,MAAO,OAMlCitC,qBAAqBnwC,UAAUmnF,qBAK/B,SAAU7gF,IAAK2d,KACX,GAAqB5iB,MAAO5B,KAAKmqF,oBAAoBtjF,IAAIjF,KAAM4iB,KAC1CsmE,MAAQjkF,IAAI4gF,UAAUhlE,gBAAgBziB,KAAMwkB,IACjE,OAAO,KAAKsmE,MAAMh4C,KAAK7wC,MAAM6oF,WAAQ,IAAQjiF,OAAOjH,SAOxD8uC,qBAAqBnwC,UAAUonF,iBAK/B,SAAU9gF,IAAK2d,KAAO,MAAO3d,KAAItD,OAMjCmtC,qBAAqBnwC,UAAUqnF,kBAK/B,SAAU/gF,IAAK2d,KACX,MAAOxkB,MAAKmhB,UAAUC,yBAAyBva,IAAItD,QAOvDmtC,qBAAqBnwC,UAAUunF,qBAK/B,SAAUjhF,IAAK2d,KACX,MAAI3d,KAAIqI,UAAUuT,gBAAgBziB,KAAMwkB,KAC7B3d,IAAIs+E,SAAS1iE,gBAAgBziB,KAAMwkB,KAEpB,MAAjB3d,IAAIu+E,UACFv+E,IAAIu+E,UAAU3iE,gBAAgBziB,KAAMwkB,KAExC,MAOXksB,qBAAqBnwC,UAAUwnF,aAK/B,SAAUlhF,IAAK2d,KACX,OAAQ3d,IAAIqI,UAAUuT,gBAAgBziB,KAAMwkB,MAOhDksB,qBAAqBnwC,UAAUynF,uBAK/B,SAAUnhF,IAAK2d,KACX,MAAO3d,KAAIqI,UAAUuT,gBAAgBziB,KAAMwkB,MAO/CksB,qBAAqBnwC,UAAU0nF,cAK/B,SAAUphF,IAAK2d,KACX,MAAO3d,KAAItD,MAAMkf,gBAAgBziB,KAAMwkB,MAO3CksB,qBAAqBnwC,UAAU2nF,kBAK/B,SAAUrhF,IAAK2d,KAEX,MAAO4tB,YAD2BvrC,IAAIid,OAAOje,IAAI,SAAU8rC,OAAS,MAAOA,OAAMjwC,OACnDmF,IAAIkzB,WAAYvV,IAAKxkB,OAOvD0wC,qBAAqBnwC,UAAUyoF,yBAK/B,SAAU7mE,KAAMqC,KACZ,GAAqBktB,YAAavvB,KAAK2B,OAAOje,IAAI,SAAU8rC,OAAS,MAAOA,OAAMjwC,MAKlF,OAJA8iB,KAAIosB,KAAKnwB,IAAI0B,KAAKzgB,KAAM0wC,WAAWV,WAAYvvB,KAAK4X,WAAYvV,IAAKxkB,OACjEmiB,KAAK2gE,YAAYlqD,aAAauO,WAC9B3iB,IAAI9kB,QAAQsH,KAAKmb,KAAKzgB,MAEnB,MAOXgvC,qBAAqBnwC,UAAU8nF,wBAK/B,SAAUxhF,IAAK2d,KACX,GAAIimB,OAAQzqC,KACSooF,IAAM,WAAc,MAAOvhF,KAAIuhF,IAAI3lE,gBAAgBgoB,MAAOjmB,MAC1D+gE,IAAM,WAAc,MAAO1+E,KAAI0+E,IAAI9iE,gBAAgBgoB,MAAOjmB,KAC/E,QAAQ3d,IAAI44D,UACR,IAAKokB,gBAAeC,OAChB,MAAOsE,QAAS7C,KACpB,KAAK1B,gBAAeG,UAChB,MAAOoE,SAAU7C,KACrB,KAAK1B,gBAAeE,UAChB,MAAOqE,QAAS7C,KACpB,KAAK1B,gBAAeI,aAChB,MAAOmE,SAAU7C,KACrB,KAAK1B,gBAAeU,IAChB,MAAO6D,QAAS7C,KACpB,KAAK1B,gBAAeW,GAChB,MAAO4D,QAAS7C,KACpB,KAAK1B,gBAAeM,KAChB,MAAOiE,OAAQ7C,KACnB,KAAK1B,gBAAeK,MAChB,MAAOkE,OAAQ7C,KACnB,KAAK1B,gBAAeO,OAChB,MAAOgE,OAAQ7C,KACnB,KAAK1B,gBAAeQ,SAChB,MAAO+D,OAAQ7C,KACnB,KAAK1B,gBAAeS,OAChB,MAAO8D,OAAQ7C,KACnB,KAAK1B,gBAAeY,MAChB,MAAO2D,OAAQ7C,KACnB,KAAK1B,gBAAea,YAChB,MAAO0D,QAAS7C,KACpB,KAAK1B,gBAAec,OAChB,MAAOyD,OAAQ7C,KACnB,KAAK1B,gBAAee,aAChB,MAAOwD,QAAS7C,KACpB,SACI,KAAM,IAAIhhF,OAAM,oBAAsBsC,IAAI44D,YAQtD/uB,qBAAqBnwC,UAAU+nF,kBAK/B,SAAUzhF,IAAK2d,KAIX,MAFgC3d,KAAI2N,SAASiO,gBAAgBziB,KAAMwkB,KACjD3d,IAAInF,OAQ1BgvC,qBAAqBnwC,UAAUgoF,iBAK/B,SAAU1hF,IAAK2d,KAGX,MAFgC3d,KAAI2N,SAASiO,gBAAgBziB,KAAMwkB,KACvC3d,IAAIxB,MAAMod,gBAAgBziB,KAAMwkB,OAQhEksB,qBAAqBnwC,UAAUmoF,sBAK/B,SAAU7hF,IAAK2d,KACX,MAAOxkB,MAAKmqF,oBAAoBtjF,IAAI2hF,QAAShkE,MAOjDksB,qBAAqBnwC,UAAUooF,oBAK/B,SAAU9hF,IAAK2d,KACX,GAAIimB,OAAQzqC,KACS2G,SAErB,OADAE,KAAI2hF,QAAQ1hF,QAAQ,SAAU6Y,OAAS,MAAOhZ,QAAOgZ,MAAMzL,KAAOyL,MAAMpc,MAAMkf,gBAAgBgoB,MAAOjmB,OAC9F7d,QAOX+pC,qBAAqBnwC,UAAUsoF,eAK/B,SAAUhiF,IAAKpD,SACX,GAAqBzB,QAAShC,KAAKmqF,oBAAoBtjF,IAAIoR,MAAOxU,QAClE,OAAOzB,QAAOA,OAAOD,OAAS,IAOlC2uC,qBAAqBnwC,UAAU4pF,oBAK/B,SAAU12E,YAAa+Q,KACnB,GAAIimB,OAAQzqC,IACZ,OAAOyT,aAAY5N,IAAI,SAAU2c,MAAQ,MAAOA,MAAKC,gBAAgBgoB,MAAOjmB,QAOhFksB,qBAAqBnwC,UAAUshB,mBAK/B,SAAUkY,WAAYvV,KAClB,IAAK,GAAqBxZ,GAAI,EAAGA,EAAI+uB,WAAWh4B,OAAQiJ,IAAK,CACzD,GAAqBmX,MAAO4X,WAAW/uB,GAClB9G,IAAMie,KAAKG,eAAetiB,KAAMwkB,IACrD,IAAItgB,cAAes0H,aACf,MAAOt0H,KAGf,MAAO,OAEJwsC,wBAkBPioF,kBAAoB,QACpBC,kBAAoB,QAgBpBG,yBAA0C,SAAUruH,QAEpD,QAASquH,4BACL,MAAOruH,QAAOyrC,KAAKn2C,MAAM,IAAUA,KAuRvC,MAzRAC,WAAU84H,yBAA0BruH,QASpCquH,yBAAyBx4H,UAAU+oF,sBAKnC,SAAUnnE,KAAMqC,KACZ,GAAIimB,OAAQzqC,IAWZ,OAVAwkB,KAAI24E,UAAUh7E,MACdniB,KAAK6/F,uBAAuB19E,KAAMqC,KACf,MAAfrC,KAAKgwB,SACL3tB,IAAIm4E,MAAMx6E,KAAMA,KAAKzgB,KAAO,+BAC5BygB,KAAKgwB,OAAO1vB,gBAAgBziB,KAAMwkB,KAClCA,IAAIi4E,QAAQt6E,KAAM,iBAEtBA,KAAKkvB,QAAQvqC,QAAQ,SAAUwqC,QAAU,MAAO7G,OAAMq1D,kBAAkB39E,KAAMmvB,OAAQ9sB,OACtFrC,KAAKqvB,QAAQ1qC,QAAQ,SAAU2qC,QAAU,MAAOhH,OAAMs1D,kBAAkB59E,KAAMsvB,OAAQjtB,OACtFA,IAAI44E,WACG,MAOX27B,yBAAyBx4H,UAAUs/F,uBAKnC,SAAU19E,KAAMqC,KACZA,IAAIm4E,MAAMx6E,KAAM,YAAcA,KAAKzgB,KAAO,KACZ,MAA1BygB,KAAK2vB,mBACL9xC,KAAKggG,aAAa79E,KAAK2vB,kBAAkBhuB,OAAQU,KAErDA,IAAIi4E,QAAQt6E,KAAM,OAClBqC,IAAIy4E,YAC0B,MAA1B96E,KAAK2vB,mBACD3vB,KAAK2vB,kBAAkB/tB,KAAKhiB,OAAS,IACrCyiB,IAAIi4E,QAAQt6E,KAAM,oBAClBniB,KAAK6hB,mBAAmBM,KAAK2vB,kBAAkB/tB,KAAMS,MAG7DA,IAAI04E,YACJ14E,IAAIi4E,QAAQt6E,KAAM,MAQtB42G,yBAAyBx4H,UAAUu/F,kBAMnC,SAAU39E,KAAMmvB,OAAQ9sB,KACpBA,IAAIi4E,QAAQt6E,KAAM,yBAA2BA,KAAKzgB,KAAO,gBAAkB4vC,OAAO5vC,KAAO,0BACzF8iB,IAAIy4E,YACA3rD,OAAOvtB,KAAKhiB,OAAS,IACrByiB,IAAIi4E,QAAQt6E,KAAM,oBAClBniB,KAAK6hB,mBAAmByvB,OAAOvtB,KAAMS,MAEzCA,IAAI04E,YACJ14E,IAAIi4E,QAAQt6E,KAAM,SAQtB42G,yBAAyBx4H,UAAUw/F,kBAMnC,SAAU59E,KAAMsvB,OAAQjtB,KACpBA,IAAIm4E,MAAMx6E,KAAMA,KAAKzgB,KAAO,cAAgB+vC,OAAO/vC,KAAO,gBAC1D1B,KAAKggG,aAAavuD,OAAO3tB,OAAQU,KACjCA,IAAIi4E,QAAQt6E,KAAM,OAClBqC,IAAIy4E,YACAxrD,OAAO1tB,KAAKhiB,OAAS,IACrByiB,IAAIi4E,QAAQt6E,KAAM,oBAClBniB,KAAK6hB,mBAAmB4vB,OAAO1tB,KAAMS,MAEzCA,IAAI04E,YACJ14E,IAAIi4E,QAAQt6E,KAAM,OAOtB42G,yBAAyBx4H,UAAUqmF,iBAKnC,SAAU//E,IAAK2d,KACX,GAAI3d,IAAI6/E,UAAYL,WAAWC,KAC3B9hE,IAAIm4E,MAAM91F,IAAK,YAEd,CAAA,GAAIA,IAAI6/E,UAAYL,WAAWE,MAChC,KAAM,IAAIhiF,OAAM,+EAGhBmG,QAAOnK,UAAUqmF,iBAAiBzwC,KAAKn2C,KAAM6G,IAAK2d,KAEtD,MAAO,OAOXu0G,yBAAyBx4H,UAAUwoF,oBAKnC,SAAU5mE,KAAMqC,KAIZ,MAHAA,KAAIm4E,MAAMx6E,KAAM,OAASA,KAAKzgB,KAAO,OACrCygB,KAAK5e,MAAMkf,gBAAgBziB,KAAMwkB,KACjCA,IAAIi4E,QAAQt6E,KAAM,KACX,MAOX42G,yBAAyBx4H,UAAU0nF,cAKnC,SAAUphF,IAAK2d,KAEX,MADA3d,KAAItD,MAAMkf,gBAAgBziB,KAAMwkB,KACzB,MAOXu0G,yBAAyBx4H,UAAUinF,wBAKnC,SAAUhlE,KAAMgC,KACZ,GAAqBs0G,QAASt2G,KAAKqB,EAanC,OAZIi1G,kBAAkBn2G,cAAem2G,OAAOpyC,UAAYL,WAAWE,OACzB/hE,IAAiB,aAAS,OAAE/B,gBAAgBziB,KAAMwkB,KACxFA,IAAIm4E,MAAMn6E,KAAM,cACZA,KAAK5gB,KAAKG,OAAS,IACnByiB,IAAIm4E,MAAMn6E,KAAM,MAChBxiB,KAAKmqF,oBAAoB3nE,KAAK5gB,KAAM4iB,IAAK,MAE7CA,IAAIm4E,MAAMn6E,KAAM,MAGhB9X,OAAOnK,UAAUinF,wBAAwBrxC,KAAKn2C,KAAMwiB,KAAMgC,KAEvD,MAOXu0G,yBAAyBx4H,UAAU2nF,kBAKnC,SAAUrhF,IAAK2d,KAQX,MAPAA,KAAIm4E,MAAM91F,IAAK,YAAcA,IAAInF,KAAO,IAAMmF,IAAInF,KAAO,IAAM,KAC/D1B,KAAKggG,aAAan5F,IAAIid,OAAQU,KAC9BA,IAAIi4E,QAAQ51F,IAAK,OACjB2d,IAAIy4E,YACJj9F,KAAK6hB,mBAAmBhb,IAAIkzB,WAAYvV,KACxCA,IAAI04E,YACJ14E,IAAIm4E,MAAM91F,IAAK,KACR,MAOXkyH,yBAAyBx4H,UAAUyoF,yBAKnC,SAAU7mE,KAAMqC,KAQZ,MAPAA,KAAIm4E,MAAMx6E,KAAM,YAAcA,KAAKzgB,KAAO,KAC1C1B,KAAKggG,aAAa79E,KAAK2B,OAAQU,KAC/BA,IAAIi4E,QAAQt6E,KAAM,OAClBqC,IAAIy4E,YACJj9F,KAAK6hB,mBAAmBM,KAAK4X,WAAYvV,KACzCA,IAAI04E,YACJ14E,IAAIi4E,QAAQt6E,KAAM,KACX,MAOX42G,yBAAyBx4H,UAAUspF,kBAKnC,SAAU1nE,KAAMqC,KACZA,IAAIi4E,QAAQt6E,KAAM,SAClBqC,IAAIy4E,YACJj9F,KAAK6hB,mBAAmBM,KAAKwnE,UAAWnlE,KACxCA,IAAI04E,YACJ14E,IAAIi4E,QAAQt6E,KAAM,YAAc65E,kBAAkBt6F,KAAO,OACzD8iB,IAAIy4E,WACJ,IAAqBrT,aAAgCqS,kBAAkBx7E,IAAIu7E,kBAAkBhsE,KAAK,UAAU2I,WAAW,MAC/GC,aAAaC,SACZhwB,OAAOsZ,KAAKynE,WAIrB,OAHA5pF,MAAK6hB,mBAAmB+nE,WAAYplE,KACpCA,IAAI04E,YACJ14E,IAAIi4E,QAAQt6E,KAAM,KACX,MAOX42G,yBAAyBx4H,UAAUy/F,aAKnC,SAAUl8E,OAAQU,KACdxkB,KAAKu+F,gBAAgB,SAAU5sD,OAAS,MAAOntB,KAAIm4E,MAAM,KAAMhrD,MAAMjwC,OAAUoiB,OAAQU,IAAK,MAMhGu0G,yBAAyBx4H,UAAU89F,qBAInC,SAAU5sD,QACN,GAAqB/vC,KACrB,QAAQ+vC,QACJ,IAAK01C,eAAcC,YACf1lF,KAAO,QACP,MACJ,KAAKylF,eAAcE,oBACf3lF,KAAO,WACP,MACJ,KAAKylF,eAAcG,KACf5lF,KAAO,MACP,MACJ,SACI,KAAM,IAAI6C,OAAM,2BAA6BktC,QAErD,MAAO/vC,OAEJq3H,0BACT96B,wBAsDE7qD,kBAAmC,SAAU1oC,QAE7C,QAAS0oC,mBAAkBjyB,WACvB,GAAIspB,OAAQ//B,OAAOyrC,KAAKn2C,OAASA,IAKjC,OAJAyqC,OAAMtpB,UAAYA,UAClBspB,MAAMuuF,iBACNvuF,MAAMwuF,kBACNxuF,MAAMyuF,qBACCzuF,MAiGX,MAxGAxqC,WAAUmzC,kBAAmB1oC,QAa7B0oC,kBAAkB7yC,UAAU8yC,iBAI5B,SAAU7uB,KACsB,GAAIoI,iBAAgB,GAAItJ,gBAAetjB,KAAKk5H,kBAAkBrzH,IAAI,SAAUszH,WAAa,MAAO,IAAI51G,iBAAgB41G,UAAWz2G,SAASy2G,YAAY,OAC3K72G,eAAetiB,KAAMwkB,MAK9B4uB,kBAAkB7yC,UAAU+yC,QAG5B,WAEI,IAAK,GADgB3sC,WACKqE,EAAI,EAAGA,EAAIhL,KAAKg5H,cAAcj3H,OAAQiJ,IAC5DrE,OAAO3G,KAAKg5H,cAAchuH,IAAMhL,KAAKi5H,eAAejuH,EAExD,OAAOrE,SAOXysC,kBAAkB7yC,UAAUqnF,kBAK5B,SAAU/gF,IAAK2d,KACX,GAAqBjhB,OAAQvD,KAAKmhB,UAAUC,yBAAyBva,IAAItD,OACpDgG,GAAKvJ,KAAKi5H,eAAe91H,QAAQI,MACtD,KAAY,IAARgG,GAAW,CACXA,GAAKvJ,KAAKi5H,eAAel3H,OACzB/B,KAAKi5H,eAAejyH,KAAKzD,MACzB,IAAqBm0D,QAASrwD,gBAAiBE,UAAWhE,SAAY,KACtEvD,MAAKg5H,cAAchyH,KAAK,OAAS0wD,OAAS,IAAMnuD,IAGpD,MADAib,KAAIm4E,MAAM91F,IAAK7G,KAAKg5H,cAAczvH,KAC3B,MAOX6pC,kBAAkB7yC,UAAUwoF,oBAK5B,SAAU5mE,KAAMqC,KAIZ,MAHIrC,MAAK2gE,YAAYlqD,aAAauO,WAC9BnnC,KAAKk5H,kBAAkBlyH,KAAKmb,KAAKzgB,MAE9BgJ,OAAOnK,UAAUwoF,oBAAoB5yC,KAAKn2C,KAAMmiB,KAAMqC,MAOjE4uB,kBAAkB7yC,UAAUyoF,yBAK5B,SAAU7mE,KAAMqC,KAIZ,MAHIrC,MAAK2gE,YAAYlqD,aAAauO,WAC9BnnC,KAAKk5H,kBAAkBlyH,KAAKmb,KAAKzgB,MAE9BgJ,OAAOnK,UAAUyoF,yBAAyB7yC,KAAKn2C,KAAMmiB,KAAMqC,MAOtE4uB,kBAAkB7yC,UAAU+oF,sBAK5B,SAAUnnE,KAAMqC,KAIZ,MAHIrC,MAAK2gE,YAAYlqD,aAAauO,WAC9BnnC,KAAKk5H,kBAAkBlyH,KAAKmb,KAAKzgB,MAE9BgJ,OAAOnK,UAAU+oF,sBAAsBnzC,KAAKn2C,KAAMmiB,KAAMqC,MAE5D4uB,mBACT2lF,0BA0BEK,YAA6B,WAC7B,QAASA,aAAY/N,kBAAmBC,gBAAiBC,eAAgBC,cAAeE,kBAAmBp9B,iBAAkBj4B,WAAYgjE,gBAAiBr5C,SAAUs5C,2BAChKt5H,KAAKqrH,kBAAoBA,kBACzBrrH,KAAKsrH,gBAAkBA,gBACvBtrH,KAAKurH,eAAiBA,eACtBvrH,KAAKwrH,cAAgBA,cACrBxrH,KAAK0rH,kBAAoBA,kBACzB1rH,KAAKsuF,iBAAmBA,iBACxBtuF,KAAKq2D,WAAaA,WAClBr2D,KAAKq5H,gBAAkBA,gBACvBr5H,KAAKggF,SAAWA,SAChBhgF,KAAKs5H,0BAA4BA,0BACjCt5H,KAAKu5H,uBAAyB,GAAI/vG,KAClCxpB,KAAKw5H,2BAA6B,GAAIhwG,KACtCxpB,KAAKy5H,+BAAiC,GAAIjwG,KAC1CxpB,KAAK05H,uBAAyB,GAAIlwG,KAClCxpB,KAAK25H,uBAAyB,EAC9B35H,KAAK45H,mBAAqB,GAAInyG,KAmblC,MA7aA2xG,aAAY74H,UAAUs5H,kBAItB,SAAUhoC,YACN,MAAOt1C,WAAUC,WAAWx8C,KAAK85H,4BAA4BjoC,YAAY,KAM7EunC,YAAY74H,UAAUw5H,mBAItB,SAAUloC,YACN,MAAOj1C,SAAQzwC,QAAQnM,KAAK85H,4BAA4BjoC,YAAY,KAMxEunC,YAAY74H,UAAUy5H,kCAItB,SAAUnoC,YACN,MAAOt1C,WAAUC,WAAWx8C,KAAKi6H,+BAA+BpoC,YAAY,KAMhFunC,YAAY74H,UAAU25H,mCAItB,SAAUroC,YACN,MAAOj1C,SAAQzwC,QAAQnM,KAAKi6H,+BAA+BpoC,YAAY,KAM3EunC,YAAY74H,UAAUwvF,oBAItB,SAAUzlE,WAEN,MAD+BtqB,MAAKqrH,kBAAkB35B,oBAAoBpnE,WACzB,kBAMrD8uG,YAAY74H,UAAU45H,iBAItB,SAAUzQ,WACN1pH,KAAKk0D,aACLl0D,KAAKo6H,iBAAiB1Q,YAM1B0P,YAAY74H,UAAU65H,iBAItB,SAAUC,OACN,IAAIr6H,KAAK45H,mBAAmBnlG,IAAI4lG,OAAhC,CAGAr6H,KAAK45H,mBAAmB38F,IAAIo9F,MAE5B,KAAK,GADgB3Q,WAAY2Q,QACPrvH,EAAI,EAAGA,EAAI0+G,UAAU3nH,OAAQiJ,IAAK,CACxD,GAAqB2U,OAAQ+pG,UAAU1+G,EACvC,IAAqB,kBAAV2U,OACP3f,KAAKo6H,iBAAiBz6G,WAErB,CACD,GAAqBumB,SAA2B,KAChDlmC,MAAKsuF,iBAAiBroD,YAAaX,OAAQY,QAAQ7/B,KAAKkB,UAAW69B,SAAU,KAAM/+B,KAAM6/B,cAQrGkzF,YAAY74H,UAAU+5H,cAItB,SAAU9yH,KAAO,QAASxH,KAAKsuF,iBAAiB8B,eAAe5oF,MAK/D4xH,YAAY74H,UAAUg6H,sBAItB,SAAUC,KACN,GAAI/vF,OAAQzqC,IACZ,OAAOw6H,KAAI30H,IAAI,SAAU8tF,KAAO,MAAOA,KAAIpsF,YAAckf,OAAO,SAAUjf,KAAO,OAAQijC,MAAM6vF,cAAc9yH,QAOjH4xH,YAAY74H,UAAUu5H,4BAKtB,SAAUjoC,WAAYpB,QAClB,GAAIhmD,OAAQzqC,IACZ,OAAOu8C,WAAU/1C,KAAKxG,KAAKy6H,aAAa5oC,WAAYpB,QAAS,WAEzD,MADAhmD,OAAMiwF,mBAAmB7oC,WAAY,MAC9BpnD,MAAMykF,eAAer9B,eAQpCunC,YAAY74H,UAAU05H,+BAKtB,SAAUpoC,WAAYpB,QAClB,GAAIhmD,OAAQzqC,IACZ,OAAOu8C,WAAU/1C,KAAKxG,KAAKy6H,aAAa5oC,WAAYpB,QAAS,WACzD,GAAqBkqC,sBAErB,OADAlwF,OAAMiwF,mBAAmB7oC,WAAY8oC,qBAEjCC,gBAAiBnwF,MAAMykF,eAAer9B,YACtC8oC,mBAAoBA,uBAShCvB,YAAY74H,UAAUk6H,aAKtB,SAAUI,WAAYpqC,QAClB,GAAIhmD,OAAQzqC,KACSiyF,WACA6oC,aAAkC96H,KAAKqrH,kBAAkBnhF,oBAAoB2wF,WAelG,OAZA76H,MAAKu6H,sBAAsBO,aAAa12F,iBAAiBkF,SAASxiC,QAAQ,SAAUi0H,gBAEhF,GAAqBpxH,YAAgC8gC,MAAM4gF,kBAAkBnhF,oBAAoB6wF,eACjGtwF,OAAM8vF,sBAAsB5wH,WAAWqhC,oBAAoBlkC,QAAQ,SAAUU,KACzE,GAAqB0qF,SAAUznD,MAAM4gF,kBAAkB76B,sBAAsB7mF,WAAWtD,KAAKkB,UAAWC,IAAKipF,OACzGyB,UACAD,QAAQjrF,KAAKkrF,WAGrBznD,MAAM8vF,sBAAsB5wH,WAAWshC,eAClCnkC,QAAQ,SAAUU,KAAO,MAAOijC,OAAM4gF,kBAAkB12B,sBAAsBntF,SAEhF+0C,UAAUG,IAAIu1C,UAMzBmnC,YAAY74H,UAAU2uH,eAItB,SAAUr9B,YACN,GAAqB+oC,iBAAqC56H,KAAK05H,uBAAuBl5G,IAAIqxE,WAC1F,KAAK+oC,gBAAiB,CAClB,GAAqBjxH,YAAgC3J,KAAKqrH,kBAAkBnhF,oBAAoB2nD,YAE3E+H,eAAiB55F,KAAKs5H,0BAA0B3vH,WAAWtD,KAAKkB,WAChEy2B,UAAYwV,sBACZ9L,cAAgB1nC,KAAK0rH,kBAAkBxgC,QAAQltD,UAAWr0B,WAAYiwF;gQAC3FghC,iBAAkB56H,KAAKg7H,gBAAgBtxH,eAAeC,YAAaq0B,UAAUjE,YAAY2N,cAAcsyD,oBACvGh6F,KAAK05H,uBAAuBj5G,IAAI9W,WAAWtD,KAAKkB,UAAWqzH,iBAE/D,MAAOA,kBAWXxB,YAAY74H,UAAUm6H,mBAMtB,SAAUG,WAAYI,uBAClB,GAAIxwF,OAAQzqC,KACSqpC,SAA8BrpC,KAAKqrH,kBAAkBnhF,oBAAoB2wF,YACzEK,qBAAuB,GAAI1xG,KAC3B2xG,UAAY,GAAI1zG,KAChB2zG,gBAAkBp7H,KAAKu6H,sBAAsBlxF,SAASjF,iBAAiBkF,QAC5F8xF,iBAAgBt0H,QAAQ,SAAUu0H,UAC9B,GAAqBC,iBAAqC7wF,MAAM4gF,kBAAkBnhF,oBAAoBmxF,SACtG5wF,OAAM8vF,sBAAsBe,gBAAgBtwF,oBAAoBlkC,QAAQ,SAAUy0H,QAC9EL,qBAAqBz6G,IAAI86G,OAAQD,gBACjC,IAAqBpsC,SAAUzkD,MAAM4gF,kBAAkB55B,qBAAqB8pC,OAC5E,IAAIrsC,QAAQvlE,cACRwxG,UAAUl+F,IAAIwN,MAAM+wF,wBAAwBtsC,QAASosC,kBACjDL,uBAAuB,CACvB,GAAqBh8F,UAAWwL,MAAMgxF,4BAA4BvsC,QAAQ7oF,KAAKkB,UAAW+zH,gBAC1FH,WAAUl+F,IAAIgC,UACdg8F,sBAAsBj0H,KAAuBkoF,QAAwB,uBAKrFksC,gBAAgBt0H,QAAQ,SAAUu0H,UAC9B,GAAqBC,iBAAqC7wF,MAAM4gF,kBAAkBnhF,oBAAoBmxF,SACtG5wF,OAAM8vF,sBAAsBe,gBAAgBtwF,oBAAoBlkC,QAAQ,SAAUy0H,QAC9E,GAAqBrsC,SAAUzkD,MAAM4gF,kBAAkB55B,qBAAqB8pC,OACxErsC,SAAQvlE,aACRulE,QAAQ3hE,gBAAgBzmB,QAAQ,SAAU40H,oBACtC,GAAqB/xH,YAAgCuxH,qBAAqB16G,IAAIk7G,mBAAmB54E,cACjGq4E,WAAUl+F,IAAIwN,MAAMgxF,4BAA4BC,mBAAmB54E,cAAen5C,iBAI9F2xH,gBAAgB/tG,gBAAgBzmB,QAAQ,SAAU40H,oBAC9C,IAAKjxF,MAAM6vF,cAAcoB,mBAAmB54E,cAAcv7C,WAAY,CAClE,GAAqBoC,YAAgCuxH,qBAAqB16G,IAAIk7G,mBAAmB54E,cACjGq4E,WAAUl+F,IAAIwN,MAAMgxF,4BAA4BC,mBAAmB54E,cAAen5C,kBAI9FwxH,UAAUr0H,QAAQ,SAAUm4B,UAAY,MAAOwL,OAAMkxF,iBAAiB18F,aAM1Em6F,YAAY74H,UAAU6zD,cAItB,SAAU/tD,MACNrG,KAAK05H,uBAAuBx8F,OAAO72B,MACnCrG,KAAKqrH,kBAAkBj3D,cAAc/tD,MACrCrG,KAAKw5H,2BAA2Bt8F,OAAO72B,MACCrG,KAAKu5H,uBAAuB/4G,IAAIna,OAEpErG,KAAKu5H,uBAAuBr8F,OAAO72B,OAM3C+yH,YAAY74H,UAAU2zD,WAGtB,WAEIl0D,KAAKqrH,kBAAkBn3D,aACvBl0D,KAAKu5H,uBAAuBplE,QAC5Bn0D,KAAKw5H,2BAA2BrlE,QAChCn0D,KAAK05H,uBAAuBvlE,SAOhCilE,YAAY74H,UAAUk7H,4BAKtB,SAAU1zH,SAAUshC,UAChB,IAAKA,SACD,KAAM,IAAI9kC,OAAM,aAAeoB,UAAUoC,UAAY,qFAEzD,IAAqB6zH,kBAAmB57H,KAAKw5H,2BAA2Bh5G,IAAIzY,SAC5E,KAAK6zH,iBAAkB,CACnB,GAAqB1yH,UAAWlJ,KAAKqrH,kBAAkB55B,qBAAqB1pF,SAC5EwrC,iBAAgBrqC,SAChB,IAAqB6mH,UAAW/vH,KAAKqrH,kBAAkBh7B,yBAAyBnnF,SAA6BA,SAA0B,iBAAE2yH,eACzID,kBACI,GAAIE,mBAAiB,EAAM5yH,SAAS7C,KAAM0pH,SAAU1mF,UAAWngC,SAAS7C,OAC5ErG,KAAKw5H,2BAA2B/4G,IAAI1Y,SAAU6zH,kBAElD,MAAOA,mBAOXxC,YAAY74H,UAAUi7H,wBAKtB,SAAUtyH,SAAUmgC,UAChB,GAAqBuyF,kBAAmB57H,KAAKu5H,uBAAuB/4G,IAAItX,SAAS7C,KAAKkB,UAMtF,OALKq0H,oBACDroF,gBAAgBrqC,UAChB0yH,iBAAmB,GAAIE,mBAAiB,EAAO5yH,SAAS7C,KAAM6C,SAAUmgC,SAAUA,SAASjF,iBAAiB/a,YAC5GrpB,KAAKu5H,uBAAuB94G,IAAIvX,SAAS7C,KAAKkB,UAAWq0H,mBAEtDA,kBAMXxC,YAAY74H,UAAUo7H,iBAItB,SAAU18F,UACN,GAAIwL,OAAQzqC,IACZ,KAAIi/B,SAAS88F,WAAb,CAGA,GAAqB7yH,UAAW+1B,SAAS/1B,SACpB8yH,+BAAiC,GAAIxyG,KACrCgY,cAAgBgS,sBAChB27E,oBAAsBnvH,KAAKurH,eAAexsF,iBAAiByC,cAAet4B,SAC7FA,UAAkB,SAAEu3C,oBAAoB35C,QAAQ,SAAUsoH,gBACxD,GAAqBgC,oBAAqB3mF,MAAM8gF,eAAepkB,cAAc3zD,sBAAuBtqC,SAAUkmH,eAC9G4M,gCAA+Bv7G,IAAuB2uG,eAAyB,UAAGgC,sBAEtFpxH,KAAKi8H,4BAA4B9M,oBAAqB6M,+BACtD,IACI3iH,KADyB4lB,SAASoK,SAASjF,iBAAiBpF,MAAMn5B,IAAI,SAAU65B,MAAQ,MAAO+K,OAAM4gF,kBAAkB52B,eAAe/0D,KAAKn4B,aACtIvH,KAAKkuH,eAAehlH,SAAU+1B,SAASoK,SAAUpK,SAAS5V,aAAa8kG,eAAiB90G,GAAG4lB,SAAUwsE,UAAYpyF,GAAG2lB,MACxG0I,cAAgB1nC,KAAKwrH,cAAczsF,iBAAiByC,cAAet4B,SAAUilH,eAAgBzrG,SAASysG,oBAAoBroB,WAAY2E,WACtIywB,WAAal8H,KAAKg7H,gBAAgBpxH,eAAeq1B,SAASoK,SAAShjC,KAAM44B,SAAS/1B,UAAWs4B,cAAczH,YAC3GoiG,UAAYD,WAAWx0F,cAAcsuE,cACrC/0D,aAAei7E,WAAWx0F,cAAcuuE,gBAC7Dh3E,UAASm9F,SAASD,UAAWl7E,gBAQjCm4E,YAAY74H,UAAU2tH,eAMtB,SAAUhlH,SAAUmgC,SAAU+mF,sBAC1B,GAAI3lF,OAAQzqC,KAESgvC,oBAAyC9lC,SAAkB,SAAE8lC,oBAC7D3lB,WAAa+mG,qBAAqBvqH,IAAI,SAAUgkB,KAAO,MAAO4gB,OAAM4gF,kBAAkB35B,oBAAoB7nE,IAAItiB,aAC9Gy3B,MAAQqK,SAASjF,iBAAiBpF,MAAMn5B,IAAI,SAAU65B,MAAQ,MAAO+K,OAAM4gF,kBAAkB52B,eAAe/0D,KAAKn4B,YACtI,OAAOvH,MAAKsrH,gBAAgBp3F,MAAMhrB,SAAgDA,SAAkB,SAAU,QAAGmgB,WAAY2V,MAAOqK,SAASyY,QAAS94C,kBAAkBqgC,SAAShjC,KAAM6C,SAA6BA,SAAkB,UAAI8lC,sBAO9OoqF,YAAY74H,UAAU07H,4BAKtB,SAAUt1H,OAAQq1H,gCACd,GAAIvxF,OAAQzqC,IACZ2G,QAAOkhC,aAAa/gC,QAAQ,SAAUilB,IAAK/gB,GACvC,GAAqBqxH,qBAAyCL,+BAA+Bx7G,IAAIuL,IAAItW,WAChF6mH,gBAAkB7xF,MAAM8xF,mCAAmCF,oBAAqBL,+BACrGjwG,KAAI+b,SAASw0F,oBAQrBlD,YAAY74H,UAAUg8H,mCAKtB,SAAU51H,OAAQq1H,gCAEd,MADAh8H,MAAKi8H,4BAA4Bt1H,OAAQq1H,gCAClCh8H,KAAKg7H,gBAAgB3xH,uBAAuB1C,OAAO2C,KAAMtJ,KAAK25H,0BAA2BhzH,OAAOq3B,UAAUjE,YAAYpzB,OAAOmgG,YAOxIsyB,YAAY74H,UAAUy6H,gBAKtB,SAAU1oF,UAAWvY,YACjB,MAAK/5B,MAAKq5H,gBAAgBtqF,OAIfmE,cAAcZ,UAAWvY,WAAY/5B,KAAKq2D,WAAYr2D,KAAKq5H,gBAAgB75E,YAH3EhP,oBAAoBzW,WAAY/5B,KAAKq2D,aAM7C+iE,eAEP0C,iBAAkC,WAClC,QAASA,kBAAiBz5F,OAAQt6B,SAAUmB,SAAUmgC,SAAUhgB,YAC5DrpB,KAAKqiC,OAASA,OACdriC,KAAK+H,SAAWA,SAChB/H,KAAKkJ,SAAWA,SAChBlJ,KAAKqpC,SAAWA,SAChBrpC,KAAKqpB,WAAaA,WAClBrpB,KAAKw8H,WAA8B,KACnCx8H,KAAK+7H,YAAa,EAoBtB,MAbAD,kBAAiBv7H,UAAU67H,SAK3B,SAAUD,UAAWl7E,cACjBjhD,KAAKw8H,WAAaL,UACCn8H,KAAKkJ,SAA2B,kBAAEqmF,YAAY4sC,UACjE,KAAK,GAAqBnsG,QAAQixB,cACXjhD,KAAKkJ,SAAsB,aAAE8mB,MAAQixB,aAAajxB,KAEzEhwB,MAAK+7H,YAAa,GAEfD,oBAoCPW,iBAAkC,WAClC,QAASA,qBAET,MAAOA,qBA+BP5oF,YAA6B,WAC7B,QAAS6oF,iBAAgBC,oBACE,KAAnBA,iBAA6BA,eAAiB,MAClD38H,KAAK28H,eAAiBA,eAgD1B,MA3BAD,iBAAgBn8H,UAAU4L,QAW1B,SAAUN,QAAS9C,KACf,GAAqB6zH,aAAc7zH,GACpB,OAAX8C,SAAmBA,QAAQ9J,OAAS,IACpC66H,YAAchnF,YAAY/pC,QAAS+wH,aAEvC,IAAqBC,eAAgB7oF,OAAO4oF,aACvB7vH,OAAS/M,KAAK28H,cACnC,IAAc,MAAV5vH,QAAmC,MAAjB8vH,eACuB,WAAzCA,cAAc5oF,gBAAgBC,QAAsB,CACpD,GAAqBzpC,MAAOoyH,cAAc5oF,gBAAgBqB,KAG1D,OAFAvoC,QAASA,OAAOtK,QAAQ,OAAQ,IAChCgI,KAAOA,KAAKhI,QAAQ,OAAQ,IACrBsK,OAAS,IAAMtC,KAE1B,MAAOmyH,cAEJF,mBAmHP9nF,SAAW,GAAIt/B,QAAO,4HActB2+B,iBACAC,OAAQ,EACRqB,SAAU,EACVC,OAAQ,EACRC,KAAM,EACNH,KAAM,EACNI,UAAW,EACXC,SAAU,EAEd1B,iBAAgBA,gBAAgBC,QAAU,SAC1CD,gBAAgBA,gBAAgBsB,UAAY,WAC5CtB,gBAAgBA,gBAAgBuB,QAAU,SAC1CvB,gBAAgBA,gBAAgBwB,MAAQ,OACxCxB,gBAAgBA,gBAAgBqB,MAAQ,OACxCrB,gBAAgBA,gBAAgByB,WAAa,YAC7CzB,gBAAgBA,gBAAgB0B,UAAY;;;;;;;AAwH5C,GAAImnF,gBAAgC,WAChC,QAASA,mBAWT,MALAA,gBAAev8H,UAAUigB,IAIzB,SAAUzX,KAAO,MAAO,IACjB+zH,kBAoBPC,UAA2B,WAC3B,QAASA,WAAU10F,KAAMC,qBAAsB+lF,cAAe9lF,kBAC1DvoC,KAAKqoC,KAAOA,KACZroC,KAAKsoC,qBAAuBA,qBAC5BtoC,KAAKquH,cAAgBA,cACrBruH,KAAKuoC,iBAAmBA,iBAiE5B,MA3DAw0F,WAAUx8H,UAAU0d,QAIpB,SAAUiuG,WACN,GAAIzhF,OAAQzqC,KACRqZ,GAAKqvB,4BAA4BwjF,UAAWlsH,KAAKqoC,KAAMroC,KAAKsoC,qBAAsBtoC,KAAKuoC,kBAAmBQ,MAAQ1vB,GAAG0vB,MAAOK,UAAY/vB,GAAG+vB,SAC/I,OAAOwT,SACFF,IAAItT,UAAUvjC,IAAI,SAAUwjC,UAC7B,MAAOoB,OAAMlC,iBAAiBypD,qCAAqC3oD,SAAShjC,KAAKkB,WAAW,MAE3Ff,KAAK,WACN,GAAqBksB,UAerB,IAdAqW,MAAMjiC,QAAQ,SAAU+8B,MACpB,GAAqByqF,aACrBzqF,MAAKxa,WAAWviB,QAAQ,SAAU+vD,eAC9B,GAAqBq4B,SAAUzkD,MAAMlC,iBAAiBkpD,qBAAqB56B,cACvEq4B,UAAWA,QAAQvlE,aACnB2kG,UAAUtnH,KAAKkoF,WAGvBo/B,UAAUxnH,QAAQ,SAAUoC,UACxB,GAAqB02E,MAA6C12E,SAAkB,SAAW,SAC1EiN,oBAAsBwtC,oBAAoBC,UAA6B16C,SAAkB,SAAEy3C,cAChHjuB,QAAO1rB,KAAK/E,MAAMywB,OAA2B+X,MAAM4jF,cAAchR,mBAAmBz9B,KAAM/7C,KAAKre,SAAUrP,0BAG7Guc,OAAO3wB,OACP,KAAM,IAAIwC,OAAMmuB,OAAO7sB,IAAI,SAAU0T,GAAK,MAAOA,GAAEtT,aAAeH,KAAK,MAE3E,OAAO2kC,OAAM4jF,iBAQrB0O,UAAUt8H,OAKV,SAAU4nC,KAAM8xC,QACZ,GAAqB9rC,YAAa,GAAIE,YACjBR,YAAcP,qBAAqBnF,MACnC1B,YAAc,GAAIqH,mBAClBtI,gBAAkB,GAAIuI,oBAAmB5F,KAAM1B,aAC/C2B,qBAAuB,GAAI4F,sBAAqB7F,KAAM1B,YAAajB,iBACnEyI,gBAAkB,GAAIC,iBAAgB1I,gBAAiB4C,sBACvDlzB,OAAS,GAAIu5B,iBAAiBC,qBAAsBC,kBAAkBC,SAAUC,QAAQ,IACxFG,WAAa,GAAIC,sBAAsB3uB,IAAK,SAAUzX,KAAO,MAAOs/B,MAAK+G,aAAarmC,OAAWglC,YAAaM,WAAYj5B,QAC1Ho6B,sBAAwB,GAAIC,0BAC5B7jC,SAAW,GAAIgkC,yBAAwBx6B,OAAQi5B,WAAY,GAAIwB,kBAAiB1B,iBAAkB,GAAI2B,mBAAkB3B,iBAAkB,GAAI4B,cAAa5B,iBAAkBzI,gBAAiB8J,sBAAuBN,WAAYR,QAAS/H,YAAawH,iBAEvPkgF,cAAgB,GAAIjR,eAAc/uE,iBAAoB8rC,OAE3E,QAAS6iD,UADwB,GAAID,WAAU10F,KAAMC,qBAAsB+lF,cAAeziH,UAC3DuiC,gBAAiBA,kBAE7C4uF,YAGXr9H,SAAQ08C,KAAOA,KACf18C,QAAQivC,eAAiBA,eACzBjvC,QAAQuH,2BAA6BA,2BACrCvH,QAAQumB,gBAAkBA,gBAC1BvmB,QAAQymB,oBAAsBA,oBAC9BzmB,QAAQiuB,YAAcA,YACtBjuB,QAAQ05H,YAAcA,YACtB15H,QAAQowC,kBAAoBA,kBAC5BpwC,QAAQqwC,aAAeA,aACvBrwC,QAAQmwC,iBAAmBA,iBAC3BnwC,QAAQ0W,6BAA+BA,6BACvC1W,QAAQikD,oBAAsBA,oBAC9BjkD,QAAQ4wC,iBAAmBA,iBAC3B5wC,QAAQkkB,cAAgBA,cACxBlkB,QAAQmkF,eAAiBA,eACzBnkF,QAAQ8lF,mBAAqBA,mBAC7B9lF,QAAQynF,cAAgBA,cACxBznF,QAAQ2mF,WAAaA,WACrB3mF,QAAQ0mF,SAAWA,SACnB1mF,QAAQ8+B,WAAaA,WACrB9+B,QAAQo/B,YAAcA,YACtBp/B,QAAQ6+B,UAAYA,UACpB7+B,QAAQkpF,UAAYA,UACpBlpF,QAAQ8pF,YAAcA,YACtB9pF,QAAQ2lF,gBAAkBA,gBAC1B3lF,QAAQyoF,oBAAsBA,oBAC9BzoF,QAAQo6B,eAAiBA,eACzBp6B,QAAQ86B,oBAAsBA,oBAC9B96B,QAAQojB,aAAeA,aACvBpjB,QAAQmoF,kBAAoBA,kBAC5BnoF,QAAQskB,aAAeA,aACvBtkB,QAAQ0kB,OAASA,OACjB1kB,QAAQijC,gBAAkBA,gBAC1BjjC,QAAQulF,mBAAqBA,mBAC7BvlF,QAAQslF,iBAAmBA,iBAC3BtlF,QAAQ0jB,iBAAmBA,iBAC3B1jB,QAAQ4kB,YAAcA,YACtB5kB,QAAQ4jB,eAAiBA,eACzB5jB,QAAQgkB,QAAUA,QAClBhkB,QAAQolF,YAAcA,YACtBplF,QAAQmlF,aAAeA,aACvBnlF,QAAQijB,YAAcA,YACtBjjB,QAAQktB,gBAAkBA,gBAC1BltB,QAAQoqF,UAAYA,UACpBpqF,QAAQgqF,aAAeA,aACvBhqF,QAAQqnF,aAAeA,aACvBrnF,QAAQunF,cAAgBA,cACxBvnF,QAAQmnF,aAAeA,aACvBnnF,QAAQk5B,aAAeA,aACvBl5B,QAAQ2vB,UAAYA,UACpB3vB,QAAQqiB,0BAA4BA,0BACpCriB,QAAQyvB,sBAAwBA,sBAChCzvB,QAAQuwC,aAAeA,aACvBvwC,QAAQmF,eAAiBA,eACzBnF,QAAQkF,cAAgBA,cACxBlF,QAAQ8E,YAAcA,YACtB9E,QAAQm9C,QAAUA,QAClBn9C,QAAQy9C,QAAUA,QAClBz9C,QAAQ09C,QAAUA,QAClB19C,QAAQ69C,aAAeA,aACvB79C,QAAQ+9C,QAAUA,QAClB/9C,QAAQi+C,wBAA0BA,wBAClCj+C,QAAQm+C,cAAgBA,cACxBn+C,QAAQu+C,aAAeA,aACvBv+C,QAAQ0+C,YAAcA,YACtB1+C,QAAQo7B,WAAaA,WACrBp7B,QAAQk7B,oBAAsBA,oBAC9Bl7B,QAAQi/C,0BAA4BA,0BACpCj/C,QAAQo/C,aAAeA,aACvBp/C,QAAQqpB,YAAcA,YACtBrpB,QAAQkqB,gBAAkBA,gBAC1BlqB,QAAQq7B,aAAeA,aACvBr7B,QAAQy7B,oBAAsBA,oBAC9Bz7B,QAAQ0/C,oBAAsBA,oBAC9B1/C,QAAQ2/C,4BAA8BA,4BACtC3/C,QAAQ+G,iBAAmBA,iBAC3B/G,QAAQ2H,eAAiBA,eACzB3H,QAAQkI,oBAAsBA,oBAC9BlI,QAAQoI,cAAgBA,cACxBpI,QAAQuI,iBAAmBA,iBAC3BvI,QAAQwI,kBAAoBA,kBAC5BxI,QAAQyI,qBAAuBA,qBAC/BzI,QAAQugD,mBAAqBA,mBAC7BvgD,QAAQ0I,UAAYA,UACpB1I,QAAQ2I,eAAiBA,eACzB3I,QAAQwgD,0BAA4BA,0BACpCxgD,QAAQ2gD,wBAA0BA,wBAClC3gD,QAAQmhD,yBAA2BA,yBACnCnhD,QAAQ6hD,oBAAsBA,oBAC9B7hD,QAAQ8hD,wBAA0BA,wBAClC9hD,QAAQqiD,kCAAoCA,kCAC5CriD,QAAQqjD,aAAeA,aACvBrjD,QAAQ6I,QAAUA,QAClB7I,QAAQsJ,kBAAoBA,kBAC5BtJ,QAAQ2J,uBAAyBA,uBACjC3J,QAAQgK,eAAiBA,eACzBhK,QAAQkK,eAAiBA,eACzBlK,QAAQ8tC,qBAAuBA,qBAC/B9tC,QAAQiuC,kBAAoBA,kBAC5BjuC,QAAQ0wC,YAAcA,YACtB1wC,QAAQyoC,iBAAmBA,iBAC3BzoC,QAAQgpC,4BAA8BA,4BACtChpC,QAAQypC,YAAcA,YACtBzpC,QAAQ6qC,0BAA4BA,0BACpC7qC,QAAQ8oC,mBAAqBA,mBAC7B9oC,QAAQkkH,cAAgBA,cACxBlkH,QAAQkkC,aAAeA,aACvBlkC,QAAQosC,eAAiBA,eACzBpsC,QAAQssC,iBAAmBA,iBAC3BtsC,QAAQ0uC,gBAAkBA,gBAC1B1uC,QAAQ+H,aAAeA,aACvB/H,QAAQsuC,kBAAoBA,kBAC5BtuC,QAAQskH,qBAAuBA,qBAC/BtkH,QAAQwuC,qBAAuBA,qBAC/BxuC,QAAQulC,mBAAqBA,mBAC7BvlC,QAAQylC,uBAAyBA,uBACjCzlC,QAAQuuC,mBAAqBA,mBAC7BvuC,QAAQoL,QAAUA,QAClBpL,QAAQ04H,gBAAkBA,gBAC1B14H,QAAQ24H,mBAAqBA,mBAC7B34H,QAAQ+8H,iBAAmBA,iBAC3B/8H,QAAQk0C,sCAAwCA,sCAChDl0C,QAAQo0C,gCAAkCA,gCAC1Cp0C,QAAQm0C,YAAcA,YACtBn0C,QAAQq0C,aAAeA,aACvBr0C,QAAQo9H,eAAiBA,eACzBp9H,QAAQ0gG,sBAAwBA,sBAChC1gG,QAAQq9H,UAAYA,UACpBr9H,QAAQ4uC,eAAiBA,eACzB5uC,QAAQ09G,cAAgBA,cACxB19G,QAAQ04E,WAAaA,WACrB14E,QAAQshB,MAAQA,MAChBthB,QAAQqhB,OAASA,OACjBrhB,QAAQmhB,IAAMA,IACdnhB,QAAQohB,IAAMA,IACdphB,QAAQyvC,oBAAsBA,oBAC9BzvC,QAAQ86D,YAAcA,YACtB96D,QAAQi7D,UAAYA,UACpBj7D,QAAQk7D,IAAMA,IACdl7D,QAAQm7D,MAAQA,MAChBn7D,QAAQ62B,UAAYA,UACpB72B,QAAQs7D,iBAAmBA,iBAC3Bt7D,QAAQu7D,MAAQA,MAChBv7D,QAAQw7D,YAAcA,YACtBx7D,QAAQy7D,aAAeA,aACvBz7D,QAAQ07D,cAAgBA,cACxB17D,QAAQ27D,iBAAmBA,iBAC3B37D,QAAQ47D,UAAYA,UACpB57D,QAAQ67D,WAAaA,WACrB77D,QAAQ87D,YAAcA,YACtB97D,QAAQ+7D,iBAAmBA,iBAC3B/7D,QAAQg8D,aAAeA,aACvBh8D,QAAQi8D,WAAaA,WACrBj8D,QAAQk8D,cAAgBA,cACxBl8D,QAAQo8D,OAASA,OACjBp8D,QAAQs8D,UAAYA,UACpBt8D,QAAQu8D,cAAgBA,cACxBv8D,QAAQw8D,WAAaA,WACrBx8D,QAAQy8D,eAAiBA,eACzBz8D,QAAQ08D,aAAeA,aACvB18D,QAAQ42B,cAAgBA,cACxB52B,QAAQ28D,gBAAkBA,gBAC1B38D,QAAQ68D,eAAiBA,eACzB78D,QAAQ88D,oBAAsBA,oBAC9B98D,QAAQ+8D,eAAiBA,eACzB/8D,QAAQg9D,8BAAgCA,8BACxCh9D,QAAQ0T,iBAAmBA,iBAC3B1T,QAAQ2Q,UAAYA,UACpB3Q,QAAQ6vC,MAAQA,MAChB7vC,QAAQ0Q,MAAQA,MAChB1Q,QAAQ25D,IAAMA,IACd35D,QAAQ6R,aAAeA,aACvB7R,QAAQ0S,QAAUA,QAClB1S,QAAQm9D,mBAAqBA,mBAC7Bn9D,QAAQq9D,2BAA6BA,2BACrCr9D,QAAQ4vC,OAASA,OACjB5vC,QAAQ49D,UAAYA,UACpB59D,QAAQyoB,qBAAuBA,qBAC/BzoB,QAAQkwC,wBAA0BA,wBAClClwC,QAAQw2B,KAAOA,KACfx2B,QAAQwjD,UAAYA,UACpBxjD,QAAQ0jD,cAAgBA,cACxB1jD,QAAQiB,UAAY2yB,YACpB5zB,QAAQ0K,QAAUA,QAClB1K,QAAQ4e,QAAUA,QAClB5e,QAAQmK,SAAWA,SACnBnK,QAAQmL,iBAAmBA,iBAC3BnL,QAAQ6K,SAAWA,SACnB7K,QAAQ6yB,gBAAkBA,gBAC1B7yB,QAAQ4pE,UAAYA,UACpB5pE,QAAQ6uC,WAAaA,WACrB7uC,QAAQ0uE,kBAAoBA,kBAC5B1uE,QAAQyd,qBAAuBA,qBAC/Bzd,QAAQqkD,eAAiBA,eACzBrkD,QAAQ2M,YAAcA,YACtB3M,QAAQ8M,cAAgBA,cACxB9M,QAAQgN,YAAcA,YACtBhN,QAAQiN,aAAeA,aACvBjN,QAAQkN,YAAcA,YACtBlN,QAAQoN,eAAiBA,cACzBpN,SAAQykD,eAAiBA,eACzBzkD,QAAQ0yB,aAAeA,aACvB1yB,QAAQsvB,2BAA6BA,2BACrCtvB,QAAQskC,kBAAoBA,kBAC5BtkC,QAAQoW,cAAgBA,cACxBpW,QAAQkW,gBAAkBA,gBAC1BlW,QAAQmW,gBAAkBA,gBAC1BnW,QAAQ+iE,gBAAkBA,gBAC1B/iE,QAAQkjE,WAAaA,WACrBljE,QAAQ6V,eAAiBA,eACzB7V,QAAQ+vC,yBAA2BA,yBACnC/vC,QAAQu0B,YAAcA,YACtBv0B,QAAQmsF,gBAAkBA,gBAC1BnsF,QAAQitF,oBAAsBA,oBAC9BjtF,QAAQqtF,gBAAkBA,gBAC1BrtF,QAAQknG,wBAA0BA,wBAClClnG,QAAQmnG,mBAAqBA,mBAC7BnnG,QAAQ2wC,cAAgBA,cACxB3wC,QAAQ4rG,mBAAqBA,mBAC7B5rG,QAAQ6rG,oBAAsBA,oBAC9B7rG,QAAQiwC,eAAiBA,eACzBjwC,QAAQy1B,aAAeA,aACvBz1B,QAAQ21B,yBAA2BA,yBACnC31B,QAAQy2B,wBAA0BA,wBAElC31B,OAAO6f,eAAe3gB,QAAS,cAAgB6D,OAAO","file":"compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v6.0.0-beta.6-49f074f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v6.0.0-beta.6-49f074f\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction Injectable() { }\nvar createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n    if (injectable === void 0) { injectable = {}; }\n    return injectable;\n});\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    TypeModuleProvider: 1073741824,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Self: 4,\n    Value: 8,\n};\n/** @enum {number} */\nvar InjectFlags = {\n    Default: 0,\n    /** Skip the node that is requesting injection. */\n    SkipSelf: 1,\n    /** Don't descend into ancestors of the node requesting injection. */\n    Self: 2,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tInjectable: Injectable,\n\tcreateInjectable: createInjectable,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tInjectFlags: InjectFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('6.0.0-beta.6-49f074f');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = false; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                var /** @type {?} */ guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, guards, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ publicNames = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\nvar AstMemoryEfficientTransformer = /** @class */ (function () {\n    function AstMemoryEfficientTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions)\n            return new Interpolation(ast.span, ast.strings, expressions);\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new PropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        var /** @type {?} */ value = ast.value.visit(this);\n        if (receiver !== ast.receiver || value !== ast.value) {\n            return new PropertyWrite(ast.span, receiver, ast.name, value);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new SafePropertyRead(ast.span, receiver, ast.name);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        if (receiver !== ast.receiver) {\n            return new MethodCall(ast.span, receiver, ast.name, this.visitAll(ast.args));\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ receiver = ast.receiver.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        if (receiver !== ast.receiver || args !== ast.args) {\n            return new SafeMethodCall(ast.span, receiver, ast.name, args);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ target = ast.target && ast.target.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        if (target !== ast.target || args !== ast.args) {\n            return new FunctionCall(ast.span, target, args);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new LiteralArray(ast.span, expressions);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAll(ast.values);\n        if (values !== ast.values) {\n            return new LiteralMap(ast.span, ast.keys, values);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ left = ast.left.visit(this);\n        var /** @type {?} */ right = ast.right.visit(this);\n        if (left !== ast.left || right !== ast.right) {\n            return new Binary(ast.span, ast.operation, left, right);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new PrefixNot(ast.span, expression);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expression = ast.expression.visit(this);\n        if (expression !== ast.expression) {\n            return new NonNullAssert(ast.span, expression);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ condition = ast.condition.visit(this);\n        var /** @type {?} */ trueExp = ast.trueExp.visit(this);\n        var /** @type {?} */ falseExp = ast.falseExp.visit(this);\n        if (condition !== ast.condition || trueExp !== ast.trueExp || falseExp !== falseExp) {\n            return new Conditional(ast.span, condition, trueExp, falseExp);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ exp = ast.exp.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        if (exp !== ast.exp || args !== ast.args) {\n            return new BindingPipe(ast.span, exp, ast.name, args);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ obj = ast.obj.visit(this);\n        var /** @type {?} */ key = ast.key.visit(this);\n        if (obj !== ast.obj || key !== ast.key) {\n            return new KeyedRead(ast.span, obj, key);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ obj = ast.obj.visit(this);\n        var /** @type {?} */ key = ast.key.visit(this);\n        var /** @type {?} */ value = ast.value.visit(this);\n        if (obj !== ast.obj || key !== ast.key || value !== ast.value) {\n            return new KeyedWrite(ast.span, obj, key, value);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        var /** @type {?} */ modified = false;\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            var /** @type {?} */ original = asts[i];\n            var /** @type {?} */ value = original.visit(this);\n            res[i] = value;\n            modified = modified || value !== original;\n        }\n        return modified ? res : asts;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ expressions = this.visitAll(ast.expressions);\n        if (expressions !== ast.expressions) {\n            return new Chain(ast.span, expressions);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstMemoryEfficientTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    return AstMemoryEfficientTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), '-', result, new LiteralPrimitive(new ParseSpan(start, start), 0));\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG$1 = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG$1:\n                return [].concat.apply([], visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    WritePropExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @return {?}\n     */\n    LiteralExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @return {?}\n     */\n    ExternalExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @return {?}\n     */\n    NotExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @return {?}\n     */\n    AssertNotNull.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @return {?}\n     */\n    CastExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @return {?}\n     */\n    FunctionExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return this.entries.every(function (e) { return e.isConstant(); }); };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return this.entries.every(function (e) { return e.value.isConstant(); }); };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @return {?}\n     */\n    CommaExpr.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n    Static: 3,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\nStmtModifier[StmtModifier.Static] = \"Static\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @param {?=} name\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n/**\n * @param {?} condition\n * @param {?} thenClause\n * @param {?=} elseClause\n * @return {?}\n */\nfunction ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nvar InjectableCompiler = /** @class */ (function () {\n    function InjectableCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.depsArray = /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (deps, ctx) {\n        return deps.map(function (dep) {\n            var /** @type {?} */ token = dep;\n            var /** @type {?} */ defaultValue = undefined;\n            var /** @type {?} */ args = [token];\n            var /** @type {?} */ flags = 0;\n            if (Array.isArray(dep)) {\n                for (var /** @type {?} */ i = 0; i < dep.length; i++) {\n                    var /** @type {?} */ v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            defaultValue = null;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 1 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            token = v.token;\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n            }\n            var /** @type {?} */ tokenExpr = typeof token === 'string' ? literal(token) : ctx.importExpr(token);\n            if (flags !== 0 /* Default */ || defaultValue !== undefined) {\n                args = [tokenExpr, literal(defaultValue), literal(flags)];\n            }\n            else {\n                args = [tokenExpr];\n            }\n            return importExpr(Identifiers.inject).callFn(args);\n        });\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.factoryFor = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        var /** @type {?} */ retValue;\n        if (injectable.useExisting) {\n            retValue = importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            var /** @type {?} */ deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            var /** @type {?} */ clazz = injectable.useClass || injectable.symbol;\n            var /** @type {?} */ depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return fn([], [new ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.injectableDef = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        var /** @type {?} */ def = [\n            mapEntry('factory', this.factoryFor(injectable, ctx)),\n            mapEntry('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry('scope', ctx.importExpr(/** @type {?} */ ((injectable.module)))),\n        ];\n        return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.compile = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        if (injectable.module) {\n            var /** @type {?} */ className = /** @type {?} */ ((identifierName(injectable.type)));\n            var /** @type {?} */ clazz = new ClassStmt(className, null, [\n                new ClassField('ngInjectableDef', INFERRED_TYPE, [StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    };\n    return InjectableCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.getAttrs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        var /** @type {?} */ typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        var /** @type {?} */ annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n        if (annotations.length === 0) {\n            return null;\n        }\n        var /** @type {?} */ meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            module: meta.scope || undefined,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error$$1, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error$$1, type);\n            if (otherType) {\n                this._errorCollector(error$$1, otherType);\n            }\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error$$1))[ERROR_COMPONENT_TYPE] = compType;\n    return error$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, /* isModule */ false);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        return dep;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @param {?} isModule\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var /** @type {?} */ scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText].concat(commentsWithHash).join('\\n');\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error$$1 = errors_1[_i];\n            this._reportError(error$$1.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error$$1) {\n        if (warnings.indexOf(error$$1.msg) !== -1) {\n            warningCounts[error$$1.msg] = (warningCounts[error$$1.msg] || 0) + 1;\n            return warningCounts[error$$1.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error$$1);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/** @enum {number} */\nvar BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherwise generate a general binding\n    TrySimple: 1,\n};\nBindingForm[BindingForm.General] = \"General\";\nBindingForm[BindingForm.TrySimple] = \"TrySimple\";\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type interference\n        // to infer the type.\n        var /** @type {?} */ type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, literal(ast.value, type));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var /** @type {?} */ args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return (/** @type {?} */ (args[0])).cast(DYNAMIC_TYPE);\n        }\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent, guards) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.getTypeGuardExpressions = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var /** @type {?} */ guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var /** @type {?} */ useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: /** @type {?} */ ({ context: this.component, value: input.value })\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var /** @type {?} */ guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var /** @type {?} */ bindingId = \"\" + bindingCount++;\n                var /** @type {?} */ nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var /** @type {?} */ guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var /** @type {?} */ guards = this.getTypeGuardExpressions(ast);\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CONSTANT_PREFIX = '_c';\n/**\n * Context to use when producing a key.\n *\n * This ensures we see the constant not the reference variable when producing\n * a key.\n */\nvar KEY_CONTEXT = {};\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    __extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        _this.original = resolved;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FixupExpression.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === KEY_CONTEXT) {\n            // When producing a key we want to traverse the constant not the\n            // variable used to refer to it.\n            return this.original.visitExpression(visitor, context);\n        }\n        else {\n            return this.resolved.visitExpression(visitor, context);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FixupExpression.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    /**\n     * @return {?}\n     */\n    FixupExpression.prototype.isConstant = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    FixupExpression.prototype.fixup = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.literals = new Map();\n        this.literalFactories = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.pipeDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getConstLiteral = /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (literal$$1, forceShared) {\n        if (literal$$1 instanceof LiteralExpr || literal$$1 instanceof FixupExpression) {\n            // Do no put simple literals into the constant pool or try to produce a constant for a\n            // reference to a constant.\n            return literal$$1;\n        }\n        var /** @type {?} */ key = this.keyOf(literal$$1);\n        var /** @type {?} */ fixup = this.literals.get(key);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal$$1);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var /** @type {?} */ name_1 = this.freshName();\n            this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_1));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getDefinition = /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (type, kind, ctx, forceShared) {\n        if (forceShared === void 0) { forceShared = false; }\n        var /** @type {?} */ definitions = this.definitionsOf(kind);\n        var /** @type {?} */ fixup = definitions.get(type);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            var /** @type {?} */ property = this.propertyNameOf(kind);\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            definitions.set(type, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            var /** @type {?} */ name_2 = this.freshName();\n            this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_2));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} literal\n     * @return {?}\n     */\n    ConstantPool.prototype.getLiteralFactory = /**\n     * @param {?} literal\n     * @return {?}\n     */\n    function (literal$$1) {\n        // Create a pure function that builds an array of a mix of constant  and variable expressions\n        if (literal$$1 instanceof LiteralArrayExpr) {\n            var /** @type {?} */ argumentsForKey = literal$$1.entries.map(function (e) { return e.isConstant() ? e : literal(null); });\n            var /** @type {?} */ key = this.keyOf(literalArr(argumentsForKey));\n            return this._getLiteralFactory(key, literal$$1.entries, function (entries) { return literalArr(entries); });\n        }\n        else {\n            var /** @type {?} */ expressionForKey = literalMap(literal$$1.entries.map(function (e) {\n                return ({\n                    key: e.key,\n                    value: e.value.isConstant() ? e.value : literal(null),\n                    quoted: e.quoted\n                });\n            }));\n            var /** @type {?} */ key = this.keyOf(expressionForKey);\n            return this._getLiteralFactory(key, literal$$1.entries.map(function (e) { return e.value; }), function (entries) {\n                return literalMap(entries.map(function (value, index) {\n                    return ({\n                        key: literal$$1.entries[index].key,\n                        value: value,\n                        quoted: literal$$1.entries[index].quoted\n                    });\n                }));\n            });\n        }\n    };\n    /**\n     * @param {?} key\n     * @param {?} values\n     * @param {?} resultMap\n     * @return {?}\n     */\n    ConstantPool.prototype._getLiteralFactory = /**\n     * @param {?} key\n     * @param {?} values\n     * @param {?} resultMap\n     * @return {?}\n     */\n    function (key, values, resultMap) {\n        var _this = this;\n        var /** @type {?} */ literalFactory = this.literalFactories.get(key);\n        var /** @type {?} */ literalFactoryArguments = values.filter((function (e) { return !e.isConstant(); }));\n        if (!literalFactory) {\n            var /** @type {?} */ resultExpressions = values.map(function (e, index) { return e.isConstant() ? _this.getConstLiteral(e, true) : variable(\"a\" + index); });\n            var /** @type {?} */ parameters = resultExpressions.filter(isVariable).map(function (e) { return new FnParam(/** @type {?} */ ((e.name)), DYNAMIC_TYPE); });\n            var /** @type {?} */ pureFunctionDeclaration = fn(parameters, [new ReturnStatement(resultMap(resultExpressions))], INFERRED_TYPE);\n            var /** @type {?} */ name_3 = this.freshName();\n            this.statements.push(variable(name_3).set(pureFunctionDeclaration).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]));\n            literalFactory = variable(name_3);\n            this.literalFactories.set(key, literalFactory);\n        }\n        return { literalFactory: literalFactory, literalFactoryArguments: literalFactoryArguments };\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    ConstantPool.prototype.uniqueName = /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    /**\n     * @param {?} kind\n     * @return {?}\n     */\n    ConstantPool.prototype.definitionsOf = /**\n     * @param {?} kind\n     * @return {?}\n     */\n    function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return this.componentDefinitions;\n            case 1 /* Directive */:\n                return this.directiveDefinitions;\n            case 0 /* Injector */:\n                return this.injectorDefinitions;\n            case 3 /* Pipe */:\n                return this.pipeDefinitions;\n        }\n        error(\"Unknown definition kind \" + kind);\n        return this.componentDefinitions;\n    };\n    /**\n     * @param {?} kind\n     * @return {?}\n     */\n    ConstantPool.prototype.propertyNameOf = /**\n     * @param {?} kind\n     * @return {?}\n     */\n    function (kind) {\n        switch (kind) {\n            case 2 /* Component */:\n                return 'ngComponentDef';\n            case 1 /* Directive */:\n                return 'ngDirectiveDef';\n            case 0 /* Injector */:\n                return 'ngInjectorDef';\n            case 3 /* Pipe */:\n                return 'ngPipeDef';\n        }\n        error(\"Unknown definition kind \" + kind);\n        return '<unknown>';\n    };\n    /**\n     * @return {?}\n     */\n    ConstantPool.prototype.freshName = /**\n     * @return {?}\n     */\n    function () { return this.uniqueName(CONSTANT_PREFIX); };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ConstantPool.prototype.keyOf = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        return expression.visitExpression(new KeyVisitor(), KEY_CONTEXT);\n    };\n    return ConstantPool;\n}());\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitReadVarExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, context); }).join(',') + \"]\";\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ mapEntry = function (entry) {\n            return entry.key + \":\" + entry.value.visitExpression(_this, context);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    return KeyVisitor;\n}());\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} e\n * @return {?}\n */\nfunction isVariable(e) {\n    return e instanceof ReadVarExpr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE$1 = '@angular/core';\nvar Identifiers$1 = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'n';\n    Identifiers.HOST_BINDING_METHOD = 'h';\n    Identifiers.TRANSFORM_METHOD = 'transform';\n    /* Instructions */\n    Identifiers.createElement = { name: 'ɵE', moduleName: CORE$1 };\n    Identifiers.elementEnd = { name: 'ɵe', moduleName: CORE$1 };\n    Identifiers.elementProperty = { name: 'ɵp', moduleName: CORE$1 };\n    Identifiers.elementAttribute = { name: 'ɵa', moduleName: CORE$1 };\n    Identifiers.elementClass = { name: 'ɵk', moduleName: CORE$1 };\n    Identifiers.elementStyle = { name: 'ɵs', moduleName: CORE$1 };\n    Identifiers.containerCreate = { name: 'ɵC', moduleName: CORE$1 };\n    Identifiers.containerEnd = { name: 'ɵc', moduleName: CORE$1 };\n    Identifiers.containerRefreshStart = { name: 'ɵcR', moduleName: CORE$1 };\n    Identifiers.containerRefreshEnd = { name: 'ɵcr', moduleName: CORE$1 };\n    Identifiers.directiveCreate = { name: 'ɵD', moduleName: CORE$1 };\n    Identifiers.text = { name: 'ɵT', moduleName: CORE$1 };\n    Identifiers.directiveInput = { name: 'ɵi', moduleName: CORE$1 };\n    Identifiers.textCreateBound = { name: 'ɵt', moduleName: CORE$1 };\n    Identifiers.bind = { name: 'ɵb', moduleName: CORE$1 };\n    Identifiers.interpolation1 = { name: 'ɵi1', moduleName: CORE$1 };\n    Identifiers.interpolation2 = { name: 'ɵi2', moduleName: CORE$1 };\n    Identifiers.interpolation3 = { name: 'ɵi3', moduleName: CORE$1 };\n    Identifiers.interpolation4 = { name: 'ɵi4', moduleName: CORE$1 };\n    Identifiers.interpolation5 = { name: 'ɵi5', moduleName: CORE$1 };\n    Identifiers.interpolation6 = { name: 'ɵi6', moduleName: CORE$1 };\n    Identifiers.interpolation7 = { name: 'ɵi7', moduleName: CORE$1 };\n    Identifiers.interpolation8 = { name: 'ɵi8', moduleName: CORE$1 };\n    Identifiers.interpolationV = { name: 'ɵiV', moduleName: CORE$1 };\n    Identifiers.pureFunction0 = { name: 'ɵf0', moduleName: CORE$1 };\n    Identifiers.pureFunction1 = { name: 'ɵf1', moduleName: CORE$1 };\n    Identifiers.pureFunction2 = { name: 'ɵf2', moduleName: CORE$1 };\n    Identifiers.pureFunction3 = { name: 'ɵf3', moduleName: CORE$1 };\n    Identifiers.pureFunction4 = { name: 'ɵf4', moduleName: CORE$1 };\n    Identifiers.pureFunction5 = { name: 'ɵf5', moduleName: CORE$1 };\n    Identifiers.pureFunction6 = { name: 'ɵf6', moduleName: CORE$1 };\n    Identifiers.pureFunction7 = { name: 'ɵf7', moduleName: CORE$1 };\n    Identifiers.pureFunction8 = { name: 'ɵf8', moduleName: CORE$1 };\n    Identifiers.pureFunctionV = { name: 'ɵfV', moduleName: CORE$1 };\n    Identifiers.pipeBind1 = { name: 'ɵpb1', moduleName: CORE$1 };\n    Identifiers.pipeBind2 = { name: 'ɵpb2', moduleName: CORE$1 };\n    Identifiers.pipeBind3 = { name: 'ɵpb3', moduleName: CORE$1 };\n    Identifiers.pipeBind4 = { name: 'ɵpb4', moduleName: CORE$1 };\n    Identifiers.pipeBindV = { name: 'ɵpbV', moduleName: CORE$1 };\n    Identifiers.load = { name: 'ɵld', moduleName: CORE$1 };\n    Identifiers.pipe = { name: 'ɵPp', moduleName: CORE$1 };\n    Identifiers.projection = { name: 'ɵP', moduleName: CORE$1 };\n    Identifiers.projectionDef = { name: 'ɵpD', moduleName: CORE$1 };\n    Identifiers.refreshComponent = { name: 'ɵr', moduleName: CORE$1 };\n    Identifiers.directiveLifeCycle = { name: 'ɵl', moduleName: CORE$1 };\n    Identifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE$1 };\n    Identifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE$1 };\n    Identifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE$1 };\n    Identifiers.inject = { name: 'ɵinject', moduleName: CORE$1 };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE$1,\n    };\n    Identifiers.definePipe = { name: 'ɵdefinePipe', moduleName: CORE$1 };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n    return Identifiers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Name of the context parameter passed into a template function\n */\nvar CONTEXT_NAME = 'ctx';\n/**\n * Name of the creation mode flag passed into a template function\n */\nvar CREATION_MODE_FLAG = 'cm';\n/**\n * Name of the temporary to use during data binding\n */\nvar TEMPORARY_NAME = '_t';\n/**\n * The prefix reference variables\n */\nvar REFERENCE_PREFIX = '_r';\n/**\n * The name of the implicit context reference\n */\nvar IMPLICIT_REFERENCE = '$implicit';\n/**\n * @param {?} outputCtx\n * @param {?} directive\n * @param {?} reflector\n * @return {?}\n */\nfunction compileDirective(outputCtx, directive, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. 'type: MyDirective`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(directive.type.reference), quoted: false });\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    var /** @type {?} */ templateFactory = createFactory(directive.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g 'inputs: {a: 'a'}`\n    if (Object.getOwnPropertyNames(directive.inputs).length > 0) {\n        definitionMapValues.push({ key: 'inputs', quoted: false, value: mapToExpression(directive.inputs) });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(directive.type)));\n    className || error(\"Cannot resolver the name of \" + directive.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField(/* name */ outputCtx.constantPool.propertyNameOf(1 /* Directive */), /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineDirective).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} pipes\n * @param {?} template\n * @param {?} reflector\n * @return {?}\n */\nfunction compileComponent(outputCtx, component, pipes, template, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. `type: MyApp`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(component.type.reference), quoted: false });\n    // e.g. `tag: 'my-app'`\n    // This is optional and only included if the first selector of a component has element.\n    var /** @type {?} */ selector = component.selector && CssSelector.parse(component.selector);\n    var /** @type {?} */ firstSelector = selector && selector[0];\n    if (firstSelector && firstSelector.hasElementSelector()) {\n        definitionMapValues.push({ key: 'tag', value: literal(firstSelector.element), quoted: false });\n    }\n    // e.g. `attr: [\"class\", \".my.app\"]\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var /** @type {?} */ selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMapValues.push({\n                key: 'attrs',\n                value: outputCtx.constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), /* forceShared */ true),\n                quoted: false\n            });\n        }\n    }\n    // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n    var /** @type {?} */ templateFactory = createFactory(component.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var /** @type {?} */ templateTypeName = component.type.reference.name;\n    var /** @type {?} */ templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var /** @type {?} */ pipeMap = new Map(pipes.map(function (pipe) { return [pipe.name, pipe]; }));\n    var /** @type {?} */ templateFunctionExpression = new TemplateDefinitionBuilder(outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, ROOT_SCOPE.nestedScope(), 0, /** @type {?} */ ((component.template)).ngContentSelectors, templateTypeName, templateName, pipeMap)\n        .buildTemplateFunction(template, []);\n    definitionMapValues.push({ key: 'template', value: templateFunctionExpression, quoted: false });\n    // e.g `inputs: {a: 'a'}`\n    if (Object.getOwnPropertyNames(component.inputs).length > 0) {\n        definitionMapValues.push({ key: 'inputs', quoted: false, value: mapToExpression(component.inputs) });\n    }\n    // e.g. `features: [NgOnChangesFeature(MyComponent)]`\n    var /** @type {?} */ features = [];\n    if (component.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; })) {\n        features.push(importExpr(Identifiers$1.NgOnChangesFeature, null, null).callFn([outputCtx.importExpr(component.type.reference)]));\n    }\n    if (features.length) {\n        definitionMapValues.push({ key: 'features', quoted: false, value: literalArr(features) });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(component.type)));\n    className || error(\"Cannot resolver the name of \" + component.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField(/* name */ outputCtx.constantPool.propertyNameOf(2 /* Component */), /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineComponent).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nvar BINDING_INSTRUCTION_MAP = (_a = {},\n    _a[PropertyBindingType.Property] = Identifiers$1.elementProperty,\n    _a[PropertyBindingType.Attribute] = Identifiers$1.elementAttribute,\n    _a[PropertyBindingType.Class] = Identifiers$1.elementClass,\n    _a[PropertyBindingType.Style] = Identifiers$1.elementStyle,\n    _a);\n/**\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return importExpr(Identifiers$1.interpolation1).callFn(args);\n        case 5:\n            return importExpr(Identifiers$1.interpolation2).callFn(args);\n        case 7:\n            return importExpr(Identifiers$1.interpolation3).callFn(args);\n        case 9:\n            return importExpr(Identifiers$1.interpolation4).callFn(args);\n        case 11:\n            return importExpr(Identifiers$1.interpolation5).callFn(args);\n        case 13:\n            return importExpr(Identifiers$1.interpolation6).callFn(args);\n        case 15:\n            return importExpr(Identifiers$1.interpolation7).callFn(args);\n        case 17:\n            return importExpr(Identifiers$1.interpolation8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return importExpr(Identifiers$1.interpolationV).callFn([literalArr(args)]);\n}\n/**\n * @param {?} args\n * @return {?}\n */\nfunction pipeBinding(args) {\n    switch (args.length) {\n        case 0:\n            // The first parameter to pipeBind is always the value to be transformed followed\n            // by arg.length arguments so the total number of arguments to pipeBind are\n            // arg.length + 1.\n            return Identifiers$1.pipeBind1;\n        case 1:\n            return Identifiers$1.pipeBind2;\n        case 2:\n            return Identifiers$1.pipeBind3;\n        default:\n            return Identifiers$1.pipeBindV;\n    }\n}\nvar pureFunctionIdentifiers = [\n    Identifiers$1.pureFunction0, Identifiers$1.pureFunction1, Identifiers$1.pureFunction2, Identifiers$1.pureFunction3, Identifiers$1.pureFunction4,\n    Identifiers$1.pureFunction5, Identifiers$1.pureFunction6, Identifiers$1.pureFunction7, Identifiers$1.pureFunction8\n];\n/**\n * @param {?} outputContext\n * @param {?} literal\n * @return {?}\n */\nfunction getLiteralFactory(outputContext, literal$$1) {\n    var _a = outputContext.constantPool.getLiteralFactory(literal$$1), literalFactory = _a.literalFactory, literalFactoryArguments = _a.literalFactoryArguments;\n    literalFactoryArguments.length > 0 || error(\"Expected arguments to a literal factory function\");\n    var /** @type {?} */ pureFunctionIdent = pureFunctionIdentifiers[literalFactoryArguments.length] || Identifiers$1.pureFunctionV;\n    // Literal factories are pure functions that only need to be re-invoked when the parameters\n    // change.\n    return importExpr(pureFunctionIdent).callFn([literalFactory].concat(literalFactoryArguments));\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(parent) {\n        this.parent = parent;\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ current = this;\n        while (current) {\n            var /** @type {?} */ value = current.map.get(name);\n            if (value != null) {\n                // Cache the value locally.\n                this.map.set(name, value);\n                return value;\n            }\n            current = current.parent;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BindingScope.prototype.set = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, value);\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.nestedScope = /**\n     * @return {?}\n     */\n    function () { return new BindingScope(this); };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.freshReferenceName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        return \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n    };\n    return BindingScope;\n}());\nvar ROOT_SCOPE = new BindingScope(null).set('$event', variable('$event'));\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(outputCtx, constantPool, reflector, contextParameter, bindingScope, level, ngContentSelectors, contextName, templateName, pipes) {\n        if (level === void 0) { level = 0; }\n        var _this = this;\n        this.outputCtx = outputCtx;\n        this.constantPool = constantPool;\n        this.reflector = reflector;\n        this.contextParameter = contextParameter;\n        this.bindingScope = bindingScope;\n        this.level = level;\n        this.ngContentSelectors = ngContentSelectors;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this.pipes = pipes;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._referenceIndex = 0;\n        this._temporaryAllocated = false;\n        this._prefix = [];\n        this._creationMode = [];\n        this._bindingMode = [];\n        this._hostMode = [];\n        this._refreshMode = [];\n        this._postfix = [];\n        this._projectionDefinitionIndex = 0;\n        this.unsupported = unsupported;\n        this.invalid = invalid$1;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid$1;\n        this.visitVariable = invalid$1;\n        this.visitEvent = invalid$1;\n        this.visitElementProperty = invalid$1;\n        this.visitAttr = invalid$1;\n        // These should be handled in the template or element directly\n        this.visitDirective = invalid$1;\n        this.visitDirectiveProperty = invalid$1;\n        this._valueConverter = new ValueConverter(outputCtx, function () { return _this.allocateDataSlot(); }, function (name, localName, slot, value) {\n            bindingScope.set(localName, value);\n            var /** @type {?} */ pipe = /** @type {?} */ ((pipes.get(name)));\n            pipe || error(\"Could not find pipe \" + name);\n            var /** @type {?} */ pipeDefinition = constantPool.getDefinition(pipe.type.reference, 3 /* Pipe */, outputCtx, /* forceShared */ /* forceShared */ true);\n            _this._creationMode.push(importExpr(Identifiers$1.pipe)\n                .callFn([\n                literal(slot), pipeDefinition, pipeDefinition.callMethod(Identifiers$1.NEW_METHOD, [])\n            ])\n                .toStmt());\n        });\n    }\n    /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    function (asts, variables) {\n        // Create variable bindings\n        for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n            var variable$$1 = variables_1[_i];\n            var /** @type {?} */ variableName = variable$$1.name;\n            var /** @type {?} */ expression = variable(this.contextParameter).prop(variable$$1.value || IMPLICIT_REFERENCE);\n            var /** @type {?} */ scopedName = this.bindingScope.freshReferenceName();\n            var /** @type {?} */ declaration = variable(scopedName).set(expression).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]);\n            // Add the reference to the local scope.\n            this.bindingScope.set(variableName, variable(scopedName));\n            // Declare the local variable in binding mode\n            this._bindingMode.push(declaration);\n        }\n        // Collect content projections\n        if (this.ngContentSelectors && this.ngContentSelectors.length > 0) {\n            var /** @type {?} */ contentProjections = getContentProjection(asts, this.ngContentSelectors);\n            this._contentProjections = contentProjections;\n            if (contentProjections.size > 0) {\n                var /** @type {?} */ infos_1 = [];\n                Array.from(contentProjections.values()).forEach(function (info) {\n                    if (info.selector) {\n                        infos_1[info.index - 1] = info.selector;\n                    }\n                });\n                var /** @type {?} */ projectionIndex = this._projectionDefinitionIndex = this.allocateDataSlot();\n                var /** @type {?} */ parameters = [literal(projectionIndex)];\n                !infos_1.some(function (value) { return !value; }) || error(\"content project information skipped an index\");\n                if (infos_1.length > 1) {\n                    parameters.push(this.outputCtx.constantPool.getConstLiteral(asLiteral(infos_1), /* forceShared */ /* forceShared */ true));\n                }\n                this.instruction.apply(this, [this._creationMode, null, Identifiers$1.projectionDef].concat(parameters));\n            }\n        }\n        templateVisitAll(this, asts);\n        var /** @type {?} */ creationMode = this._creationMode.length > 0 ?\n            [ifStmt(variable(CREATION_MODE_FLAG), this._creationMode)] :\n            [];\n        return fn([\n            new FnParam(this.contextParameter, null), new FnParam(CREATION_MODE_FLAG, BOOL_TYPE)\n        ], this._prefix.concat(creationMode, this._bindingMode, this._hostMode, this._refreshMode, this._postfix), INFERRED_TYPE, null, this.templateName);\n    };\n    // LocalResolver\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.bindingScope.get(name); };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ info = /** @type {?} */ ((this._contentProjections.get(ast)));\n        info || error(\"Expected \" + ast.sourceSpan + \" to be included in content projection collection\");\n        var /** @type {?} */ slot = this.allocateDataSlot();\n        var /** @type {?} */ parameters = [literal(slot), literal(this._projectionDefinitionIndex)];\n        if (info.index !== 0) {\n            parameters.push(literal(info.index));\n        }\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.projection].concat(parameters));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._computeDirectivesArray = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var _this = this;\n        var /** @type {?} */ directiveIndexMap = new Map();\n        var /** @type {?} */ directiveExpressions = directives.filter(function (directive) { return !directive.directive.isComponent; }).map(function (directive) {\n            directiveIndexMap.set(directive.directive.type.reference, _this.allocateDataSlot());\n            return _this.typeReference(directive.directive.type.reference);\n        });\n        return {\n            directivesArray: directiveExpressions.length ?\n                this.constantPool.getConstLiteral(literalArr(directiveExpressions), /* forceShared */ /* forceShared */ true) :\n                literal(null),\n            directiveIndexMap: directiveIndexMap\n        };\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ bindingCount = 0;\n        var /** @type {?} */ elementIndex = this.allocateDataSlot();\n        var /** @type {?} */ componentIndex = undefined;\n        var /** @type {?} */ referenceDataSlots = new Map();\n        // Element creation mode\n        var /** @type {?} */ component = findComponent(ast.directives);\n        var /** @type {?} */ nullNode = literal(null, INFERRED_TYPE);\n        var /** @type {?} */ parameters = [literal(elementIndex)];\n        // Add component type or element tag\n        if (component) {\n            parameters.push(this.typeReference(component.directive.type.reference));\n            componentIndex = this.allocateDataSlot();\n        }\n        else {\n            parameters.push(literal(ast.name));\n        }\n        // Add attributes array\n        var /** @type {?} */ attributes = [];\n        for (var _i = 0, _a = ast.attrs; _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(literal(attr.name), literal(attr.value));\n        }\n        parameters.push(attributes.length > 0 ?\n            this.constantPool.getConstLiteral(literalArr(attributes), /* forceShared */ /* forceShared */ true) :\n            nullNode);\n        // Add directives array\n        var _b = this._computeDirectivesArray(ast.directives), directivesArray = _b.directivesArray, directiveIndexMap = _b.directiveIndexMap;\n        parameters.push(directiveIndexMap.size > 0 ? directivesArray : nullNode);\n        if (component && componentIndex != null) {\n            // Record the data slot for the component\n            directiveIndexMap.set(component.directive.type.reference, componentIndex);\n        }\n        // Add references array\n        if (ast.references && ast.references.length > 0) {\n            var /** @type {?} */ references = flatten(ast.references.map(function (reference) {\n                var /** @type {?} */ slot = _this.allocateDataSlot();\n                referenceDataSlots.set(reference.name, slot);\n                // Generate the update temporary.\n                var /** @type {?} */ variableName = _this.bindingScope.freshReferenceName();\n                _this._bindingMode.push(variable(variableName, INFERRED_TYPE)\n                    .set(importExpr(Identifiers$1.load).callFn([literal(slot)]))\n                    .toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n                _this.bindingScope.set(reference.name, variable(variableName));\n                return [reference.name, reference.originalValue];\n            })).map(function (value) { return literal(value); });\n            parameters.push(this.constantPool.getConstLiteral(literalArr(references), /* forceShared */ /* forceShared */ true));\n        }\n        else {\n            parameters.push(nullNode);\n        }\n        // Remove trailing null nodes as they are implied.\n        while (parameters[parameters.length - 1] === nullNode) {\n            parameters.pop();\n        }\n        // Generate the instruction create element instruction\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.createElement].concat(parameters));\n        var /** @type {?} */ implicit = variable(this.contextParameter);\n        // Generate element input bindings\n        for (var _c = 0, _d = ast.inputs; _c < _d.length; _c++) {\n            var input = _d[_c];\n            if (input.isAnimation) {\n                this.unsupported('animations');\n            }\n            var /** @type {?} */ convertedBinding = this.convertPropertyBinding(implicit, input.value);\n            var /** @type {?} */ parameters_1 = [literal(elementIndex), literal(input.name), convertedBinding];\n            var /** @type {?} */ instruction = BINDING_INSTRUCTION_MAP[input.type];\n            if (instruction) {\n                // TODO(chuckj): runtime: security context?\n                this.instruction(this._bindingMode, input.sourceSpan, instruction, literal(elementIndex), literal(input.name), convertedBinding);\n            }\n            else {\n                this.unsupported(\"binding \" + PropertyBindingType[input.type]);\n            }\n        }\n        // Generate directives input bindings\n        this._visitDirectives(ast.directives, implicit, elementIndex, directiveIndexMap);\n        // Traverse element child nodes\n        templateVisitAll(this, ast.children);\n        // Finish element construction mode.\n        this.instruction(this._creationMode, ast.endSourceSpan || ast.sourceSpan, Identifiers$1.elementEnd);\n    };\n    /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._visitDirectives = /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    function (directives, implicit, nodeIndex, directiveIndexMap) {\n        for (var _i = 0, directives_1 = directives; _i < directives_1.length; _i++) {\n            var directive = directives_1[_i];\n            var /** @type {?} */ directiveIndex = directiveIndexMap.get(directive.directive.type.reference);\n            // Creation mode\n            // e.g. D(0, TodoComponentDef.n(), TodoComponentDef);\n            var /** @type {?} */ directiveType = directive.directive.type.reference;\n            var /** @type {?} */ kind = directive.directive.isComponent ? 2 /* Component */ : 1;\n            // Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the\n            // node is referenced multiple times to know that it must generate the reference into a\n            // temporary.\n            // Bindings\n            for (var _a = 0, _b = directive.inputs; _a < _b.length; _a++) {\n                var input = _b[_a];\n                var /** @type {?} */ convertedBinding = this.convertPropertyBinding(implicit, input.value);\n                this.instruction(this._bindingMode, directive.sourceSpan, Identifiers$1.elementProperty, literal(nodeIndex), literal(input.templateName), importExpr(Identifiers$1.bind).callFn([convertedBinding]));\n            }\n            // e.g. MyDirective.ngDirectiveDef.h(0, 0);\n            this._hostMode.push(this.definitionOf(directiveType, kind)\n                .callMethod(Identifiers$1.HOST_BINDING_METHOD, [literal(directiveIndex), literal(nodeIndex)])\n                .toStmt());\n            // e.g. r(0, 0);\n            this.instruction(this._refreshMode, directive.sourceSpan, Identifiers$1.refreshComponent, literal(directiveIndex), literal(nodeIndex));\n        }\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ templateIndex = this.allocateDataSlot();\n        var /** @type {?} */ templateRef = this.reflector.resolveExternalReference(Identifiers.TemplateRef);\n        var /** @type {?} */ templateDirective = ast.directives.find(function (directive) {\n            return directive.directive.type.diDeps.some(function (dependency) {\n                return dependency.token != null && (tokenReference(dependency.token) == templateRef);\n            });\n        });\n        var /** @type {?} */ contextName = this.contextName && templateDirective && templateDirective.directive.type.reference.name ?\n            this.contextName + \"_\" + templateDirective.directive.type.reference.name :\n            null;\n        var /** @type {?} */ templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var /** @type {?} */ templateContext = \"ctx\" + this.level;\n        var _a = this._computeDirectivesArray(ast.directives), directivesArray = _a.directivesArray, directiveIndexMap = _a.directiveIndexMap;\n        // e.g. C(1, C1Template)\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.containerCreate, literal(templateIndex), directivesArray, variable(templateName));\n        // e.g. Cr(1)\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshStart, literal(templateIndex));\n        // Generate directives\n        this._visitDirectives(ast.directives, variable(this.contextParameter), templateIndex, directiveIndexMap);\n        // e.g. cr();\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshEnd);\n        // Create the template function\n        var /** @type {?} */ templateVisitor = new TemplateDefinitionBuilder(this.outputCtx, this.constantPool, this.reflector, templateContext, this.bindingScope.nestedScope(), this.level + 1, this.ngContentSelectors, contextName, templateName, this.pipes);\n        var /** @type {?} */ templateFunctionExpr = templateVisitor.buildTemplateFunction(ast.children, ast.variables);\n        this._postfix.push(templateFunctionExpr.toDeclStmt(templateName, null));\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ nodeIndex = this.allocateDataSlot();\n        // Creation mode\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(nodeIndex));\n        // Refresh mode\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.textCreateBound, literal(nodeIndex), this.bind(variable(CONTEXT_NAME), ast.value, ast.sourceSpan));\n    };\n    // TemplateAstVisitor\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        // Text is defined in creation mode only.\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(this.allocateDataSlot()), literal(ast.value));\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = /**\n     * @return {?}\n     */\n    function () { return this._dataIndex++; };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bindingContext = /**\n     * @return {?}\n     */\n    function () { return \"\" + this._bindingContext++; };\n    /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.instruction = /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    function (statements, span, reference) {\n        var params = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            params[_i - 3] = arguments[_i];\n        }\n        statements.push(importExpr(reference, null, span).callFn(params, span).toStmt());\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.typeReference = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.outputCtx.importExpr(type); };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.definitionOf = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        return this.constantPool.getDefinition(type, kind, this.outputCtx);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.temp = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._temporaryAllocated) {\n            this._prefix.push(variable(TEMPORARY_NAME, DYNAMIC_TYPE, null)\n                .set(literal(undefined))\n                .toDeclStmt(DYNAMIC_TYPE));\n            this._temporaryAllocated = true;\n        }\n        return variable(TEMPORARY_NAME);\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    function (implicit, value) {\n        var /** @type {?} */ pipesConvertedValue = value.visit(this._valueConverter);\n        var /** @type {?} */ convertedPropertyBinding = convertPropertyBinding(this, implicit, pipesConvertedValue, this.bindingContext(), BindingForm.TrySimple, interpolate);\n        (_a = this._refreshMode).push.apply(_a, convertedPropertyBinding.stmts);\n        return convertedPropertyBinding.currValExpr;\n        var _a;\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bind = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (implicit, value, sourceSpan) {\n        return this.convertPropertyBinding(implicit, value);\n    };\n    return TemplateDefinitionBuilder;\n}());\n/**\n * @param {?} type\n * @param {?} outputCtx\n * @param {?} reflector\n * @return {?}\n */\nfunction createFactory(type, outputCtx, reflector) {\n    var /** @type {?} */ args = [];\n    var /** @type {?} */ elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    var /** @type {?} */ templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    var /** @type {?} */ viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.isValue) {\n            unsupported('value dependencies');\n        }\n        if (dependency.isHost) {\n            unsupported('host dependencies');\n        }\n        var /** @type {?} */ token = dependency.token;\n        if (token) {\n            var /** @type {?} */ tokenRef = tokenReference(token);\n            if (tokenRef === elementRef) {\n                args.push(importExpr(Identifiers$1.injectElementRef).callFn([]));\n            }\n            else if (tokenRef === templateRef) {\n                args.push(importExpr(Identifiers$1.injectTemplateRef).callFn([]));\n            }\n            else if (tokenRef === viewContainerRef) {\n                args.push(importExpr(Identifiers$1.injectViewContainerRef).callFn([]));\n            }\n            else {\n                var /** @type {?} */ value = token.identifier != null ? outputCtx.importExpr(tokenRef) : literal(tokenRef);\n                args.push(importExpr(Identifiers$1.inject).callFn([value]));\n            }\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return fn([], [new ReturnStatement(new InstantiateExpr(outputCtx.importExpr(type.reference), args))], INFERRED_TYPE, null, type.reference.name ? type.reference.name + \"_Factory\" : null);\n}\nvar ValueConverter = /** @class */ (function (_super) {\n    __extends(ValueConverter, _super);\n    function ValueConverter(outputCtx, allocateSlot, definePipe) {\n        var _this = _super.call(this) || this;\n        _this.outputCtx = outputCtx;\n        _this.allocateSlot = allocateSlot;\n        _this.definePipe = definePipe;\n        _this.pipeSlots = new Map();\n        return _this;\n    }\n    // AstMemoryEfficientTransformer\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ValueConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Allocate a slot to create the pipe\n        var /** @type {?} */ slot = this.pipeSlots.get(ast.name);\n        if (slot == null) {\n            slot = this.allocateSlot();\n            this.pipeSlots.set(ast.name, slot);\n        }\n        var /** @type {?} */ slotPseudoLocal = \"PIPE:\" + slot;\n        var /** @type {?} */ target = new PropertyRead(ast.span, new ImplicitReceiver(ast.span), slotPseudoLocal);\n        var /** @type {?} */ bindingId = pipeBinding(ast.args);\n        this.definePipe(ast.name, slotPseudoLocal, slot, importExpr(bindingId));\n        var /** @type {?} */ value = ast.exp.visit(this);\n        var /** @type {?} */ args = this.visitAll(ast.args);\n        return new FunctionCall(ast.span, target, [new LiteralPrimitive(ast.span, slot), value].concat(args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ValueConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(ast.span, this.visitAll(ast.expressions), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var /** @type {?} */ literal$$1 = literalArr(values);\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.outputCtx.constantPool.getConstLiteral(literal$$1, true) :\n                getLiteralFactory(_this.outputCtx, literal$$1);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ValueConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        return new BuiltinFunctionCall(ast.span, this.visitAll(ast.values), function (values) {\n            // If the literal has calculated (non-literal) elements  transform it into\n            // calls to literal factories that compose the literal and will cache intermediate\n            // values. Otherwise, just return an literal array that contains the values.\n            var /** @type {?} */ literal$$1 = literalMap(values.map(function (value, index) { return ({ key: ast.keys[index].key, value: value, quoted: ast.keys[index].quoted }); }));\n            return values.every(function (a) { return a.isConstant(); }) ?\n                _this.outputCtx.constantPool.getConstLiteral(literal$$1, true) :\n                getLiteralFactory(_this.outputCtx, literal$$1);\n        });\n    };\n    return ValueConverter;\n}(AstMemoryEfficientTransformer));\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid$1(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction findComponent(directives) {\n    return directives.filter(function (directive) { return directive.directive.isComponent; })[0];\n}\nvar ContentProjectionVisitor = /** @class */ (function (_super) {\n    __extends(ContentProjectionVisitor, _super);\n    function ContentProjectionVisitor(projectionMap, ngContentSelectors) {\n        var _this = _super.call(this) || this;\n        _this.projectionMap = projectionMap;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.index = 1;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ContentProjectionVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ selectorText = this.ngContentSelectors[ast.index];\n        selectorText != null || error(\"could not find selector for index \" + ast.index + \" in \" + ast);\n        if (!selectorText || selectorText === '*') {\n            this.projectionMap.set(ast, { index: 0 });\n        }\n        else {\n            var /** @type {?} */ cssSelectors = CssSelector.parse(selectorText);\n            this.projectionMap.set(ast, { index: this.index++, selector: parseSelectorsToR3Selector(cssSelectors) });\n        }\n    };\n    return ContentProjectionVisitor;\n}(RecursiveTemplateAstVisitor));\n/**\n * @param {?} asts\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction getContentProjection(asts, ngContentSelectors) {\n    var /** @type {?} */ projectIndexMap = new Map();\n    var /** @type {?} */ visitor = new ContentProjectionVisitor(projectIndexMap, ngContentSelectors);\n    templateVisitAll(visitor, asts);\n    return projectIndexMap;\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToSimpleSelector(selector) {\n    var /** @type {?} */ classes = selector.classNames && selector.classNames.length ? ['class'].concat(selector.classNames) : [];\n    return [selector.element].concat(selector.attrs, classes);\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToR3Selector(selector) {\n    var /** @type {?} */ positive = parserSelectorToSimpleSelector(selector);\n    var /** @type {?} */ negative = selector.notSelectors && selector.notSelectors.length &&\n        parserSelectorToSimpleSelector(selector.notSelectors[0]);\n    return negative ? [positive, negative] : [positive, null];\n}\n/**\n * @param {?} selectors\n * @return {?}\n */\nfunction parseSelectorsToR3Selector(selectors) {\n    return selectors.map(parserSelectorToR3Selector);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction asLiteral(value) {\n    if (Array.isArray(value)) {\n        return literalArr(value.map(asLiteral));\n    }\n    return literal(value, INFERRED_TYPE);\n}\n/**\n * @param {?} map\n * @return {?}\n */\nfunction mapToExpression(map) {\n    return literalMap(Object.getOwnPropertyNames(map).map(function (key) { return ({ key: key, quoted: false, value: literal(map[key]) }); }));\n}\nvar _a;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} outputCtx\n * @param {?} pipe\n * @param {?} reflector\n * @return {?}\n */\nfunction compilePipe(outputCtx, pipe, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. 'type: MyPipe`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(pipe.type.reference), quoted: false });\n    // e.g. factory: function MyPipe_Factory() { return new MyPipe(); },\n    var /** @type {?} */ templateFactory = createFactory(pipe.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. pure: true\n    if (pipe.pure) {\n        definitionMapValues.push({ key: 'pure', value: literal(true), quoted: false });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(pipe.type)));\n    className || error(\"Cannot resolve the name of \" + pipe.type);\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField(/* name */ outputCtx.constantPool.propertyNameOf(3 /* Pipe */), /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.definePipe).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        var /** @type {?} */ isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error$$1, (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFileForInjectables = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    function (fileNames, tsFiles) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        var /** @type {?} */ analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return Promise.all(loadingPromises).then(function (_) {\n            return ({\n                analyzedModules: mergeAndValidateNgFiles(files),\n                analyzedInjectables: analyzedInjectables,\n            });\n        });\n    };\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    function (fileNames, tsFiles) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        var /** @type {?} */ analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ /* useSummaries */ false))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule = /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ classes = [];\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var /** @type {?} */ directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var /** @type {?} */ module = /** @type {?} */ ((ngModuleByPipeOrDirective.get(directiveType)));\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var _a = _this._parseTemplate(directiveMetadata, module, module.transitiveModule.directives), parsedTemplate = _a.template, parsedPipes = _a.pipes;\n                compileComponent(context, directiveMetadata, parsedPipes, parsedTemplate, _this._reflector);\n            }\n            else {\n                compileDirective(context, directiveMetadata, _this._reflector);\n            }\n        });\n        pipes.forEach(function (pipeType) {\n            var /** @type {?} */ pipeMetadata = _this._metadataResolver.getPipeMetadata(pipeType);\n            if (pipeMetadata) {\n                compilePipe(context, pipeMetadata, _this._reflector);\n            }\n        });\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules2 = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        var _this = this;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule2(file.fileName, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule2 = /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, injectables) {\n        var _this = this;\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref.symbol))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref.symbol))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var /** @type {?} */ injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ injectables = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var /** @type {?} */ injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName: fileName, injectables: injectables };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[FORMATTED_MESSAGE] = true;\n    error$$1.chain = chain;\n    error$$1.position = chain.position;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var /** @type {?} */ declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.tryAnnotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._staticMembers = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var /** @type {?} */ staticMembers = this._staticMembers(type);\n        var /** @type {?} */ result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var /** @type {?} */ property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var /** @type {?} */ value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope$1.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope$1.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_2 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope$1.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[METADATA_ERROR] = true;\n    if (advise)\n        error$$1.advise = advise;\n    if (position)\n        error$$1.position = position;\n    if (summary)\n        error$$1.summary = summary;\n    if (context)\n        error$$1.context = context;\n    if (chain)\n        error$$1.chain = chain;\n    if (symbol)\n        error$$1.symbol = symbol;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error$$1) {\n    if (error$$1.summary) {\n        return error$$1.summary;\n    }\n    switch (error$$1.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error$$1.context && error$$1.context.className) {\n                return \"references non-exported class \" + error$$1.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error$$1.context && error$$1.context.name) {\n                return \"calls '\" + error$$1.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error$$1.context && error$$1.context.name) {\n                return \"references local variable \" + error$$1.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope$1 = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n    };\n    return PopulatedScope;\n}(BindingScope$1));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassField = ClassField;\nexports.ClassMethod = ClassMethod;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.analyzeFileForInjectables = analyzeFileForInjectables;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.AstMemoryEfficientTransformer = AstMemoryEfficientTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}