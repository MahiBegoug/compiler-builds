{"version":3,"sources":["compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","Injectable","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","error","msg","Error","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","ifStmt","thenClause","elseClause","IfStmt","literal","LiteralExpr","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","mapEntry","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","srcFileSuffix","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","error$$1","ERROR_COMPONENT_TYPE","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","isModule","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","isSelf","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractCommentsWithHash","_commentWithHashRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","form","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","BindingForm","TrySimple","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","invalid","compileDirective","outputCtx","definitionMapValues","templateFactory","createFactory","getOwnPropertyNames","inputs","mapToExpression","ClassStmt","ClassField","Static","Identifiers$1","defineDirective","ClassMethod","compileComponent","template","firstSelector","hasElementSelector","selectorAttributes","getAttrs","constantPool","getConstLiteral","templateTypeName","templateName","templateFunctionExpression","TemplateDefinitionBuilder","CONTEXT_NAME","ROOT_SCOPE","nestedScope","ngContentSelectors","buildTemplateFunction","features","lifecycle","NgOnChangesFeature","defineComponent","unsupported","feature","interpolate","bind1","bind2","bind3","bind4","bind5","bind6","bind7","bind8","bindV","elementRef","ElementRef","templateRef","TemplateRef","viewContainerRef","ViewContainerRef","dependency","isHost","tokenRef","injectElementRef","injectTemplateRef","injectViewContainerRef","inject","InstantiateExpr","invalid$1","findComponent","getContentProjection","projectIndexMap","ContentProjectionVisitor","parserSelectorToSimpleSelector","classes","classNames","parserSelectorToR3Selector","positive","negative","parseSelectorsToR3Selector","asLiteral","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","injectable","getInjectableMetadata","isValueExportingNonSourceFile","analyzeFileForInjectables","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","InjectableCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","ConstantPool","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","ngInjectableDef","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","createInjectable","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","TypeModuleProvider","CatQuery","Types","DepFlags","SkipSelf","Optional","Self","Value","InjectFlags","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","originalValue","visitReference","VariableAst","visitVariable","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","templateUrl","htmlAst","externalStylesheets","animations","interpolation","toSummary","CompileDirectiveMetadata","hostListeners","guards","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","publicNames","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","defineInjectable","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltinType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","initializer","ClassGetter","visitDeclareClassStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","quotedSet","depsArray","defaultValue","factoryFor","retValue","clazz","depArgs","parameters","injectableDef","compile","_SELECTOR_REGEXP","_addResult","cssSel","current","inNot","exec","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","matcher","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","prevModules","moduleRef","tryAnnotations","ann","getInjectableSummary","throwOnUnknownDeps","scope","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","dependenciesMetadata","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","_getInjectableTypeMetadata","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","commentsWithHash","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","General","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","useIf","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","guardExpression","guardClause","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","FixupExpression","resolved","fixup","shared","literals","injectorDefinitions","directiveDefinitions","componentDefinitions","nextNameIndex","literal$$1","forceShared","keyOf","newValue","freshName","getDefinition","KeyVisitor","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","CORE$1","NEW_METHOD","HOST_BINDING_METHOD","createElement","elementEnd","elementProperty","elementAttribute","elementClass","elementStyle","containerCreate","containerEnd","containerRefreshStart","containerRefreshEnd","directiveCreate","directiveInput","textCreateBound","memory","projection","projectionDef","refreshComponent","directiveLifeCycle","BINDING_INSTRUCTION_MAP","BindingScope","referenceNameIndex","variableName","freshReferenceName","contextParameter","bindingScope","contextName","_dataIndex","_bindingContext","_referenceIndex","_temporaryAllocated","_prefix","_creationMode","_bindingMode","_hostMode","_refreshMode","_postfix","_projectionDefinitionIndex","variables_1","variable$$1","scopedName","declaration","contentProjections","_contentProjections","infos_1","info","projectionIndex","allocateDataSlot","instruction","creationMode","slot","_computeDirectivesArray","directiveIndexMap","directiveExpressions","typeReference","directivesArray","elementIndex","componentIndex","referenceDataSlots","nullNode","implicit","convertedBinding","bindingContext","_visitDirectives","directives_1","definitionOf","templateIndex","templateDirective","templateContext","templateVisitor","templateFunctionExpr","convertedPropertyBinding","projectionMap","selectorText","GeneratedFile","srcFileUrl","sourceOrStmts","TS","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","useSummaries","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","isTsFile","transformedMeta_1","_originalFileMemo","getOriginalName","getOutputName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_injectableCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","_analyzedFilesForInjectables","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","_analyzeFileForInjectables","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","tsFiles","loadingPromises","analyzedInjectables","tsFile","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllPartialModules","_emitPartialModule","directiveMetadata","emitAllPartialModules2","_emitPartialModule2","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","declarationSymbol_1","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","originalRecorder","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope$1","result_1","oldScope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAIqnD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZpxD,yBAA0C,SAAU5jC,QAEpD,QAAS4jC,4BACL,GAAIhF,OAAQ5+B,OAAOsqC,KAAK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","file":"compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v6.0.0-beta.3-4f19491\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v6.0.0-beta.3-4f19491\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc, ngInjectableDef: undefined }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction Injectable() { }\nvar createInjectable = makeMetadataFactory('Injectable', function (injectable) {\n    if (injectable === void 0) { injectable = {}; }\n    return injectable;\n});\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    TypeModuleProvider: 1073741824,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Self: 4,\n    Value: 8,\n};\n/** @enum {number} */\nvar InjectFlags = {\n    Default: 0,\n    /** Skip the node that is requesting injection. */\n    SkipSelf: 1,\n    /** Don't descend into ancestors of the node requesting injection. */\n    Self: 2,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tInjectable: Injectable,\n\tcreateInjectable: createInjectable,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tInjectFlags: InjectFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('6.0.0-beta.3-4f19491');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan, isModule) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n        this.isModule = isModule;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                var /** @type {?} */ guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, guards, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ publicNames = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG$1 = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG$1:\n                return [].concat.apply([], visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.inject = { name: 'inject', moduleName: CORE };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.defineInjectable = { name: 'defineInjectable', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n    Static: 3,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\nStmtModifier[StmtModifier.Static] = \"Static\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @param {?=} name\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n/**\n * @param {?} condition\n * @param {?} thenClause\n * @param {?=} elseClause\n * @return {?}\n */\nfunction ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction mapEntry(key, value) {\n    return { key: key, value: value, quoted: false };\n}\nvar InjectableCompiler = /** @class */ (function () {\n    function InjectableCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.depsArray = /**\n     * @param {?} deps\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (deps, ctx) {\n        return deps.map(function (dep) {\n            var /** @type {?} */ token = dep;\n            var /** @type {?} */ defaultValue = undefined;\n            var /** @type {?} */ args = [token];\n            var /** @type {?} */ flags = 0;\n            if (Array.isArray(dep)) {\n                for (var /** @type {?} */ i = 0; i < dep.length; i++) {\n                    var /** @type {?} */ v = dep[i];\n                    if (v) {\n                        if (v.ngMetadataName === 'Optional') {\n                            defaultValue = null;\n                        }\n                        else if (v.ngMetadataName === 'SkipSelf') {\n                            flags |= 1 /* SkipSelf */;\n                        }\n                        else if (v.ngMetadataName === 'Self') {\n                            flags |= 2 /* Self */;\n                        }\n                        else if (v.ngMetadataName === 'Inject') {\n                            throw new Error('@Inject() is not implemented');\n                        }\n                        else {\n                            token = v;\n                        }\n                    }\n                }\n                args = [ctx.importExpr(token), literal(defaultValue), literal(flags)];\n            }\n            else {\n                args = [ctx.importExpr(token)];\n            }\n            return importExpr(Identifiers.inject).callFn(args);\n        });\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.factoryFor = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        var /** @type {?} */ retValue;\n        if (injectable.useExisting) {\n            retValue = importExpr(Identifiers.inject).callFn([ctx.importExpr(injectable.useExisting)]);\n        }\n        else if (injectable.useFactory) {\n            var /** @type {?} */ deps = injectable.deps || [];\n            if (deps.length > 0) {\n                retValue = ctx.importExpr(injectable.useFactory).callFn(this.depsArray(deps, ctx));\n            }\n            else {\n                return ctx.importExpr(injectable.useFactory);\n            }\n        }\n        else if (injectable.useValue) {\n            retValue = convertValueToOutputAst(ctx, injectable.useValue);\n        }\n        else {\n            var /** @type {?} */ clazz = injectable.useClass || injectable.symbol;\n            var /** @type {?} */ depArgs = this.depsArray(this.reflector.parameters(clazz), ctx);\n            retValue = new InstantiateExpr(ctx.importExpr(clazz), depArgs);\n        }\n        return fn([], [new ReturnStatement(retValue)], undefined, undefined, injectable.symbol.name + '_Factory');\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.injectableDef = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        var /** @type {?} */ def = [\n            mapEntry('factory', this.factoryFor(injectable, ctx)),\n            mapEntry('token', ctx.importExpr(injectable.type.reference)),\n            mapEntry('scope', ctx.importExpr(/** @type {?} */ ((injectable.module)))),\n        ];\n        return importExpr(Identifiers.defineInjectable).callFn([literalMap(def)]);\n    };\n    /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    InjectableCompiler.prototype.compile = /**\n     * @param {?} injectable\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (injectable, ctx) {\n        if (injectable.module) {\n            var /** @type {?} */ className = /** @type {?} */ ((identifierName(injectable.type)));\n            var /** @type {?} */ clazz = new ClassStmt(className, null, [\n                new ClassField('ngInjectableDef', INFERRED_TYPE, [StmtModifier.Static], this.injectableDef(injectable, ctx)),\n            ], [], new ClassMethod(null, [], []), []);\n            ctx.statements.push(clazz);\n        }\n    };\n    return InjectableCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.getAttrs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.tryAnnotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        var /** @type {?} */ typeMetadata = typeSummary ?\n            typeSummary.type :\n            this._getTypeMetadata(type, dependencies, throwOnUnknownDeps);\n        var /** @type {?} */ annotations = this._reflector.annotations(type).filter(function (ann) { return createInjectable.isTypeOf(ann); });\n        if (annotations.length === 0) {\n            return null;\n        }\n        var /** @type {?} */ meta = annotations[annotations.length - 1];\n        return {\n            symbol: type,\n            type: typeMetadata,\n            module: meta.scope || undefined,\n            useValue: meta.useValue,\n            useClass: meta.useClass,\n            useExisting: meta.useExisting,\n            useFactory: meta.useFactory,\n            deps: meta.deps,\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata =\n                this._getInjectableTypeMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error$$1, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error$$1, type);\n            if (otherType) {\n                this._errorCollector(error$$1, otherType);\n            }\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error$$1))[ERROR_COMPONENT_TYPE] = compType;\n    return error$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders, /* isModule */ /* isModule */ true);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders, /* isModule */ false);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        return dep;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan, provider.isModule);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken, /* isModule */ /* isModule */ false);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @param {?} isModule\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken, isModule) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan, isModule);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    if (providerAst.isModule) {\n        flags |= 1073741824 /* TypeModuleProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isSelf) {\n        flags |= 4 /* Self */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        var /** @type {?} */ scopedCssText = this._scopeCssText(cssText, selector, hostSelector);\n        return [scopedCssText].concat(commentsWithHash).join('\\n');\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractCommentsWithHash(input) {\n    return input.match(_commentWithHashRe) || [];\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error$$1 = errors_1[_i];\n            this._reportError(error$$1.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error$$1) {\n        if (warnings.indexOf(error$$1.msg) !== -1) {\n            warningCounts[error$$1.msg] = (warningCounts[error$$1.msg] || 0) + 1;\n            return warningCounts[error$$1.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error$$1);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/** @enum {number} */\nvar BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherise generate a general binding\n    TrySimple: 1,\n};\nBindingForm[BindingForm.General] = \"General\";\nBindingForm[BindingForm.TrySimple] = \"TrySimple\";\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type inteference\n        // to infer the type.\n        var /** @type {?} */ type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, literal(ast.value, type));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var /** @type {?} */ args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return (/** @type {?} */ (args[0])).cast(DYNAMIC_TYPE);\n        }\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent, guards) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.getTypeGuardExpressions = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var /** @type {?} */ guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var /** @type {?} */ useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: /** @type {?} */ ({ context: this.component, value: input.value })\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var /** @type {?} */ guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var /** @type {?} */ bindingId = \"\" + bindingCount++;\n                var /** @type {?} */ nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var /** @type {?} */ guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var /** @type {?} */ guards = this.getTypeGuardExpressions(ast);\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CONSTANT_PREFIX = '_c';\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    __extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FixupExpression.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return this.resolved.visitExpression(visitor, context);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FixupExpression.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    FixupExpression.prototype.fixup = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.literals = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getConstLiteral = /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (literal$$1, forceShared) {\n        var /** @type {?} */ key = this.keyOf(literal$$1);\n        var /** @type {?} */ fixup = this.literals.get(key);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal$$1);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var /** @type {?} */ name_1 = this.freshName();\n            this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_1));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @return {?}\n     */\n    ConstantPool.prototype.getDefinition = /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, kind, ctx) {\n        var /** @type {?} */ declarations = kind == 2 /* Component */ ?\n            this.componentDefinitions :\n            kind == 1 /* Directive */ ? this.directiveDefinitions : this.injectorDefinitions;\n        var /** @type {?} */ fixup = declarations.get(type);\n        if (!fixup) {\n            var /** @type {?} */ property = kind == 2 /* Component */ ?\n                'ngComponentDef' :\n                kind == 1 /* Directive */ ? 'ngDirectiveDef' : 'ngInjectorDef';\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            declarations.set(type, fixup);\n        }\n        else if (!fixup.shared) {\n            var /** @type {?} */ name_2 = this.freshName();\n            this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_2));\n        }\n        return fixup;\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    ConstantPool.prototype.uniqueName = /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    /**\n     * @return {?}\n     */\n    ConstantPool.prototype.freshName = /**\n     * @return {?}\n     */\n    function () { return this.uniqueName(CONSTANT_PREFIX); };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ConstantPool.prototype.keyOf = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        return expression.visitExpression(new KeyVisitor(), null);\n    };\n    return ConstantPool;\n}());\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitReadVarExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, null); }).join(',') + \"]\";\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ mapEntry = function (entry) {\n            return entry.key + \":\" + entry.value.visitExpression(_this, null);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    return KeyVisitor;\n}());\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE$1 = '@angular/core';\nvar Identifiers$1 = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'n';\n    Identifiers.HOST_BINDING_METHOD = 'h';\n    /* Instructions */\n    Identifiers.createElement = { name: 'ɵE', moduleName: CORE$1 };\n    Identifiers.elementEnd = { name: 'ɵe', moduleName: CORE$1 };\n    Identifiers.elementProperty = { name: 'ɵp', moduleName: CORE$1 };\n    Identifiers.elementAttribute = { name: 'ɵa', moduleName: CORE$1 };\n    Identifiers.elementClass = { name: 'ɵk', moduleName: CORE$1 };\n    Identifiers.elementStyle = { name: 'ɵs', moduleName: CORE$1 };\n    Identifiers.containerCreate = { name: 'ɵC', moduleName: CORE$1 };\n    Identifiers.containerEnd = { name: 'ɵc', moduleName: CORE$1 };\n    Identifiers.containerRefreshStart = { name: 'ɵcR', moduleName: CORE$1 };\n    Identifiers.containerRefreshEnd = { name: 'ɵcr', moduleName: CORE$1 };\n    Identifiers.directiveCreate = { name: 'ɵD', moduleName: CORE$1 };\n    Identifiers.text = { name: 'ɵT', moduleName: CORE$1 };\n    Identifiers.directiveInput = { name: 'ɵi', moduleName: CORE$1 };\n    Identifiers.textCreateBound = { name: 'ɵt', moduleName: CORE$1 };\n    Identifiers.bind = { name: 'ɵb', moduleName: CORE$1 };\n    Identifiers.bind1 = { name: 'ɵb1', moduleName: CORE$1 };\n    Identifiers.bind2 = { name: 'ɵb2', moduleName: CORE$1 };\n    Identifiers.bind3 = { name: 'ɵb3', moduleName: CORE$1 };\n    Identifiers.bind4 = { name: 'ɵb4', moduleName: CORE$1 };\n    Identifiers.bind5 = { name: 'ɵb5', moduleName: CORE$1 };\n    Identifiers.bind6 = { name: 'ɵb6', moduleName: CORE$1 };\n    Identifiers.bind7 = { name: 'ɵb7', moduleName: CORE$1 };\n    Identifiers.bind8 = { name: 'ɵb8', moduleName: CORE$1 };\n    Identifiers.bindV = { name: 'ɵbV', moduleName: CORE$1 };\n    Identifiers.memory = { name: 'ɵm', moduleName: CORE$1 };\n    Identifiers.projection = { name: 'ɵP', moduleName: CORE$1 };\n    Identifiers.projectionDef = { name: 'ɵpD', moduleName: CORE$1 };\n    Identifiers.refreshComponent = { name: 'ɵr', moduleName: CORE$1 };\n    Identifiers.directiveLifeCycle = { name: 'ɵl', moduleName: CORE$1 };\n    Identifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE$1 };\n    Identifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE$1 };\n    Identifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE$1 };\n    Identifiers.inject = { name: 'ɵinject', moduleName: CORE$1 };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE$1,\n    };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n    return Identifiers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Name of the context parameter passed into a template function\n */\nvar CONTEXT_NAME = 'ctx';\n/**\n * Name of the creation mode flag passed into a template function\n */\nvar CREATION_MODE_FLAG = 'cm';\n/**\n * Name of the temporary to use during data binding\n */\nvar TEMPORARY_NAME = '_t';\n/**\n * The prefix reference variables\n */\nvar REFERENCE_PREFIX = '_r';\n/**\n * The name of the implicit context reference\n */\nvar IMPLICIT_REFERENCE = '$implicit';\n/**\n * @param {?} outputCtx\n * @param {?} directive\n * @param {?} reflector\n * @return {?}\n */\nfunction compileDirective(outputCtx, directive, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. 'type: MyDirective`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(directive.type.reference), quoted: false });\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    var /** @type {?} */ templateFactory = createFactory(directive.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g 'inputs: {a: 'a'}`\n    if (Object.getOwnPropertyNames(directive.inputs).length > 0) {\n        definitionMapValues.push({ key: 'inputs', quoted: false, value: mapToExpression(directive.inputs) });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(directive.type)));\n    className || error(\"Cannot resolver the name of \" + directive.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField('ngDirectiveDef', /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineDirective).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} template\n * @param {?} reflector\n * @return {?}\n */\nfunction compileComponent(outputCtx, component, template, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. `type: MyApp`\n    definitionMapValues.push({ key: 'type', value: outputCtx.importExpr(component.type.reference), quoted: false });\n    // e.g. `tag: 'my-app'`\n    // This is optional and only included if the first selector of a component has element.\n    var /** @type {?} */ selector = component.selector && CssSelector.parse(component.selector);\n    var /** @type {?} */ firstSelector = selector && selector[0];\n    if (firstSelector && firstSelector.hasElementSelector()) {\n        definitionMapValues.push({ key: 'tag', value: literal(firstSelector.element), quoted: false });\n    }\n    // e.g. `attr: [\"class\", \".my.app\"]\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var /** @type {?} */ selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMapValues.push({\n                key: 'attrs',\n                value: outputCtx.constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), /* forceShared */ true),\n                quoted: false\n            });\n        }\n    }\n    // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n    var /** @type {?} */ templateFactory = createFactory(component.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var /** @type {?} */ templateTypeName = component.type.reference.name;\n    var /** @type {?} */ templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var /** @type {?} */ templateFunctionExpression = new TemplateDefinitionBuilder(outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, ROOT_SCOPE.nestedScope(), 0, /** @type {?} */ ((component.template)).ngContentSelectors, templateTypeName, templateName)\n        .buildTemplateFunction(template, []);\n    definitionMapValues.push({ key: 'template', value: templateFunctionExpression, quoted: false });\n    // e.g `inputs: {a: 'a'}`\n    if (Object.getOwnPropertyNames(component.inputs).length > 0) {\n        definitionMapValues.push({ key: 'inputs', quoted: false, value: mapToExpression(component.inputs) });\n    }\n    // e.g. `features: [NgOnChangesFeature(MyComponent)]`\n    var /** @type {?} */ features = [];\n    if (component.type.lifecycleHooks.some(function (lifecycle) { return lifecycle == LifecycleHooks.OnChanges; })) {\n        features.push(importExpr(Identifiers$1.NgOnChangesFeature, null, null).callFn([outputCtx.importExpr(component.type.reference)]));\n    }\n    if (features.length) {\n        definitionMapValues.push({ key: 'features', quoted: false, value: literalArr(features) });\n    }\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(component.type)));\n    className || error(\"Cannot resolver the name of \" + component.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField('ngComponentDef', /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineComponent).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is not supported yet\");\n}\nvar BINDING_INSTRUCTION_MAP = (_a = {},\n    _a[PropertyBindingType.Property] = Identifiers$1.elementProperty,\n    _a[PropertyBindingType.Attribute] = Identifiers$1.elementAttribute,\n    _a[PropertyBindingType.Class] = Identifiers$1.elementClass,\n    _a[PropertyBindingType.Style] = Identifiers$1.elementStyle,\n    _a);\n/**\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return importExpr(Identifiers$1.bind1).callFn(args);\n        case 5:\n            return importExpr(Identifiers$1.bind2).callFn(args);\n        case 7:\n            return importExpr(Identifiers$1.bind3).callFn(args);\n        case 9:\n            return importExpr(Identifiers$1.bind4).callFn(args);\n        case 11:\n            return importExpr(Identifiers$1.bind5).callFn(args);\n        case 13:\n            return importExpr(Identifiers$1.bind6).callFn(args);\n        case 15:\n            return importExpr(Identifiers$1.bind7).callFn(args);\n        case 17:\n            return importExpr(Identifiers$1.bind8).callFn(args);\n    }\n    (args.length >= 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return importExpr(Identifiers$1.bindV).callFn([literalArr(args)]);\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(parent) {\n        this.parent = parent;\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ current = this;\n        while (current) {\n            var /** @type {?} */ value = current.map.get(name);\n            if (value != null) {\n                // Cache the value locally.\n                this.map.set(name, value);\n                return value;\n            }\n            current = current.parent;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} variableName\n     * @return {?}\n     */\n    BindingScope.prototype.set = /**\n     * @param {?} name\n     * @param {?} variableName\n     * @return {?}\n     */\n    function (name, variableName) {\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, variable(variableName));\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.nestedScope = /**\n     * @return {?}\n     */\n    function () { return new BindingScope(this); };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.freshReferenceName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        return \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n    };\n    return BindingScope;\n}());\nvar ROOT_SCOPE = new BindingScope(null).set('$event', '$event');\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(outputCtx, constantPool, reflector, contextParameter, bindingScope, level, ngContentSelectors, contextName, templateName) {\n        if (level === void 0) { level = 0; }\n        this.outputCtx = outputCtx;\n        this.constantPool = constantPool;\n        this.reflector = reflector;\n        this.contextParameter = contextParameter;\n        this.bindingScope = bindingScope;\n        this.level = level;\n        this.ngContentSelectors = ngContentSelectors;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._referenceIndex = 0;\n        this._temporaryAllocated = false;\n        this._prefix = [];\n        this._creationMode = [];\n        this._bindingMode = [];\n        this._hostMode = [];\n        this._refreshMode = [];\n        this._postfix = [];\n        this._projectionDefinitionIndex = 0;\n        this.unsupported = unsupported;\n        this.invalid = invalid$1;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid$1;\n        this.visitVariable = invalid$1;\n        this.visitEvent = invalid$1;\n        this.visitElementProperty = invalid$1;\n        this.visitAttr = invalid$1;\n        // These should be handled in the template or element directly\n        this.visitDirective = invalid$1;\n        this.visitDirectiveProperty = invalid$1;\n    }\n    /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = /**\n     * @param {?} asts\n     * @param {?} variables\n     * @return {?}\n     */\n    function (asts, variables) {\n        // Create variable bindings\n        for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n            var variable$$1 = variables_1[_i];\n            var /** @type {?} */ variableName = variable$$1.name;\n            var /** @type {?} */ expression = variable(this.contextParameter).prop(variable$$1.value || IMPLICIT_REFERENCE);\n            var /** @type {?} */ scopedName = this.bindingScope.freshReferenceName();\n            var /** @type {?} */ declaration = variable(scopedName).set(expression).toDeclStmt(INFERRED_TYPE, [\n                StmtModifier.Final\n            ]);\n            // Add the reference to the local scope.\n            this.bindingScope.set(variableName, scopedName);\n            // Declare the local variable in binding mode\n            this._bindingMode.push(declaration);\n        }\n        // Collect content projections\n        if (this.ngContentSelectors && this.ngContentSelectors.length > 0) {\n            var /** @type {?} */ contentProjections = getContentProjection(asts, this.ngContentSelectors);\n            this._contentProjections = contentProjections;\n            if (contentProjections.size > 0) {\n                var /** @type {?} */ infos_1 = [];\n                Array.from(contentProjections.values()).forEach(function (info) {\n                    if (info.selector) {\n                        infos_1[info.index - 1] = info.selector;\n                    }\n                });\n                var /** @type {?} */ projectionIndex = this._projectionDefinitionIndex = this.allocateDataSlot();\n                var /** @type {?} */ parameters = [literal(projectionIndex)];\n                !infos_1.some(function (value) { return !value; }) || error(\"content project information skipped an index\");\n                if (infos_1.length > 1) {\n                    parameters.push(this.outputCtx.constantPool.getConstLiteral(asLiteral(infos_1), /* forceShared */ /* forceShared */ true));\n                }\n                this.instruction.apply(this, [this._creationMode, null, Identifiers$1.projectionDef].concat(parameters));\n            }\n        }\n        templateVisitAll(this, asts);\n        var /** @type {?} */ creationMode = this._creationMode.length > 0 ?\n            [ifStmt(variable(CREATION_MODE_FLAG), this._creationMode)] :\n            [];\n        return fn([\n            new FnParam(this.contextParameter, null), new FnParam(CREATION_MODE_FLAG, BOOL_TYPE)\n        ], this._prefix.concat(creationMode, this._bindingMode, this._hostMode, this._refreshMode, this._postfix), INFERRED_TYPE, null, this.templateName);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.bindingScope.get(name); };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ info = /** @type {?} */ ((this._contentProjections.get(ast)));\n        info || error(\"Expected \" + ast.sourceSpan + \" to be included in content projection collection\");\n        var /** @type {?} */ slot = this.allocateDataSlot();\n        var /** @type {?} */ parameters = [literal(slot), literal(this._projectionDefinitionIndex)];\n        if (info.index !== 0) {\n            parameters.push(literal(info.index));\n        }\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.projection].concat(parameters));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._computeDirectivesArray = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var _this = this;\n        var /** @type {?} */ directiveIndexMap = new Map();\n        var /** @type {?} */ directiveExpressions = directives.filter(function (directive) { return !directive.directive.isComponent; }).map(function (directive) {\n            directiveIndexMap.set(directive.directive.type.reference, _this.allocateDataSlot());\n            return _this.typeReference(directive.directive.type.reference);\n        });\n        return {\n            directivesArray: directiveExpressions.length ?\n                this.constantPool.getConstLiteral(literalArr(directiveExpressions), /* forceShared */ /* forceShared */ true) :\n                literal(null),\n            directiveIndexMap: directiveIndexMap\n        };\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ bindingCount = 0;\n        var /** @type {?} */ elementIndex = this.allocateDataSlot();\n        var /** @type {?} */ componentIndex = undefined;\n        var /** @type {?} */ referenceDataSlots = new Map();\n        // Element creation mode\n        var /** @type {?} */ component = findComponent(ast.directives);\n        var /** @type {?} */ nullNode = literal(null, INFERRED_TYPE);\n        var /** @type {?} */ parameters = [literal(elementIndex)];\n        // Add component type or element tag\n        if (component) {\n            parameters.push(this.typeReference(component.directive.type.reference));\n            componentIndex = this.allocateDataSlot();\n        }\n        else {\n            parameters.push(literal(ast.name));\n        }\n        // Add attributes array\n        var /** @type {?} */ attributes = [];\n        for (var _i = 0, _a = ast.attrs; _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(literal(attr.name), literal(attr.value));\n        }\n        parameters.push(attributes.length > 0 ?\n            this.constantPool.getConstLiteral(literalArr(attributes), /* forceShared */ /* forceShared */ true) :\n            nullNode);\n        // Add directives array\n        var _b = this._computeDirectivesArray(ast.directives), directivesArray = _b.directivesArray, directiveIndexMap = _b.directiveIndexMap;\n        parameters.push(directiveIndexMap.size > 0 ? directivesArray : nullNode);\n        if (component && componentIndex != null) {\n            // Record the data slot for the component\n            directiveIndexMap.set(component.directive.type.reference, componentIndex);\n        }\n        // Add references array\n        if (ast.references && ast.references.length > 0) {\n            var /** @type {?} */ references = flatten(ast.references.map(function (reference) {\n                var /** @type {?} */ slot = _this.allocateDataSlot();\n                referenceDataSlots.set(reference.name, slot);\n                // Generate the update temporary.\n                var /** @type {?} */ variableName = _this.bindingScope.freshReferenceName();\n                _this._bindingMode.push(variable(variableName, INFERRED_TYPE)\n                    .set(importExpr(Identifiers$1.memory).callFn([literal(slot)]))\n                    .toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n                _this.bindingScope.set(reference.name, variableName);\n                return [reference.name, reference.originalValue];\n            })).map(function (value) { return literal(value); });\n            parameters.push(this.constantPool.getConstLiteral(literalArr(references), /* forceShared */ /* forceShared */ true));\n        }\n        else {\n            parameters.push(nullNode);\n        }\n        // Remove trailing null nodes as they are implied.\n        while (parameters[parameters.length - 1] === nullNode) {\n            parameters.pop();\n        }\n        // Generate the instruction create element instruction\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.createElement].concat(parameters));\n        var /** @type {?} */ implicit = variable(this.contextParameter);\n        // Generate element input bindings\n        for (var _c = 0, _d = ast.inputs; _c < _d.length; _c++) {\n            var input = _d[_c];\n            if (input.isAnimation) {\n                this.unsupported('animations');\n            }\n            // TODO(chuckj): Built-in transform?\n            var /** @type {?} */ convertedBinding = convertPropertyBinding(this, implicit, input.value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n            (_e = this._bindingMode).push.apply(_e, convertedBinding.stmts);\n            var /** @type {?} */ parameters_1 = [literal(elementIndex), literal(input.name), convertedBinding.currValExpr];\n            var /** @type {?} */ instruction = BINDING_INSTRUCTION_MAP[input.type];\n            if (instruction) {\n                // TODO(chuckj): runtime: security context?\n                this.instruction(this._bindingMode, input.sourceSpan, instruction, literal(elementIndex), literal(input.name), convertedBinding.currValExpr);\n            }\n            else {\n                this.unsupported(\"binding \" + PropertyBindingType[input.type]);\n            }\n        }\n        // Generate directives input bindings\n        this._visitDirectives(ast.directives, implicit, elementIndex, directiveIndexMap);\n        // Traverse element child nodes\n        templateVisitAll(this, ast.children);\n        // Finish element construction mode.\n        this.instruction(this._creationMode, ast.endSourceSpan || ast.sourceSpan, Identifiers$1.elementEnd);\n        var _e;\n    };\n    /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._visitDirectives = /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    function (directives, implicit, nodeIndex, directiveIndexMap) {\n        for (var _i = 0, directives_1 = directives; _i < directives_1.length; _i++) {\n            var directive = directives_1[_i];\n            var /** @type {?} */ directiveIndex = directiveIndexMap.get(directive.directive.type.reference);\n            // Creation mode\n            // e.g. D(0, TodoComponentDef.n(), TodoComponentDef);\n            var /** @type {?} */ directiveType = directive.directive.type.reference;\n            var /** @type {?} */ kind = directive.directive.isComponent ? 2 /* Component */ : 1;\n            // Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the\n            // node is referenced multiple times to know that it must generate the reference into a\n            // temporary.\n            // Bindings\n            for (var _a = 0, _b = directive.inputs; _a < _b.length; _a++) {\n                var input = _b[_a];\n                var /** @type {?} */ convertedBinding = convertPropertyBinding(this, implicit, input.value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n                (_c = this._bindingMode).push.apply(_c, convertedBinding.stmts);\n                this.instruction(this._bindingMode, directive.sourceSpan, Identifiers$1.elementProperty, literal(nodeIndex), literal(input.templateName), importExpr(Identifiers$1.bind).callFn([convertedBinding.currValExpr]));\n            }\n            // e.g. MyDirective.ngDirectiveDef.h(0, 0);\n            this._hostMode.push(this.definitionOf(directiveType, kind)\n                .callMethod(Identifiers$1.HOST_BINDING_METHOD, [literal(directiveIndex), literal(nodeIndex)])\n                .toStmt());\n            // e.g. r(0, 0);\n            this.instruction(this._refreshMode, directive.sourceSpan, Identifiers$1.refreshComponent, literal(directiveIndex), literal(nodeIndex));\n        }\n        var _c;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ templateIndex = this.allocateDataSlot();\n        var /** @type {?} */ templateRef = this.reflector.resolveExternalReference(Identifiers.TemplateRef);\n        var /** @type {?} */ templateDirective = ast.directives.find(function (directive) {\n            return directive.directive.type.diDeps.some(function (dependency) {\n                return dependency.token != null && (tokenReference(dependency.token) == templateRef);\n            });\n        });\n        var /** @type {?} */ contextName = this.contextName && templateDirective && templateDirective.directive.type.reference.name ?\n            this.contextName + \"_\" + templateDirective.directive.type.reference.name :\n            null;\n        var /** @type {?} */ templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var /** @type {?} */ templateContext = \"ctx\" + this.level;\n        var _a = this._computeDirectivesArray(ast.directives), directivesArray = _a.directivesArray, directiveIndexMap = _a.directiveIndexMap;\n        // e.g. C(1, C1Template)\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.containerCreate, literal(templateIndex), directivesArray, variable(templateName));\n        // e.g. Cr(1)\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshStart, literal(templateIndex));\n        // Generate directives\n        this._visitDirectives(ast.directives, variable(this.contextParameter), templateIndex, directiveIndexMap);\n        // e.g. cr();\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshEnd);\n        // Create the template function\n        var /** @type {?} */ templateVisitor = new TemplateDefinitionBuilder(this.outputCtx, this.constantPool, this.reflector, templateContext, this.bindingScope.nestedScope(), this.level + 1, this.ngContentSelectors, contextName, templateName);\n        var /** @type {?} */ templateFunctionExpr = templateVisitor.buildTemplateFunction(ast.children, ast.variables);\n        this._postfix.push(templateFunctionExpr.toDeclStmt(templateName, null));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ nodeIndex = this.allocateDataSlot();\n        // Creation mode\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(nodeIndex));\n        // Refresh mode\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.textCreateBound, literal(nodeIndex), this.bind(variable(CONTEXT_NAME), ast.value, ast.sourceSpan));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        // Text is defined in creation mode only.\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(this.allocateDataSlot()), literal(ast.value));\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = /**\n     * @return {?}\n     */\n    function () { return this._dataIndex++; };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bindingContext = /**\n     * @return {?}\n     */\n    function () { return \"\" + this._bindingContext++; };\n    /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.instruction = /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    function (statements, span, reference) {\n        var params = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            params[_i - 3] = arguments[_i];\n        }\n        statements.push(importExpr(reference, null, span).callFn(params, span).toStmt());\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.typeReference = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.outputCtx.importExpr(type); };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.definitionOf = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        return this.constantPool.getDefinition(type, kind, this.outputCtx);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.temp = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._temporaryAllocated) {\n            this._prefix.push(variable(TEMPORARY_NAME, DYNAMIC_TYPE, null)\n                .set(literal(undefined))\n                .toDeclStmt(DYNAMIC_TYPE));\n            this._temporaryAllocated = true;\n        }\n        return variable(TEMPORARY_NAME);\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    function (implicit, value) {\n        var /** @type {?} */ convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n        (_a = this._refreshMode).push.apply(_a, convertedPropertyBinding.stmts);\n        return convertedPropertyBinding.currValExpr;\n        var _a;\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bind = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (implicit, value, sourceSpan) {\n        return this.convertPropertyBinding(implicit, value);\n    };\n    return TemplateDefinitionBuilder;\n}());\n/**\n * @param {?} type\n * @param {?} outputCtx\n * @param {?} reflector\n * @return {?}\n */\nfunction createFactory(type, outputCtx, reflector) {\n    var /** @type {?} */ args = [];\n    var /** @type {?} */ elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    var /** @type {?} */ templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    var /** @type {?} */ viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.isValue) {\n            unsupported('value dependencies');\n        }\n        if (dependency.isHost) {\n            unsupported('host dependencies');\n        }\n        var /** @type {?} */ token = dependency.token;\n        if (token) {\n            var /** @type {?} */ tokenRef = tokenReference(token);\n            if (tokenRef === elementRef) {\n                args.push(importExpr(Identifiers$1.injectElementRef).callFn([]));\n            }\n            else if (tokenRef === templateRef) {\n                args.push(importExpr(Identifiers$1.injectTemplateRef).callFn([]));\n            }\n            else if (tokenRef === viewContainerRef) {\n                args.push(importExpr(Identifiers$1.injectViewContainerRef).callFn([]));\n            }\n            else {\n                var /** @type {?} */ value = token.identifier != null ? outputCtx.importExpr(tokenRef) : literal(tokenRef);\n                args.push(importExpr(Identifiers$1.inject).callFn([value]));\n            }\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return fn([], [new ReturnStatement(new InstantiateExpr(outputCtx.importExpr(type.reference), args))], INFERRED_TYPE, null, type.reference.name ? type.reference.name + \"_Factory\" : null);\n}\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid$1(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction findComponent(directives) {\n    return directives.filter(function (directive) { return directive.directive.isComponent; })[0];\n}\nvar ContentProjectionVisitor = /** @class */ (function (_super) {\n    __extends(ContentProjectionVisitor, _super);\n    function ContentProjectionVisitor(projectionMap, ngContentSelectors) {\n        var _this = _super.call(this) || this;\n        _this.projectionMap = projectionMap;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.index = 1;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ContentProjectionVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ selectorText = this.ngContentSelectors[ast.index];\n        selectorText != null || error(\"could not find selector for index \" + ast.index + \" in \" + ast);\n        if (!selectorText || selectorText === '*') {\n            this.projectionMap.set(ast, { index: 0 });\n        }\n        else {\n            var /** @type {?} */ cssSelectors = CssSelector.parse(selectorText);\n            this.projectionMap.set(ast, { index: this.index++, selector: parseSelectorsToR3Selector(cssSelectors) });\n        }\n    };\n    return ContentProjectionVisitor;\n}(RecursiveTemplateAstVisitor));\n/**\n * @param {?} asts\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction getContentProjection(asts, ngContentSelectors) {\n    var /** @type {?} */ projectIndexMap = new Map();\n    var /** @type {?} */ visitor = new ContentProjectionVisitor(projectIndexMap, ngContentSelectors);\n    templateVisitAll(visitor, asts);\n    return projectIndexMap;\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToSimpleSelector(selector) {\n    var /** @type {?} */ classes = selector.classNames && selector.classNames.length ? ['class'].concat(selector.classNames) : [];\n    return [selector.element].concat(selector.attrs, classes);\n}\n/**\n * @param {?} selector\n * @return {?}\n */\nfunction parserSelectorToR3Selector(selector) {\n    var /** @type {?} */ positive = parserSelectorToSimpleSelector(selector);\n    var /** @type {?} */ negative = selector.notSelectors && selector.notSelectors.length &&\n        parserSelectorToSimpleSelector(selector.notSelectors[0]);\n    return negative ? [positive, negative] : [positive, null];\n}\n/**\n * @param {?} selectors\n * @return {?}\n */\nfunction parseSelectorsToR3Selector(selectors) {\n    return selectors.map(parserSelectorToR3Selector);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction asLiteral(value) {\n    if (Array.isArray(value)) {\n        return literalArr(value.map(asLiteral));\n    }\n    return literal(value, INFERRED_TYPE);\n}\n/**\n * @param {?} map\n * @return {?}\n */\nfunction mapToExpression(map) {\n    return literalMap(Object.getOwnPropertyNames(map).map(function (key) { return ({ key: key, quoted: false, value: literal(map[key]) }); }));\n}\nvar _a;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TS = /^(?!.*\\.d\\.ts$).*\\.ts$/;\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        var /** @type {?} */ isTsFile = TS.test(sourceSymbol.filePath);\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && !isTsFile && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error$$1, (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _injectableCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._injectableCompiler = _injectableCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n        this._analyzedFilesForInjectables = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFileForInjectables = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFilesForInjectables.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile = analyzeFileForInjectables(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFilesForInjectables.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    function (fileNames, tsFiles) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        var /** @type {?} */ analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return Promise.all(loadingPromises).then(function (_) {\n            return ({\n                analyzedModules: mergeAndValidateNgFiles(files),\n                analyzedInjectables: analyzedInjectables,\n            });\n        });\n    };\n    /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @param {?} tsFiles\n     * @return {?}\n     */\n    function (fileNames, tsFiles) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        var /** @type {?} */ analyzedInjectables = tsFiles.map(function (tsFile) { return _this._analyzeFileForInjectables(tsFile); });\n        return {\n            analyzedModules: mergeAndValidateNgFiles(files),\n            analyzedInjectables: analyzedInjectables,\n        };\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ /* useSummaries */ false))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule = /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ classes = [];\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var /** @type {?} */ directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var /** @type {?} */ module = /** @type {?} */ ((ngModuleByPipeOrDirective.get(directiveType)));\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var parsedTemplate = _this._parseTemplate(directiveMetadata, module, module.transitiveModule.directives).template;\n                compileComponent(context, directiveMetadata, parsedTemplate, _this._reflector);\n            }\n            else {\n                compileDirective(context, directiveMetadata, _this._reflector);\n            }\n        });\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} files\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules2 = /**\n     * @param {?} files\n     * @return {?}\n     */\n    function (files) {\n        var _this = this;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule2(file.fileName, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule2 = /**\n     * @param {?} fileName\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, injectables) {\n        var _this = this;\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        injectables.forEach(function (injectable) { return _this._injectableCompiler.compile(injectable, context); });\n        if (context.statements && context.statements.length > 0) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref.symbol))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref.symbol))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var /** @type {?} */ injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFileForInjectables(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ injectables = [];\n    if (staticSymbolResolver.hasDecorators(fileName)) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    var /** @type {?} */ injectable = metadataResolver.getInjectableMetadata(symbol, null, false);\n                    if (injectable) {\n                        injectables.push(injectable);\n                    }\n                }\n            }\n        });\n    }\n    return { fileName: fileName, injectables: injectables };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[FORMATTED_MESSAGE] = true;\n    error$$1.chain = chain;\n    error$$1.position = chain.position;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var /** @type {?} */ declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.tryAnnotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        try {\n            return this.annotations(type);\n        }\n        finally {\n            this.errorRecorder = originalRecorder;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._staticMembers = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var /** @type {?} */ staticMembers = this._staticMembers(type);\n        var /** @type {?} */ result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var /** @type {?} */ property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var /** @type {?} */ value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope$1.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope$1.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_2 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope$1.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[METADATA_ERROR] = true;\n    if (advise)\n        error$$1.advise = advise;\n    if (position)\n        error$$1.position = position;\n    if (summary)\n        error$$1.summary = summary;\n    if (context)\n        error$$1.context = context;\n    if (chain)\n        error$$1.chain = chain;\n    if (symbol)\n        error$$1.symbol = symbol;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error$$1) {\n    if (error$$1.summary) {\n        return error$$1.summary;\n    }\n    switch (error$$1.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error$$1.context && error$$1.context.className) {\n                return \"references non-exported class \" + error$$1.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error$$1.context && error$$1.context.name) {\n                return \"calls '\" + error$$1.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error$$1.context && error$$1.context.name) {\n                return \"references local variable \" + error$$1.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope$1 = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n    };\n    return PopulatedScope;\n}(BindingScope$1));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new InjectableCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassField = ClassField;\nexports.ClassMethod = ClassMethod;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.analyzeFileForInjectables = analyzeFileForInjectables;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}