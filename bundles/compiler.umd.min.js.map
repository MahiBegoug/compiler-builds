{"version":3,"sources":["compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","error","msg","Error","syntaxError","parseErrors","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","srcFileSuffix","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","error$$1","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","ifStmt","thenClause","elseClause","IfStmt","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","interpolationFunction","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","form","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","BindingForm","TrySimple","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","invalid","compileDirective","outputCtx","definitionMapValues","templateFactory","createFactory","ClassStmt","ClassField","Static","Identifiers$1","defineDirective","ClassMethod","compileComponent","template","firstSelector","hasElementSelector","selectorAttributes","getAttrs","constantPool","getConstLiteral","templateTypeName","templateName","templateFunctionExpression","TemplateDefinitionBuilder","CONTEXT_NAME","ROOT_SCOPE","nestedScope","buildTemplateFunction","defineComponent","unknown","unsupported","feature","interpolate","bind1","bind2","bind3","bind4","bind5","bind6","bind7","bind8","bindV","elementRef","ElementRef","templateRef","TemplateRef","viewContainerRef","ViewContainerRef","dependency","isHost","tokenRef","injectElementRef","injectTemplateRef","injectViewContainerRef","inject","InstantiateExpr","invalid$1","findComponent","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","ConstantPool","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","originalValue","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","hostListeners","guards","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","publicNames","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltinType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","initializer","ClassGetter","visitDeclareClassStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","importFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","General","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","getTypeGuardExpressions","guard","useIf","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","guardExpression","guardClause","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","FixupExpression","resolved","fixup","shared","literals","injectorDefinitions","directiveDefinitions","componentDefinitions","nextNameIndex","literal$$1","forceShared","keyOf","newValue","freshName","getDefinition","KeyVisitor","mapEntry","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","CORE$1","NEW_METHOD","HOST_BINDING_METHOD","REFRESH_METHOD","createElement","elementEnd","elementProperty","elementAttribute","elementClass","elementStyle","containerCreate","containerEnd","containerRefreshStart","containerRefreshEnd","directiveCreate","directiveInput","textCreateBound","memory","refreshComponent","directiveLifeCycle","NgOnChangesFeature","BINDING_INSTRUCTION_MAP","BindingScope","referenceNameIndex","variableName","freshReferenceName","contextParameter","bindingScope","contextName","_dataIndex","_bindingContext","_referenceIndex","_temporaryAllocated","_prefix","_creationMode","_bindingMode","_hostMode","_refreshMode","_postfix","_computeDirectivesArray","directiveIndexMap","directiveExpressions","allocateDataSlot","typeReference","directivesArray","elementIndex","componentIndex","referenceDataSlots","nullNode","slot","instruction","implicit","convertedBinding","bindingContext","_visitDirectives","directives_1","definitionOf","templateIndex","templateDirective","templateContext","templateVisitor","templateFunctionExpr","convertedPropertyBinding","GeneratedFile","srcFileUrl","sourceOrStmts","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","useSummaries","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","_originalFileMemo","getOriginalName","getOutputName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllPartialModules","_emitPartialModule","directiveMetadata","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","staticCache","conversionMap","resolvedExternalReferences","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","declarationSymbol_1","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","_staticMembers","staticMembers","staticMemberData","lcProperty","staticMembers_1","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope$1","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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CA,KAAM,IAAIvvD,OAAM,8BAAgCoB,UAAUU,MAE9D,OAAO,OAEJinC,gBAiBP3d,kBAaJJ,iBAAgBkF,gBAAgBshB,MAC5B,gBACA,cACA,gBAEJxmB,gBAAgBkF,gBAAgBnmB,OAAQ,YAExCihB,gBAAgBkF,gBAAgBuhB,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhEzmB,gBAAgBkF,gBAAgBwhB,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAI+mD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA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","file":"compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.9.9-6-beta.0-acf381b\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.9.9-6-beta.0-acf381b\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction error(msg) {\n    throw new Error(\"Internal Error: \" + msg);\n}\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.9.9-6-beta.0-acf381b');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, originalValue, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.originalValue = originalValue;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.guards = guards;\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, guards = _a.guards, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            guards: guards,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            guards: this.guards,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                var /** @type {?} */ guards = this._reflector.guards(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, guards, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, guards, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, guards, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ publicNames = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            publicNames.add(name_1);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} guards\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, guards, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers, guards: guards\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _MARKER_TAG = 'mrk';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _SEGMENT_SOURCE_TAG = 'seg-source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            // ignore those tags\n            case _SOURCE_TAG:\n            case _SEGMENT_SOURCE_TAG:\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n            return null;\n        }\n        if (el.name === _MARKER_TAG) {\n            return [].concat.apply([], visitAll(this, el.children));\n        }\n        this._addError(el, \"Unexpected tag\");\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _MARKER_TAG$1 = 'mrk';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            case _MARKER_TAG$1:\n                return [].concat.apply([], visitAll(this, el.children));\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.getAttrs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = [];\n        if (this.classNames.length > 0) {\n            result.push('class', this.classNames.join(' '));\n        }\n        return result.concat(this.attrs);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            guards: {},\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                guards: metadata.guards,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            guards: dirMeta.guards || {},\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error$$1, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error$$1, type);\n            if (otherType) {\n                this._errorCollector(error$$1, otherType);\n            }\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error$$1 = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error$$1))[ERROR_COMPONENT_TYPE] = compType;\n    return error$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltinType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan, name) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n    Static: 3,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\nStmtModifier[StmtModifier.Static] = \"Static\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers, initializer) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.initializer = initializer;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @param {?=} name\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan, name) {\n    return new FunctionExpr(params, body, type, sourceSpan, name);\n}\n/**\n * @param {?} condition\n * @param {?} thenClause\n * @param {?=} elseClause\n * @return {?}\n */\nfunction ifStmt(condition, thenClause, elseClause) {\n    return new IfStmt(condition, thenClause, elseClause);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @param {?=} importFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter, importFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter, importFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter, importFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.importFilter = importFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        if (field.hasModifier(StmtModifier.Static)) {\n            ctx.print(null, 'static ');\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        if (field.initializer) {\n            ctx.print(null, ' = ');\n            field.initializer.visitExpression(this, ctx);\n        }\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.name) {\n            ctx.print(ast, 'function ');\n            ctx.print(ast, ast.name);\n        }\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        if (!ast.name) {\n            ctx.print(ast, \" => \");\n        }\n        ctx.println(ast, '{');\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltinType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName && (!this.importFilter || !this.importFilter(value))) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error$$1 = errors_1[_i];\n            this._reportError(error$$1.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error$$1) {\n        if (warnings.indexOf(error$$1.msg) !== -1) {\n            warningCounts[error$$1.msg] = (warningCounts[error$$1.msg] || 0) + 1;\n            return warningCounts[error$$1.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error$$1) { return error$$1.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error$$1 = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error$$1);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.value, elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.value, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/** @enum {number} */\nvar BindingForm = {\n    // The general form of binding expression, supports all expressions.\n    General: 0,\n    // Try to generate a simple binding (no temporaries or statements)\n    // otherise generate a general binding\n    TrySimple: 1,\n};\nBindingForm[BindingForm.General] = \"General\";\nBindingForm[BindingForm.TrySimple] = \"TrySimple\";\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @param {?} form\n * @param {?=} interpolationFunction\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId, form, interpolationFunction) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId, interpolationFunction);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    else if (form == BindingForm.TrySimple) {\n        return new ConvertPropertyBindingResult([], outputExpr);\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(DYNAMIC_TYPE, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId, interpolationFunction) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this.interpolationFunction = interpolationFunction;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        if (this.interpolationFunction) {\n            return this.interpolationFunction(args);\n        }\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        // For literal values of null, undefined, true, or false allow type inteference\n        // to infer the type.\n        var /** @type {?} */ type = ast.value === null || ast.value === undefined || ast.value === true || ast.value === true ?\n            INFERRED_TYPE :\n            undefined;\n        return convertToStatementIfNeeded(mode, literal(ast.value, type));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        if (ast.receiver instanceof ImplicitReceiver && ast.name == '$any') {\n            var /** @type {?} */ args = /** @type {?} */ (this.visitAll(ast.args, _Mode.Expression));\n            if (args.length != 1) {\n                throw new Error(\"Invalid call to $any, expected 1 argument but received \" + (args.length || 'none'));\n            }\n            return (/** @type {?} */ (args[0])).cast(DYNAMIC_TYPE);\n        }\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars, ctx) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent, guards) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null, []);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, guards, ctx, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.guards = guards;\n        this.ctx = ctx;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.getTypeGuardExpressions = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ result = this.guards.slice();\n        for (var _i = 0, _a = ast.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            for (var _b = 0, _c = directive.inputs; _b < _c.length; _b++) {\n                var input = _c[_b];\n                var /** @type {?} */ guard = directive.directive.guards[input.directiveName];\n                if (guard) {\n                    var /** @type {?} */ useIf = guard === 'UseIf';\n                    result.push({\n                        guard: guard,\n                        useIf: useIf,\n                        expression: /** @type {?} */ ({ context: this.component, value: input.value })\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        if (this.guards.length) {\n            var /** @type {?} */ guardExpression = undefined;\n            for (var _i = 0, _a = this.guards; _i < _a.length; _i++) {\n                var guard = _a[_i];\n                var _b = this.preprocessUpdateExpression(guard.expression), context = _b.context, value = _b.value;\n                var /** @type {?} */ bindingId = \"\" + bindingCount++;\n                var /** @type {?} */ nameResolver = context === this.component ? this : defaultResolver;\n                // We only support support simple expressions and ignore others as they\n                // are unlikely to affect type narrowing.\n                var _c = convertPropertyBinding(nameResolver, variable(this.getOutputVar(context)), value, bindingId, BindingForm.TrySimple), stmts = _c.stmts, currValExpr = _c.currValExpr;\n                if (stmts.length == 0) {\n                    var /** @type {?} */ guardClause = guard.useIf ? currValExpr : this.ctx.importExpr(guard.guard).callFn([currValExpr]);\n                    guardExpression = guardExpression ? guardExpression.and(guardClause) : guardClause;\n                }\n            }\n            if (guardExpression) {\n                viewStmts = [new IfStmt(guardExpression, viewStmts)];\n            }\n        }\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            // Find any applicable type guards. For example, NgIf has a type guard on ngIf\n            // (see NgIf.ngIfTypeGuard) that can be used to indicate that a template is only\n            // stamped out if ngIf is truthy so any bindings in the template can assume that,\n            // if a nullable type is used for ngIf, that expression is not null or undefined.\n            var /** @type {?} */ guards = this.getTypeGuardExpressions(ast);\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this, guards);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId, BindingForm.General), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CONSTANT_PREFIX = '_c';\n/**\n * A node that is a place-holder that allows the node to be replaced when the actual\n * node is known.\n *\n * This allows the constant pool to change an expression from a direct reference to\n * a constant to a shared constant. It returns a fix-up node that is later allowed to\n * change the referenced expression.\n */\nvar FixupExpression = /** @class */ (function (_super) {\n    __extends(FixupExpression, _super);\n    function FixupExpression(resolved) {\n        var _this = _super.call(this, resolved.type) || this;\n        _this.resolved = resolved;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FixupExpression.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        this.resolved.visitExpression(visitor, context);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FixupExpression.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FixupExpression && this.resolved.isEquivalent(e.resolved);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    FixupExpression.prototype.fixup = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        this.resolved = expression;\n        this.shared = true;\n    };\n    return FixupExpression;\n}(Expression));\n/**\n * A constant pool allows a code emitter to share constant in an output context.\n *\n * The constant pool also supports sharing access to ivy definitions references.\n */\nvar ConstantPool = /** @class */ (function () {\n    function ConstantPool() {\n        this.statements = [];\n        this.literals = new Map();\n        this.injectorDefinitions = new Map();\n        this.directiveDefinitions = new Map();\n        this.componentDefinitions = new Map();\n        this.nextNameIndex = 0;\n    }\n    /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    ConstantPool.prototype.getConstLiteral = /**\n     * @param {?} literal\n     * @param {?=} forceShared\n     * @return {?}\n     */\n    function (literal$$1, forceShared) {\n        var /** @type {?} */ key = this.keyOf(literal$$1);\n        var /** @type {?} */ fixup = this.literals.get(key);\n        var /** @type {?} */ newValue = false;\n        if (!fixup) {\n            fixup = new FixupExpression(literal$$1);\n            this.literals.set(key, fixup);\n            newValue = true;\n        }\n        if ((!newValue && !fixup.shared) || (newValue && forceShared)) {\n            // Replace the expression with a variable\n            var /** @type {?} */ name_1 = this.freshName();\n            this.statements.push(variable(name_1).set(literal$$1).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_1));\n        }\n        return fixup;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @return {?}\n     */\n    ConstantPool.prototype.getDefinition = /**\n     * @param {?} type\n     * @param {?} kind\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, kind, ctx) {\n        var /** @type {?} */ declarations = kind == 2 /* Component */ ?\n            this.componentDefinitions :\n            kind == 1 /* Directive */ ? this.directiveDefinitions : this.injectorDefinitions;\n        var /** @type {?} */ fixup = declarations.get(type);\n        if (!fixup) {\n            var /** @type {?} */ property = kind == 2 /* Component */ ?\n                'ngComponentDef' :\n                kind == 1 /* Directive */ ? 'ngDirectiveDef' : 'ngInjectorDef';\n            fixup = new FixupExpression(ctx.importExpr(type).prop(property));\n            declarations.set(type, fixup);\n        }\n        else if (!fixup.shared) {\n            var /** @type {?} */ name_2 = this.freshName();\n            this.statements.push(variable(name_2).set(fixup.resolved).toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n            fixup.fixup(variable(name_2));\n        }\n        return fixup;\n    };\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     */\n    /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    ConstantPool.prototype.uniqueName = /**\n     * Produce a unique name.\n     *\n     * The name might be unique among different prefixes if any of the prefixes end in\n     * a digit so the prefix should be a constant string (not based on user input) and\n     * must not end in a digit.\n     * @param {?} prefix\n     * @return {?}\n     */\n    function (prefix) { return \"\" + prefix + this.nextNameIndex++; };\n    /**\n     * @return {?}\n     */\n    ConstantPool.prototype.freshName = /**\n     * @return {?}\n     */\n    function () { return this.uniqueName(CONSTANT_PREFIX); };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ConstantPool.prototype.keyOf = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        return expression.visitExpression(new KeyVisitor(), null);\n    };\n    return ConstantPool;\n}());\nvar KeyVisitor = /** @class */ (function () {\n    function KeyVisitor() {\n        this.visitReadVarExpr = invalid;\n        this.visitWriteVarExpr = invalid;\n        this.visitWriteKeyExpr = invalid;\n        this.visitWritePropExpr = invalid;\n        this.visitInvokeMethodExpr = invalid;\n        this.visitInvokeFunctionExpr = invalid;\n        this.visitInstantiateExpr = invalid;\n        this.visitConditionalExpr = invalid;\n        this.visitNotExpr = invalid;\n        this.visitAssertNotNullExpr = invalid;\n        this.visitCastExpr = invalid;\n        this.visitFunctionExpr = invalid;\n        this.visitBinaryOperatorExpr = invalid;\n        this.visitReadPropExpr = invalid;\n        this.visitReadKeyExpr = invalid;\n        this.visitCommaExpr = invalid;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return \"\" + (typeof ast.value === 'string' ? '\"' + ast.value + '\"' : ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        return \"[\" + ast.entries.map(function (entry) { return entry.visitExpression(_this, null); }).join(',') + \"]\";\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ mapEntry = function (entry) {\n            return entry.key + \":\" + entry.value.visitExpression(_this, null);\n        };\n        return \"{\" + ast.entries.map(mapEntry).join(',');\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    KeyVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        return ast.value.moduleName ? \"EX:\" + ast.value.moduleName + \":\" + ast.value.name :\n            \"EX:\" + ast.value.runtime.name;\n    };\n    return KeyVisitor;\n}());\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE$1 = '@angular/core';\nvar Identifiers$1 = /** @class */ (function () {\n    function Identifiers() {\n    }\n    /* Methods */\n    Identifiers.NEW_METHOD = 'n';\n    Identifiers.HOST_BINDING_METHOD = 'h';\n    Identifiers.REFRESH_METHOD = 'r';\n    /* Instructions */\n    Identifiers.createElement = { name: 'ɵE', moduleName: CORE$1 };\n    Identifiers.elementEnd = { name: 'ɵe', moduleName: CORE$1 };\n    Identifiers.elementProperty = { name: 'ɵp', moduleName: CORE$1 };\n    Identifiers.elementAttribute = { name: 'ɵa', moduleName: CORE$1 };\n    Identifiers.elementClass = { name: 'ɵk', moduleName: CORE$1 };\n    Identifiers.elementStyle = { name: 'ɵs', moduleName: CORE$1 };\n    Identifiers.containerCreate = { name: 'ɵC', moduleName: CORE$1 };\n    Identifiers.containerEnd = { name: 'ɵc', moduleName: CORE$1 };\n    Identifiers.containerRefreshStart = { name: 'ɵcR', moduleName: CORE$1 };\n    Identifiers.containerRefreshEnd = { name: 'ɵcr', moduleName: CORE$1 };\n    Identifiers.directiveCreate = { name: 'ɵD', moduleName: CORE$1 };\n    Identifiers.text = { name: 'ɵT', moduleName: CORE$1 };\n    Identifiers.directiveInput = { name: 'ɵi', moduleName: CORE$1 };\n    Identifiers.textCreateBound = { name: 'ɵt', moduleName: CORE$1 };\n    Identifiers.bind = { name: 'ɵb', moduleName: CORE$1 };\n    Identifiers.bind1 = { name: 'ɵb1', moduleName: CORE$1 };\n    Identifiers.bind2 = { name: 'ɵb2', moduleName: CORE$1 };\n    Identifiers.bind3 = { name: 'ɵb3', moduleName: CORE$1 };\n    Identifiers.bind4 = { name: 'ɵb4', moduleName: CORE$1 };\n    Identifiers.bind5 = { name: 'ɵb5', moduleName: CORE$1 };\n    Identifiers.bind6 = { name: 'ɵb6', moduleName: CORE$1 };\n    Identifiers.bind7 = { name: 'ɵb7', moduleName: CORE$1 };\n    Identifiers.bind8 = { name: 'ɵb8', moduleName: CORE$1 };\n    Identifiers.bindV = { name: 'ɵbV', moduleName: CORE$1 };\n    Identifiers.memory = { name: 'ɵm', moduleName: CORE$1 };\n    Identifiers.refreshComponent = { name: 'ɵr', moduleName: CORE$1 };\n    Identifiers.directiveLifeCycle = { name: 'ɵl', moduleName: CORE$1 };\n    Identifiers.injectElementRef = { name: 'ɵinjectElementRef', moduleName: CORE$1 };\n    Identifiers.injectTemplateRef = { name: 'ɵinjectTemplateRef', moduleName: CORE$1 };\n    Identifiers.injectViewContainerRef = { name: 'ɵinjectViewContainerRef', moduleName: CORE$1 };\n    Identifiers.inject = { name: 'ɵinject', moduleName: CORE$1 };\n    Identifiers.defineComponent = { name: 'ɵdefineComponent', moduleName: CORE$1 };\n    Identifiers.defineDirective = {\n        name: 'ɵdefineDirective',\n        moduleName: CORE$1,\n    };\n    Identifiers.NgOnChangesFeature = { name: 'ɵNgOnChangesFeature', moduleName: CORE$1 };\n    return Identifiers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Name of the context parameter passed into a template function\n */\nvar CONTEXT_NAME = 'ctx';\n/**\n * Name of the creation mode flag passed into a template function\n */\nvar CREATION_MODE_FLAG = 'cm';\n/**\n * Name of the temporary to use during data binding\n */\nvar TEMPORARY_NAME = '_t';\n/**\n * The prefix reference variables\n */\nvar REFERENCE_PREFIX = '_r';\n/**\n * @param {?} outputCtx\n * @param {?} directive\n * @param {?} reflector\n * @return {?}\n */\nfunction compileDirective(outputCtx, directive, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. `factory: () => new MyApp(injectElementRef())`\n    var /** @type {?} */ templateFactory = createFactory(directive.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(directive.type)));\n    className || error(\"Cannot resolver the name of \" + directive.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField('ngDirectiveDef', /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineDirective).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @param {?} outputCtx\n * @param {?} component\n * @param {?} template\n * @param {?} reflector\n * @return {?}\n */\nfunction compileComponent(outputCtx, component, template, reflector) {\n    var /** @type {?} */ definitionMapValues = [];\n    // e.g. `tag: 'my-app'\n    // This is optional and only included if the first selector of a component has element.\n    var /** @type {?} */ selector = component.selector && CssSelector.parse(component.selector);\n    var /** @type {?} */ firstSelector = selector && selector[0];\n    if (firstSelector && firstSelector.hasElementSelector()) {\n        definitionMapValues.push({ key: 'tag', value: literal(firstSelector.element), quoted: false });\n    }\n    // e.g. `attr: [\"class\", \".my.app\"]\n    // This is optional an only included if the first selector of a component specifies attributes.\n    if (firstSelector) {\n        var /** @type {?} */ selectorAttributes = firstSelector.getAttrs();\n        if (selectorAttributes.length) {\n            definitionMapValues.push({\n                key: 'attrs',\n                value: outputCtx.constantPool.getConstLiteral(literalArr(selectorAttributes.map(function (value) { return value != null ? literal(value) : literal(undefined); })), /* forceShared */ true),\n                quoted: false\n            });\n        }\n    }\n    // e.g. `factory: function MyApp_Factory() { return new MyApp(injectElementRef()); }`\n    var /** @type {?} */ templateFactory = createFactory(component.type, outputCtx, reflector);\n    definitionMapValues.push({ key: 'factory', value: templateFactory, quoted: false });\n    // e.g. `template: function MyComponent_Template(_ctx, _cm) {...}`\n    var /** @type {?} */ templateTypeName = component.type.reference.name;\n    var /** @type {?} */ templateName = templateTypeName ? templateTypeName + \"_Template\" : null;\n    var /** @type {?} */ templateFunctionExpression = new TemplateDefinitionBuilder(outputCtx, outputCtx.constantPool, reflector, CONTEXT_NAME, ROOT_SCOPE.nestedScope(), 0, templateTypeName, templateName)\n        .buildTemplateFunction(template);\n    definitionMapValues.push({ key: 'template', value: templateFunctionExpression, quoted: false });\n    var /** @type {?} */ className = /** @type {?} */ ((identifierName(component.type)));\n    className || error(\"Cannot resolver the name of \" + component.type);\n    // Create the partial class to be merged with the actual class.\n    outputCtx.statements.push(new ClassStmt(className, null, /* fields */ [new ClassField('ngComponentDef', /* type */ INFERRED_TYPE, /* modifiers */ [StmtModifier.Static], /* initializer */ importExpr(Identifiers$1.defineComponent).callFn([literalMap(definitionMapValues)]))], /* getters */ [], /* constructorMethod */ new ClassMethod(null, [], []), /* methods */ []));\n}\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction unknown(arg) {\n    throw new Error(\"Builder \" + this.constructor.name + \" is unable to handle \" + undefined + \" yet\");\n}\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction unsupported(feature) {\n    if (this) {\n        throw new Error(\"Builder \" + this.constructor.name + \" doesn't support \" + feature + \" yet\");\n    }\n    throw new Error(\"Feature \" + feature + \" is supported yet\");\n}\nvar BINDING_INSTRUCTION_MAP = (_a = {},\n    _a[PropertyBindingType.Property] = Identifiers$1.elementProperty,\n    _a[PropertyBindingType.Attribute] = Identifiers$1.elementAttribute,\n    _a[PropertyBindingType.Class] = Identifiers$1.elementClass,\n    _a[PropertyBindingType.Style] = Identifiers$1.elementStyle,\n    _a);\n/**\n * @param {?} args\n * @return {?}\n */\nfunction interpolate(args) {\n    args = args.slice(1); // Ignore the length prefix added for render2\n    switch (args.length) {\n        case 3:\n            return importExpr(Identifiers$1.bind1).callFn(args);\n        case 5:\n            return importExpr(Identifiers$1.bind2).callFn(args);\n        case 7:\n            return importExpr(Identifiers$1.bind3).callFn(args);\n        case 9:\n            return importExpr(Identifiers$1.bind4).callFn(args);\n        case 11:\n            return importExpr(Identifiers$1.bind5).callFn(args);\n        case 13:\n            return importExpr(Identifiers$1.bind6).callFn(args);\n        case 15:\n            return importExpr(Identifiers$1.bind7).callFn(args);\n        case 17:\n            return importExpr(Identifiers$1.bind8).callFn(args);\n    }\n    (args.length > 19 && args.length % 2 == 1) ||\n        error(\"Invalid interpolation argument length \" + args.length);\n    return importExpr(Identifiers$1.bindV).callFn(args);\n}\nvar BindingScope = /** @class */ (function () {\n    function BindingScope(parent) {\n        this.parent = parent;\n        this.map = new Map();\n        this.referenceNameIndex = 0;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BindingScope.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ current = this;\n        while (current) {\n            var /** @type {?} */ value = current.map.get(name);\n            if (value != null) {\n                // Cache the value locally.\n                this.map.set(name, value);\n                return value;\n            }\n            current = current.parent;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} variableName\n     * @return {?}\n     */\n    BindingScope.prototype.set = /**\n     * @param {?} name\n     * @param {?} variableName\n     * @return {?}\n     */\n    function (name, variableName) {\n        !this.map.has(name) ||\n            error(\"The name \" + name + \" is already defined in scope to be \" + this.map.get(name));\n        this.map.set(name, variable(variableName));\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.nestedScope = /**\n     * @return {?}\n     */\n    function () { return new BindingScope(this); };\n    /**\n     * @return {?}\n     */\n    BindingScope.prototype.freshReferenceName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = this;\n        // Find the top scope as it maintains the global reference count\n        while (current.parent)\n            current = current.parent;\n        return \"\" + REFERENCE_PREFIX + current.referenceNameIndex++;\n    };\n    return BindingScope;\n}());\nvar ROOT_SCOPE = new BindingScope(null).set('$event', '$event');\nvar TemplateDefinitionBuilder = /** @class */ (function () {\n    function TemplateDefinitionBuilder(outputCtx, constantPool, reflector, contextParameter, bindingScope, level, contextName, templateName) {\n        if (level === void 0) { level = 0; }\n        this.outputCtx = outputCtx;\n        this.constantPool = constantPool;\n        this.reflector = reflector;\n        this.contextParameter = contextParameter;\n        this.bindingScope = bindingScope;\n        this.level = level;\n        this.contextName = contextName;\n        this.templateName = templateName;\n        this._dataIndex = 0;\n        this._bindingContext = 0;\n        this._referenceIndex = 0;\n        this._temporaryAllocated = false;\n        this._prefix = [];\n        this._creationMode = [];\n        this._bindingMode = [];\n        this._hostMode = [];\n        this._refreshMode = [];\n        this._postfix = [];\n        this.unsupported = unsupported;\n        this.invalid = invalid$1;\n        // TODO(chuckj): Implement ng-content\n        this.visitNgContent = unknown;\n        // These should be handled in the template or element directly.\n        this.visitReference = invalid$1;\n        this.visitVariable = invalid$1;\n        this.visitEvent = invalid$1;\n        this.visitElementProperty = invalid$1;\n        this.visitAttr = invalid$1;\n        // These should be handled in the template or element directly\n        this.visitDirective = invalid$1;\n        this.visitDirectiveProperty = invalid$1;\n    }\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.buildTemplateFunction = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        templateVisitAll(this, asts);\n        return fn([\n            new FnParam(this.contextParameter, null), new FnParam(CREATION_MODE_FLAG, BOOL_TYPE)\n        ], this._prefix.concat([\n            // Creating mode (i.e. if (cm) { ... })\n            ifStmt(variable(CREATION_MODE_FLAG), this._creationMode)\n        ], this._bindingMode, this._hostMode, this._refreshMode, this._postfix), INFERRED_TYPE, null, this.templateName);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.bindingScope.get(name); };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._computeDirectivesArray = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var _this = this;\n        var /** @type {?} */ directiveIndexMap = new Map();\n        var /** @type {?} */ directiveExpressions = directives.filter(function (directive) { return !directive.directive.isComponent; }).map(function (directive) {\n            directiveIndexMap.set(directive.directive.type.reference, _this.allocateDataSlot());\n            return _this.typeReference(directive.directive.type.reference);\n        });\n        return {\n            directivesArray: directiveExpressions.length ?\n                this.constantPool.getConstLiteral(literalArr(directiveExpressions), /* forceShared */ /* forceShared */ true) :\n                literal(null),\n            directiveIndexMap: directiveIndexMap\n        };\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ bindingCount = 0;\n        var /** @type {?} */ elementIndex = this.allocateDataSlot();\n        var /** @type {?} */ componentIndex = undefined;\n        var /** @type {?} */ referenceDataSlots = new Map();\n        // Element creation mode\n        var /** @type {?} */ component = findComponent(ast.directives);\n        var /** @type {?} */ nullNode = literal(null, INFERRED_TYPE);\n        var /** @type {?} */ parameters = [literal(elementIndex)];\n        // Add component type or element tag\n        if (component) {\n            parameters.push(this.typeReference(component.directive.type.reference));\n            componentIndex = this.allocateDataSlot();\n        }\n        else {\n            parameters.push(literal(ast.name));\n        }\n        // Add attributes array\n        var /** @type {?} */ attributes = [];\n        for (var _i = 0, _a = ast.attrs; _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(literal(attr.name), literal(attr.value));\n        }\n        parameters.push(attributes.length > 0 ?\n            this.constantPool.getConstLiteral(literalArr(attributes), /* forceShared */ /* forceShared */ true) :\n            nullNode);\n        // Add directives array\n        var _b = this._computeDirectivesArray(ast.directives), directivesArray = _b.directivesArray, directiveIndexMap = _b.directiveIndexMap;\n        parameters.push(directiveIndexMap.size > 0 ? directivesArray : nullNode);\n        if (component && componentIndex != null) {\n            // Record the data slot for the component\n            directiveIndexMap.set(component.directive.type.reference, componentIndex);\n        }\n        // Add references array\n        if (ast.references && ast.references.length > 0) {\n            var /** @type {?} */ references = flatten(ast.references.map(function (reference) {\n                var /** @type {?} */ slot = _this.allocateDataSlot();\n                referenceDataSlots.set(reference.name, slot);\n                // Generate the update temporary.\n                var /** @type {?} */ variableName = _this.bindingScope.freshReferenceName();\n                _this._bindingMode.push(variable(variableName, INFERRED_TYPE)\n                    .set(importExpr(Identifiers$1.memory).callFn([literal(slot)]))\n                    .toDeclStmt(INFERRED_TYPE, [StmtModifier.Final]));\n                _this.bindingScope.set(reference.name, variableName);\n                return [reference.name, reference.originalValue];\n            })).map(function (value) { return literal(value); });\n            parameters.push(this.constantPool.getConstLiteral(literalArr(references), /* forceShared */ /* forceShared */ true));\n        }\n        else {\n            parameters.push(nullNode);\n        }\n        // Remove trailing null nodes as they are implied.\n        while (parameters[parameters.length - 1] === nullNode) {\n            parameters.pop();\n        }\n        // Generate the instruction create element instruction\n        this.instruction.apply(this, [this._creationMode, ast.sourceSpan, Identifiers$1.createElement].concat(parameters));\n        var /** @type {?} */ implicit = variable(this.contextParameter);\n        // Generate element input bindings\n        for (var _c = 0, _d = ast.inputs; _c < _d.length; _c++) {\n            var input = _d[_c];\n            if (input.isAnimation) {\n                this.unsupported('animations');\n            }\n            // TODO(chuckj): Built-in transform?\n            var /** @type {?} */ convertedBinding = convertPropertyBinding(this, implicit, input.value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n            (_e = this._bindingMode).push.apply(_e, convertedBinding.stmts);\n            var /** @type {?} */ parameters_1 = [literal(elementIndex), literal(input.name), convertedBinding.currValExpr];\n            var /** @type {?} */ instruction = BINDING_INSTRUCTION_MAP[input.type];\n            if (instruction) {\n                // TODO(chuckj): runtime: security context?\n                this.instruction(this._bindingMode, input.sourceSpan, instruction, literal(elementIndex), literal(input.name), convertedBinding.currValExpr);\n            }\n            else {\n                this.unsupported(\"binding \" + PropertyBindingType[input.type]);\n            }\n        }\n        // Generate directives input bindings\n        this._visitDirectives(ast.directives, implicit, elementIndex, directiveIndexMap);\n        // Traverse element child nodes\n        templateVisitAll(this, ast.children);\n        // Finish element construction mode.\n        this.instruction(this._creationMode, ast.endSourceSpan || ast.sourceSpan, Identifiers$1.elementEnd);\n        var _e;\n    };\n    /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype._visitDirectives = /**\n     * @param {?} directives\n     * @param {?} implicit\n     * @param {?} nodeIndex\n     * @param {?} directiveIndexMap\n     * @return {?}\n     */\n    function (directives, implicit, nodeIndex, directiveIndexMap) {\n        for (var _i = 0, directives_1 = directives; _i < directives_1.length; _i++) {\n            var directive = directives_1[_i];\n            var /** @type {?} */ directiveIndex = directiveIndexMap.get(directive.directive.type.reference);\n            // Creation mode\n            // e.g. D(0, TodoComponentDef.n(), TodoComponentDef);\n            var /** @type {?} */ directiveType = directive.directive.type.reference;\n            var /** @type {?} */ kind = directive.directive.isComponent ? 2 /* Component */ : 1;\n            // Note: *do not cache* calls to this.directiveOf() as the constant pool needs to know if the\n            // node is referenced multiple times to know that it must generate the reference into a\n            // temporary.\n            // Bindings\n            for (var _a = 0, _b = directive.inputs; _a < _b.length; _a++) {\n                var input = _b[_a];\n                var /** @type {?} */ convertedBinding = convertPropertyBinding(this, implicit, input.value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n                (_c = this._bindingMode).push.apply(_c, convertedBinding.stmts);\n                this.instruction(this._bindingMode, directive.sourceSpan, Identifiers$1.elementProperty, literal(input.templateName), literal(nodeIndex), convertedBinding.currValExpr);\n            }\n            // e.g. TodoComponentDef.r(0, 0);\n            this._refreshMode.push(this.definitionOf(directiveType, kind)\n                .callMethod(Identifiers$1.REFRESH_METHOD, [literal(directiveIndex), literal(nodeIndex)])\n                .toStmt());\n        }\n        var _c;\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ templateIndex = this.allocateDataSlot();\n        var /** @type {?} */ templateRef = this.reflector.resolveExternalReference(Identifiers.TemplateRef);\n        var /** @type {?} */ templateDirective = ast.directives.find(function (directive) {\n            return directive.directive.type.diDeps.some(function (dependency) {\n                return dependency.token != null && (tokenReference(dependency.token) == templateRef);\n            });\n        });\n        var /** @type {?} */ contextName = this.contextName && templateDirective && templateDirective.directive.type.reference.name ?\n            this.contextName + \"_\" + templateDirective.directive.type.reference.name :\n            null;\n        var /** @type {?} */ templateName = contextName ? contextName + \"_Template_\" + templateIndex : \"Template_\" + templateIndex;\n        var /** @type {?} */ templateContext = \"ctx\" + this.level;\n        var _a = this._computeDirectivesArray(ast.directives), directivesArray = _a.directivesArray, directiveIndexMap = _a.directiveIndexMap;\n        // e.g. C(1, C1Template)\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.containerCreate, literal(templateIndex), directivesArray, variable(templateName));\n        // e.g. Cr(1)\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshStart, literal(templateIndex));\n        // Generate directives\n        this._visitDirectives(ast.directives, variable(this.contextParameter), templateIndex, directiveIndexMap);\n        // e.g. cr();\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.containerRefreshEnd);\n        // Create the template function\n        var /** @type {?} */ templateVisitor = new TemplateDefinitionBuilder(this.outputCtx, this.constantPool, this.reflector, templateContext, this.bindingScope.nestedScope(), this.level + 1, contextName, templateName);\n        var /** @type {?} */ templateFunctionExpr = templateVisitor.buildTemplateFunction(ast.children);\n        this._postfix.push(templateFunctionExpr.toDeclStmt(templateName, null));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ nodeIndex = this.allocateDataSlot();\n        // Creation mode\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(nodeIndex));\n        // Refresh mode\n        this.instruction(this._refreshMode, ast.sourceSpan, Identifiers$1.textCreateBound, literal(nodeIndex), this.bind(variable(CONTEXT_NAME), ast.value, ast.sourceSpan));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        // Text is defined in creation mode only.\n        this.instruction(this._creationMode, ast.sourceSpan, Identifiers$1.text, literal(this.allocateDataSlot()), literal(ast.value));\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.allocateDataSlot = /**\n     * @return {?}\n     */\n    function () { return this._dataIndex++; };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bindingContext = /**\n     * @return {?}\n     */\n    function () { return \"\" + this._bindingContext++; };\n    /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.instruction = /**\n     * @param {?} statements\n     * @param {?} span\n     * @param {?} reference\n     * @param {...?} params\n     * @return {?}\n     */\n    function (statements, span, reference) {\n        var params = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            params[_i - 3] = arguments[_i];\n        }\n        statements.push(importExpr(reference, null, span).callFn(params, span).toStmt());\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.typeReference = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.outputCtx.importExpr(type); };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.definitionOf = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        return this.constantPool.getDefinition(type, kind, this.outputCtx);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.temp = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._temporaryAllocated) {\n            this._prefix.push(variable(TEMPORARY_NAME, DYNAMIC_TYPE, null)\n                .set(literal(undefined))\n                .toDeclStmt(DYNAMIC_TYPE));\n            this._temporaryAllocated = true;\n        }\n        return variable(TEMPORARY_NAME);\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.convertPropertyBinding = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @return {?}\n     */\n    function (implicit, value) {\n        var /** @type {?} */ convertedPropertyBinding = convertPropertyBinding(this, implicit, value, this.bindingContext(), BindingForm.TrySimple, interpolate);\n        (_a = this._refreshMode).push.apply(_a, convertedPropertyBinding.stmts);\n        return convertedPropertyBinding.currValExpr;\n        var _a;\n    };\n    /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateDefinitionBuilder.prototype.bind = /**\n     * @param {?} implicit\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (implicit, value, sourceSpan) {\n        return this.convertPropertyBinding(implicit, value);\n    };\n    return TemplateDefinitionBuilder;\n}());\n/**\n * @param {?} type\n * @param {?} outputCtx\n * @param {?} reflector\n * @return {?}\n */\nfunction createFactory(type, outputCtx, reflector) {\n    var /** @type {?} */ args = [];\n    var /** @type {?} */ elementRef = reflector.resolveExternalReference(Identifiers.ElementRef);\n    var /** @type {?} */ templateRef = reflector.resolveExternalReference(Identifiers.TemplateRef);\n    var /** @type {?} */ viewContainerRef = reflector.resolveExternalReference(Identifiers.ViewContainerRef);\n    for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n        var dependency = _a[_i];\n        if (dependency.isValue) {\n            unsupported('value dependencies');\n        }\n        if (dependency.isHost) {\n            unsupported('host dependencies');\n        }\n        var /** @type {?} */ token = dependency.token;\n        if (token) {\n            var /** @type {?} */ tokenRef = tokenReference(token);\n            if (tokenRef === elementRef) {\n                args.push(importExpr(Identifiers$1.injectElementRef).callFn([]));\n            }\n            else if (tokenRef === templateRef) {\n                args.push(importExpr(Identifiers$1.injectTemplateRef).callFn([]));\n            }\n            else if (tokenRef === viewContainerRef) {\n                args.push(importExpr(Identifiers$1.injectViewContainerRef).callFn([]));\n            }\n            else {\n                args.push(importExpr(Identifiers$1.inject).callFn([outputCtx.importExpr(token)]));\n            }\n        }\n        else {\n            unsupported('dependency without a token');\n        }\n    }\n    return fn([], [new ReturnStatement(new InstantiateExpr(outputCtx.importExpr(type.reference), args))], INFERRED_TYPE, null, type.reference.name ? type.reference.name + \"_Factory\" : null);\n}\n/**\n * @template T\n * @param {?} arg\n * @return {?}\n */\nfunction invalid$1(arg) {\n    throw new Error(\"Invalid state: Visitor \" + this.constructor.name + \" doesn't handle \" + undefined);\n}\n/**\n * @param {?} directives\n * @return {?}\n */\nfunction findComponent(directives) {\n    return directives.filter(function (directive) { return directive.directive.isComponent; })[0];\n}\nvar _a;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @param {?=} useSummaries\n     * @return {?}\n     */\n    function (staticSymbol, useSummaries) {\n        if (useSummaries === void 0) { useSummaries = true; }\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol, useSummaries);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = (useSummaries && this.summaryResolver.getImportAs(staticSymbol)) || null;\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        var _this = this;\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    _this.host.getOutputName(topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts')\n                        .replace(/^.*node_modules[/\\\\]/, ''));\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error$$1, (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference, /* typeParams */ null, /* useSummaries */ /* useSummaries */ false))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars, ctx));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllPartialModules = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = _a.ngModuleByPipeOrDirective, files = _a.files;\n        // Using reduce like this is a select many pattern (where map is a select pattern)\n        return files.reduce(function (r, file) {\n            r.push.apply(r, _this._emitPartialModule(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n            return r;\n        }, []);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._emitPartialModule = /**\n     * @param {?} fileName\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (fileName, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ classes = [];\n        var /** @type {?} */ context = this._createOutputContext(fileName);\n        // Process all components and directives\n        directives.forEach(function (directiveType) {\n            var /** @type {?} */ directiveMetadata = _this._metadataResolver.getDirectiveMetadata(directiveType);\n            if (directiveMetadata.isComponent) {\n                var /** @type {?} */ module = /** @type {?} */ ((ngModuleByPipeOrDirective.get(directiveType)));\n                module ||\n                    error(\"Cannot determine the module for component '\" + identifierName(directiveMetadata.type) + \"'\");\n                var parsedTemplate = _this._parseTemplate(directiveMetadata, module, module.transitiveModule.directives).template;\n                compileComponent(context, directiveMetadata, parsedTemplate, _this._reflector);\n            }\n            else {\n                compileDirective(context, directiveMetadata, _this._reflector);\n            }\n        });\n        if (context.statements) {\n            return [{ fileName: fileName, statements: context.constantPool.statements.concat(context.statements) }];\n        }\n        return [];\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams, useSummaries) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (useSummaries === void 0) { useSummaries = true; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol, useSummaries) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1, constantPool: new ConstantPool() };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[FORMATTED_MESSAGE] = true;\n    error$$1.chain = chain;\n    error$$1.position = chain.position;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\nvar TYPEGUARD_POSTFIX = 'TypeGuard';\nvar USE_IF = 'UseIf';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.staticCache = new Map();\n        this.conversionMap = new Map();\n        this.resolvedExternalReferences = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ key = undefined;\n        if (!containingFile) {\n            key = ref.moduleName + \":\" + ref.name;\n            var /** @type {?} */ declarationSymbol_1 = this.resolvedExternalReferences.get(key);\n            if (declarationSymbol_1)\n                return declarationSymbol_1;\n        }\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        if (key) {\n            this.resolvedExternalReferences.set(key, declarationSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._staticMembers = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ staticMembers = this.staticCache.get(type);\n        if (!staticMembers) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ staticMemberData = classMetadata['statics'] || {};\n            staticMembers = Object.keys(staticMemberData);\n            this.staticCache.set(type, staticMembers);\n        }\n        return staticMembers;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.guards = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"guards received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return {};\n        }\n        var /** @type {?} */ staticMembers = this._staticMembers(type);\n        var /** @type {?} */ result = {};\n        for (var _i = 0, staticMembers_1 = staticMembers; _i < staticMembers_1.length; _i++) {\n            var name_1 = staticMembers_1[_i];\n            if (name_1.endsWith(TYPEGUARD_POSTFIX)) {\n                var /** @type {?} */ property = name_1.substr(0, name_1.length - TYPEGUARD_POSTFIX.length);\n                var /** @type {?} */ value = void 0;\n                if (property.endsWith(USE_IF)) {\n                    property = name_1.substr(0, property.length - USE_IF.length);\n                    value = USE_IF;\n                }\n                else {\n                    value = this.getStaticSymbol(type.filePath, type.name, [name_1]);\n                }\n                result[property] = value;\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error$$1, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope$1.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope$1.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_2 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_2);\n                                if (localValue != BindingScope$1.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error$$1, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error$$1, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error$$1;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error$$1 = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error$$1))[METADATA_ERROR] = true;\n    if (advise)\n        error$$1.advise = advise;\n    if (position)\n        error$$1.position = position;\n    if (summary)\n        error$$1.summary = summary;\n    if (context)\n        error$$1.context = context;\n    if (chain)\n        error$$1.chain = chain;\n    if (symbol)\n        error$$1.symbol = symbol;\n    return error$$1;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error$$1) {\n    return !!(/** @type {?} */ (error$$1))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error$$1) {\n    if (error$$1.summary) {\n        return error$$1.summary;\n    }\n    switch (error$$1.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error$$1.context && error$$1.context.className) {\n                return \"references non-exported class \" + error$$1.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error$$1.context && error$$1.context.name) {\n                return \"calls '\" + error$$1.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error$$1.context && error$$1.context.name) {\n                return \"references local variable \" + error$$1.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope$1 = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope$1.missing;\n    };\n    return PopulatedScope;\n}(BindingScope$1));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function\" + (ast.name ? ' ' + ast.name : '') + \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1, constantPool: new ConstantPool() };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassMethod = ClassMethod;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}